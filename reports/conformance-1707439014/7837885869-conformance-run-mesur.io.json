{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f00a4eb0-f607-443e-b53d-f2081d02b9d5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87a1ff4b-8dd2-482d-b2bd-a6a7bfb476c8",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66222371-ab32-480a-9a02-c964c52cd748",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "48f91205-afa9-490e-befd-f9bacbfef604"
                }
              }
            ]
          },
          {
            "id": "f615b6eb-fec0-4c93-8704-cc61921e1437",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdc74d1c-0fc9-44c7-b9aa-653fa8993f01",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "484eb27c-0ccc-4214-9860-1aeeb385fa56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bd8b613d-7491-4e07-9954-a18a3dbd5221",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cc7e52f8-8259-425a-87fd-d357a280f4f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b231f011-3f58-41b8-ac23-a51f940f9d9c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9d2422b-d008-4e38-88fd-e2ddbc008274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3019232f-004f-4281-9120-3c2f9a7c0993"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1f05239-d6f8-467b-a1df-884b23ae2cf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be8ec656-56a0-48d0-810c-f6e98df756b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8cfc5dd6-5a15-4f97-aefe-c312f89d58c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d72d605-5e41-4166-81a8-f67283cbc6af"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "253829ed-8638-426b-bb77-049802064900",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e1fbf12a-a984-4666-852b-6eff38196149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f302f27-34eb-4369-bccd-692d0a4c9b64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e0500c9-f3cb-4eab-9282-096c3f6ff0c0"
            }
          }
        ]
      },
      {
        "id": "3e1c5e45-fa14-451f-b1ec-2987e50e6262",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3bbc6a67-a4a7-40d3-8a8f-e2b4a755aafe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b84467ef-d4a3-4fb5-8217-4fe71b19a04b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "706a41e4-768e-4bc5-ac54-5dc7872eb9a8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb6042-e949-488d-acf7-973ee7fddfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7f27a8f-e4b5-439b-bc9b-e2ed609936d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8c3eed-7f21-4ee9-85a0-4e279f58dae7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8242e588-2b62-4ed6-8fe8-72a57a02ef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dd88337-5702-4464-a834-bf95fe1d6d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4785413b-b123-4515-a406-eecb73173065",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee5528d-451d-4897-8b0d-b9fa3a702445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75c67dce-32ce-4dc0-b55e-ee8caa00b28b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79fb9b8e-21e9-499c-a8ad-ae22404cfc01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42c7b805-d7a1-4cd1-8117-563bad5ac504",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56cccc2-a71a-4776-a8e6-025736f53b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f1e9132-bd0e-4fc6-8e97-31dbcb14c86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c60d612-202f-43b4-9ca2-580bf41becdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f21dba0-cc4f-4a97-8d67-87152e8f5413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1ddf1242-1f19-44ef-9b61-3cf50eaaef49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07501d53-b405-4d0a-8519-3e46ccd8437b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2b49607-3e82-4c70-a265-909810a46e85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c89e9353-603e-4f08-ab68-239d8342e5b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5f2a396-44f2-42f6-9a44-140dc3fc5e43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c915f2b5-34a5-4f22-8a5a-1888189e7a3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbafdaf3-39ff-4ea6-a0b1-9ca97cd7bb01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "115a8017-49f8-4fdd-aab3-e6f7ec8e1b0d"
            }
          }
        ]
      },
      {
        "id": "4e3cd936-378a-4ec5-8661-9621868b3479",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "500865b1-083c-4aa6-a687-fda585988fdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d459a1c-0a14-4cee-a5a3-deac2f7eec2f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "424f11a7-d545-4720-9119-77d387fa2689",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d02923d-de74-4155-bcee-a7784bd36c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e8d217-33f3-4d10-9181-1703c2d0dbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d38a7f2-465e-43b7-a692-87c0dc8cd720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05080e9b-6941-4030-a7bf-1ece6bd59fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63334699-292d-4707-a755-22eb4717baf8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e20c8fe-7270-40b0-b22d-110dc2291083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aace9cc2-acc8-45d9-804a-8a27b39c5239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9897374f-6ca1-4430-835e-b98e9d7adfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63ce4cc3-1f69-47e8-8d53-1cb6e7a5252a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab30f09-dd0e-4bc1-8bb2-e8fb32c7fe53",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1826d5-13de-42a9-911b-c60a1dff0c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb9f0c8-7719-431f-a33e-1763507437ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574e6268-1ff4-43d9-952e-c34b26f9d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79ca8e2e-14b3-4c97-a219-0ed7a9be0b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa31306-16c5-4a25-b05f-3bca2b15e0cc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c77ad06-4315-4622-b362-ab07b3f8527e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7922887d-cac7-4463-91dd-7cb9fbd38f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4901c45c-c513-48f2-93e7-bc4f61b37640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e7a7ab4-e254-4847-8d74-7fad3be9aa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96148310-9d51-4bb8-a4f4-9edded2bed2a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0260ada3-2573-4e07-89a3-e7e46527a6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71b4826-78de-4438-9283-b563604f7ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e1fd8d-f599-4919-b383-6590a8517faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5ec4183-78c5-4c3a-9926-336a252f95d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6873b3df-db49-48bb-a49c-c1383e0f707a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebfc8e6-1eab-44ba-b381-7820883ab0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018877f6-5339-4658-a468-ab3949a3ba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fba291-020f-496f-bdf2-bbfed985a2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386ef167-06a4-4dc1-a63b-e54e42ed7a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbdb988-592e-4ce6-8934-8ab71bc60c89",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174891f-d567-4bf7-b65e-9362ab25f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bafad1-5535-4b86-b6c9-8211d0992887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a04a6e-5fd4-41f2-8c99-6ca14dc53c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b7ed9d-fc90-4ae3-bcd3-ddf4d8aea83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa85f85-17dd-4d8d-9049-aba7083e31fe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2424fcad-8cb0-424e-8041-5c59f6093eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92998eb5-5018-4c79-9f17-c8c4d092575c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d99c44c-147d-4318-ac3a-72faef315e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75c5199e-24e7-4678-b912-a2aa7233abf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942a2ac9-82e4-4bed-a241-4b2a9775a956",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ecca59-904c-4811-92c2-129bf75a33fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a214e4-1131-45c3-bde3-664fcc05eaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa3e97b-a745-43b1-922a-1fc048908b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a09632a-a156-47be-b489-66b3e7d7d82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fddab7-d0cc-46f9-9b1c-219f4a1cb2eb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71f50d4-f861-4f79-91c4-9e5b5af5f78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24599cf6-19e1-4cec-8630-37456859d0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed61f443-0065-4ac4-9f4a-94502505e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c95fdae5-d46d-4f71-a077-c2eb987e3486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff2c80-4919-4030-8537-27313e30d5ae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab622e2e-d201-4f0c-a3bc-5e5100a6826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92277a49-dacf-41c9-96b1-292ddaef5b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf77f8a-a079-4ad6-9c53-ae994be27181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070332e6-2337-41f0-b073-48f6390d1137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c7b767-1f92-41cd-a2b3-0f0e6b47f9e8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9958bb6b-9c61-4e85-9c47-a781fd0287bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041d9fb6-92c0-4aa3-b3f2-fd55414dff55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6145a307-1cb7-4113-a599-6e9671f6adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cf497b3-35e7-4074-babe-a20159beee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c404e0e-fccf-4003-a03d-f1deed89a3fd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0172180-3a39-49c7-bc9d-0945b9e2de1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8ef5d7-a5e6-4be0-9d62-a5a2d84a4826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12458ee3-2214-46ef-a503-36aafeb973ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ced3761e-ebc4-4839-9a91-ee6ca5cb2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a749c2-e446-44d6-82b1-c58a18b5bab1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af49f3e-bd9b-4291-86a6-d193162685a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06fbddc-a878-4238-8c79-fcad84de0cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f29654-d47b-41f5-b685-499f882d1d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c50f0c-7bfe-4118-a8db-e9d7c4540e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c32f6f-43f3-4443-ba06-e22199f89922",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce13b2c8-3e1d-400f-a9dc-febf56feb143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944d37c6-e79f-42c0-b23c-c0c0631f84ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6730d0d-a8f0-4b5b-b628-1d09e37d50c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c3cd321-9a3c-4ad3-9fac-2db0255509ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6824249b-3d70-40e6-8027-05c62bb01d00",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee7a10d-8b61-474f-9699-38799fda8261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a5da30-a88a-4f3a-b6bc-657bbbbc2c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c5602-3a10-4fba-9516-55c3d3a5310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb00c1f3-9eb7-47bf-88ea-0b3a18b57099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14f10c6-d690-43bf-acda-a15d9b530e4b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4b1e95-f713-4333-97fb-de798c641708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7ddb61-a9a4-495f-a02f-d3f50dd66786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4076533-7fbd-40e8-94ba-f8101138e058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67752e3b-b278-4c89-b584-2128842cea0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a5e59-aac6-45fe-aa66-aae50de2a63c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd227b9-1127-4971-a16f-fac6b074f5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c70f6a1-ca77-4bde-86c1-9d9d2aba2b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6280a1-16fd-4acb-b6b7-677456f0bb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5bc556-7289-4694-9e4d-88de417b5696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08411613-fdf1-4cbc-82cb-05c5bee4114f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c553f-8872-4db8-b8d7-ffac169e1ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1417cc94-265a-4cdf-b9bc-8e58215d5574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043e6922-c9b9-42fb-b9a6-86f887b31467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7021319-c03c-4255-9a7f-9b000448af98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33492de-4c26-4c2f-baac-52edbe73cbd6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291806ae-e608-4adb-8477-0d135a9dfd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd70b49-5b58-490e-9c60-29785457d09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0c5785-f1f8-4f57-ad66-f40ea68eee3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdd3d66-1e56-4af9-9013-7e78f5e3225f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feab7a85-62a8-427e-b3b2-ab2cb81021e1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285c6449-c97b-4b5e-bf5c-39e301325439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a2882e-3152-4c3f-868f-2aff9608b088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e217f87b-d7be-4572-a2f1-0024862c5801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15135b47-5b8b-4819-a485-e2a2543946b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97410a45-5719-4975-a9ed-5debec2a7f1e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdaee4f-2ba4-4e91-b056-f9a7480ebf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddee87de-23ef-4756-984f-193e29dc27a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd17cc3-f668-447c-acde-fcad4bc3bd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37dcbae8-811d-4add-89f9-6829fd9958fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b18e5b-467d-4183-8d44-30de2bd21cbd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a7439f-151a-49c1-acca-b022c7a957c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c7aa31-f2d5-437e-8f06-861133f919cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb0c6e9-e0c9-445a-9523-fa2cbc9221e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d49b12cb-7cd5-402a-92f3-765d795c5c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8607ef4-4b23-4dff-8dbc-c7a08340dcf8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c99bf6-521e-4988-8e64-a2b3421dd27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb8b2c7-9409-44e8-bab4-3a2d707292bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1516d7b-a1c6-4a11-ae31-9d0ff80714b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d88cfb-1cdd-4361-ada1-c9105f06ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90c407d-1080-42c3-974d-e2b49e9cf448",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35053927-100e-45d7-a799-0d0fe2cb42f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e797bbb-f76e-4163-9dd5-ca99bdba111a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7279b3-6e77-4501-a49c-409f1c15a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f3b74d-6422-4649-8428-044647bcf9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af9e8f6-eb35-4128-8083-149645ea16cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb37244-d6c2-4f99-b5f7-48a4a3cb91e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2ef615-d9bb-4251-b254-4c565b07ee11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5a21d5-e4e7-4d1b-9dc4-3e2bdcc632b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7d4b3b-7678-41b8-b053-989f3152fac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eed289c-c0ab-4e34-9945-0647bc71c049",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616f1c10-5a86-49a0-ae00-770b5f9c06ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c661f4-cec2-4611-98fe-0fc3c1f8d73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f046a165-f752-41e5-8107-823e3bf41ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "023c0e76-9495-482d-8f3a-6eebdf451dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b690faa-9eb5-481e-96ee-2a64dab2c177",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456b1af3-a108-455c-acbc-d1a52fa2283c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee491cf-3a11-4586-84f3-d401acfb7fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a17750b-93e2-408b-a7ca-eb8d2fb6af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d97d8ad-8991-43af-bbaa-b447161c704f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e054c4-96fa-47d8-9e9d-1cfd35b8ff5c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0a5fab-c2ee-4916-89ae-2ceb915d5519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6899fa4c-6685-4e20-91f3-49e4febdcf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb58a70-8b34-43a3-9dbd-dc647f0d50a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "625e77ec-0203-4275-b2e5-44eb63f038fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac2376d-da18-4ecf-862c-44848e309e99",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5a7b32-df6a-4522-a30f-e32ed1a2bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26f909c-7924-4aba-b562-133f1a559286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ead1a8-d8db-4d77-b4c9-de7a1fcf2407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8d8a37-27fa-40d8-80ae-e6afc8d0b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be922801-12b6-4828-8a27-2e2b560505eb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d85867-8271-420b-9786-47e229038d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458ba099-43fe-4089-89f9-ee1c42e7e039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d31baeb-4a16-4a4a-b31f-49cc5b38ddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be28fa2-e880-4bd0-b571-6989f53f65a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a292d-1e6a-45ce-b8d7-221ff00f979e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21d84a0-6b84-489a-a107-f1a1343439c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1634b538-9856-4295-82c9-931caaea2ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba59f976-f960-4c17-9073-4e7717e1e96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c199302-b86d-422f-bb29-1a1fe3bba582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cc9a61-4e4c-498a-89bc-081bcd056e4a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46287719-3fee-4223-9975-c368ca0ef130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf3a001-4b53-40e1-bfe6-03d98da2a85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd9b73-cfeb-4ddd-9ede-b9b65e3793b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd7cb81-c5b8-4d4a-b962-b54a70da69c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f17af5-4a4a-44db-ba77-9daa4c091dfb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f09f8d5-b6fe-4fe0-8761-59dd6f4805cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d2a2bd-2a63-47c4-98d4-5e944ba7f6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcce5d0-3191-4f65-9a27-1036e26d7684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b149f474-3bc6-44ec-8983-fd33c6f8a90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca3ca1c-45ae-4c07-83fc-205a85b1edea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6018905-ccdf-4117-af2c-fc71c2bea1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321150e5-ce2a-4cd5-80c2-9d7520d02d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0243cb-9976-455e-8426-9be916b759dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "31a0c8d7-6b9e-47da-b628-fcce8a570c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ab252-4ecf-4b1f-bd31-43393c796b02",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caea6c1d-3838-4dfc-88fb-4b5b13d4fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02cc0b51-c4c4-47ab-b10d-a652e3e4a64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d831a52e-3b50-426f-935e-9de5de48f7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b88f8e4c-5b68-49b1-a4e5-b9992f72d49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa435c03-4ece-43ef-a879-b19a9ecff3f2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85ed2bd-9a09-48d9-b437-c7c19c3f7925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059ff548-cb04-40d0-a6de-43fee8693088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60861846-6cbd-4717-82fe-226a165210e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7b43aa-b97b-4728-aa7c-a7a7177f2e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13938216-f9d3-4957-a9d7-fb33920784b7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d7f2ef-dfa3-4205-b8ac-2ede30a18519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ea351d-d341-4fb4-8ace-431b8c1b44e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2bba17-957d-4530-8308-761735ff2514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02f0b298-540d-43a3-8753-1e15c61b5ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e5a70e-8694-489e-9f73-1dde88771ec9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4486a5-204b-4ace-819d-5fff02b8c0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ff5ac0-0aa7-456a-923e-c66c9ed909b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27030412-d78d-4bf9-8670-ab18954625e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db8f9395-8633-493e-bfd6-bec9cf588848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a11b573-36c9-4c38-b91c-f56b3758300d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c3c857-0cb6-43c1-aee7-a101db910c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef75d8e3-712d-42b1-a2e1-39412a844421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f8a75-ebcc-4ba7-9527-66edcf8f937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8703b502-6cb0-4433-9440-bfe4b1dabe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33604a48-53a0-401e-a88a-e2f13e0efbf8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86adb8f5-915f-4527-b75e-b056e69aa346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4dc7a2-c241-45a3-bbae-4e9a02c5c97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9cc236-0764-4830-ad5d-35396f150bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0e7c9d-30aa-46e0-8e57-b79955a0bdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b537617b-23d7-454f-9ca1-5aec67b767aa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36207e39-77e5-45f9-b831-0af2dfe0b687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629ca035-2c90-45ad-963e-854e120aaa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b9495d-d67a-40ee-89bc-e691a96df673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "be8c6876-736e-4032-b6fc-84e6430f092b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f760a5-7a64-4fb1-8dd8-e0ede19c5997",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d1e9c7-bab7-44f9-9b41-19db67b5a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a922c2f8-a8f2-4672-9cd1-4146dc890592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67736292-b005-446b-ba7d-b3f562caf264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e556f43d-74b6-488e-befb-06ec4874332d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9232833a-ea14-451f-b9d6-4980d7ca19e1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb77485-6e6c-4900-92c3-240743864507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be12928-6e99-4978-b814-c066c1a7ef19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d46352-b9a5-4979-8993-f8b0f505febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb19bd8c-656a-4046-8714-51701919dc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0a37de-8865-4b92-bd5b-4f182d230905",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51808dd4-9772-455a-9ed6-6ce1b24cf49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2f84d5-2a16-4007-be7a-75ba42fb7eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cdb12b-4d98-47e0-9350-2e1ee2526c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53506b4d-34d3-43e8-b6dc-b679b571262c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d11349-5f9f-4eaf-b99f-f6e7894b9d4f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db0b6b0-7be0-4f3f-a8e1-5e5ef314e376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55fba12-2b12-4d8a-8e17-001216276c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8bb2be-f9a3-4894-bf12-d1f55886280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f21fec-5f75-4e89-9d4d-7941ba0590fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d3b8f4-0eb3-426a-8ef6-141833753afc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75673b69-d0e6-4380-adf3-1623944fc776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d487edf5-0008-4fc4-81cc-588d50b4faa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f096b6a0-391f-494e-b454-6445a6b2a9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a41142f-379c-4c44-9623-b4b9b92f69ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238614da-8edd-44e4-b446-09978037b2a4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19617f10-be20-49ba-ad57-ebb05246a4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d554d3-de0f-4f40-a4d3-871c6412001c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905bffa3-f3bb-444f-b5cd-5db042061b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ca8763-3932-4274-91ce-385d957a4303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6601da1-03e2-4b73-8087-0da011ea0bc3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648773f6-7fbc-4dd4-a3e7-a91205b5bd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83affbf-9a96-4626-9876-280c86e21235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fccaa0-f925-4085-982b-a7cebd7a5176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c26c2b0-57c9-4aac-8644-a5cf756bb9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba2f5ba-aa76-4387-bf76-51e097f58f04",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5333d9d9-95f9-4b43-9fa8-06843c14981d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196ef29b-8240-460a-ae18-2968bb78f04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b07b955-93e7-42db-b493-157794ae975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f67fb3-1da2-40c8-a809-6560451525c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaafe66-c478-46b1-9d93-221ab86548f0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98b9a8-a231-4e0f-8bc7-408f84b866dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccb4ae8-0a75-4446-a338-c14c800fab62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fe903b-fa32-492f-a127-0f08ad82d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "def0d987-52df-47e7-b8b5-1ce4bee374e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f864df-c697-47e5-ad08-aab2d6c8ff5e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2ae4b2-1fdb-464c-be35-db075cedb36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37ed077-104a-4b93-84a2-eba243da6a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252e5be4-9a3a-4d88-ad87-e8611f8d4af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c2e4c0-b297-4f68-862b-693cdba68b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51dd1c7-b1ac-4f99-a97c-288d6747e8a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596fc157-d04a-4117-979c-a8b4ace73487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763df481-717b-4acc-96c9-eb14711248fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26057950-39bb-41fc-aaa9-85eeb120ce59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9568e1d8-2c6d-4fbb-9d06-5ff567dab438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5fc2c3-b7b1-46a3-9282-3b4d7f18c1d9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980ac246-4844-4f69-8602-488ba7b12b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c98589a-ec1a-45a5-bcf8-4e7716b48a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf421f0-8684-4a72-b287-0b97c652dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "288b8a41-3775-4766-b368-99ee5534d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09f3a08-595a-4970-b0f3-49ab8c040fd8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e333f56-5ed2-462f-b689-8799112997aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba01b3f-5ec8-44f0-8a0a-cbf7190591ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c365f6-78bb-434c-bb1f-4fc4f6a74d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15114522-3caf-4173-bd63-9db17a5a3a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0325eed1-b39f-420b-8024-f1b82e39b86b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce230f5d-24ba-480c-a660-3d0b9b2b7009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc0c45b-e20c-4969-9385-27261421874b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d8c113-f16a-463b-a0eb-8edc89bcd231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5206c882-2ccd-45c7-9f5c-f8f811cd9f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c573a8c5-df9e-403d-9203-39ae80f9333a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0ddced-d3c6-404f-b1ac-130f0b19ee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b7f9c6-4cb6-4aa0-8e2e-95573bef1ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4587eeb-671e-42cf-8d9a-db476cc332bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db835eff-7898-4380-bf10-eb6c72d66f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f38566c-f0c7-4c47-b5eb-01536d499b6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a35282a-4c58-4895-b411-bbc14c2de8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2b2d30-633f-4916-86dd-d2aa29735a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4a51a8-11cc-46f2-8a52-af8e701bddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7fa105-9a50-4c67-9fb1-613273ac048d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da15a0fa-75a3-42f6-b956-93dfd5374d0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79caf39-7032-476b-bc94-ce175aa0f02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529cfe8b-b6cd-42e7-bd15-46fb7078c235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c4ed14-da44-4325-8079-c1faaee66d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9992c654-1f06-4c1d-ba99-00d8c1e910d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54801329-ed74-42df-a5e3-39084c2d376d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7786efcf-ce9d-4031-abb2-72571db5a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2b8652-6dee-43ea-b442-715449a18833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d49d70a-9fe9-40d1-b803-8c31669ab378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06e76a2a-8a73-4c7a-8a0e-a3fa8d5b586f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8122d7-1881-48b9-8c2d-0642cc066275",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625f9c5f-ac46-4e85-94ca-077fa1f1d01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd1a385-05af-4e84-b574-0ba4b6864635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e102fef-1989-41d3-9c87-ecb21bb77e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe9104e-06eb-4b58-9052-adf9dec6c174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b0b8ab-296e-4fb3-9bc1-f1064570bd72",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f5fd47-3726-44d0-804e-6141daaeb460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847a6a31-37bb-473e-8da6-02afe31f01c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bb02f4-6aa6-45ee-be1b-6a943e1a0cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "651f8974-52c1-4ddb-8f1a-da9433025b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6b1ce0-1b7f-4246-8b37-fe4ec540fcd2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845624f-cece-4ff5-a212-3c8885d23b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d0a888-5119-4411-aad9-67af830ffcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db52276d-ae69-426a-8eef-3ce0e3d111ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9425790a-06bb-49ff-a7d2-b61bbfbf73ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813b2efe-365e-4e5f-b714-8a4a8e55a4a8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69ef384-d2e7-45ef-8eb7-2c2096581ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0907de75-7aff-446e-bfa8-99738e725ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322902ad-5b76-46e2-b628-cbbb8d6fad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3878d2da-bb6b-4c5f-bbe3-59e03028a8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d3e27a-0164-4fc7-a3f0-667fcd86295e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3414db23-0715-4c64-b24d-1ddbd95b6aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb9a43d-4985-4308-a043-f22c1929bdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42fe5fc-a582-4274-b0b8-2d765a868567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd566f7-b1dc-4c73-94b0-caf01ad2a914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c1940a-c6f4-4fb3-ac93-41ce1ca8fb71",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a842ab-a19d-4837-8ed5-72260f08fac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a25390c-237b-4871-8a5c-aa268bc21c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034b3a00-d228-4a60-9d14-f73389134635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d87138-6005-4e90-97a3-0a07dde20cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528d54e6-d0f1-4e31-ac43-3d19f28c7b20",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad455286-1231-4aa4-92a5-6614f7eb9f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2122fb16-c8f4-4ed3-88be-63b814102092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951be0b7-bef3-44c9-a967-deeb28493912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db24269e-d721-4d1e-91a7-2211fc5c3077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e35374a-0229-46b0-ba60-d2d6fdb0a304",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd18945-2325-4bf4-95e9-89ef3471af83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53607fda-209d-4f4c-8b8a-1c74c63abcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9711e46c-5170-4f09-841a-5680351a0383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ed9d88-e378-4b81-839a-55787da24aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c111ffe3-808c-4136-bf83-ec4c51044c85",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8d454e-609c-4d16-8487-d70fa4ce0b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e078df59-1b88-4eaf-8b9c-338ebe9d2387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53feb77-8321-4a80-b3e2-8700b5b9a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "315dce8f-5ca4-4084-a2ff-e6396afb1e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd2ffa9-137e-42db-a37f-00c916ebe639",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a5154d-e4f6-4135-88bb-9231cc851cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949c9ce0-f9fe-46dc-a6e0-28c77cf220bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df419c2-1aad-4582-9870-a22d4586f330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced7b25d-50a1-4de2-9dda-c48e7f84b1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd567bda-49a6-4264-b18e-5becd42cf42d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce2f18-a1d0-4ba4-9e21-71c2ba4849e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925438cc-c323-4ca6-a818-4de8a2bf6130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc75526c-3554-4590-9351-c1d86788e553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aede04-b1a7-489d-b101-cc2bb243787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39589848-787e-4ec5-b0cf-fcc7e4fa26b8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f60c54c-a565-4b6c-ae68-111d6b317855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cecd6a-ddc6-4c07-81ec-a8372b74d428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b7cf66-3c1e-4e8e-b2f1-f87cc9b94e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9522f96b-ba07-4923-a891-e73216d1cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321bf5ad-8746-41d7-ae78-bf238523fc15",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfbec2c-20d8-4917-9b5b-c2910f439e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508c53fc-160b-4be6-be3d-1a1e128ea776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7c1286-d57e-4868-8551-5d023f61a3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b91c7de8-ab16-4f65-a089-bec04dbf2318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d4cfa8-0938-4d01-9101-1596638ee1ff",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad34deb8-fada-4acf-88ab-38028fda48b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28a943b-d062-4ea5-b4d5-37ad2ccd3336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c3f60-6377-44e1-a939-380c3d9ba08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7db524d-7f82-47d2-ba97-a7f47af3576e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0379db72-554f-4814-8458-57e67db62a37",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842e074e-e3dd-4c2d-ab44-1227ca138716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85551751-7f6c-4331-a861-f28bdf1b6e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264ec585-4ce6-4467-8dc1-267e254ab9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd63c9c3-cf88-4c93-b773-44f9caa6cb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93784cd5-3368-4733-adff-17f07e5748da",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eb0b6b-cab2-4dc8-80fc-0e0cb4a470f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded38cb1-6a9a-41be-9274-6046357a2064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e791ec0-8743-4c2a-9744-c0b8f4d1f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab79e4fa-3261-43e3-b058-9a044b642b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd68adfe-b0b6-44bd-8d3b-aa1c13f8fbda",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6666e6d-cc52-4f5b-916c-f6673e8673d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80eb9d8c-6031-48a9-b7c3-0333c8df134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0ccca2-10ac-47aa-ba52-0c412a64dc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ce1776-c498-43ad-81cd-1f2e9b73de97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2d9cdf-efb8-4ad3-8840-8c7c63998703",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fa7d20-1863-46d4-b5f4-f388a2cb52dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d56604b-ee4d-4513-9cdb-513a41cc779c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96469955-0f4b-46ff-9db2-3f4cb37d800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "216695cc-39c9-400b-a56a-8f25d393a1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a236a2b-bc53-404b-9e91-315dc8035c05",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c8069-84f2-4228-8fd1-86b2260acd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fddb9ef-f859-485d-9255-98184ea0c213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5950d1ef-167e-4956-8248-bda6a2340555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4e9a10-e3b5-47ea-8f81-d145724d450a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e900a1f-c827-4f8e-8c09-b27bfa6d5239",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518765c4-6515-4ae4-85db-adfe8a15a7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0920bac2-78c3-464c-9a55-cc1bc13af4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f4f100-d5c0-4bad-83a7-bffec9fc2a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a152fdd3-fb34-4497-8c99-6b53dbfb5a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a33c02d-598c-4908-8224-e1f1267dffc2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e090986-073f-4608-bc8e-3d6b60b9b118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f17fbad-7cea-47be-a15e-840b92f8081f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b2830a-a6ad-4700-8934-f94bd27a694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1104da-6fc0-4780-a182-6829a5a43c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea804d3-1186-4588-bc15-078d0e4952f5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971ad52e-f1c1-4a34-a3bf-2a5b0d66ec9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244d43ff-5c80-4c3f-bbaa-feeaebc39c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aa3213-05fd-4bc5-95d7-db4f9f34dd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07710b3-589c-4dd7-b50f-bd73f8d9881e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46682f84-e58e-41b7-bd2d-c2615bbb5133",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d538e5-b16d-48e5-b9e4-970dc7cdd726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc0ca71-c3d6-4609-9c6b-375c0650981f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b3a55c-43c4-45a0-802f-caf9a1d751e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabbc090-a1b0-48fe-b595-e036709891e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c0cfb4-c8e7-412c-bcfc-77102be12bcb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763777a1-f70b-4bf2-b823-d677ae0cad04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d43a40-e787-4241-b255-3ddd17bcf1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe981df-05db-4560-adf3-713d6a1ee5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52223f6-fe54-4d28-bb1a-3194d47b3296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1048275e-a2b7-4f9f-84d1-44af30812f24",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4720a3-8aaa-48f7-ad7e-b3cf089eab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca808857-cd01-4cbb-920e-77fbac313d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76527e6-6917-4edb-bf2e-f7c3fa6e9491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23f52868-6ba5-474d-bca3-e85621a1d0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8251ddf7-55a7-4b16-abf1-db8e1afef5d0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee10dd0-a4c9-4ddd-ab9b-bd450e712ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f6c972-5437-4467-89e5-e6f2b0c23b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da79782c-d4cc-40dd-8d5d-9789ab622195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe008983-693d-4702-b068-c5715022674f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fa85c8-fb53-4379-b1fe-f645f950e6d2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c54320-6f21-402d-8486-7c77d6d8dc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f61d77c-b196-402f-bfbd-cbeed66645c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358bcfc5-a272-4f15-9746-cb19b1156b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6514a2-c463-4441-b4ac-198ef9799c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229f0351-65e8-45e2-9379-4b4584f9dbb9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4f92f3-5a2e-4741-bb6b-f2c0881502aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9376d46c-a774-4788-88ad-52e0a03dbf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eead2464-7b29-4a5b-884d-3ee74dd5aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "892bf4a6-4e33-4647-a679-02871f590117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74e50b8-2599-4e46-a190-626ca607ff58",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ff9406-9980-432e-b128-481a53487cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efc2ba6-a6e5-4e10-8ddf-2250cf364502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fee25d-9c91-4726-a0a0-8bd996e2030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ddb789-26a8-4dcb-abbb-900fb6ed802f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc5c9a5-b615-4c82-8ac4-c1295dbebd7f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6c4df-f1c2-4f67-86c9-29a2b8a079f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa65057-3fc4-4ebb-af93-90041a8428f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5269b937-2e66-45fb-9539-1adfcaf54d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be840236-1ab2-4344-81db-de1e96913163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ef013f-f7e2-4a8e-889b-5d63924825ae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d18d8e1-d932-43c2-8a0b-d0d5858c3298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4609db-b55a-4b3e-b92a-6c2b705ff0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d0d14-d7d7-4430-bdd3-3d48b09239cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f66b221-9f92-4219-b505-9afeb38a226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41502d6f-b057-4cfd-84ba-196fc31eaed4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fe9a94-48d0-43da-a13f-5f96d73a8f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3c006c54-e876-45ed-82e8-01b0f0affe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387eb39c-ac26-4585-b415-4122f35d81cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "084319f3-d839-47f1-bd04-6c39441081a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97a147db-1da0-477b-a399-353b7da71556",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "617c7b56-8653-4c8f-87e2-591e2645977f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ddae7f-37ea-4356-8dc5-4a45320d4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "972db93c-2e3d-4781-b4ce-4100477e4e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef02720e-cda4-41cb-856c-ea1300d19ea9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83380529-7349-4b00-b50a-e3b1e7cfb72d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b468a0b3-a7ec-46bf-8e9e-017159a7a73f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff64dd4-5837-47f6-afff-b3fb58b8103a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f8fda3-231e-4acc-be7d-56bc9f0f0b53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcf91f54-bd51-4caa-bee2-6d36024f0eb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74cf5f89-2b00-4fcf-8f47-a37e4ae1c9b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c827d824-2066-4a82-b0b5-01db13d38c1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "744cccb1-9364-48a8-ac67-bb9ff5364c1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f83f0cb8-261d-41e9-b1e7-a87c203f8f4c"
                }
              }
            ]
          },
          {
            "id": "73b65b49-a4cc-41eb-bfa4-48db30b5e188",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5126778-49a2-4ad1-ac59-cfaa7a29a0bf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "82ea5f29-d002-451e-bd2f-0eccf0250df3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487a2826-1eb0-4221-8821-400e8d7c19d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c16f9f5-44b3-46eb-a267-7e28768a846e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd7efa-4eb3-49e1-a787-69ce847e74e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6464d23-a4ff-47ea-8df9-a70d96a2f01e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a855a81-fb23-412e-a547-6a5954955f64",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7921cb3a-8305-460d-87ef-55c4b64e64a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "817b73bd-50ab-4712-aede-fe2e4c862e61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57c2956d-f31d-4dd8-80c5-943067c1e2fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e51ff5a2-c3a5-420b-a6ad-c926e2f986cf"
                    }
                  }
                ]
              },
              {
                "id": "ad51333b-a2b9-480d-aebe-696206e68198",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9499c859-4e55-4584-b045-2bc72ff5d58e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "570b5c26-13b2-4f66-9fb2-7e4caccc8338"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6b1f229-6258-475b-83a2-823ecf54ea79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ae895e2-e338-4c93-952d-205e68b909bb"
                    }
                  }
                ]
              },
              {
                "id": "e748ac7a-2ab6-453b-a3e0-a37cb72c4999",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5daaa83b-1f53-41da-a041-fda457d1c50c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bacc33b-c219-4da4-93eb-7cfc8fdbc997"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc3e105d-ffbd-47ca-84c0-8d7d479dec88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "443e5463-9e41-4684-b085-aba4fe7ddd70"
                    }
                  }
                ]
              },
              {
                "id": "f67f0144-bca6-428e-ad54-a9e71ea960eb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d57733-e52f-4dd6-87bb-cd4ec4d427da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48695d38-5f55-4c3e-b285-291a932c88b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a76c1237-a866-44e4-be9a-4e15fd980c70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d8b63407-56b0-47bf-a3da-d1e4879d4123"
                    }
                  }
                ]
              },
              {
                "id": "5ab496c5-7e26-433f-b04b-508e1f25e5dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d15ffa49-e79d-4cdf-9519-123c3d45769d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20fbf358-76e0-4fc2-8cb6-90018eb24f09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2209db55-4642-4f40-9b73-ab828875b4a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d244822-bbdb-4099-bc3d-aee22c83af5e"
                    }
                  }
                ]
              },
              {
                "id": "b4842731-d993-44bc-a8db-725b600140e1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8164e680-1391-40eb-ab32-54308c994fd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c183c20-f799-421c-af81-ac2b100c5683"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b073131e-5741-485c-a8e6-645d3593d75a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00a2886a-7857-42f5-af8c-5df44fdc2e37"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34312670-782e-46d9-a9bc-20667d9da63a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "717c4351-9fd5-460b-8a22-712e01e3523c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eece8db0-9301-4057-9d80-70543226db10",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6bed930-c069-4039-bb6a-d878982ce0a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7b04135-4659-4298-a182-ce50a00f3b79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7d8c0b5c-1316-4982-90e5-394a73c76420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc30894a-86af-47f7-9b77-c921018610f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f112cb7-31ad-485c-b318-7f5ff2238871"
            }
          }
        ]
      },
      {
        "id": "8aa821a7-bca1-4123-9fa6-4c273eedfa18",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c6b6c324-0317-47c7-b0b8-75cd4afb3e94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5135b034-fbe2-4480-a529-1be2d1cdf302",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a7d79b9-1c92-43c9-87c8-66d53499440a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b001f-04e2-4905-a02c-6f761c663401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e91f85-9d41-4051-aaf0-b20797858764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6f4a9-5689-4e68-ab6f-b6fc729080d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33db0f9-4952-43e5-8cae-58a3e9ac6879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a32848b-b52e-43ea-9da2-208a3a2dd7e1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60738287-bde6-4282-88dd-a81605c5cadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a2d27e-6c13-419a-a015-8e2330897b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b18f428-489c-4f55-af48-9cf7e790157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24fd5e7a-bc59-4b99-a731-e8d698aa4ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a31123-4522-4ff3-b1ce-f470a24f9841",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db975d6-5b3b-4e08-9267-c00ee0ec987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffb859d-070c-4918-bb7c-0dee90dd63a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cacebc5-0e73-4a3a-b370-1483e62d84d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b77674-97d2-43ea-87d8-9e73d58aa332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a393610-8866-4562-8793-808fc6a8453f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87156c12-2970-4dea-8955-fb75bae9a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3b6835-dce8-4400-aa90-32c68f51ffd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5600315-756d-4a5f-b128-e6b0468470a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e924fede-56d6-415d-bc19-ef1f0d7aa725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98646d44-0180-4811-aad7-d6192e816dfd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e79e80-10fd-42b6-9ece-996fe931ef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2e0921-5a22-4f3d-809e-0314598bacdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2037838e-9c17-4310-bcb6-a9393ce6e7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1ef1c7-4953-4a4a-8e72-1d611798f092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f49f62d-c1eb-4ef6-8bdf-74ea088ad347",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deb484e-caf1-4ba0-9a29-71f801d76d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af27116-86eb-4c8c-8ed6-b7a70386df7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d7ad20-35e1-43d6-ad31-21efeef4a8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3381598-d3f3-4eb5-b0cb-ab4bb755907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb3758-0dd4-40af-9db4-f27d2041c518",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ade52b-2e9d-4961-9fc1-c8fded5d3cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f1f19c-2e0d-44d5-bfc1-9add103a9e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e99ff3b-d40d-412d-aba5-a315bd5daf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "412d41f6-3677-4957-a485-38547d0a746a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca29c37-98db-42f0-b61c-0028cba90388",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5fd326-747b-488c-93bf-8e7e3af1866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ca3bd4-018e-4ce3-985b-08a68528f668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4129cb8c-ca35-487a-9c09-80a43e524e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e223047b-1e82-4ada-8299-110088fbc5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d6bb34-37b4-4843-86fb-59d655f9a1ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8238c3-b93e-44f0-ab0c-30cefc4e2cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1a3857-9eaf-4b71-b077-243931f6b054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85ee8ff-e6e3-4bf3-94f1-84542ce2481b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba17ce7-d138-4944-8f07-dd4282877ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41439c5a-ed03-4bad-b0c1-aea4cb314ccd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99651a4-c8b5-4ca7-bb0d-bce4575aff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f98ee9e-3ce9-42d2-b2b3-1d67a3573652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfb8567-fa86-47ca-bddc-7ef8e6b50201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "845f66f5-37ab-45ff-b210-f97354e8c905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d35219c-4323-4d95-ac5f-4bfaf698daed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54457fda-619b-42fc-b2d4-b9cebb84c31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01deda1c-930c-4613-a618-c6c4e750ff98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcdfc90-e4c6-4423-ab15-b98995d187e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9633f154-87f8-4a85-a04e-698468349c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d292f-4dcc-4de7-ae0f-dad0eca5b661",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eeb7bb-176b-4c2b-8f8e-0dfa0beb7516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af25be21-5eee-471b-9395-946a619584a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2227ac-9ac4-4603-a53e-705d90c219bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "124f45ab-3d36-4298-9a76-1ae857070b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe6bc6f-b5a8-457c-be43-6d5940dc3166",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c15d383-3a1c-46eb-b9fe-5a8a01993db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b7070d-8315-4128-a6ef-660c9e34dca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3a82df-d3b4-4f67-be46-03bab1639b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7472d9ca-fe19-4be4-82b6-df1d17640d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6783be-7604-41a0-a873-1a87c20b0927",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afc8e47-46ac-44ab-a9ef-3f306ce7bd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fdb5c6-3b05-40b6-abd2-3b219c62a114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bc84a3-6346-442b-b4a7-03e5da0fb2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6f4cf1-97e4-4374-88be-e325a23db20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ce60ba-5c45-4d29-ae67-fd5512266792",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d39a83-bbba-4171-8a1c-3f6af3863ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28ec5f5-4c87-47ad-8730-5636130f4011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55ca1ea-57d8-4848-bb2f-754c8eab416c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d101dbba-69e4-48a6-b93b-e970e77cd8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65d6984-32d8-48f2-af03-ed0cfdfe11e3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68167526-cba1-421d-8613-f832257260b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c91ea6-8457-42ee-bc71-b990e8437c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461896d7-07b8-417b-93e3-445a847fdbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b75c38-e3a8-4707-ace5-c9b448e330a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d541b94-0e1e-4b16-ad9d-8e9e35d24af9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f743e0d6-5a24-43a6-ab28-ba5f71fa9cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a1926d-50d1-4843-ba75-55ec746244d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a5920a-b31b-4951-875d-2eb28f992b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecd46a5-3422-4266-b707-500062a0affe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011a7155-0d5b-4b99-b354-6157901866d3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d19794-fb1b-4eb4-a5c5-bce3d3ccf337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4aa2be5-46ad-4313-95f6-03a7154f965b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504e21ec-1f12-4f84-b99d-2bfc4fc16588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ce6013-e2d2-484b-aefa-f4c3b735774b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9053b85d-df0e-4d70-9f75-193c18dca7c3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f99655-d26b-4b86-bccd-f48d1e60e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3fb8c0-a9c7-4b9d-8659-2e2d697e4996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c4c4d0-1154-4184-9b73-c40d7a9833a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf1d5d4-d5a8-438f-bfd3-8f57f3e7753b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb34e066-30eb-44d8-bc1b-62e463c2ef4c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e904b9f8-3a36-4e32-a82c-4d0da8585a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba829c1f-d867-4cee-a354-af0de7e297a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1da5cef-bfe5-4622-a328-182fdf0e03e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e951710b-b5e9-4919-801a-801084fe2031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8369742e-74dc-4831-9f86-eb3774ee1afd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3aff90-b657-458b-95b3-364692cff9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5776138c-e787-44c9-95fb-14c6e8bd3bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b120ccc8-526c-490e-93f3-b92169cda58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5ab1d2-e9a9-4dbb-b2cd-8061f863965b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd193f9-4d57-44f1-a5ed-404e63c650d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e40da20-a146-4328-b963-135e705fec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df7fbec-80bb-471e-8cf3-196be6dca114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4466cc-0153-4978-858f-532700c024fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec958f15-c8ed-4b66-aad4-d84e8a171856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6e8b1f-d036-408a-9118-0f7dd7f3f164",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3b0c20-49cb-40fb-a586-66184954a45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e834c5aa-88be-45dc-8205-3fd4f308b4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e412f-2a85-49c9-a403-effe6547f1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f700893-9aa6-4cf0-ab0a-41de7e7b51ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adc4aaf-c64f-4ce2-8ab1-f495613ef14d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb29b541-cdfc-4c06-aebc-b883fdce7acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a089abe-01a2-4ed8-b430-fbab4867a49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaafbcf-62d4-456a-8100-72d439551bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7bfcc1-18c2-41c4-af7b-e5c5938e545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30982e4-f01d-435c-81b6-082f01cb1863",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa7988-df6b-4c0d-b21b-5ef581aea6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658b31a0-0ee5-4313-bd95-af7d67ef94e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2651820a-42bb-47d6-99bd-43f141df1653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad83bee4-787b-4c1e-a94e-5d9fb285dea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afee1426-5192-4be2-bce3-137672a78c41",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ab6b8f-42be-4718-8c36-a8a451c21a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35579c7b-9b37-42ac-92eb-c8c3fca51eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09222b2c-9d1e-4091-af31-0be2b2822842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c59d8cc-09e0-4c75-8543-b73e88b8ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b9934b-b00c-469f-880f-06bcf4a967bf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5701a34e-d723-4ead-afb4-3163f3e76619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496bb360-886c-486f-a8e5-a7fabc775430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c4c894-4b87-4f57-9f66-cb782555bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d606a75d-066b-440c-9250-2515ddec7bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36184a1f-1091-4a3a-9d4f-3df3f84d0d14",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c44549-d64e-46a0-bcb3-e819a4252938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19669170-3ffd-4839-aaed-292e608f5204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb7537e-6a53-45f8-b40f-7c2a6e1ffe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0697856a-91ed-479e-ab64-33ab6cd9f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4852e411-9099-4a60-9d9f-723b5ea9e4e7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae148fe3-1db6-44b2-8fd6-acba7ad354e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a47ab1-41cf-466a-8916-4da072487c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3986ce51-6d3b-4fea-ada5-dbe5396ed18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc895d32-acd5-4192-9a1d-7742070ab6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365b8ae0-f27e-4531-8c81-63ea46a2e4f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39132ef5-2a66-42c1-a577-ec07a3daa698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e3a58e-2fd4-49fe-9747-68b004022d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab987bf4-b5f7-4524-abb6-2bb04e47da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dae2136-5d8c-4aa2-82c9-6450aee084b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7e0f11-af19-4ac3-b09b-40dde6148afe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73f1c79-cb14-47bc-991a-cb9aa4e7c188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b8e15b-e8a8-4927-a593-ef473f624ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420cf64c-cc6c-467e-a4c5-8992d1550369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "165218d1-ea76-4ebb-9e7e-b20f78b02e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d19300-cdac-4d4d-b042-a2316fe0f06d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e81bd0-4787-4862-aa08-4bffcef04282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671451ee-1c58-4567-9a73-09351cc10169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18510e53-deea-45c3-a433-4e3d807d9ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c8a8dd-655b-41b5-8afa-406e3c2a60a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca383553-95e1-426e-887b-bdfa729f80e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcad5a55-f42c-4f39-bb27-64c30f436634",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26be9de4-0010-4e7f-875b-c9ea3234bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "92691b30-7883-41d6-9cbf-f570f6b0e0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a21016a-1bea-4e3d-94e2-b5e39abbc3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eefadb7-9c36-4dad-ac77-cd264d6052f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d64bc15-cfae-4e4a-a7ac-ed2684005127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eb3b0e9-76b9-4ee2-9dda-8e8ce1ca629a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "757fb71d-736b-4f3b-8af9-88a5bcd7a51b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95d656fd-4702-41ff-80ad-6465783a6dcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "259ccac5-fa8e-4c2d-b8b9-0243f767f638",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e7373eb-fdd7-422c-b53d-208024f6baa4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bde26d1e-8980-4d60-8403-09d516e5cb5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "debc7459-fb37-40ca-8a73-2bfd5cef1285"
            }
          }
        ]
      },
      {
        "id": "bfdc6c9f-42a4-4b26-96c6-ccf622fdaf9f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3e9dd9b5-b818-4cef-979d-4a80cbfdd743",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e531a07-36e3-4232-afb3-b6a7624e857f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a31a9ef1-7c13-4ac3-966a-694eca6b47b5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f88648-ea3b-493f-8dd3-9dbfb8f55ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6aa954-1832-48d3-90f3-44a856361a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1104af-326b-45cd-bb02-941ab71d7ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3830b37-4d9d-4191-949c-7f017f0575f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7346d46-048d-41d3-a011-a3b0a33db015",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a849b2-ab88-4a3d-bc68-1e2e97971c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e87ab6-f3d1-47a0-a1af-64b560aca141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0a6b80-5f3d-498d-a86d-9c8ee68ccb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10196ca2-ed1c-4f0a-8f78-6626f691862d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f731ff-a83e-4494-8053-228a43216636",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5936b7-f5df-4205-862a-77357701120a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821c981e-2b9c-457b-be31-bbdaf5a90b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c488ef-0c3c-4b2b-9ed8-4b22f62d9d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf69e189-778b-44ca-bdfb-a8a168caadc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ccf491-e959-41b9-a075-97e50b20edb3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5eadba5-2d16-4aa8-a492-e860319aef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b461801d-a6f1-4f56-8c7d-4754a8c3ff31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb45e5a-0d21-48d0-a26a-7c7e6129cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4390bbfe-c9eb-4a7f-8f62-e939b23a80c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e678afc-2fbb-4832-b447-7bd077c88ce4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66472d42-4648-4fa0-8641-73ebecab5898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0932bfde-a8ee-4cdc-9c3d-dd8e49d4ba5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deb6076-54b2-4a00-8dc5-8fc7dd71b72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "774b5556-b370-4361-8f21-7cc5aa56b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2d695d-6622-4f61-9803-c0c5b861241e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd05d93f-7ac0-4a88-9679-f07c1e3e710b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25f1a46-abe8-4239-b939-9d02b12aa033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e5f456-39d8-4a57-a926-1ccd4246da42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4562043f-7a50-4610-96ec-ea2b735fd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1683a47e-ac04-4c2c-95db-f82041544963",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c9a35-6ae0-4861-a86d-9f360530ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5ef57b-3069-4c8a-82f3-cba0ff89afaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eeb297-b8ee-48aa-88ac-617fc8329532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73bbfe21-6c64-47d0-b7dd-09d1e71516d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11ef324-a5fa-4410-bfaa-f0b8dea13253",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5f91e8-2ae5-42b6-b881-689a0e885038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ba364f-7b99-421b-99ba-cdbbdffdc299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b904f64-d7eb-417b-ac0a-7380791f3e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3ecec2-4097-4cb9-a085-d0f0fe9cead7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887628c4-5d62-45ee-ae10-6cedb43d3446",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204680f-162f-4bea-aa8f-cc61e409503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01866ea3-b2be-411c-8d08-c23bba91accb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a29a76-d692-44dd-8998-f456667213c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48cce304-5f19-42a6-9874-db5828dfff6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d3418f-ce98-4b7e-9091-0e9786cfeb7e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1296819-babc-40b4-96ef-3347d9010a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f03facd-e621-49f6-ae51-a4beaa673813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0196c863-2a3e-4c82-948e-47f3bac805bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ee2a60-406b-4194-832d-ab4276b734b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a07b66-9b81-49db-ba17-1668c4becf46",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56105060-e033-42d2-81e0-2f06cf97670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398afaa6-65b9-4a70-8d8b-3376d4d9c775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f08f2ab-7790-4ca2-8ecb-9fd485fb4956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6597091f-5244-4bb2-a6da-67724ed07978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3955f-311b-48de-84fe-f46842126009",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84afcc4c-1e8c-4e46-9fac-5985f64047ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38712a1d-c21a-46f4-96f5-987cc3161320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2df134-550f-4c52-9868-ee597795d489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d96697be-c78e-4e5e-812e-aeed38f7de3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b49069-3b6c-4b92-8a42-86fc3ebd4240",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c385cef5-4ff5-416d-83c3-ea80652720a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06eea13-a89b-4fed-994b-9d031812a718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf0e1af-969e-448c-9521-0b9b21cfc3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5107f19b-9513-42a3-b626-d9932158a2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5061199-6194-42b3-9a5f-0564ede0b70f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94a196b-22eb-4ecd-8130-a9f63d8c43fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdca1d1f-81f4-4992-8a42-813a6cb30686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c5cd87-caa0-4bbb-824c-2d6abdfd91ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9b99bc-f08b-4714-b9ba-dbb2b64d500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfee1cb-00cf-4236-ad0c-303e20fcc80b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2337169b-af10-43a3-8377-0d5be4d52438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93bd979-1ae2-413b-9286-ba6305e3deae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115f177a-b348-4dae-97a1-edcb7bbaf307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10310901-c007-4d60-9906-1c46e14831b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f05cb80-29b6-4487-918b-e5c249e726e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bbcc1a-0f36-4ecc-b305-e60a73de3290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3aee2d4-33c7-43ea-80ed-ee10055d7ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f546364f-9d14-44f5-98e0-89594fcf3860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e364fe-d0d8-4123-a2db-6f121be11b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5441b2d-709f-470c-a406-569c31e140f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26beada3-907d-4f14-b255-e150621dab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da829ae5-ceb5-4e86-8634-b0c19d1d4446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209ebff1-e69e-43b9-b6b2-5caeb5ec091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8488af0-94fb-4752-8aac-f8c815de247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b810f3d-a9ec-4b41-a537-b07fa4627db5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dab65a-b0bd-49e1-959c-2ae06a9c83da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a683fd8b-ea41-4284-ab18-da690061e2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd10aeda-2f91-4ca8-afd3-83dd7dd93206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2156f24d-88f4-4ccb-85c6-7ec814c8a8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c25eaa-b570-4864-9095-35dd3a88247c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eb9c8d-aea7-4a86-b4c8-c814df819677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bb10eb-69c9-40c3-87de-eba15e1d93b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f402206-4a8c-47b6-a3bf-63252482bd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dee5968-6ccb-4f1d-a819-4b7f89023e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283b553f-c1f6-4482-b82a-f6c0eb6420fa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468cc143-9b03-42e2-9f95-739e5233d13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0dc133-9e1c-4bef-8fba-0009cb9b7b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82744980-9110-4d8b-9146-ab43548204f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2401f959-1a99-4c2c-a71f-03a8c22c10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be383394-f9e9-4b48-9a3a-01c339100baf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceab2052-e584-48c8-a768-32692a2371e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb62293-23cf-42ee-851a-0333184fff46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e587fa3-9c8a-42a8-8c5c-3c1259b20b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f444e1-27eb-4cef-890c-5a57bc0f3b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa01ee5-3ffe-4fc1-8c14-9df2c3ccd914",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d217af6-7274-4a84-b4ec-5f249ddeae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bb5424-fa08-48d1-8369-4fa4cfa87762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23eea44-f54b-48ab-897e-4e9e2f58374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8461c7c1-a416-473c-a076-88f84820194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb74ca94-bb4a-4206-bace-0ea6ea800471",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943274af-67d9-4f02-8f36-a283034f97ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ce9bae-63de-46f1-9385-831338045347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1c334e-b1aa-4abc-9369-80200c96569c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40cf9055-8ba0-4e02-87a3-62c266b0cf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1baef00-e6fb-44a0-85e8-c1d314772865",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b660c9-4e8d-46a5-9cbb-d55f45f23b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8290887c-2fe4-42d5-8284-de294ba37265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af084975-4f9e-4793-b808-9d6fb9d852b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5923f5ff-0bda-464f-9965-e8e94a47c08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3031f93-52f0-418a-babd-da1b81606b28",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7ef580-fbc1-4740-b5d1-d20160e29182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14214cc-399e-4ee8-850b-e1eed833dad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f7a74b-2d66-4e53-bd8b-8609e2d59241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9acdc151-081b-4044-bfda-e2462ec621a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c19284-7960-4b6a-9871-a95e6a664b57",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd9d2a-0ac3-44d0-a915-e62f72c13222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb89cd23-1780-42d7-90e3-8daea62f6307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff81869b-404e-43fe-ab51-553867a98ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77dacaf2-bc17-440b-a6e1-43d0ed944d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada83ac6-f8f3-4ad2-95b4-be8cdd086530",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abf7ef0-48ad-4e6f-8bd4-93092f1fb28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2280383b-ba1e-4377-ae06-489b888cc2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed619223-2740-431f-ae1b-ab04ebc765c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "212af61b-16d5-466f-b644-ddfe9b47c769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d328c-1bfc-4b7b-bc68-a70641cdab4e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb5b77d-f4b7-4e9d-b7d0-af36599f0628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d8ea26-cb02-4592-af27-181c78290ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20308711-4c50-47a6-9547-487701b11cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddee90c-552c-44b4-84bd-7863376c5ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31f5d97-a18d-49fe-9697-f70cd05ef736",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a601de5-0f22-4e28-999e-80d74697e68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17298847-f415-4a7e-8dab-3b1e5d3c5249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb1c9e6-bdf4-4424-9b6e-234c1c6a60a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4536e930-0042-493d-ad3e-5214edd31d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d55fe23-5a12-4aa0-a5ee-246422b66d79",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9e8902-70a6-4a27-9254-affbd0fd56d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f88e5ad-9cd4-4ea6-9b55-163786be40c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1c0502-2b01-4a27-92c5-6edb724a40f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ca43dc-00cc-407e-98e8-7e8a0e4548dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bbf330-b685-486b-ae56-98736bd2e8bb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a52f05-5a93-4951-8b3e-ae5252c0886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63538a8d-221a-4b64-b9dd-dd6dea14393d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec25de2-7d0b-4ede-91fe-94d26582ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a832ae-47d0-485b-9368-017fb5c42fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff58474-4447-4bb5-8363-2b858290a6e2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e98693-6f11-417c-bba2-cbf44086f2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c0eb4b-8a24-4a5b-af66-e7c5c6589aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd963ed-c923-4c4c-b2c6-fa0ef9b9c046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac30555-e01e-41df-9d4c-50db685c2f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293b882c-b360-4569-9d57-ba5ea0eaf872",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ce446-be15-48dc-a602-273c4531d8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8da697-9c8b-4f7f-8cb7-83f0359163c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20953969-0996-44c2-a51b-66f313d3b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6e5bc5-4362-46dd-ae06-81974c4323e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bbc86e-d7f4-460d-805f-1f034208940a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae847866-b8c3-47ee-b582-3364c9beb664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bd7cff-8231-4d81-95fd-838be0c4b9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bfba1c-56d7-46e8-8c33-6c59f6e85a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a50de6-4c90-483c-a090-f35cfac8536d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efddfa87-12b7-4892-93f7-7e2d2bcfedfe",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba53a50-5365-468c-ab6c-86fdbb18a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89d7b5c-2f8a-4c38-b95c-5d946bc055de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e172cac-bcc8-401f-a9be-f3cd6d6ca184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98fb386-c1a5-4a3f-822b-aabc04a9d9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b30a92-686e-482b-b221-5294e8e46410",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1eb35b-7164-4f76-bd48-7c380150c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d9f3da-6bb4-46c7-90ad-4dd80584ce0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0686f83b-5b44-4694-b142-e2f0c4bb74ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2ad7f5-9bd5-42c9-ace5-b7fda3a38cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d24d0b-2c35-4be7-94cd-9f3974287966",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c2cf0f-9b43-4cbf-9332-bdaf2bad4caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f4eba3-a11c-43ad-a106-8c37dd890983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d25600d-94cf-4525-8b30-3c2618f068c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "227b8425-55bf-4a8d-aebb-7a99c3bdbe40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1b8a508-8cc3-4731-a336-555ac2537689",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0c1eb96-6692-4915-bc63-543a695d7de5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dacddfa-0642-442a-a1b9-37459bbfda0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "92d5bc9b-ff72-4bc1-a9ad-9e9c60e9db9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b66572f-1fa5-46b0-94e9-b29ef1976a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd1205e6-624b-4559-9952-a36809262405"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31c6b933-f470-4198-96f5-e5de01ab0665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bff7ed4d-294a-45d8-b15f-050c59e155ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "750f8cb9-1263-4051-8ef4-fc6fefb2741a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ecc39c7-6e8e-417d-ac64-647809ddde71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14a06f39-bca9-43c5-8812-724ec5e1d0ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0187b46-46ac-419a-a4fc-4bae6ac46101"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b552e1ab-f049-4885-8bca-7e7e2be61796",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b931d0c-e4c5-4794-8270-1797a55e2098"
            }
          }
        ]
      },
      {
        "id": "bd362d8b-c616-4e2d-9f51-b33ab82f2da7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e6b169df-fb51-446b-aa58-20572f03f0fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e96d6f96-bb56-43d4-9a71-e68ec46e0d19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebcd7864-160f-46f7-a0c0-ca6870f01c08",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c787d27-d262-492d-b629-7015e207a49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c00a7e5-53af-4142-835b-1185180b9a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58d66e9-032e-4254-ad29-9273f6521ee6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0242c-58e6-4dd6-a736-631eee406e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23477e9-b2fe-408f-b80c-09a3283d3a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5605582c-dd4b-4b45-91b5-df03b00a465b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52892edd-e9ef-41ff-9aa4-f4cdf6244f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1d033e-b75a-46e7-b887-07ce6f761354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eeba510-7743-4eaa-b715-ebc898707ca3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736d013a-c88b-43cb-ad94-810e4b6d3550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5718fa1e-741e-46b1-9bb0-d00b99913ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eacbf4d-fc1d-4b6f-9cfc-496fb84db4ee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a655885-4693-487d-93b8-16c235844522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3a8ee7-5b6c-4faa-8f82-a5417a89ce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39893dde-cde9-489d-9652-8dbd67a58cd7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c72271d-0b1f-43dd-aea5-3787808f2554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab56245-c2a5-4ff8-aaa0-ea739926e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce548b0-c69b-4c43-86e6-56194e965418",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947dc6d0-71be-4bfb-a5ae-37731191bee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3eaacb1-4a80-44b7-a0ff-f324ee0ab5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98ccf77-b7b6-4b4c-b579-98e37a2f1fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78786d6d-c84d-4735-b440-4bbb5b43c7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee92d3a-bbca-4470-94cb-b345ac504eaa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152dd94f-3b5d-4698-9d75-3aa732e080c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30bb329b-1a87-41b2-8209-12460274967d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8425264-9d6f-444e-9f48-941db47a6968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c7e32c-2e00-4b5b-9044-269c4a2cd0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7d6240-532e-4520-a2e0-d06af7153835",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c77896-468a-412b-8527-610ea4fe7fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555262bc-9d00-4140-895e-dae262ad0213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75e1cd5-3ddd-4b2f-93ea-2b4772999125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a870f3-827c-47ab-afa5-0e4feb1cd041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e077580-7b32-45a3-85f3-8a725d282546",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1621d2d-61cb-4ffd-ad66-9a1aeff69ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214df16a-6a72-4b24-a576-ca077f2a7f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b0a097-d0ea-44a5-a693-935267fe625a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c74464-acdb-44f2-950a-710b5b7ef33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0e4baa-ac31-4596-afe7-58be830c54f6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a261bd-6c61-4595-a042-b7ce6416626d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0296d455-cd3d-4754-88d2-3c175d1ee5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e92a05-153b-4bc2-9c1a-b1bdff899194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf9ebc4-c4bf-4bb8-bb29-a6282e0ef3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea82d8e3-bbf8-4626-a665-8786914123e6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f88070c-f9c7-411a-8731-2e72cd4a5db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36389d72-0d00-47b7-8e75-1c49c783d45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceb16bb-6e45-49fd-a382-ca646abf2b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b980cdf7-4fbb-440b-9ba3-c8b76ce09449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab7c6e5-d4b1-425b-8ea1-5b5d1d1f40b8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3ca1d-2c60-422e-b5ed-b4e2313ef052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ae6968-7349-41f5-bf6a-7cf9674daa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f87311c-beef-493b-95ff-e0a727f568c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be0aa92-0177-42e3-9f4e-937613d6ea88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad177eb8-9eea-46e2-bcb1-843e00f59f87",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a95979-cb02-4ae2-8109-4cb541ed147f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15761525-1d4c-4c3b-a464-c422011b6aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbdf888-4964-4017-ba92-52787ad298a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead35c7a-c3a8-4e1d-bef2-b81243115866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5f0ec3-02ae-4454-9b91-9f4f5fb98329",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7f28ac-2dea-485f-bc4a-2ffebd6c7a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20669a8-58fe-48ca-8a56-82133b038606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90298229-7856-4d3c-84b1-a52d5695f6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61be6ba2-c03e-4d74-b912-ef0e8d184df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b567d9b-3e8a-4bf1-9927-1452f88398ab",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c013e1-6bd0-424a-b6b8-daa571ba6b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9947b181-22e4-41b3-a0d4-82ba4f258b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bea1192-7652-48f9-9963-bf04e032a51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e314bea0-cdb3-4fae-8487-5ae2c7ea4c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a7a16b-f916-4f72-83ec-4eea94a9f058",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb93cb6-b6fd-4756-9352-5dd948af7aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb22b313-205c-47e0-8b31-b9176bdbafc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774d194-0485-4304-8cd1-5986dd8ed1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0ba79d-470e-4dce-9ee8-8005c07a25c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653b655-7267-4448-a16b-57a7c8a4137e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3809ea-3ff2-402a-b0d3-21cbf1f6748c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13f71e4-68cd-4e57-93dc-f6d6ec9b087f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edf8250-ef7e-4e1c-9160-c781e950f55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bfd0f8-9bdd-44af-8906-cbe40440a47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff112bf-36ae-4d05-9ac6-5424d0cd1d62",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8c213b-3ebd-40f3-970a-4a8b4a9bc685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1aefa7e-4b35-47ea-bf5e-df93a850bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603797a-69f5-44bf-b425-90c4c4175fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059408d9-99db-4cc6-befb-9ed64003d67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94ed76c-f992-4ea2-9451-3ee0f862c779",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95de7146-52af-4abe-8ff2-a2beac775004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a252a28-3bde-49df-b74e-482a855f52d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20582701-aa2c-4421-98d3-e9812a4b927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9635cd42-e828-4306-9dc4-e669437511a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb377b5d-4281-42ea-9ceb-bf6aec85da67",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84fc7a1-1334-464b-96b9-8a82257f0eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2396f9ef-c284-40fe-b208-ded8c89bbb5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537a23dd-657e-427a-9d30-4420d461f98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e157f5-2d42-479b-a2b6-6519ce14aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4befbd8-8ae8-4abd-a466-09455f9ff6dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c3c08b-7ccb-4262-b7da-f2d9ba8b55ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00a2db3-41d2-465a-a2d6-9ee97e62d6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13658f0a-0a4a-422f-b627-5956f898507b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0419d5-4d21-445e-8c9c-7d2c67faab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d1558c-9082-4fb7-af9c-dd5750df7a74",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac99735f-a682-4fdb-b894-39927d0c46de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a2f47e-88e5-4f70-bf07-dad5db3af131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84ece29-c508-4374-89ba-7feaf51a59ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10bcd55-ed6b-4f16-86a2-6fe645c935c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df798d6-8d0a-497b-ae50-2ec8a4ab62b7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17466f38-4656-435a-8998-6b8340f94373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a5d529-d44f-488d-9c0a-22402582902e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48667a-0f58-4e88-bdfc-3b120dd509cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647ea213-0eb8-4a40-993c-38fd3823042b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c6649-5b1d-41ef-81e7-3f669a690f9b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a8e82b-87b1-4ea4-9495-a75bac62831b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f33ffb-7296-482f-969d-2943c344edc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24336a01-be84-483a-b9a9-882ff9fd2298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff13725-530b-4d60-a245-bceaeaf373a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3586a45f-d7fa-4b0c-966e-feb997919ef0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bae86b-5808-492a-8015-3aac6f80b24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91aa26d0-3bf5-4f14-b8be-3be2b65fc301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f5de11-3689-4aa4-98c9-0aca9dc71d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23b4328-e51f-4707-9f94-6d18b2713c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c97e4-1f8a-42b3-a839-0cea7e6ef311",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44365b8d-5653-4a0c-8695-c1c743945911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e07d38-9ce7-4d24-8bf0-5675b9632e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0df5f7-331f-4bfd-9c07-2a5c8db58a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf07a3b-779c-4891-a848-8ed7b136b403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fde5988-e4f4-4dcb-943c-fd41371c0ef0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edfc89b-6587-4a6a-8adb-df7e635d38fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8226ca5-a7e9-4ca9-9f8c-c040a5b33e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf89cde-c8e6-42e7-ae1e-458992e8065a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc65f64-3bdb-475e-ba77-fe2c074751ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bcc26d-ef9b-446c-a07e-0ddd858d7fbe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266dd09e-f48e-45c9-bdbe-59d22be6c8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceda6c0d-f2b7-43fd-847a-2c181f2b15bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09810a34-2b44-431e-baf5-1ab51f59db74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d59699-9465-40a1-a988-dfc18fa8773c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2748a3c3-93d0-4fa7-b470-70ecaf5ac6af",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae546bc-2bbc-4ccb-95cc-4e4723b43acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da059489-7da2-4a65-944a-ee2d364367d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e47bf51-bfae-4e78-896a-9834d3074401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7f8ac0-36df-4157-af2b-e077a4e9c4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2922fe64-c414-424c-a01e-5bad5ddc170c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d2470c-3bf9-4620-bd22-035940824935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725915bd-b98a-4435-8d37-3e687aef0ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ec4b97-de6e-4dd2-8e4a-03afae196c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4714e8c2-1480-4672-bdc1-9c651c10b4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf57cffa-ea5e-452d-b9cd-b9083364f24d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a74cac-39ab-450d-9e2f-a3d30a06c609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba844b6b-1479-4218-9391-e7a46e26e9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5403d0b-9741-43e8-87ab-387b88a646f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea89615-1fe9-47ed-8fb8-5b5ebf741fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa03976-ec86-4b47-86a7-7758fa09bea3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75862d83-6314-457f-8c81-83a04a0eba40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2da4f6-7298-4b54-a8f9-9fb737305e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bcb202-667d-4fe9-b6b7-9466ba1750bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a6086-f010-409f-b3a7-b6198c93bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce877eae-944c-4e38-98c4-cf6d1025145c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c47366-5aaa-4dbd-bbf0-b45c89a299d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843cb845-4536-41eb-8857-9fce449c19da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd67f2e-afc1-4a46-8398-ed26644f53c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d6148b-678d-467d-a2cb-187f6180ce8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e4134c-060e-443c-891b-ae4156efd6bd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a41e7-e486-4893-9ffb-ebbd202e2f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a20cc1-48b5-49b2-bc32-9e0eeec6a208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f813a42d-9384-4cac-b396-b0f2fc962b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247219f7-9523-4a0a-bffc-49da1fbb2a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0ba875-aa0c-4dd2-bd6b-235791abd38e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc86333-d860-4b11-b029-8c3543110dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4f67b1-f3c6-43b5-9d37-a4869d1cefb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daae08b-1035-49ff-a6a0-e5b56d063b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c728524-b0d6-4746-8f74-4bfece8f79cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53ad816-6aeb-451c-8e6f-3b281ddb0b59",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2a2d6c-4501-4a02-a9ab-1b6fefcc82cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8da70e-2b62-40de-b132-dab399e81c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb8c471-798c-4b5f-b976-20866fcffc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59fee30-a36e-4990-b3c6-34749c026c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b04941c-7219-491d-8cb5-4b2648285280",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f7f970-ee0c-4e36-bba3-17231d7bc987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9aaa688-86f8-4e6c-8f64-1edd1a955192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e286a4-cf69-4c20-a4e4-047adb241f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80d7ab7-6a8f-49f5-a86f-9b1dd8233c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0f4cba-bc73-42a9-8d0f-811a270de448",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe290b-a526-4f0b-b9fe-3272c5ea4a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd9102d-54fa-47c5-8bed-1724ac85f7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54019bb2-5a9d-45c1-905c-22cb4e217d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06a6d95-1a77-471a-af3e-0c7dbc3d8fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6864d1c-2a64-47a6-ad1a-a9b9d318b791",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e8d658-5967-4698-a021-a94998b257e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289c4832-0a60-4c49-bc17-83c8fe1e04be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f83b547-e099-4e70-a88a-0d9b921c6ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0338b3f9-a0c3-4dbd-bc38-46391a583fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efce2789-244b-4014-bdfb-1ca3fec8838b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bdf77a-d362-41fb-a4df-d1a9eb4473e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8681a1-5212-49a9-a56e-ca67e5db15be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f954a0-2d22-4593-b76e-1f3f68c55ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f243d80b-ba85-4e46-a131-cbb79254e006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c53efa8-4b51-45cd-8167-7b1da19b7c1b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332b0d5b-6135-4304-8c35-389ef4c1a97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c696064a-bef7-4342-8512-b149aaa2a4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac802e-d712-43c4-8d28-3ed59ec1fbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e009092-7d32-4530-b999-c670d95675ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588f9ffa-b91d-4446-8a82-b3a021fedda0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f72da9-961b-4261-8bed-2979f0e081b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7489911d-3cfa-42f8-a78c-4613a3135e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7d911b-3a73-4336-8ff1-03c210e373ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a390161a-419e-45fa-81c9-317fa9ecfda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61970214-add6-432c-9e51-58d7cd77942c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b5af0-efa2-4d88-a2ef-b3282a05adfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8bec67-fdcf-481f-8458-0d8c23733190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e2154f-c481-4646-9626-6920c9fb5f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92cfab4-ef46-4931-8300-5630743eabfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d049ce-8075-4099-9e50-c4c440013937",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681d8af1-3015-4787-8a3b-ac141923317c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d99473f-ef5e-41b6-a08c-d1c9845c9404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04dd469-ca15-4779-a6f5-92419c557128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da1ade3-877d-4dd5-a985-d5529c3cbcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43606a0-8891-49a6-9bcd-0a4421adb637",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fc9b31-4bfc-4d63-9f34-493993f4f413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd25fe4-6f11-43d9-9a0d-63d7a6273874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e30c79-81e0-4ad1-8bda-5196b6fe26bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d1724f-1062-4e03-aec5-11da30604a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247f1243-cd4d-4230-be95-9ae2d93541df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d852e2-3729-440b-a06c-67058559a26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b35b20-dd5e-42e6-8dd1-bcad561c2e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793a807a-e166-4b64-8355-b04445db4da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd31d85-8f73-41e5-89d0-ec25475ecd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04251793-9341-4600-9c7f-9d1fa5dca789",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d99ca1c-d372-4fc0-a6d5-fe4d52549562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18190b6d-43e3-4f92-98f6-71b70147335f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a8d41b-23ee-4dd3-bc08-53bd7f217438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02b4cbd-1705-4425-b2fb-dbc95a12fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a99a46-172a-40bb-a961-44b3306f7a48",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89acefa1-4eb5-46a0-b190-f006de748856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbe76a4-c5de-4727-8edf-af7a3117b1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273a5a17-a5ba-4f83-a395-e6076dcccac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28966cfa-48e5-4b15-b4c3-2649dee34572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699b6fad-22e6-4952-94d2-85fa83057b9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a685c7-63c3-4c29-8201-a23bed46c449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dc2f48-bd90-4013-958c-911ba2f2e79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c47ec-52c0-437f-be7c-41b40a84f843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f946b059-6d96-441d-98fe-258c70edb3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92361e4b-5e50-4b9e-b486-9ea1c6fb7c67",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a9419-4e84-441e-ae1f-50ff60268440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d156c0b-0637-416e-b49d-c23c59ad18ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee87147-d100-4e8a-ab1b-5561e3664d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea1de39-20c5-45e8-ade7-26740a9c6cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d082a1-edb0-4b02-bac0-b2526d42dd83",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c77fb45-1e62-46fc-b212-b1e73a1e8c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a617006-6439-4df7-a023-5693e0256b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd415d5e-f5ab-45b7-8615-fee13709ac40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2145cf48-a7a0-43ac-b67f-37cd39a00bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8e5a96-31df-4285-9b78-5fc7bf2a54a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0d6964-b903-421b-a8bc-911ad5c61e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4872efa-3cd4-46b7-91c7-e83ee346f17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e6ee76-5b54-4240-8db9-587731a480c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0c25de-43cc-4e62-b101-b19d5c1b57e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd3829e-9641-4c22-aa2e-629ebcb81654",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be9e980-62ec-41ba-a0cf-5d720842f837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9918ef0a-f06b-4193-8712-30974e3bfac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6129d6f-0862-4377-9a3c-56ec32531196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0c330f-f254-46de-8c77-f836c847c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4579f3-2478-4abb-aa8c-4be374c604e3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ae4f03-525f-4663-a482-0b82a088636b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeec9b8-e809-4f58-9cc6-a719198fd0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799bb400-555f-4f58-b956-42974008062c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b64142-cea4-4c20-ac1f-680f1abed095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9537b8b-a2da-4c6d-9b62-0b27cdb1cff4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9804642a-7f53-4bb2-8893-4c9308c579a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce056a2-a9d5-4e9d-8058-9492e2d6965f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5127c5a1-69aa-4558-84c2-36cfd06567ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e5fcb6-24d0-4f6d-837e-e81759e520a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0312bac1-ef8b-431f-86c0-9b38602e0a94",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79755bcd-0e15-4d8e-a1e2-4cf8f8a8671a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585fdbe7-1771-4de7-947f-599f5addd565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32c495a-f6db-4ccf-9b3e-ac93d13d6a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925a9e87-4d2b-4c23-bc84-e99e0241678b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0777a22-6826-44bb-b1ba-f994d68f2c11",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ca53b8-2063-494b-8db9-c877d00a8056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34559d2e-4e05-4a31-9bcc-4b200297412d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78cc2e0-80d1-436b-ab31-1df4ab0db233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b772158-3b1e-4f4c-8332-d26931ce95bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69acedb-2600-4de8-9c0b-2b511c1502fa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512828f6-d9c6-46d2-85a3-6224dd67d35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d348318c-b947-4138-b843-381b9ac0157c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca6d25-5654-4dde-9c69-8b6d3247bbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3444f9-af54-4bb6-804e-871b3f0f0e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77ec8a6-1898-43bc-9df6-5f60189c45ec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac5df40-9f2d-43ef-8f7f-c576a65918aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9b4479-fa72-46d9-a0b5-52e11c357a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b4265a-3678-4df1-b214-e86ee1b5f548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93a74b3-8153-4d9f-9c42-6350f3a03a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5ba34e-5bdb-4132-b6d2-a964572326ea",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af20c57-643d-4913-99e3-34c8202225cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce141755-30ea-4ad7-9288-004397da3d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda7e276-4064-46a5-9f08-29539b8bc8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c712298-cde2-4df5-ab77-5c2dc5a119da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d44fd7-247f-4535-ad4f-b7c8e5729b44",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2656253-b1b3-4ccd-8610-cd3aabf36839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0600c953-7b1b-48c5-a671-df7417e85897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8f5252-0f00-4bf4-90a7-ae2f01e7e21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb1990f-986a-4ff9-9ee9-a2ef3e473052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f86fe3-d616-426e-aea1-2afedda701a5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d57d5f1-6ee8-4b23-a5ed-3a0a0e497ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1ef9dd-ffce-41d5-93c2-1fe301532a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713449b9-bc6e-4a89-bd18-14874e88ae21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760289cd-198c-4caf-887d-b2727fa06e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794202fa-bf20-4b6d-bd3c-cbc86b04d5a1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c05d02-9d52-4a74-8426-268e499bbabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc60b321-f22b-43c9-b27a-33673ae5305e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621e9058-e246-4461-9bab-8934ab4e62b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9288e52e-c652-44a5-878c-eabb0180d62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a223f4e-3095-4d14-83c7-f96b8ce5bf2e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e172102c-1331-4f6a-98d3-7546c15b0095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799fb3b1-134a-4084-a3b4-21e66b8cc726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01613c1-f1da-4b4f-9d7b-9c4c15399b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609c4d34-6059-4d4b-94f3-8e2609f50ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21b09d3-0c6d-4f83-94d8-45a906673189",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f18a67-95a1-4a99-9c94-373244b06bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d373e8-5db1-49a5-a643-a5690c81fea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d8479a-57df-4390-865d-db6c21b1a247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0223bd3-ad2b-4ea0-8e33-f95f07168fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6d6273-f5cc-44b3-b7df-bcc5ccb6bc7f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af34b05-abe8-4476-8892-f76a0a1a59d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53deb00-3a08-4d3c-abcb-57b6057c765a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15796c68-5c32-4904-9b5e-6a3f7a55d7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083db0e3-3fd0-40aa-a36d-348df0ebf5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4f0a4c-ed2b-432e-bc26-668cb4d22bc6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e37b56a-53f5-4369-9d1c-4c70cc674b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f3c66d-d97d-4d55-8434-8875a1f1abc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c136f03b-fe94-42ca-8870-8aef954fcc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd85cf30-3622-4f62-9f20-f8711105d8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cb1fd6-a7e4-4b26-baeb-f2a753e8faef",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70566d00-d4da-4a6f-b48f-ed1848d80d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407cfa83-3fd6-4237-a7a8-6cc18b0c31aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6386f791-2359-4306-bf68-e96bfa193c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac497b80-c20b-460b-a752-b1c4ca496fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3873fd-4efc-443a-9d0d-397e2954006e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd6be24-0196-4f6b-b2a8-02d606a81c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d72b4ff-f611-4a82-9aa0-07dc1bfbaeab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13b4530-ca27-4a0c-8e13-0b43c56b3d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e93cc8-7c29-45b9-aa6d-744cbc9b956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab25580-53cc-4864-b756-af6405f679a8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ef29ea-b80d-487e-84cd-886c07f8879e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d0f2e0-c2e2-4f41-98a7-a226c05694b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a425f903-59e0-495b-a33f-ba0b17ad67a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b12460f-522e-46b8-8aeb-7aa74e88214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415b72e1-fb86-4b78-89f3-a8e7804d1355",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e66257-45be-4847-ae0a-3eeea28028ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d77cbc-4bdb-4209-b5c1-9cbc81d9f1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0575e97d-8a93-4d03-82f1-e9b47ec933e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be366d05-4cfc-4edb-89f0-e9ef2dffc2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7238a1f-6452-4dda-b3b8-a619e5b547ca",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20667ce8-8241-4c44-acb9-508e82af7959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8f72c8-e3a5-404a-b5ec-6af89c12737e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcf2043-632c-466f-ba82-1be2db422c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a04f63-a1e9-4cbe-9d68-e43589d9e408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7c5e96-2c47-449b-8621-ebc81eae7d6a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c19a00-1d20-4cd3-bb9d-d14c7cb29046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8858d8-f3b3-4662-b345-759ae81e6ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0461e21-d4ac-44fb-b34d-79948e7d417e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27f4a8f-f82c-430f-87fb-d1eb77ff2b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9f66d5-1311-4e6b-a07f-a6f2d1700359",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e3e019-010f-42d7-b0f7-7208399e812d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c1b7eb-217f-4003-b437-0e619947cc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ad7634-b1b4-4f37-804b-67b83d8b4df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771226e2-db65-4e4c-80c9-ec0bce9125ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b40c0-ad10-4e3f-870b-efb2b1089fe8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be7a5e2-ab7a-49f6-ac52-f2656fa78b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb0537f-f4e2-4e07-b089-2b3336fc2711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fddfb4-00dd-4419-ad84-d7061f04071f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d011c4a0-b43f-434c-a588-6124527b14ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf806ffa-efb0-4c2d-854b-bdd57547c5b8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2990532-9825-466c-9d4d-606f1897c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17f6a40-a65c-45d7-95ef-069b72bac4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0a5d7b-1045-4968-8aca-417e760ac3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67397380-cb04-441e-96ae-ffc5161f1878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34383c3-8f4a-4703-a6cb-22b402cc4d3a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dfbd82-27e3-46c5-b562-aff4407e0c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f1e9ec-1157-4f9d-9e28-d35f22cd0e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ff69e7-c573-446a-b44f-102c1ca8d525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce02255d-2e73-4482-9527-0765775b0b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782d2600-0c95-4329-b055-26db31229da2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4ca6ec-f256-4955-8aaf-9ad1f67613bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef3148e-7d53-45d5-be52-9e7252f847d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b417e6b5-1fa4-44eb-8d2d-b777398d667d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e72c29-5854-4925-81b6-6fd7070262eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a4bb08-da0f-44a0-b0c5-351e9949272c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb44aba-24f6-4c3b-9e8c-3413a2234701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08ee34a-7a1b-4d20-89b1-43d3566a004a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17845b42-8784-431a-b09b-c369e45994b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356366b3-eacf-450c-bf6d-05fca3c21774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecde7ab-0b25-4ff7-bf5d-a21236e3d624",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc70edb-f5b4-4580-8758-d638771d0812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc88fe1-3209-4da0-af9c-efad889ac365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37398673-186c-4117-ab95-73d7339649e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b244fcd0-1924-4ffc-a5d8-ec50b53b056c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ef9ab9-82ae-4fd6-9014-2b949e666a3d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ba7fb0-a388-4983-84be-8a5398baae04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4690618-cfcf-4269-b00e-935bd4c893c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63437596-5c91-4c35-9048-ebae704a8b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fb2ffd-7125-4c93-9dbb-f85c7a617553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f021381-6d9c-4574-bd25-4b9d05a260e1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d0077a-65a3-4278-aedb-502c1d8e5192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68dfef9f-6773-4ce5-a23d-5c005b6bb76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ec5907-76be-45b8-a5b5-c4fa1c50f385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22650735-1482-4c93-9b13-eb36d68af699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8d2bfc-a365-4d09-b878-32a9b98502d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616026c0-66f6-47fa-9e18-b733363f28f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e850f4c-c2cf-4116-8ca5-5b7677d7084f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f659751-9287-426e-b5f5-846b102e0425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cff7894-5e8b-4e33-bec1-e0e3e62d5a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c33457-c9b0-486a-a1df-aeecd67cffac",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b6794-f9fe-424b-9d1e-86cd433134e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b90f27-0f54-4f05-b81c-362bd3f1f43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c7ac68-f229-4397-bf9c-f0bf0d86bd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9717247a-7a13-4632-a203-e8a20cbf1b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3468bb2a-6245-4668-89b6-5c6688bd5d4b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196f9f2f-b7b8-4c10-a307-78cb728a8ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25de70ab-18e6-4326-92f5-52a7ce52a51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61950e1c-3198-4194-8917-51c5b00b77a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90c46aa-4466-4a33-aee5-551ea6741900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df68a984-e472-4e02-a331-e0084264c0ce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e400f086-ea70-4db7-833a-4147fcba0e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2612ff7-4138-4489-bb34-ed668e28d4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7f0a86-f46f-4c7a-9b6d-99622d4dc921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dbb9b7-24b2-462f-b833-c993ec51ce71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bb802b-421e-4326-aff0-8dfeb8a9a1bb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833e665b-c0d8-4d24-ba17-40809172cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea7e4e3-d978-4026-961f-24ddc4a88fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef4db0e-e5e8-480b-988b-a8803854c622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8525360a-26a1-42e5-943f-6a2dca8a9311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9dd76d-317e-4507-950c-bac31bbceaea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d39df7f-f984-4aa8-b1ee-381b650fe484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d608881-c5e0-4609-a8f2-7dac814512d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4361ea-4f10-4492-a0c0-80c074c3aab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009b774e-5e30-4fcd-af7e-90900159a92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6c7a59-49ef-4cd2-8f35-bf77e2c698c1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f319a78-26a3-442e-bfea-e7c1b7ac1a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f9255d-4c4a-4a3e-9abb-2cb98f16bae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8a8ebd-00fe-42b7-9ecb-59310811ca72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e52836-7873-4b33-b809-a9d1cc4dae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83554bf5-fe8a-4dee-9147-1d7ae17cb8c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0cbc77-f510-4789-9252-8974ce7cf38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a879b307-8e39-4161-826e-87242761a7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189c0696-0d76-4f13-9ba2-cb273edcfb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5b7217-22d3-4e24-8ec9-02d1fcbb3008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdff426-9b46-442e-9851-0276b964a3dd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b209e8b-4fb0-4e04-b692-074b7a70d599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a807b95a-08b9-4fc0-8acb-ba06bf521d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d79ede-51e2-4263-b59b-46eb91e9bf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb60ade5-cacb-4573-8d28-217e6ef51ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36c8410-c691-441d-9a47-f4433b1fb892",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790da44d-d8fb-4e8c-9254-199eaa16d14e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded5d6e7-6486-4dac-aaa1-3b05d747ece8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7249ae1d-bbb2-45e3-88db-2ead555690ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9500de-e03f-4dc8-88ef-6f7824f291bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b7d727-1eaf-4b05-a892-156f277558e5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0547c496-f123-49c5-b63d-b14e23d2d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f9fac2-1b4e-4639-b633-01554494ecb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c2a328-3e1a-43fb-96ee-603bcd2eadda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ea03ca-b81c-4258-b4c8-6d21971304fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afaa76c-26ee-4d2e-b046-0876d39afafa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf67b2e-48e4-4a28-b935-7a5eac691f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d32de7-c8f5-4e51-a203-5910ec410612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce36e3bb-b8d8-4ec2-91f6-d65de837b83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5583af82-1615-421f-be9e-f2b616800d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0eaa6c-f0f1-4356-b5b4-6d8ca30d19c1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87932524-df60-4541-9147-321ec38fdd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f2702d-edca-4269-85a1-8ccfa829ef3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97682369-3a81-4a42-8671-ff85fa6e9448",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b9028e-249d-4848-a564-281349fb954a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c5268e-f9b7-460e-b0ad-93503c5dd031",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489395a2-1955-4383-8fb1-8d558a36aee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a019efb-b8bf-4dbd-9134-4ddc475c3e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6728aa-9885-44af-a9b6-6ba24e946a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a72075-fe2b-4c19-87db-7a4d63cb809d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618232c7-73b8-4580-8dc5-a23b26f7b9ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d250fc6c-b80c-4bc1-a0a7-b7c85f6d41cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a98ddedd-a4ac-4b41-96ed-44d7d690a0c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60c78f10-62ee-4ab0-b7e3-7c064650cf35"
                    }
                  }
                ]
              },
              {
                "id": "c29762e1-1198-4f92-b575-f260f40f186f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b19c4bd-aced-42c0-a3f6-b45a1f546c08",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a13884-c7fa-4b66-9e77-2c531cdd3e76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70d0140b-5f0b-484d-8eac-9e69c27a02b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff13c923-c575-4ee4-a4d5-eca68fcc71b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e55cb0c9-04f9-4a7b-9466-997b220322ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89bcbef2-bc74-4cb0-a6d0-ab54025cd470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b46d085-c7cb-4d75-a275-de070ff7d0ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "075bf7dc-d36a-47b4-af9e-407ba07f5f64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "975fade0-8f7a-463b-af3b-6eb6324b162e"
                    }
                  }
                ]
              },
              {
                "id": "09c1613e-53a9-42eb-892c-51691a5d1752",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6659dd00-da70-4da2-b03c-6de998be61d0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2b813f-8038-4a42-bc0c-820e73d024a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ce60a7ef-81e5-4520-9a94-622735197a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061defa1-4c47-4fa0-b816-5658678a43f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b9573b-e8a1-43dd-bd6f-c2c5a5791f44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b34ac0e6-61cc-4284-b5d0-aba73bcd1367",
            "name": "Positive Testing",
            "item": [
              {
                "id": "160009d7-49a7-426c-a63a-409fb4c5c861",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f18094b2-dd46-4ce7-9f03-432cc2d7e3a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5ec4fe8-bf46-44ba-817a-3e5b05a91b49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adba89f8-33c0-4ef8-a07b-03af271b1bf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1217b504-de2f-4b66-bf06-c8401ba643fa"
                    }
                  }
                ]
              },
              {
                "id": "51f81d74-8460-4e3f-bcdf-45f3498fe141",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a980b1b1-e3fb-4c29-9301-7d27086b9aa3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "669dda3d-d03d-48f0-8251-7cba9297f0cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f57d3b9f-b37a-4f85-b81f-f7afd8a8e134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5597e686-26bb-4594-9bcc-8206e16ca746"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22162826-aca3-4415-8839-4a31d80e6ce2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e432add7-6ed4-4cab-8710-f950a482c60e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e76f94a7-1689-40d8-a323-a5af007c78fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99cad69f-3b8d-4472-a358-12f40fec177c"
            }
          }
        ]
      },
      {
        "id": "764aaedc-8843-4eee-bbfe-e8400ded7cbb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ad69c0a2-de84-49a8-9c72-04dff49aaf1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33a99b17-e2a0-4c58-b598-0259b4c844a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e26a6598-b125-4db1-b4f3-01d513e12639",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0259547-23aa-45d5-94f4-98204365b261",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "914490c3-6caa-4c55-9246-3fd029752273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beb39fb-b38a-4f94-a8bf-2d2f4209068a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a51f73d-744e-45b3-b91f-36ef845f133d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83de86bd-2d60-46ea-b6bf-0dd40b3a10e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f706615-2c30-4c89-8609-010e661b1a49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4bdcd90-9607-49d8-9a7b-2f05b23bed66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "163943f1-70bc-48ad-94aa-f188d7a7bcc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83f68194-13a5-4e11-a84c-4306545a53a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1b384a13-e0fb-4262-b010-ed69c867cf71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de0316e0-9ffd-455b-98bd-628169e9310a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93de1557-f1c7-40b5-ab5d-30a8788e5138"
            }
          }
        ]
      },
      {
        "id": "e569e816-5a92-4bc8-9e18-dc10c1a075af",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "75aaf10e-d9ab-412c-9ce2-ceff1f19e06f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60f6aa99-638e-4567-947b-0d5bf1c34a53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9145e69a-9709-47de-b71d-5b8a5c32eeaa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397045ff-c982-40ef-bd92-903c3b13b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "019d7c11-cc6c-4408-9e48-dd7e783879f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b969dc0-fb4d-4dc6-8759-97aec5252658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6289f210-979b-44ba-87cc-f510f4c28efc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9ed2ec5-f1f0-4f04-91ba-c160fc8516fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb873791-3f94-4693-9731-7218a99e3c71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9b48632-52bd-44a1-a908-07f394c66100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3c7f999-69b6-4e95-bb4c-473c4323b138"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28310a2c-cc26-486e-bf21-47cd80cc99ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20e3eb0e-4a0b-4998-905d-0873b278dd07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31ad30e9-3876-428e-8b91-62c02bfe0577",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "078d91cd-90ef-404d-807a-dcb99116da18"
            }
          }
        ]
      },
      {
        "id": "4d58018f-906c-4149-87a7-7ac0b98971a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9b8b6fbc-0b5a-434f-9975-a8aac1b603eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ff3c237-3052-4435-a3a6-8d55fb1e5c77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d458df15-4ba3-410a-9a62-d5b7569dfd28",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360de68c-a0b0-45e9-a013-9e2733b1c3d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980eb8b8-2008-4fba-809d-f9a0ff4fac05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c1d4cb-d248-4d24-b763-ddde88140950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0961156-7958-4cd5-9902-7e7a1e55e9f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae56afbf-2e77-44be-93de-bd6bd610e0c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "401b0ef0-9baa-4d5b-b196-7ef542188a27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c7bb3da-3f3e-431d-877f-d3f1490879e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a82c9e4-0590-4ce8-a76b-e358fd06a9f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ea17e7d-4874-4fd7-a2c8-f3166ecac3b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e062954f-b87b-4568-ae2e-a52a994cc0ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88f19aea-be15-4cbd-b51b-a3aa855611a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92622132-e2da-415c-ab49-74274aeddc66"
            }
          }
        ]
      },
      {
        "id": "35c8b5c8-de20-415a-be65-d81bad22d8ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f7c2d82-37ae-4f9e-af5a-76bc5dbaa531",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90d3cee4-1992-4cf1-82dc-280c5e079f9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "423f568e-5f15-4f75-9023-d0f2ecee5893",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76fc2c14-a7f0-49cb-be8f-26772bd29a23",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b4d3908-5a2b-4053-a94f-99b7832465ac",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.098245614035084,
      "responseMin": 5,
      "responseMax": 262,
      "responseSd": 22.50826352135347,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707438793088,
      "completed": 1707438805565
    },
    "executions": [
      {
        "id": "87a1ff4b-8dd2-482d-b2bd-a6a7bfb476c8",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "97e28371-687b-41a4-81a6-08b6698bce98",
          "httpRequestId": "33658d99-9dc3-4b0c-af61-f327582f01b8"
        },
        "item": {
          "id": "87a1ff4b-8dd2-482d-b2bd-a6a7bfb476c8",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d4a84cd6-45fe-4a79-8546-12700638de60",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "f615b6eb-fec0-4c93-8704-cc61921e1437",
        "cursor": {
          "ref": "9cdfc5e1-162e-4f8b-a349-7afaeff527c9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d64a602-a4cf-4748-8978-415be28f5979"
        },
        "item": {
          "id": "f615b6eb-fec0-4c93-8704-cc61921e1437",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9a75bfcf-7dc4-4a2b-8d28-e203fbeac7e2",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "b231f011-3f58-41b8-ac23-a51f940f9d9c",
        "cursor": {
          "ref": "70562516-6322-4287-89d6-658bd5779be4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7a029058-4ef8-461e-8ce9-f5f739d0e827"
        },
        "item": {
          "id": "b231f011-3f58-41b8-ac23-a51f940f9d9c",
          "name": "did_json"
        },
        "response": {
          "id": "824122dd-d2f2-409e-aad2-4f003d2ca0b4",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a41e4-768e-4bc5-ac54-5dc7872eb9a8",
        "cursor": {
          "ref": "78765c02-d9a1-48d9-9912-56295113a2fb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34ee645e-3316-4509-8f41-187f333e2cda"
        },
        "item": {
          "id": "706a41e4-768e-4bc5-ac54-5dc7872eb9a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "1a947fd9-f99e-4459-baff-96605743da39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a41e4-768e-4bc5-ac54-5dc7872eb9a8",
        "cursor": {
          "ref": "78765c02-d9a1-48d9-9912-56295113a2fb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34ee645e-3316-4509-8f41-187f333e2cda"
        },
        "item": {
          "id": "706a41e4-768e-4bc5-ac54-5dc7872eb9a8",
          "name": "did:invalid"
        },
        "response": {
          "id": "1a947fd9-f99e-4459-baff-96605743da39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8c3eed-7f21-4ee9-85a0-4e279f58dae7",
        "cursor": {
          "ref": "f566cd14-c84a-46b9-a47e-e53c0fdc04e7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "100a8238-72f9-4b5d-9fe3-30377aac0b36"
        },
        "item": {
          "id": "eb8c3eed-7f21-4ee9-85a0-4e279f58dae7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "94bd3b86-aba6-432a-8cb6-10693a359418",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4785413b-b123-4515-a406-eecb73173065",
        "cursor": {
          "ref": "a8a6d8f8-54b7-48ee-b07c-2be2274f61d5",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "edebe983-d576-4706-abff-4d360ecd4927"
        },
        "item": {
          "id": "4785413b-b123-4515-a406-eecb73173065",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "96d1e981-1f65-440e-b631-4a45ddf0053f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c7b805-d7a1-4cd1-8117-563bad5ac504",
        "cursor": {
          "ref": "00967432-dde0-411c-b508-ead36e53f3c4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6f5afbbc-a7aa-43af-a823-5d4728679a33"
        },
        "item": {
          "id": "42c7b805-d7a1-4cd1-8117-563bad5ac504",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "02df89d6-e706-4204-b7ac-c47de3cbb247",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07501d53-b405-4d0a-8519-3e46ccd8437b",
        "cursor": {
          "ref": "5a91d875-97f5-4536-97c1-2d1dcd4d2795",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e62ea8bd-3852-4fb3-904d-819d7d60732e"
        },
        "item": {
          "id": "07501d53-b405-4d0a-8519-3e46ccd8437b",
          "name": "identifiers"
        },
        "response": {
          "id": "03e42c42-978d-47c3-95ba-d2a5205fcdb9",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424f11a7-d545-4720-9119-77d387fa2689",
        "cursor": {
          "ref": "ca02515e-e24a-49e0-9018-a29938af1264",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "12980729-c630-4797-8fd5-77bbb6547032"
        },
        "item": {
          "id": "424f11a7-d545-4720-9119-77d387fa2689",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0b7c61c5-0b13-4ac8-b50e-d8f678626bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63334699-292d-4707-a755-22eb4717baf8",
        "cursor": {
          "ref": "9176e80e-74fa-43a7-9df0-ce44a5608d97",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8ea6b32c-d658-45a8-9ee7-96002bdb1733"
        },
        "item": {
          "id": "63334699-292d-4707-a755-22eb4717baf8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6ed42c45-7e95-462b-af7e-dbaa523f0091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab30f09-dd0e-4bc1-8bb2-e8fb32c7fe53",
        "cursor": {
          "ref": "d3dc5ebf-97af-4900-85e6-6383c5442887",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ccfbfc58-3a2f-4c4d-9be8-01b5dd2f43b4"
        },
        "item": {
          "id": "7ab30f09-dd0e-4bc1-8bb2-e8fb32c7fe53",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5439b081-e00a-47b2-ba04-375156628d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa31306-16c5-4a25-b05f-3bca2b15e0cc",
        "cursor": {
          "ref": "6117738c-4c8c-4668-8d1c-500097b4db2e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b84aff7-16ea-48af-a821-5661cfef608f"
        },
        "item": {
          "id": "0fa31306-16c5-4a25-b05f-3bca2b15e0cc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "43cfc184-22ca-42a9-9486-48e1ec9e91a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96148310-9d51-4bb8-a4f4-9edded2bed2a",
        "cursor": {
          "ref": "2fceb175-d56e-4d82-a05d-e8423bf88db2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "18604cc9-6ee4-4022-b802-62398f627ecd"
        },
        "item": {
          "id": "96148310-9d51-4bb8-a4f4-9edded2bed2a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb414ecf-8253-4126-8ad4-48276ebf1816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6873b3df-db49-48bb-a49c-c1383e0f707a",
        "cursor": {
          "ref": "51f24eee-2743-451d-81bc-ab729a70b1fc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7239ac9b-6e62-4924-ac06-2e591956f773"
        },
        "item": {
          "id": "6873b3df-db49-48bb-a49c-c1383e0f707a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "628186ad-fc29-44f3-9bac-971bf2c482e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbdb988-592e-4ce6-8934-8ab71bc60c89",
        "cursor": {
          "ref": "ae130040-81ee-4afb-b483-34fcb988efdd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d5776b8f-1f0d-4cec-8be9-af9bba8ba411"
        },
        "item": {
          "id": "fdbdb988-592e-4ce6-8934-8ab71bc60c89",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "187f563e-4660-448a-af6c-653874a6fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa85f85-17dd-4d8d-9049-aba7083e31fe",
        "cursor": {
          "ref": "9208fe6e-47ec-4ea5-8586-a19e1ffffd4a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d256c86-fc22-4d16-861d-86da58e3bc99"
        },
        "item": {
          "id": "aaa85f85-17dd-4d8d-9049-aba7083e31fe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b8dc4d4d-24da-40ce-bd12-3a2c0487b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942a2ac9-82e4-4bed-a241-4b2a9775a956",
        "cursor": {
          "ref": "86bbf91e-f61f-4d9f-b721-178a4feac7d6",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cc310f8a-ee82-4758-8a8c-4bffc3badf50"
        },
        "item": {
          "id": "942a2ac9-82e4-4bed-a241-4b2a9775a956",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a09cabcb-fad6-4de5-847d-2ca5afb08f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fddab7-d0cc-46f9-9b1c-219f4a1cb2eb",
        "cursor": {
          "ref": "623481b2-881a-4c3d-8f2e-cff954f587f4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2849d40c-8fdc-43c5-a539-0bac130f9896"
        },
        "item": {
          "id": "42fddab7-d0cc-46f9-9b1c-219f4a1cb2eb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6fa7f6d3-db86-4ff6-af98-f5cc006f531b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff2c80-4919-4030-8537-27313e30d5ae",
        "cursor": {
          "ref": "b2c26aea-9dbb-4e96-bb7a-6736798738c4",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1971729b-a768-4f5f-8a6b-ad8bc2e2164e"
        },
        "item": {
          "id": "26ff2c80-4919-4030-8537-27313e30d5ae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4f87b4d4-fdfb-4bec-90c1-a6a5798e1dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7b767-1f92-41cd-a2b3-0f0e6b47f9e8",
        "cursor": {
          "ref": "031a224d-6679-44a7-ac22-542be12ec95a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "731cac01-13f6-4501-a44a-3aa0eb9cc100"
        },
        "item": {
          "id": "e3c7b767-1f92-41cd-a2b3-0f0e6b47f9e8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9cb9d8de-35f8-45f6-b4e5-a0bae22cba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c404e0e-fccf-4003-a03d-f1deed89a3fd",
        "cursor": {
          "ref": "850b42e4-ee57-4ecf-ba01-9d52a88dcdbd",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dde1ae3d-97ed-48ad-b5bf-529cbfb6b3e7"
        },
        "item": {
          "id": "1c404e0e-fccf-4003-a03d-f1deed89a3fd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c4ecc03c-e11f-4576-83ff-a5c9e5a6b644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a749c2-e446-44d6-82b1-c58a18b5bab1",
        "cursor": {
          "ref": "c0aad2c6-0a68-4512-932f-ee308fdfd6dc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9d0b2563-7112-4b1e-af1f-0294270e8ed0"
        },
        "item": {
          "id": "84a749c2-e446-44d6-82b1-c58a18b5bab1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7dc1da25-d8d0-4c90-a855-978ac255e6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c32f6f-43f3-4443-ba06-e22199f89922",
        "cursor": {
          "ref": "3e1d162a-40f3-4ffe-840e-058ec9e409ef",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a03c55c-266e-41d2-854f-42ac8f65924b"
        },
        "item": {
          "id": "76c32f6f-43f3-4443-ba06-e22199f89922",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9cd9d541-aa70-4d76-a074-b49e2bf83001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6824249b-3d70-40e6-8027-05c62bb01d00",
        "cursor": {
          "ref": "4fc32470-e352-491f-b695-14229bae1ffd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "47610c44-ae74-4b8e-b429-1f1ae1871b4f"
        },
        "item": {
          "id": "6824249b-3d70-40e6-8027-05c62bb01d00",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "97245d84-f6cd-4451-b1de-06fe46785390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f10c6-d690-43bf-acda-a15d9b530e4b",
        "cursor": {
          "ref": "605cf08a-89d9-443e-9c43-3198938ed3be",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c5ea167d-1538-4048-90dc-0154b7c8286c"
        },
        "item": {
          "id": "b14f10c6-d690-43bf-acda-a15d9b530e4b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7e9bd687-a05e-4f44-98c2-7e6354d52bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a5e59-aac6-45fe-aa66-aae50de2a63c",
        "cursor": {
          "ref": "4e9d6019-8bc6-45c7-814e-082d4e7145cb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aed64b81-1f63-4959-8900-334661a68eb4"
        },
        "item": {
          "id": "de0a5e59-aac6-45fe-aa66-aae50de2a63c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2547efc8-54f9-4970-813a-0e4f95594ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08411613-fdf1-4cbc-82cb-05c5bee4114f",
        "cursor": {
          "ref": "158273f9-8617-414c-b0d7-74b2bf9f040e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "67859b75-5ce0-4797-85b4-f2502d61ac24"
        },
        "item": {
          "id": "08411613-fdf1-4cbc-82cb-05c5bee4114f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8b3f1649-b826-4e9b-9650-86fd3f327c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33492de-4c26-4c2f-baac-52edbe73cbd6",
        "cursor": {
          "ref": "fe1db1ac-af71-47b1-9b51-970da8047d00",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8e9c80e9-ff7c-4b28-8323-1643cea3fff6"
        },
        "item": {
          "id": "f33492de-4c26-4c2f-baac-52edbe73cbd6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "da32852d-fe65-4975-9bd7-9d0df8bf430a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feab7a85-62a8-427e-b3b2-ab2cb81021e1",
        "cursor": {
          "ref": "044d1429-bac9-4b01-920a-233a233c34a4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05c55d93-ad0d-4bf9-bd1f-fc538a7e640a"
        },
        "item": {
          "id": "feab7a85-62a8-427e-b3b2-ab2cb81021e1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e16522ca-bd2b-4d85-96f9-824fc647c04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97410a45-5719-4975-a9ed-5debec2a7f1e",
        "cursor": {
          "ref": "86ee0e56-b0d1-4f27-ac76-806b9324ef24",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7a92f4f8-b81f-41df-a8a8-7b98ea3a4604"
        },
        "item": {
          "id": "97410a45-5719-4975-a9ed-5debec2a7f1e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fbaf91fb-8a7a-42fa-bd5e-5b28faa0bf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b18e5b-467d-4183-8d44-30de2bd21cbd",
        "cursor": {
          "ref": "a2f97003-64b5-49e8-b09b-b5c33d1db171",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "45af1e41-12a8-4b60-980c-220bc3b65fee"
        },
        "item": {
          "id": "a3b18e5b-467d-4183-8d44-30de2bd21cbd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a3fbf056-6942-4f9c-988a-607ee92b44ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8607ef4-4b23-4dff-8dbc-c7a08340dcf8",
        "cursor": {
          "ref": "3954de2e-a01c-4a75-ab9b-2f63eac18dd1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dabd7cdd-0e3d-4701-b880-fbc91f669702"
        },
        "item": {
          "id": "c8607ef4-4b23-4dff-8dbc-c7a08340dcf8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "54036787-3abe-4aab-9930-4a370391b82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90c407d-1080-42c3-974d-e2b49e9cf448",
        "cursor": {
          "ref": "c077f200-fd2c-4df8-9146-5d12b9e209d9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c2506801-19de-4e31-83e4-190188059c0d"
        },
        "item": {
          "id": "b90c407d-1080-42c3-974d-e2b49e9cf448",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9e3a1c6d-a283-4689-89e4-307fb11f2149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af9e8f6-eb35-4128-8083-149645ea16cc",
        "cursor": {
          "ref": "ac5c6e8c-812d-4ab1-b6ed-06a57b0b2ab4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7441ba4f-389c-401a-99ef-cbb5712ab7ee"
        },
        "item": {
          "id": "7af9e8f6-eb35-4128-8083-149645ea16cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2ef73add-2ed9-4f36-b689-82f039af306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eed289c-c0ab-4e34-9945-0647bc71c049",
        "cursor": {
          "ref": "33b805a3-a02f-4071-ab5e-ed4df99beb20",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4fcd0919-c023-4e98-85e0-b3ecdbff3bf0"
        },
        "item": {
          "id": "6eed289c-c0ab-4e34-9945-0647bc71c049",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1bf71a6c-9668-422c-a593-8e2914dc0bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b690faa-9eb5-481e-96ee-2a64dab2c177",
        "cursor": {
          "ref": "5ad384f8-6eba-4c1d-b2e3-2c69fe98316f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "34581b52-47e8-4c49-9a32-bf5f70de568e"
        },
        "item": {
          "id": "8b690faa-9eb5-481e-96ee-2a64dab2c177",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1b25be72-d24d-4143-8078-202a5008cb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e054c4-96fa-47d8-9e9d-1cfd35b8ff5c",
        "cursor": {
          "ref": "6aad2f56-3c27-42e4-a23e-d20aec0f651c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8c55e6c7-24ad-407f-8f31-61f332b133f9"
        },
        "item": {
          "id": "68e054c4-96fa-47d8-9e9d-1cfd35b8ff5c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e41aafad-7b2f-49da-ac5a-f7cce70991e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac2376d-da18-4ecf-862c-44848e309e99",
        "cursor": {
          "ref": "7353187a-753c-4c11-a3e0-c970743f4469",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6ce7e36d-4b76-4377-9129-a49de364f272"
        },
        "item": {
          "id": "6ac2376d-da18-4ecf-862c-44848e309e99",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4879a15e-716f-4908-9e59-31b468e74c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be922801-12b6-4828-8a27-2e2b560505eb",
        "cursor": {
          "ref": "961a330c-53aa-419e-94c1-5a9c0aae66b5",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a22fd873-d59e-4635-9ef9-acbc7c46a3db"
        },
        "item": {
          "id": "be922801-12b6-4828-8a27-2e2b560505eb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8c407bfb-1c8d-43cd-b413-6686dafc8c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a292d-1e6a-45ce-b8d7-221ff00f979e",
        "cursor": {
          "ref": "e95f6330-1ad8-476c-92f0-3d71ea07ab47",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "51c1aa72-bb9f-4f9d-86c8-07c9422815bf"
        },
        "item": {
          "id": "249a292d-1e6a-45ce-b8d7-221ff00f979e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "627e4c84-41b1-463e-bcfc-9f9af6c905ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cc9a61-4e4c-498a-89bc-081bcd056e4a",
        "cursor": {
          "ref": "f24e5779-2342-481e-b766-81968c7db93d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "edc08a3f-e5e0-46f0-a08c-f11e422dda77"
        },
        "item": {
          "id": "b6cc9a61-4e4c-498a-89bc-081bcd056e4a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "02edd5dd-8942-4910-83f5-f7fe95b4996a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f17af5-4a4a-44db-ba77-9daa4c091dfb",
        "cursor": {
          "ref": "446ca522-4f4f-4237-9a85-ebba20ecebda",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d2fdf2a9-6009-4402-983d-d69efe03f654"
        },
        "item": {
          "id": "e3f17af5-4a4a-44db-ba77-9daa4c091dfb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d8a38e59-09da-46a0-8f8c-02a24c11fb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca3ca1c-45ae-4c07-83fc-205a85b1edea",
        "cursor": {
          "ref": "63e687ec-c3b0-4998-8f5f-a71c810a2afe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c4f79909-d3e0-42ab-aab2-79f68ee329b8"
        },
        "item": {
          "id": "bca3ca1c-45ae-4c07-83fc-205a85b1edea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ffccd331-2e97-4941-a8d8-bebf70f97095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ab252-4ecf-4b1f-bd31-43393c796b02",
        "cursor": {
          "ref": "9e3d2cef-ccf7-41ab-9584-c92e78c0e818",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef6aa35c-801a-4d70-84d8-bc2e1479a180"
        },
        "item": {
          "id": "d50ab252-4ecf-4b1f-bd31-43393c796b02",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b3bf55d6-efe4-4b2f-9ee5-adc842ad3209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa435c03-4ece-43ef-a879-b19a9ecff3f2",
        "cursor": {
          "ref": "3786bb12-a840-4b01-8899-6503fabaf5d5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b24ee2e3-2762-44da-a930-75fc52f481dd"
        },
        "item": {
          "id": "aa435c03-4ece-43ef-a879-b19a9ecff3f2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e9574e81-8368-4503-98c4-4a14e7b26671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13938216-f9d3-4957-a9d7-fb33920784b7",
        "cursor": {
          "ref": "d41ce906-289b-4400-9928-9f800d748fd5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "723d686b-b044-45c4-ad05-a087298ed657"
        },
        "item": {
          "id": "13938216-f9d3-4957-a9d7-fb33920784b7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c325c5bd-a4de-40ab-87e3-5e001f9a882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e5a70e-8694-489e-9f73-1dde88771ec9",
        "cursor": {
          "ref": "5de58c68-8404-41b3-b098-b6906d25a068",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "25ac3871-bed7-4c04-87c7-122964e00459"
        },
        "item": {
          "id": "47e5a70e-8694-489e-9f73-1dde88771ec9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a985288d-4fb4-4f57-ae4a-a5097feecd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a11b573-36c9-4c38-b91c-f56b3758300d",
        "cursor": {
          "ref": "426dff21-37fe-4406-a9ab-8bdbdeffa46f",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e2d8e307-a406-4ce6-8d89-2941e9b2356c"
        },
        "item": {
          "id": "4a11b573-36c9-4c38-b91c-f56b3758300d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7acb2569-945c-4342-9dc5-85748eb097ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33604a48-53a0-401e-a88a-e2f13e0efbf8",
        "cursor": {
          "ref": "d180654b-34fd-4d6a-907c-e65607acde73",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "51472690-0423-456f-8f4d-226d3fd217b6"
        },
        "item": {
          "id": "33604a48-53a0-401e-a88a-e2f13e0efbf8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3e4b8341-f533-40fc-aa4c-d15082b972e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b537617b-23d7-454f-9ca1-5aec67b767aa",
        "cursor": {
          "ref": "399ebaaf-40b6-4192-b75d-463932de42dd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "18ba0789-6ab8-4dff-b767-d8d0afc379b1"
        },
        "item": {
          "id": "b537617b-23d7-454f-9ca1-5aec67b767aa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9a8d73da-6122-478c-9d01-a0f9cce3a9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f760a5-7a64-4fb1-8dd8-e0ede19c5997",
        "cursor": {
          "ref": "13ca2f03-75fd-4131-ae7c-f9382a4f4473",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a5951647-e2bd-4d6d-878d-003b9a49cdf9"
        },
        "item": {
          "id": "89f760a5-7a64-4fb1-8dd8-e0ede19c5997",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7c7a439e-5805-4567-89ac-b0c98f8ef2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9232833a-ea14-451f-b9d6-4980d7ca19e1",
        "cursor": {
          "ref": "a7979478-7581-4786-b296-308ef496fdda",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4288d743-7936-4a53-a6aa-feb663edf24e"
        },
        "item": {
          "id": "9232833a-ea14-451f-b9d6-4980d7ca19e1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "290f885f-c5c5-4d02-9535-3360bda569ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0a37de-8865-4b92-bd5b-4f182d230905",
        "cursor": {
          "ref": "0aa53132-4ba8-4d62-8071-6cf6017b78eb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "053bd551-fb12-4cc6-be6c-5e33b611a655"
        },
        "item": {
          "id": "1b0a37de-8865-4b92-bd5b-4f182d230905",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b4c422f5-e2a7-4f22-ad9c-ec5fe6890821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d11349-5f9f-4eaf-b99f-f6e7894b9d4f",
        "cursor": {
          "ref": "c601cbe5-d6da-4927-9590-63f051773eed",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6f8fecba-b6bc-4c73-9a80-22f3e3d61d2b"
        },
        "item": {
          "id": "87d11349-5f9f-4eaf-b99f-f6e7894b9d4f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "96b67d3a-9efd-41f5-9ba1-7df6fe064e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d3b8f4-0eb3-426a-8ef6-141833753afc",
        "cursor": {
          "ref": "f5dd5ece-ec85-46c5-b2c9-39d25597773f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ac82e3b4-045e-4c1a-b4be-fefe150ce15f"
        },
        "item": {
          "id": "f1d3b8f4-0eb3-426a-8ef6-141833753afc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "13dc0459-a311-41fc-86c1-2e266c1c931d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238614da-8edd-44e4-b446-09978037b2a4",
        "cursor": {
          "ref": "4475e232-8761-463f-843a-16196a891b27",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4f3f1ee3-12d8-46a6-887a-7c65a5c4160b"
        },
        "item": {
          "id": "238614da-8edd-44e4-b446-09978037b2a4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ae0fda9a-e88d-40fb-8735-4c9bfaf262f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6601da1-03e2-4b73-8087-0da011ea0bc3",
        "cursor": {
          "ref": "a308fd36-4063-46cd-bd2b-6c22c879e559",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6b6eddee-7945-42b7-b88a-5344e7eb0705"
        },
        "item": {
          "id": "a6601da1-03e2-4b73-8087-0da011ea0bc3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8c0cd8f3-23b9-473d-b9e2-908c8cc1702b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba2f5ba-aa76-4387-bf76-51e097f58f04",
        "cursor": {
          "ref": "b3f0d269-0d9b-4bd3-bb70-990249bd6382",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9d081169-0c3a-4a16-b38b-3d0e8b6c32bb"
        },
        "item": {
          "id": "6ba2f5ba-aa76-4387-bf76-51e097f58f04",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be5d2565-e1bc-4e3e-a774-17ce65c2ea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaafe66-c478-46b1-9d93-221ab86548f0",
        "cursor": {
          "ref": "64642992-6c6b-40b2-a9c1-d94ba2fb9ed7",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "248d91d6-db8d-45dd-8c6c-3acb0d9f76ab"
        },
        "item": {
          "id": "3eaafe66-c478-46b1-9d93-221ab86548f0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7a00e9e3-b507-4270-8f0a-a0e5a92596e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f864df-c697-47e5-ad08-aab2d6c8ff5e",
        "cursor": {
          "ref": "c667bcb8-32c8-4bf3-bd14-0370bb878eee",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f9e808d4-9a83-411e-9417-467de27598b9"
        },
        "item": {
          "id": "b0f864df-c697-47e5-ad08-aab2d6c8ff5e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b7793586-426e-456b-a65e-0f7c242c00c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51dd1c7-b1ac-4f99-a97c-288d6747e8a1",
        "cursor": {
          "ref": "0be7ef44-b7dc-4e0e-b24d-86424447e280",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9381605a-8a68-4b3e-aad2-2b51d0e95c4d"
        },
        "item": {
          "id": "d51dd1c7-b1ac-4f99-a97c-288d6747e8a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "98a257d0-58bb-409a-a038-7f2ef0aa8452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5fc2c3-b7b1-46a3-9282-3b4d7f18c1d9",
        "cursor": {
          "ref": "5edad342-5a98-4eff-bafa-9267ce42cbe4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66c38cfa-795c-4911-ba22-a45b34247bf7"
        },
        "item": {
          "id": "5f5fc2c3-b7b1-46a3-9282-3b4d7f18c1d9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8354eb96-2ef3-43e1-848d-03e05c69da07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09f3a08-595a-4970-b0f3-49ab8c040fd8",
        "cursor": {
          "ref": "80bca233-4063-4f47-a252-ca8a8ac8a9e0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "69e72002-fed1-49e5-aff1-57064f3e6a62"
        },
        "item": {
          "id": "f09f3a08-595a-4970-b0f3-49ab8c040fd8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "989096db-78b1-4f5e-82a7-32b88c3c8407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0325eed1-b39f-420b-8024-f1b82e39b86b",
        "cursor": {
          "ref": "e5b00744-bf31-4106-98aa-f1bc0823fefa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a1863a07-5b94-47f8-8348-62724e91b87d"
        },
        "item": {
          "id": "0325eed1-b39f-420b-8024-f1b82e39b86b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fdd241fc-19c3-4b0a-b553-181b8686e0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c573a8c5-df9e-403d-9203-39ae80f9333a",
        "cursor": {
          "ref": "6dc0e1f7-0bf4-4804-b8e6-7fb8991bd28e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1560a09f-2d5f-46fa-a864-24526c1b2262"
        },
        "item": {
          "id": "c573a8c5-df9e-403d-9203-39ae80f9333a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5244b2b5-3fe7-497b-9129-a54b82b21ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f38566c-f0c7-4c47-b5eb-01536d499b6c",
        "cursor": {
          "ref": "37768ad5-9df0-47f9-adb8-821ccb4b6e5a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4e951ad6-c5c3-4704-8e8b-3772991deb6c"
        },
        "item": {
          "id": "6f38566c-f0c7-4c47-b5eb-01536d499b6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "34fd79d3-554d-4e37-9753-9b83fe61b5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da15a0fa-75a3-42f6-b956-93dfd5374d0f",
        "cursor": {
          "ref": "64c1fa7b-764f-459e-9b46-d21c3e5ce407",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "163fbbd8-77c4-4534-a01f-c14495aaad51"
        },
        "item": {
          "id": "da15a0fa-75a3-42f6-b956-93dfd5374d0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bf86b67f-459c-421d-b7b7-3980e29f4681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54801329-ed74-42df-a5e3-39084c2d376d",
        "cursor": {
          "ref": "9502e061-90d2-4807-a861-f524afb52443",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "13b11db5-7228-455d-81ec-98c1dc859520"
        },
        "item": {
          "id": "54801329-ed74-42df-a5e3-39084c2d376d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c0bffec7-7dd3-43ba-87ed-fbb612403c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8122d7-1881-48b9-8c2d-0642cc066275",
        "cursor": {
          "ref": "ea876fd6-7bca-4fcb-8b1a-bb8230b7d5ae",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa8af62b-ae0d-49f7-9945-16134c0f90e7"
        },
        "item": {
          "id": "2d8122d7-1881-48b9-8c2d-0642cc066275",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ef057a93-6a84-4e2d-a9c2-105ac3958e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b0b8ab-296e-4fb3-9bc1-f1064570bd72",
        "cursor": {
          "ref": "90dcfcc0-88c5-4179-aafa-54d999d7b53b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9c315c8c-1f4c-4119-bac2-fc7bf2d8c75e"
        },
        "item": {
          "id": "60b0b8ab-296e-4fb3-9bc1-f1064570bd72",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f40155f5-6046-4618-872e-a0d158cfaa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6b1ce0-1b7f-4246-8b37-fe4ec540fcd2",
        "cursor": {
          "ref": "ba9622b2-3927-4e93-bda3-cf80ba192a18",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ece991ea-a99e-427e-a87a-fac0f0893b60"
        },
        "item": {
          "id": "6e6b1ce0-1b7f-4246-8b37-fe4ec540fcd2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b0bc1cb-2f88-4436-b465-fef4da468edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813b2efe-365e-4e5f-b714-8a4a8e55a4a8",
        "cursor": {
          "ref": "458a9b57-206f-4516-9f29-b98fd0b25298",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ed6be3d6-0bc5-41d2-8c21-f247aafed86f"
        },
        "item": {
          "id": "813b2efe-365e-4e5f-b714-8a4a8e55a4a8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "82d28348-bfd9-435f-b6c6-9b06bc51b579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d3e27a-0164-4fc7-a3f0-667fcd86295e",
        "cursor": {
          "ref": "f197be90-c2b1-4b61-b915-14c4d04c80de",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9b5a926a-a401-44c4-b3d3-3868eae9ac65"
        },
        "item": {
          "id": "a2d3e27a-0164-4fc7-a3f0-667fcd86295e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d679b1c3-1e50-4aa0-9a7d-87a90415d030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c1940a-c6f4-4fb3-ac93-41ce1ca8fb71",
        "cursor": {
          "ref": "a2c56427-a152-490e-a61c-5ea4e6b1f6ed",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff0c47e5-21ba-4596-a78e-66b564ad434e"
        },
        "item": {
          "id": "c6c1940a-c6f4-4fb3-ac93-41ce1ca8fb71",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1514c5a8-8daa-4637-9616-f9931873d28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528d54e6-d0f1-4e31-ac43-3d19f28c7b20",
        "cursor": {
          "ref": "431d8949-3657-4e46-8010-9d914012c0b2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6223667c-3158-4423-96f8-28ca46a5fc3c"
        },
        "item": {
          "id": "528d54e6-d0f1-4e31-ac43-3d19f28c7b20",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d225e1ed-ed14-46b4-884d-65d4d4ababcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e35374a-0229-46b0-ba60-d2d6fdb0a304",
        "cursor": {
          "ref": "3c122993-135b-4a33-9822-5009bc6d2eb9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b7e0b406-02b9-4299-9a73-a0af96b50fcf"
        },
        "item": {
          "id": "5e35374a-0229-46b0-ba60-d2d6fdb0a304",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "34e087a8-2ef1-4ac2-acfd-905d627386eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c111ffe3-808c-4136-bf83-ec4c51044c85",
        "cursor": {
          "ref": "d133a55e-ef40-4d2d-b33a-55f0d874db7a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "527a512d-c5e2-491a-bae7-83abd55d6faf"
        },
        "item": {
          "id": "c111ffe3-808c-4136-bf83-ec4c51044c85",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f925aa6-1af2-40e9-bc16-c7d315a59571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd2ffa9-137e-42db-a37f-00c916ebe639",
        "cursor": {
          "ref": "8dc6befe-04df-4efc-bbed-fba210188f27",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "77b5cca2-258c-49f8-9ad1-89951aa346ea"
        },
        "item": {
          "id": "5dd2ffa9-137e-42db-a37f-00c916ebe639",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "331224e4-49b1-401e-ad68-e4cefb20cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd567bda-49a6-4264-b18e-5becd42cf42d",
        "cursor": {
          "ref": "08a32d6b-ebdb-45f6-8a5f-c86f2e8096d6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f08a3b20-e15b-451f-96d2-fa3aa714743f"
        },
        "item": {
          "id": "dd567bda-49a6-4264-b18e-5becd42cf42d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cc75eeb6-3acd-41de-b39b-d881fc34aba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39589848-787e-4ec5-b0cf-fcc7e4fa26b8",
        "cursor": {
          "ref": "a6e56026-cceb-40cf-a3cc-b7ff08f3bc94",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6066827a-56ba-42dc-9401-346861efcc32"
        },
        "item": {
          "id": "39589848-787e-4ec5-b0cf-fcc7e4fa26b8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4d623f7f-4476-46e5-9a9b-9bf3de669193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321bf5ad-8746-41d7-ae78-bf238523fc15",
        "cursor": {
          "ref": "44865b95-44b1-4c53-bec1-891edf38f95d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cc270720-ac6a-4f5f-b1ad-fa2174c70399"
        },
        "item": {
          "id": "321bf5ad-8746-41d7-ae78-bf238523fc15",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "44c0d4d0-3141-40ba-b10d-69643737aa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d4cfa8-0938-4d01-9101-1596638ee1ff",
        "cursor": {
          "ref": "f3a3d30e-7687-4dee-b5b9-d0e9b0ae6c62",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bdde13d9-a5a6-473d-bef2-eac08dd37cc5"
        },
        "item": {
          "id": "38d4cfa8-0938-4d01-9101-1596638ee1ff",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bf0d28f9-8d04-491c-86fd-54e415fa066e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0379db72-554f-4814-8458-57e67db62a37",
        "cursor": {
          "ref": "fc90c246-1ff8-437c-b74d-99011d976958",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e1a71e23-9dff-46a9-83e5-c41ddff2804b"
        },
        "item": {
          "id": "0379db72-554f-4814-8458-57e67db62a37",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f62b6ddf-ecf9-47eb-9a02-154ad41e456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93784cd5-3368-4733-adff-17f07e5748da",
        "cursor": {
          "ref": "e367b0b3-a573-4ae2-be89-b59f8647a2c2",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8710f14e-cdec-4bf8-9a56-8c1a2d57626e"
        },
        "item": {
          "id": "93784cd5-3368-4733-adff-17f07e5748da",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "15c7a557-4cba-4dcc-8018-1a183731c8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd68adfe-b0b6-44bd-8d3b-aa1c13f8fbda",
        "cursor": {
          "ref": "2a405189-6242-4423-9704-8afd18cc23f7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "608e6162-6759-4d20-9f49-4ea138ff9f1e"
        },
        "item": {
          "id": "fd68adfe-b0b6-44bd-8d3b-aa1c13f8fbda",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c48c9220-d110-4871-af7d-ce68de4b0cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2d9cdf-efb8-4ad3-8840-8c7c63998703",
        "cursor": {
          "ref": "a68d634e-27a9-42bb-b3a5-adf9a069cbf1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "658a9a26-6f2d-407a-a8fb-1068e59e40b2"
        },
        "item": {
          "id": "be2d9cdf-efb8-4ad3-8840-8c7c63998703",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3b3d57fa-cd68-4de9-a159-bda46aba540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a236a2b-bc53-404b-9e91-315dc8035c05",
        "cursor": {
          "ref": "c5df7c9e-b46e-4bc0-a11a-d51a2f5c24d0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "67430e18-a8e1-4082-83c4-b89546333a77"
        },
        "item": {
          "id": "7a236a2b-bc53-404b-9e91-315dc8035c05",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6845b265-9755-4983-8e77-f011d3b4894e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e900a1f-c827-4f8e-8c09-b27bfa6d5239",
        "cursor": {
          "ref": "690a5f08-9f7e-4ebc-a96e-bb1d1eb0b059",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "50af64fe-ba50-41c3-87a6-57cbfa994cc0"
        },
        "item": {
          "id": "1e900a1f-c827-4f8e-8c09-b27bfa6d5239",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec6d2fb9-8022-47b2-9ef2-ff97c2cc3a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a33c02d-598c-4908-8224-e1f1267dffc2",
        "cursor": {
          "ref": "87c3f3ff-5700-46d8-993c-e3ead2bce91d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bb3c44e7-7bdf-4f6c-9971-c8980e840bd2"
        },
        "item": {
          "id": "9a33c02d-598c-4908-8224-e1f1267dffc2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0ad5f379-e031-4119-8e2b-797bb1098401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea804d3-1186-4588-bc15-078d0e4952f5",
        "cursor": {
          "ref": "92b49465-74f2-4e44-ac9b-0d9236e4bd83",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2331065f-0363-44d4-bc33-d2b4e7c9d5df"
        },
        "item": {
          "id": "9ea804d3-1186-4588-bc15-078d0e4952f5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "27de7128-7339-40d2-bbf6-e80fcaffc19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46682f84-e58e-41b7-bd2d-c2615bbb5133",
        "cursor": {
          "ref": "4afcf53a-567e-4868-9100-0018646f6a10",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d30a8249-8d6c-4af9-b277-0371796552de"
        },
        "item": {
          "id": "46682f84-e58e-41b7-bd2d-c2615bbb5133",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1abef125-39dd-42ba-81e5-3f8c7a62b62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c0cfb4-c8e7-412c-bcfc-77102be12bcb",
        "cursor": {
          "ref": "6711ffec-23e7-453d-bcbe-38b545a368b3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43955b9e-07ca-4efa-a99e-c475d05244b0"
        },
        "item": {
          "id": "90c0cfb4-c8e7-412c-bcfc-77102be12bcb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5ec322dd-c0ce-4fb1-9173-2655d4f40741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048275e-a2b7-4f9f-84d1-44af30812f24",
        "cursor": {
          "ref": "202977ff-c5fd-4c87-b2a0-5d8a850847cd",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "475b3d91-a29b-4814-ae1f-dfcad5ef0c4f"
        },
        "item": {
          "id": "1048275e-a2b7-4f9f-84d1-44af30812f24",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6e336edd-a6a1-4b42-9b49-2f9524971814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8251ddf7-55a7-4b16-abf1-db8e1afef5d0",
        "cursor": {
          "ref": "382a3f32-1b60-406b-9b37-931e9a7f1236",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "db440c33-84fd-42f7-bc48-b0ca8eb0b0b4"
        },
        "item": {
          "id": "8251ddf7-55a7-4b16-abf1-db8e1afef5d0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "37af1714-d902-44dd-a8c8-da2e2ae8b8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fa85c8-fb53-4379-b1fe-f645f950e6d2",
        "cursor": {
          "ref": "bbae5e44-3cb9-454a-9499-6aeb12c3d40a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "258de475-485f-44d0-bdc0-1138b7683bc3"
        },
        "item": {
          "id": "44fa85c8-fb53-4379-b1fe-f645f950e6d2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "98130e0c-b1e8-422a-8443-0ecfda5e3cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229f0351-65e8-45e2-9379-4b4584f9dbb9",
        "cursor": {
          "ref": "cf0e6e42-3ad7-4d1a-ae59-a13a324b8884",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8934448a-c37a-49ef-bd11-9793647441d2"
        },
        "item": {
          "id": "229f0351-65e8-45e2-9379-4b4584f9dbb9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c708dff0-bf65-4fa0-bcea-4b424f80da97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74e50b8-2599-4e46-a190-626ca607ff58",
        "cursor": {
          "ref": "1e1acb40-df01-43f4-a100-9f6c16d55428",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d8d95074-4941-4f26-9a41-689b2b9a5c07"
        },
        "item": {
          "id": "c74e50b8-2599-4e46-a190-626ca607ff58",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd817c8d-06ce-476b-b91f-81cd12909653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc5c9a5-b615-4c82-8ac4-c1295dbebd7f",
        "cursor": {
          "ref": "7674cc57-fbda-4703-9117-b5185f2c115a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2332dd6f-26ef-4001-853f-2212bc4c0ee6"
        },
        "item": {
          "id": "ccc5c9a5-b615-4c82-8ac4-c1295dbebd7f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "53c1a610-0270-4c90-b69f-a5dfab9cfa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ef013f-f7e2-4a8e-889b-5d63924825ae",
        "cursor": {
          "ref": "e6e32aad-9b9c-46dd-aa20-3c236c55e524",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1b39369d-bd46-43cb-b2da-45f057d60d67"
        },
        "item": {
          "id": "c6ef013f-f7e2-4a8e-889b-5d63924825ae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "54245253-6069-4e7e-8093-39e841b3a99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41502d6f-b057-4cfd-84ba-196fc31eaed4",
        "cursor": {
          "ref": "3f04f5bb-f184-458e-8661-71cd3b3cbed1",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9efbc9be-7c5a-49ac-91e6-75d78ecb56a6"
        },
        "item": {
          "id": "41502d6f-b057-4cfd-84ba-196fc31eaed4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "624906d2-c514-44de-bdc9-4b8cc11f2d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617c7b56-8653-4c8f-87e2-591e2645977f",
        "cursor": {
          "ref": "a28ddbdf-b4e3-4686-b22a-aba61ffb7b96",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc737887-f221-40e1-b221-3f4edb73311a"
        },
        "item": {
          "id": "617c7b56-8653-4c8f-87e2-591e2645977f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d427d724-4075-46b0-a180-d6a3a03fcb1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea5f29-d002-451e-bd2f-0eccf0250df3",
        "cursor": {
          "ref": "fa623c3b-8e0c-485b-ac43-a94e24cb1476",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8594d043-3d54-4242-b2ce-6a1254ab273e"
        },
        "item": {
          "id": "82ea5f29-d002-451e-bd2f-0eccf0250df3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2af78c6d-49d7-49ec-85c4-50aa9687bba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6a855a81-fb23-412e-a547-6a5954955f64",
        "cursor": {
          "ref": "b86beb34-7288-4a64-b883-fa8e1dd56d16",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b28899db-afc3-4a0a-b310-d17fa44e2181"
        },
        "item": {
          "id": "6a855a81-fb23-412e-a547-6a5954955f64",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a5536808-484a-42f8-9bd5-b99bc6918c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ad51333b-a2b9-480d-aebe-696206e68198",
        "cursor": {
          "ref": "bd33072a-27d2-4d2d-9b36-3986d699a73f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3d5f28ba-5411-4c4e-8d38-a1b3141d6640"
        },
        "item": {
          "id": "ad51333b-a2b9-480d-aebe-696206e68198",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "484f3aa7-a64a-4d27-bf90-023b150aa0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e748ac7a-2ab6-453b-a3e0-a37cb72c4999",
        "cursor": {
          "ref": "7a989601-d56f-4056-8f0d-0d2749aeeac0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0267534d-7c73-4d56-a96a-d805b5d17027"
        },
        "item": {
          "id": "e748ac7a-2ab6-453b-a3e0-a37cb72c4999",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "47b16f26-3a80-410a-a858-aa6bcb4dccde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f67f0144-bca6-428e-ad54-a9e71ea960eb",
        "cursor": {
          "ref": "44a2f117-d627-45a7-b6bd-2eeaf8418198",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "adaccf7d-d281-4267-ac19-ec891ed799d7"
        },
        "item": {
          "id": "f67f0144-bca6-428e-ad54-a9e71ea960eb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "db132ece-5c20-4c5e-ad68-e18d2c467ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5ab496c5-7e26-433f-b04b-508e1f25e5dc",
        "cursor": {
          "ref": "08ef6a27-e0ab-4391-a4c5-98096f2f3d70",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "39ef9872-6ef1-4080-903c-275547854e44"
        },
        "item": {
          "id": "5ab496c5-7e26-433f-b04b-508e1f25e5dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "60d3311e-c999-4111-8d5b-2033c4745a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b4842731-d993-44bc-a8db-725b600140e1",
        "cursor": {
          "ref": "1b0fd922-36b9-43e5-ab08-481cfc5ccced",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f80f5c9c-f6df-4d7f-9f93-b60f1c91eb82"
        },
        "item": {
          "id": "b4842731-d993-44bc-a8db-725b600140e1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7fa8c1a4-f82d-4f86-8556-82e17a255dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3a7d79b9-1c92-43c9-87c8-66d53499440a",
        "cursor": {
          "ref": "6c5ce194-d5cf-4b96-ac64-0ab6de7d834b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7d9b71e7-5541-4efc-9f70-8dac6a2fb195"
        },
        "item": {
          "id": "3a7d79b9-1c92-43c9-87c8-66d53499440a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bdcf38b3-fe49-412f-bfe0-9a6866ed149b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a32848b-b52e-43ea-9da2-208a3a2dd7e1",
        "cursor": {
          "ref": "8dc64035-1b36-45f9-b7eb-ba15e344b3fc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a03f29bd-4523-48c6-9741-527d87612774"
        },
        "item": {
          "id": "8a32848b-b52e-43ea-9da2-208a3a2dd7e1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e6ff937a-9c74-4614-95b4-ff59f02abec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a31123-4522-4ff3-b1ce-f470a24f9841",
        "cursor": {
          "ref": "bce3eee9-d23e-4d5b-843f-ddfff1d763a5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0dfb0f41-8b83-4867-a595-916c0ae13345"
        },
        "item": {
          "id": "72a31123-4522-4ff3-b1ce-f470a24f9841",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d3fe545e-6aaf-46a0-97ae-5c1fef049211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a393610-8866-4562-8793-808fc6a8453f",
        "cursor": {
          "ref": "cdde7015-fe25-4802-9c1a-c0e153e7266d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1549b5b1-0347-4b38-88e5-51cf72b1edef"
        },
        "item": {
          "id": "7a393610-8866-4562-8793-808fc6a8453f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d50650e1-71f6-4d23-85c3-b30ff1c71383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98646d44-0180-4811-aad7-d6192e816dfd",
        "cursor": {
          "ref": "7ece862f-6a04-4ce5-8f60-367d9db8293e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7d18adf0-8474-4969-b957-27a67dd95917"
        },
        "item": {
          "id": "98646d44-0180-4811-aad7-d6192e816dfd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ffafb78b-557e-4508-9344-412d9a460678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f49f62d-c1eb-4ef6-8bdf-74ea088ad347",
        "cursor": {
          "ref": "45010aa9-a5f7-48db-b841-aca547cd38f3",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50feac4b-bc6a-4f1a-b8e5-ce9cf1936c43"
        },
        "item": {
          "id": "3f49f62d-c1eb-4ef6-8bdf-74ea088ad347",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "087cc41a-c6b7-433b-b975-516a013e4ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb3758-0dd4-40af-9db4-f27d2041c518",
        "cursor": {
          "ref": "0b41ce29-be0f-4612-a692-9ca3fe473c55",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "af857aee-7e99-487a-b08f-68199ed3630a"
        },
        "item": {
          "id": "27eb3758-0dd4-40af-9db4-f27d2041c518",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a38d9c1b-13e9-40ca-9ba1-43b6c310c57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca29c37-98db-42f0-b61c-0028cba90388",
        "cursor": {
          "ref": "bc90a806-0921-48d6-b508-558fadda424d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "91de9fc5-9e36-4216-9e9f-55f84470c742"
        },
        "item": {
          "id": "dca29c37-98db-42f0-b61c-0028cba90388",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b44c8c16-8d3b-400b-9861-9451067ffdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d6bb34-37b4-4843-86fb-59d655f9a1ea",
        "cursor": {
          "ref": "95a89c78-a7cd-460c-b4f5-603576ba7c9b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2c91e1e9-70b0-4e11-be85-cb07db2438a2"
        },
        "item": {
          "id": "03d6bb34-37b4-4843-86fb-59d655f9a1ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "862b0637-3bbb-43e0-90dc-027e52ddc543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41439c5a-ed03-4bad-b0c1-aea4cb314ccd",
        "cursor": {
          "ref": "36887bde-d5a7-47ba-a2cd-9638fde0c370",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d59b45fc-caa0-4172-a4d9-0442b0bd8cb7"
        },
        "item": {
          "id": "41439c5a-ed03-4bad-b0c1-aea4cb314ccd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "babdebae-13d3-4064-8d43-1ae1da0540ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d35219c-4323-4d95-ac5f-4bfaf698daed",
        "cursor": {
          "ref": "b7002cbd-b073-460f-8528-bb23b66b4b5d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1dc6fec8-42f7-40b4-9d5e-7f925713a8c5"
        },
        "item": {
          "id": "8d35219c-4323-4d95-ac5f-4bfaf698daed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b32cc99-c823-4ab7-83e8-10599ddb7576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d292f-4dcc-4de7-ae0f-dad0eca5b661",
        "cursor": {
          "ref": "7aab5b88-2b33-451c-bc97-e6690075155e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fd2c2310-16e0-4f3b-92ee-bea44f528723"
        },
        "item": {
          "id": "678d292f-4dcc-4de7-ae0f-dad0eca5b661",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "367350df-be49-4667-8a0c-b1447f7b7b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe6bc6f-b5a8-457c-be43-6d5940dc3166",
        "cursor": {
          "ref": "a3b7cfd2-741f-4fa8-b531-565ec13c9796",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "016cb490-db2c-4ab2-a0fa-cb8ccb891e3f"
        },
        "item": {
          "id": "abe6bc6f-b5a8-457c-be43-6d5940dc3166",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bdda036e-254a-430a-93f8-a5830491943a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6783be-7604-41a0-a873-1a87c20b0927",
        "cursor": {
          "ref": "96698db9-5476-4292-9706-de73dfc18bee",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8dcbdfad-3bb3-4ed5-a95a-ae0e9aa6beb5"
        },
        "item": {
          "id": "8d6783be-7604-41a0-a873-1a87c20b0927",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d4a29d83-634c-4729-a78d-d6790f6d48f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ce60ba-5c45-4d29-ae67-fd5512266792",
        "cursor": {
          "ref": "8c95905b-0de6-4b61-82a9-e5ac9ff51987",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "383fcd2e-946e-4266-8884-aa5635c788dc"
        },
        "item": {
          "id": "e1ce60ba-5c45-4d29-ae67-fd5512266792",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fdfe356f-77d0-4958-a232-ee605c1461e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65d6984-32d8-48f2-af03-ed0cfdfe11e3",
        "cursor": {
          "ref": "a9d6ce59-0904-4ad1-be2e-519f774c8c6a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b0390bdf-029c-49e5-ad1f-b960727445d7"
        },
        "item": {
          "id": "b65d6984-32d8-48f2-af03-ed0cfdfe11e3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2aeca055-3e99-447f-8317-65ac78847075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d541b94-0e1e-4b16-ad9d-8e9e35d24af9",
        "cursor": {
          "ref": "815821e1-d5e7-4fc2-b8fc-c92bd338000d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "47bfe864-3745-4bd4-a382-4fd47064a08c"
        },
        "item": {
          "id": "3d541b94-0e1e-4b16-ad9d-8e9e35d24af9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8b35def5-259e-4cab-8163-0495cb03e3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011a7155-0d5b-4b99-b354-6157901866d3",
        "cursor": {
          "ref": "28da7d04-544a-4be4-867b-de0392070a2d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2173e4f5-255d-4b93-875d-4c1b6d6959f3"
        },
        "item": {
          "id": "011a7155-0d5b-4b99-b354-6157901866d3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0771e37e-b2c8-48b9-96ca-106ca9041c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9053b85d-df0e-4d70-9f75-193c18dca7c3",
        "cursor": {
          "ref": "1e41c042-9e5f-4611-a91e-a7e5d50a2402",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9e4fa7db-10c4-47c1-8cc6-38cc5da1b88a"
        },
        "item": {
          "id": "9053b85d-df0e-4d70-9f75-193c18dca7c3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27a2136a-df8b-47a5-8277-fbb4cd066c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb34e066-30eb-44d8-bc1b-62e463c2ef4c",
        "cursor": {
          "ref": "6bb56baf-eb35-4518-9e64-89253b1b7697",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aca330c6-19df-4673-b8c7-bc5fa19431a7"
        },
        "item": {
          "id": "bb34e066-30eb-44d8-bc1b-62e463c2ef4c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0532ac3b-04da-4a16-9009-269682df2111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8369742e-74dc-4831-9f86-eb3774ee1afd",
        "cursor": {
          "ref": "2e98008e-264f-4c52-8f9b-df63f566a65f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "95bc4bee-3981-4b79-bc42-29ad073e2b82"
        },
        "item": {
          "id": "8369742e-74dc-4831-9f86-eb3774ee1afd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b76365a2-21c5-496b-b58a-e50c9d4df161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd193f9-4d57-44f1-a5ed-404e63c650d3",
        "cursor": {
          "ref": "947c004c-2043-4690-b43a-b865cc111235",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "032cf38b-4408-45e2-b71f-2cb6934c20d6"
        },
        "item": {
          "id": "0dd193f9-4d57-44f1-a5ed-404e63c650d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "db9d870e-3e04-4ae0-9cc3-2c491030e4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6e8b1f-d036-408a-9118-0f7dd7f3f164",
        "cursor": {
          "ref": "f4afb7ad-8af5-44b6-917e-dfc0d91fd510",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9671cae4-e186-4997-9b69-4b1aab556fdd"
        },
        "item": {
          "id": "ad6e8b1f-d036-408a-9118-0f7dd7f3f164",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96f0a616-a0ce-4211-aa9a-9e9b13404ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adc4aaf-c64f-4ce2-8ab1-f495613ef14d",
        "cursor": {
          "ref": "bd864217-9e3f-4a0d-9ad5-7073f50809bb",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e05cd71a-84cb-4baa-bb94-a41e00fb24bb"
        },
        "item": {
          "id": "6adc4aaf-c64f-4ce2-8ab1-f495613ef14d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "74f0a14e-3d84-4ec8-b386-4e2b06ffba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30982e4-f01d-435c-81b6-082f01cb1863",
        "cursor": {
          "ref": "16347bea-3540-49a0-b59d-8ad413120f99",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "db2c3875-ad27-48cb-98d8-7631c8d0c1ea"
        },
        "item": {
          "id": "d30982e4-f01d-435c-81b6-082f01cb1863",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e7158275-ee52-459d-a8f1-8a26b0dbcfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afee1426-5192-4be2-bce3-137672a78c41",
        "cursor": {
          "ref": "6b658813-ea83-42ba-be9b-d06a5c73d99a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "156c48d7-a719-4830-a268-e6fe1dc52866"
        },
        "item": {
          "id": "afee1426-5192-4be2-bce3-137672a78c41",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b968cf1e-8d50-4e2b-be2a-830032284a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b9934b-b00c-469f-880f-06bcf4a967bf",
        "cursor": {
          "ref": "2888b74b-e854-46db-9445-7b0326885e7b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bfa2ea9b-63aa-4f57-8190-14189edf21ea"
        },
        "item": {
          "id": "33b9934b-b00c-469f-880f-06bcf4a967bf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6970d605-3981-4827-bd06-4edb3e16889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36184a1f-1091-4a3a-9d4f-3df3f84d0d14",
        "cursor": {
          "ref": "25eca66a-8089-48a5-bd1a-b4abc3f6fb09",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5b6fbd78-4174-4f1e-a290-0399f3d215e6"
        },
        "item": {
          "id": "36184a1f-1091-4a3a-9d4f-3df3f84d0d14",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ebd66968-aeb9-4fdc-9e16-772e60cca719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4852e411-9099-4a60-9d9f-723b5ea9e4e7",
        "cursor": {
          "ref": "419eca20-788d-450f-b398-2c6a709c4663",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "41b575ba-eb60-47ae-b081-12bb12bd66fe"
        },
        "item": {
          "id": "4852e411-9099-4a60-9d9f-723b5ea9e4e7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5c26fec-3e15-45c2-af94-0926df4164a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365b8ae0-f27e-4531-8c81-63ea46a2e4f2",
        "cursor": {
          "ref": "8c2ae628-c25f-4306-8f5a-b3337754642c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f294941c-b7bb-407a-81b3-c749559ede5b"
        },
        "item": {
          "id": "365b8ae0-f27e-4531-8c81-63ea46a2e4f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a680ae8-d72b-4686-a260-6d99c1666073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e0f11-af19-4ac3-b09b-40dde6148afe",
        "cursor": {
          "ref": "f676a081-048f-4f4b-a956-ee54ebbad445",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ed9bc5b5-8242-48be-91ed-00cb71fd5b68"
        },
        "item": {
          "id": "1d7e0f11-af19-4ac3-b09b-40dde6148afe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "556e74ca-a208-4ecc-b6eb-d2ce4528ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d19300-cdac-4d4d-b042-a2316fe0f06d",
        "cursor": {
          "ref": "c05eddbe-7a69-4200-8f75-701540491eb0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3c735c2f-493c-4591-9ec9-c4de890f1d40"
        },
        "item": {
          "id": "52d19300-cdac-4d4d-b042-a2316fe0f06d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "65f5b8bd-3d6b-4593-a47b-2eefa9f0e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcad5a55-f42c-4f39-bb27-64c30f436634",
        "cursor": {
          "ref": "d7e34ef4-240f-4a80-bd77-753b3c7e0502",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eb926aca-a4de-4f6c-b71a-f8424aed6ffd"
        },
        "item": {
          "id": "bcad5a55-f42c-4f39-bb27-64c30f436634",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bebc4f32-f303-4b16-bc6e-0a9ee8aded15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31a9ef1-7c13-4ac3-966a-694eca6b47b5",
        "cursor": {
          "ref": "b22db879-bbd6-4ffa-867a-7299a0858a9c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "932d5529-f95f-418c-8409-114cbbb7dbcc"
        },
        "item": {
          "id": "a31a9ef1-7c13-4ac3-966a-694eca6b47b5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4cb7deb6-8650-46f8-a4a5-ac66a40c8f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7346d46-048d-41d3-a011-a3b0a33db015",
        "cursor": {
          "ref": "07c9fc41-71a4-48a0-a87e-b03c12b8d836",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "90fdd7ef-4bf3-47d5-9358-48ff0dcceb6a"
        },
        "item": {
          "id": "f7346d46-048d-41d3-a011-a3b0a33db015",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "09307431-cc2c-4941-9f91-a4994c3c7554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f731ff-a83e-4494-8053-228a43216636",
        "cursor": {
          "ref": "f8d50442-8909-4dca-82ed-093b541dba78",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "21ccace8-9e6b-47ae-8ee5-0d8b53ded3c3"
        },
        "item": {
          "id": "65f731ff-a83e-4494-8053-228a43216636",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc3e725c-a429-4eac-9357-b20885188aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ccf491-e959-41b9-a075-97e50b20edb3",
        "cursor": {
          "ref": "9f73c6d8-d99e-4176-9963-0cb38cf50f6d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "72d674dc-7f2a-4db2-892f-324bc8ba59e1"
        },
        "item": {
          "id": "22ccf491-e959-41b9-a075-97e50b20edb3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6bed3ec5-cefb-4bc5-bc5e-d6d1bcb17a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e678afc-2fbb-4832-b447-7bd077c88ce4",
        "cursor": {
          "ref": "05cd23bc-c55c-4a74-b4bf-182127bbb251",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "867c2f56-0b89-40dd-b132-d40f03a9a52f"
        },
        "item": {
          "id": "7e678afc-2fbb-4832-b447-7bd077c88ce4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "12416f83-134f-4ad3-b419-91a5aab4f1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2d695d-6622-4f61-9803-c0c5b861241e",
        "cursor": {
          "ref": "d0869d45-6ed4-4605-94b5-fdb2136e14e6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "72689625-e27a-47db-9cad-db7993b3e011"
        },
        "item": {
          "id": "3c2d695d-6622-4f61-9803-c0c5b861241e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "931dcb58-0a5c-4ac0-9885-466a310cac4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1683a47e-ac04-4c2c-95db-f82041544963",
        "cursor": {
          "ref": "5e9fce38-c8f5-40f7-9071-ec0e5bb1920b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "51a561ed-d2ee-43e0-8c9e-e8d62164d9a5"
        },
        "item": {
          "id": "1683a47e-ac04-4c2c-95db-f82041544963",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da71a371-6985-4cb5-bdf5-eea344a93a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11ef324-a5fa-4410-bfaa-f0b8dea13253",
        "cursor": {
          "ref": "3838e1fc-2d1f-4503-aa38-a89becf10cc6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b26604cf-9a89-49d6-8f2b-3bf7d723c0fc"
        },
        "item": {
          "id": "d11ef324-a5fa-4410-bfaa-f0b8dea13253",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c867d836-44d5-4e3f-a6b5-90e781d54c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887628c4-5d62-45ee-ae10-6cedb43d3446",
        "cursor": {
          "ref": "52801460-148c-4b9f-93a9-c022ce7f33e7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d715d4a7-ff7a-4c39-be7c-1f52705f1744"
        },
        "item": {
          "id": "887628c4-5d62-45ee-ae10-6cedb43d3446",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a5fd4968-9d0a-4c1e-b9b1-26742ad88689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d3418f-ce98-4b7e-9091-0e9786cfeb7e",
        "cursor": {
          "ref": "00d32e94-c962-479e-9d8b-b0afc670d2b9",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cb6a3e04-9bc6-4992-aa40-e7a80933b25d"
        },
        "item": {
          "id": "92d3418f-ce98-4b7e-9091-0e9786cfeb7e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c166edce-318a-429c-964c-e09562ab3e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a07b66-9b81-49db-ba17-1668c4becf46",
        "cursor": {
          "ref": "a27e0ee1-f5bf-4ed9-8643-78f53421698a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fe5ca90c-cf36-430d-8a64-5b27344be1f5"
        },
        "item": {
          "id": "c4a07b66-9b81-49db-ba17-1668c4becf46",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "422f21c0-11b2-440b-ba80-6bcdb3811a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3955f-311b-48de-84fe-f46842126009",
        "cursor": {
          "ref": "50852d17-319d-459b-9e84-89c4ce49b00a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8d360e19-1ef8-49d6-ace4-8fef1e8ad421"
        },
        "item": {
          "id": "30c3955f-311b-48de-84fe-f46842126009",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0a6c0ab9-f4d0-4e6c-a3cb-c66f90051313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b49069-3b6c-4b92-8a42-86fc3ebd4240",
        "cursor": {
          "ref": "b23d3a36-81e5-46ae-b137-103fcf0f3357",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6a28a607-9d37-4ada-b23e-39a4249c2d3f"
        },
        "item": {
          "id": "87b49069-3b6c-4b92-8a42-86fc3ebd4240",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d0c742b2-f74e-4e74-a329-b6328978acde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5061199-6194-42b3-9a5f-0564ede0b70f",
        "cursor": {
          "ref": "e7d02217-059a-4d78-bc5e-939f836bc68b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a9a933c5-f43d-4f91-8b29-2a6961944f13"
        },
        "item": {
          "id": "b5061199-6194-42b3-9a5f-0564ede0b70f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f40e4656-20d1-4347-a9a2-b1b4ceded8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfee1cb-00cf-4236-ad0c-303e20fcc80b",
        "cursor": {
          "ref": "7ac530ef-d190-4bc4-abb1-17194b76215b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "29187c28-62c1-4c3b-b685-38c8a0660327"
        },
        "item": {
          "id": "6bfee1cb-00cf-4236-ad0c-303e20fcc80b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "28c0db76-7551-4379-a787-cb1d81e6b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f05cb80-29b6-4487-918b-e5c249e726e1",
        "cursor": {
          "ref": "dbe962f9-cdc5-4b7b-a00f-5faeec5808cd",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3c00c41c-d66e-4571-95e4-3b18a9d41247"
        },
        "item": {
          "id": "5f05cb80-29b6-4487-918b-e5c249e726e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3b707502-0470-4ef0-a211-1ee192e6fd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5441b2d-709f-470c-a406-569c31e140f9",
        "cursor": {
          "ref": "c30262b7-6dec-4ebf-b7e5-4526e3ac59b2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dccdd903-1dc0-418a-86fc-162acc1b94b5"
        },
        "item": {
          "id": "d5441b2d-709f-470c-a406-569c31e140f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "246e2a3c-39f4-4a87-94cd-76779771f3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b810f3d-a9ec-4b41-a537-b07fa4627db5",
        "cursor": {
          "ref": "7b09156b-0c25-4e81-93d4-6024dc5ff851",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b12e3f79-805b-4f30-ad0c-a77137afc67e"
        },
        "item": {
          "id": "1b810f3d-a9ec-4b41-a537-b07fa4627db5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fd640721-1413-4cd8-885f-90012c8103bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c25eaa-b570-4864-9095-35dd3a88247c",
        "cursor": {
          "ref": "8fde44b2-d8de-4d39-8e3b-347edf95840a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fe51e146-d168-4c68-8450-00be98aed5bd"
        },
        "item": {
          "id": "86c25eaa-b570-4864-9095-35dd3a88247c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e365d9c8-a6c9-4b70-a951-d67f08504ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283b553f-c1f6-4482-b82a-f6c0eb6420fa",
        "cursor": {
          "ref": "1044dc57-5436-46be-82c3-5f27f6cfb9aa",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a87d0a17-f5da-44cb-875c-0c850fdee29d"
        },
        "item": {
          "id": "283b553f-c1f6-4482-b82a-f6c0eb6420fa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ec972dd-f4b7-455c-9104-63760ea812c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be383394-f9e9-4b48-9a3a-01c339100baf",
        "cursor": {
          "ref": "bbb09788-644b-444d-b902-bf400fc19dfb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bbd4e145-2270-4a6d-8fbf-5df14720bb2e"
        },
        "item": {
          "id": "be383394-f9e9-4b48-9a3a-01c339100baf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4a8404b3-ff09-4c64-886c-060a5bc50545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa01ee5-3ffe-4fc1-8c14-9df2c3ccd914",
        "cursor": {
          "ref": "797649ac-9280-495b-8978-274227cba708",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ca6e32cc-6064-46ed-af40-6442447148d6"
        },
        "item": {
          "id": "bfa01ee5-3ffe-4fc1-8c14-9df2c3ccd914",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "95f0d4b6-a197-42ea-830c-e86307e5598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb74ca94-bb4a-4206-bace-0ea6ea800471",
        "cursor": {
          "ref": "f36354b6-1a9b-4611-a640-20b2b46e8fa5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "118309c5-e0d5-484c-b348-135114b5ac8b"
        },
        "item": {
          "id": "fb74ca94-bb4a-4206-bace-0ea6ea800471",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "59c69678-e17f-46c1-9b65-4ca7e9bb4a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1baef00-e6fb-44a0-85e8-c1d314772865",
        "cursor": {
          "ref": "12caca9a-33a4-4123-a1e3-649ac7d9c106",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "020a27b7-f6f4-4a95-86f4-3729fe8dcb23"
        },
        "item": {
          "id": "f1baef00-e6fb-44a0-85e8-c1d314772865",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "940811dc-500d-49c3-bf26-6ab480fee2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3031f93-52f0-418a-babd-da1b81606b28",
        "cursor": {
          "ref": "3c4e2bd5-08cd-4697-9e1f-fb3ccf20158f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a64f3036-915a-4171-bf54-3c739d96aa0d"
        },
        "item": {
          "id": "a3031f93-52f0-418a-babd-da1b81606b28",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1909495f-b5e1-4a0a-b913-a3343dc401d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c19284-7960-4b6a-9871-a95e6a664b57",
        "cursor": {
          "ref": "eb518e5d-3d4a-4627-a6c0-5a491e68184b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e0690ba-6d7b-434c-8a17-1308e822d4aa"
        },
        "item": {
          "id": "70c19284-7960-4b6a-9871-a95e6a664b57",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4be188df-f8f5-4551-86f4-ab0f8e1094b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada83ac6-f8f3-4ad2-95b4-be8cdd086530",
        "cursor": {
          "ref": "94003859-f3a1-4d92-bf5e-b159cb40c2ba",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "38116f74-aaba-44e4-9f14-20123f09174b"
        },
        "item": {
          "id": "ada83ac6-f8f3-4ad2-95b4-be8cdd086530",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da947147-dbdb-4c4d-94a1-ab2d6f44b5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d328c-1bfc-4b7b-bc68-a70641cdab4e",
        "cursor": {
          "ref": "5e9438aa-a3ef-424f-8874-2c8d3c1b1b5e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "04a41579-eb4c-4806-91e2-4667aea6697e"
        },
        "item": {
          "id": "922d328c-1bfc-4b7b-bc68-a70641cdab4e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "102f14d3-0f10-4a63-b8f7-75469a709092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31f5d97-a18d-49fe-9697-f70cd05ef736",
        "cursor": {
          "ref": "33d17f70-9c5b-4e1e-b1be-acca1dbcfce6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f3d303d0-aa0e-4711-b0fd-cc5b38a25fcf"
        },
        "item": {
          "id": "b31f5d97-a18d-49fe-9697-f70cd05ef736",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ce76f664-8f0c-4f42-8c41-ae8215ec097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d55fe23-5a12-4aa0-a5ee-246422b66d79",
        "cursor": {
          "ref": "30cbdd4d-934a-41b0-b311-71456abc8248",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8a01b966-b33d-435b-bcbb-18a969f5312f"
        },
        "item": {
          "id": "3d55fe23-5a12-4aa0-a5ee-246422b66d79",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8ad316fc-beec-42a8-9ec0-c737703780da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bbf330-b685-486b-ae56-98736bd2e8bb",
        "cursor": {
          "ref": "19807f97-249e-449e-a311-70e236506b8b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dd7e6e04-572c-4c01-970d-c7258fac6f8f"
        },
        "item": {
          "id": "e2bbf330-b685-486b-ae56-98736bd2e8bb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed625de2-9bae-4cdf-909b-bf6566daa140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff58474-4447-4bb5-8363-2b858290a6e2",
        "cursor": {
          "ref": "d238b56d-fa6d-453d-9d3f-a678bc8b6441",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "be3b37a5-fabc-40b4-8313-7ce5ba9f29ae"
        },
        "item": {
          "id": "8ff58474-4447-4bb5-8363-2b858290a6e2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8ce690dd-3600-4798-be99-9a9f454f567f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b882c-b360-4569-9d57-ba5ea0eaf872",
        "cursor": {
          "ref": "d00d9ad8-23a6-414f-93fb-b390c1061271",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f97f71b9-1bb4-41ae-860d-092f84f25346"
        },
        "item": {
          "id": "293b882c-b360-4569-9d57-ba5ea0eaf872",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c3e7e26e-d21b-4e43-8154-e4700e944293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bbc86e-d7f4-460d-805f-1f034208940a",
        "cursor": {
          "ref": "4d0d5d4d-14fb-4439-a5e9-ecff5610f267",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3d3b4682-9e8f-4f5a-9194-826fbde0d563"
        },
        "item": {
          "id": "34bbc86e-d7f4-460d-805f-1f034208940a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "96ffcf9e-e285-461d-bf67-e03569ea2c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efddfa87-12b7-4892-93f7-7e2d2bcfedfe",
        "cursor": {
          "ref": "51651e45-01b3-4866-8ed0-52212a0c95da",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a42e6f3f-4971-46da-9830-bad93377a69f"
        },
        "item": {
          "id": "efddfa87-12b7-4892-93f7-7e2d2bcfedfe",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4ccbd010-295a-4027-94ab-397b9d62569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b30a92-686e-482b-b221-5294e8e46410",
        "cursor": {
          "ref": "5280c15d-281f-4e3f-bbdd-9c6ad119c762",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4e235910-550a-42e6-a2e5-859c9b0c1ac1"
        },
        "item": {
          "id": "94b30a92-686e-482b-b221-5294e8e46410",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e3480f74-a462-4e6c-97aa-5cf99e078b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d24d0b-2c35-4be7-94cd-9f3974287966",
        "cursor": {
          "ref": "eb0ad828-82e8-4b91-959a-1dc8197b111f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c613a98e-af91-4a5f-83db-037cc1321ad5"
        },
        "item": {
          "id": "74d24d0b-2c35-4be7-94cd-9f3974287966",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "867f2533-410c-45d2-8aa4-ba5118e126ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c1eb96-6692-4915-bc63-543a695d7de5",
        "cursor": {
          "ref": "a27c57ee-67ab-4d9e-a654-53394d7069e7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fc0d3ad2-364e-4f36-9add-86fc3988ec9b"
        },
        "item": {
          "id": "b0c1eb96-6692-4915-bc63-543a695d7de5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96667ab5-53d2-41f0-b43d-9da333e051a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcd7864-160f-46f7-a0c0-ca6870f01c08",
        "cursor": {
          "ref": "26137336-74a0-4edc-a390-2b0ae1e8154d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "752c94d7-d719-496b-ac97-0bf281736056"
        },
        "item": {
          "id": "ebcd7864-160f-46f7-a0c0-ca6870f01c08",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5a58a481-6de1-4438-8de8-1ec839a0bc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58d66e9-032e-4254-ad29-9273f6521ee6",
        "cursor": {
          "ref": "0543724d-b2e9-46d6-82e9-bcd5bced90b0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d03c6420-6fbd-4f87-894f-fe1b24720277"
        },
        "item": {
          "id": "c58d66e9-032e-4254-ad29-9273f6521ee6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "65be7876-5788-4807-bc37-5fcc82a5bf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5605582c-dd4b-4b45-91b5-df03b00a465b",
        "cursor": {
          "ref": "e8e753a5-3044-4426-a938-1d613ca5e40e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cea582b2-685a-4ca9-a95e-ed8aaccadbc7"
        },
        "item": {
          "id": "5605582c-dd4b-4b45-91b5-df03b00a465b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "393b85b0-7120-4f29-a1d4-974f5e08f973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeba510-7743-4eaa-b715-ebc898707ca3",
        "cursor": {
          "ref": "47357865-fc1f-4df2-ad07-842b7d98df70",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d62b7988-8d46-4dce-bcdd-be09883ff2ef"
        },
        "item": {
          "id": "0eeba510-7743-4eaa-b715-ebc898707ca3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "21dfe82d-758d-4c43-a878-9e24f4f88378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eacbf4d-fc1d-4b6f-9cfc-496fb84db4ee",
        "cursor": {
          "ref": "d4c29ccd-905c-423f-a513-1a7536c572a1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "11d4e956-c351-402e-a92a-df8ee2acf965"
        },
        "item": {
          "id": "2eacbf4d-fc1d-4b6f-9cfc-496fb84db4ee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7932ab29-84cf-4468-9532-6561a802da5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39893dde-cde9-489d-9652-8dbd67a58cd7",
        "cursor": {
          "ref": "cdaa7316-8323-4738-b55b-748f28c25db9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7df8bda7-4817-4806-a492-977e8737fcea"
        },
        "item": {
          "id": "39893dde-cde9-489d-9652-8dbd67a58cd7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4e8ea33d-4239-4e30-b3b5-91adfd2ca69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce548b0-c69b-4c43-86e6-56194e965418",
        "cursor": {
          "ref": "444a821f-1679-480a-a51b-3a5de064e90a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "476e0b9c-e8ee-4260-8233-ce47a96668bb"
        },
        "item": {
          "id": "cce548b0-c69b-4c43-86e6-56194e965418",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "647cc30e-a32f-4d6a-9108-2d3b27069db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee92d3a-bbca-4470-94cb-b345ac504eaa",
        "cursor": {
          "ref": "baf724f7-db9d-46e6-89ed-cf0177d2b4d4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "89b288ce-1aa1-4caf-98be-5e7abdb2a3cf"
        },
        "item": {
          "id": "8ee92d3a-bbca-4470-94cb-b345ac504eaa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aaa77683-9f41-4e73-850b-d46eca8f870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d6240-532e-4520-a2e0-d06af7153835",
        "cursor": {
          "ref": "6dc14969-c8ec-4c36-9e1a-b0ee4fc2aede",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "56002849-7fd0-4a30-a621-d20f55355d8e"
        },
        "item": {
          "id": "ae7d6240-532e-4520-a2e0-d06af7153835",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d73b1b93-92f2-4e22-b0bb-a6e95f2e1079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e077580-7b32-45a3-85f3-8a725d282546",
        "cursor": {
          "ref": "d7220533-5707-4349-9887-fcfbcbf21450",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d88ed19c-75c8-4e00-96d0-12cc252c96f8"
        },
        "item": {
          "id": "3e077580-7b32-45a3-85f3-8a725d282546",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8a012de5-01ef-4651-966b-71ef851ca641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0e4baa-ac31-4596-afe7-58be830c54f6",
        "cursor": {
          "ref": "c63ae5bd-9f3a-460c-a51c-0ed8220de515",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "74d91c69-7fbd-49ce-ba42-c44e83abae95"
        },
        "item": {
          "id": "9a0e4baa-ac31-4596-afe7-58be830c54f6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "86da295b-9082-4cec-8daf-25aae056eea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea82d8e3-bbf8-4626-a665-8786914123e6",
        "cursor": {
          "ref": "55557ea6-d495-4278-93a4-8f65a4756fdf",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ac7cb156-dc27-46e4-ba98-27a903238e5c"
        },
        "item": {
          "id": "ea82d8e3-bbf8-4626-a665-8786914123e6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6702471d-846e-45ef-833a-c9acfb29625d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7c6e5-d4b1-425b-8ea1-5b5d1d1f40b8",
        "cursor": {
          "ref": "b019706a-6d61-414e-9b51-d87d330cb85a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "da2163ff-ff14-443e-9533-d2a90576f9f2"
        },
        "item": {
          "id": "eab7c6e5-d4b1-425b-8ea1-5b5d1d1f40b8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1cf9a3a8-c3ad-4c64-9a84-d03345fb11b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad177eb8-9eea-46e2-bcb1-843e00f59f87",
        "cursor": {
          "ref": "af9fa52f-8ddb-4f77-bfdf-0da35130c5a4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf80ca92-c9b5-407f-ae76-629ab282491d"
        },
        "item": {
          "id": "ad177eb8-9eea-46e2-bcb1-843e00f59f87",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0171ac44-1e25-43ad-b95c-8a1e0a673f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5f0ec3-02ae-4454-9b91-9f4f5fb98329",
        "cursor": {
          "ref": "aaf13f73-491b-41a2-9f27-a8683b39a3f4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5cff9ea3-ed10-4140-9ece-f682863ea22a"
        },
        "item": {
          "id": "8e5f0ec3-02ae-4454-9b91-9f4f5fb98329",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1bde947f-9bf9-4c96-9b33-545de2f470b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b567d9b-3e8a-4bf1-9927-1452f88398ab",
        "cursor": {
          "ref": "f7ee2f1d-847d-4826-a5ae-c8df00c25a1e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e2134f60-58ec-4623-a35b-f55c5b41b152"
        },
        "item": {
          "id": "1b567d9b-3e8a-4bf1-9927-1452f88398ab",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5d21e5cb-3c4b-4ce5-be1b-7ff66f3a243f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a7a16b-f916-4f72-83ec-4eea94a9f058",
        "cursor": {
          "ref": "b6f6a4a7-5551-4a03-b514-69a442b3739b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fb9855bd-8ccd-456f-9d64-6bb2c9ec896c"
        },
        "item": {
          "id": "d1a7a16b-f916-4f72-83ec-4eea94a9f058",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da2d0be9-0740-4cf4-a6c7-9f35633a2cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653b655-7267-4448-a16b-57a7c8a4137e",
        "cursor": {
          "ref": "da00fcc4-908f-4e8a-aa44-f93bcb18a48e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6c71ace9-0cf8-4463-95fd-9dd10ea6184c"
        },
        "item": {
          "id": "6653b655-7267-4448-a16b-57a7c8a4137e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d886a103-c824-4729-a8e0-d219d05b3602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff112bf-36ae-4d05-9ac6-5424d0cd1d62",
        "cursor": {
          "ref": "1bb7655d-846b-47ef-9e95-81221e2ff8d9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bdb4f603-422d-43a9-8f6a-611e510912ff"
        },
        "item": {
          "id": "cff112bf-36ae-4d05-9ac6-5424d0cd1d62",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3d68efce-0576-4b87-988c-9b3e129a1933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94ed76c-f992-4ea2-9451-3ee0f862c779",
        "cursor": {
          "ref": "06cd871d-e7d8-488e-9864-1ca059e0cd32",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3ffb7f05-d557-485e-9ecb-f809acde768c"
        },
        "item": {
          "id": "f94ed76c-f992-4ea2-9451-3ee0f862c779",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04df606e-2c99-42f5-94c6-86513dad7f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb377b5d-4281-42ea-9ceb-bf6aec85da67",
        "cursor": {
          "ref": "c69ecb63-b342-4d2d-86b0-5b63111949ee",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "72e0852c-86e4-4436-aa93-1ccd27b0f4bb"
        },
        "item": {
          "id": "eb377b5d-4281-42ea-9ceb-bf6aec85da67",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "613f1f93-9b8f-4093-95a0-028413c2c3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4befbd8-8ae8-4abd-a466-09455f9ff6dc",
        "cursor": {
          "ref": "81b04810-22d0-4f84-ac01-26b8e7b83690",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "10492df9-96ed-46ba-ae0b-50cfcece8a0b"
        },
        "item": {
          "id": "e4befbd8-8ae8-4abd-a466-09455f9ff6dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "db3c3e3b-85fc-4ffa-a1d2-0f65dfdf8a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d1558c-9082-4fb7-af9c-dd5750df7a74",
        "cursor": {
          "ref": "eaf12bc6-1867-44ee-9da2-b5777d47a939",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c4ae285b-550f-42d2-9352-ddff5badc4b9"
        },
        "item": {
          "id": "11d1558c-9082-4fb7-af9c-dd5750df7a74",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "85bc9406-edfb-405a-905b-9c9c2e587f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df798d6-8d0a-497b-ae50-2ec8a4ab62b7",
        "cursor": {
          "ref": "e517e009-bb1b-4a83-aaa5-004bd350398d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6fc4f7f6-bb87-46eb-8023-be51d8a5e94e"
        },
        "item": {
          "id": "2df798d6-8d0a-497b-ae50-2ec8a4ab62b7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0f5ff31d-9936-4dc4-bfac-2350aa696e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c6649-5b1d-41ef-81e7-3f669a690f9b",
        "cursor": {
          "ref": "6c3d1dc5-d4eb-4f7f-8e59-dfb1d6690827",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4d1c62b6-e386-4472-a2d2-77e0fc4cc7a2"
        },
        "item": {
          "id": "ef6c6649-5b1d-41ef-81e7-3f669a690f9b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "99441e0f-f2cd-484e-beaa-9908837a8d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3586a45f-d7fa-4b0c-966e-feb997919ef0",
        "cursor": {
          "ref": "2da8d784-43f1-4745-9ebb-2d037ec47a42",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3b73253d-57bd-4a87-9101-77f34f68524b"
        },
        "item": {
          "id": "3586a45f-d7fa-4b0c-966e-feb997919ef0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e75e8893-04c1-4c47-877e-1f9b77b96d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c97e4-1f8a-42b3-a839-0cea7e6ef311",
        "cursor": {
          "ref": "d116c103-9089-4cad-b6f5-b9f0bc89b035",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a5d8ad8-10fe-46ab-9533-a62d6cf41989"
        },
        "item": {
          "id": "077c97e4-1f8a-42b3-a839-0cea7e6ef311",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2bb8070c-e2ba-46ef-840c-a4152ce35347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fde5988-e4f4-4dcb-943c-fd41371c0ef0",
        "cursor": {
          "ref": "4c33e42c-3a0c-4981-9f5e-8550284bf7b7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a2e2f44b-4e29-494b-9393-1316cdb00f6e"
        },
        "item": {
          "id": "4fde5988-e4f4-4dcb-943c-fd41371c0ef0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c88d358-a6ac-4a2e-9c00-d627ab666937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bcc26d-ef9b-446c-a07e-0ddd858d7fbe",
        "cursor": {
          "ref": "8250b583-4075-4267-bac0-3118d2dabb7b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4f35c127-211a-4c27-9431-3764afcfa0ae"
        },
        "item": {
          "id": "56bcc26d-ef9b-446c-a07e-0ddd858d7fbe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e9d2be16-8525-477e-a62a-ea7d2109cef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2748a3c3-93d0-4fa7-b470-70ecaf5ac6af",
        "cursor": {
          "ref": "5490a3e4-169c-4d0d-bdc8-796f070d2258",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "22443a59-672e-4444-abe4-bc785b17e835"
        },
        "item": {
          "id": "2748a3c3-93d0-4fa7-b470-70ecaf5ac6af",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "50607d6a-e589-420b-9705-e91f73892d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2922fe64-c414-424c-a01e-5bad5ddc170c",
        "cursor": {
          "ref": "910df229-5f68-46b9-9a2e-c40fe87e9202",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0c54b16d-64a5-40f3-8f70-da9ec5e3ab71"
        },
        "item": {
          "id": "2922fe64-c414-424c-a01e-5bad5ddc170c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "43badc58-894a-4392-9031-973e84bbffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf57cffa-ea5e-452d-b9cd-b9083364f24d",
        "cursor": {
          "ref": "24da67aa-a433-411a-970c-3214302b1832",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a8777615-2010-40d1-9c7f-1958ce9dde84"
        },
        "item": {
          "id": "bf57cffa-ea5e-452d-b9cd-b9083364f24d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "270c84bd-5fc1-4e31-ab31-480258f607f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa03976-ec86-4b47-86a7-7758fa09bea3",
        "cursor": {
          "ref": "536bec33-b1a2-48b0-8720-4d9cd49b3928",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1e6834b9-23be-4b56-a4e3-ea11e316ddb3"
        },
        "item": {
          "id": "aaa03976-ec86-4b47-86a7-7758fa09bea3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36bb550f-b7d7-470d-b259-8539f6cabf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce877eae-944c-4e38-98c4-cf6d1025145c",
        "cursor": {
          "ref": "db442b5e-4a2c-49a7-b853-7cfa46da97cc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b8882508-9fb2-4c69-9872-bf3d4aef1f8b"
        },
        "item": {
          "id": "ce877eae-944c-4e38-98c4-cf6d1025145c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1975e3f0-1615-4e82-b818-986a2cf6a4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e4134c-060e-443c-891b-ae4156efd6bd",
        "cursor": {
          "ref": "1881cc8f-2ab0-43ac-91a2-5a652a2d3b07",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8ed5daaf-a222-4663-bd47-88a05a17f423"
        },
        "item": {
          "id": "47e4134c-060e-443c-891b-ae4156efd6bd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d9e2febe-ab93-4846-a703-1cbf2830458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0ba875-aa0c-4dd2-bd6b-235791abd38e",
        "cursor": {
          "ref": "40298f8b-c4d9-49bb-a5ef-42311a4c5931",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6063dcf5-66c1-4a73-afff-74efe9cda2eb"
        },
        "item": {
          "id": "5f0ba875-aa0c-4dd2-bd6b-235791abd38e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "acdbf3ff-a604-43cd-8ce2-1d1768e93d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53ad816-6aeb-451c-8e6f-3b281ddb0b59",
        "cursor": {
          "ref": "94069529-bffe-42e5-9973-968653e1c9d9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0fed1cfe-8627-40a6-ac1f-82a6a4f272bb"
        },
        "item": {
          "id": "e53ad816-6aeb-451c-8e6f-3b281ddb0b59",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e70db261-053a-449b-b6ce-42078fe65547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b04941c-7219-491d-8cb5-4b2648285280",
        "cursor": {
          "ref": "2d972503-bfbf-4ad1-a258-3a75630ed819",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cf9067de-b4df-46e8-8679-7cb3cdc58a61"
        },
        "item": {
          "id": "3b04941c-7219-491d-8cb5-4b2648285280",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6f7e9652-8ed7-4380-916d-655f0872202b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0f4cba-bc73-42a9-8d0f-811a270de448",
        "cursor": {
          "ref": "bc1a764e-4102-4ac4-80e1-b847ff76e09b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "53fd7a03-1da0-4fb6-919f-1aef07bc5cdc"
        },
        "item": {
          "id": "fc0f4cba-bc73-42a9-8d0f-811a270de448",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "da53063e-2332-4f6c-ae62-8e9b6965bbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6864d1c-2a64-47a6-ad1a-a9b9d318b791",
        "cursor": {
          "ref": "e2341a74-aa0e-4640-a495-8abaedd7e8a1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "43caeca5-3cf1-46d0-9278-416b7f51b675"
        },
        "item": {
          "id": "e6864d1c-2a64-47a6-ad1a-a9b9d318b791",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6dd41c27-a4a0-401f-942a-f9b73811bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efce2789-244b-4014-bdfb-1ca3fec8838b",
        "cursor": {
          "ref": "4f821191-deae-4810-b062-084cbbf840b5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "24327577-dd2d-4d14-ad6e-4dec5ea63c33"
        },
        "item": {
          "id": "efce2789-244b-4014-bdfb-1ca3fec8838b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa4d314b-e889-44ea-8fbb-6e061bcf8e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c53efa8-4b51-45cd-8167-7b1da19b7c1b",
        "cursor": {
          "ref": "73c4042a-b3a9-4b2c-8875-474ac59a53dd",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e3441605-f4bc-43ec-a690-f5f827aee8f7"
        },
        "item": {
          "id": "2c53efa8-4b51-45cd-8167-7b1da19b7c1b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fec33f28-d193-4e9f-88e8-6fe706da0b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588f9ffa-b91d-4446-8a82-b3a021fedda0",
        "cursor": {
          "ref": "c827ba11-f3ba-4d1f-930c-dad4ecf904c9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "88049cf6-b62a-4e1e-9e4a-645755b90299"
        },
        "item": {
          "id": "588f9ffa-b91d-4446-8a82-b3a021fedda0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d46ff3fd-4442-46ab-8f53-30dc8905f119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61970214-add6-432c-9e51-58d7cd77942c",
        "cursor": {
          "ref": "423324d1-bbfb-41ca-94c0-e32684dafbd9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "90402bf2-c937-4151-b500-46a396d2c183"
        },
        "item": {
          "id": "61970214-add6-432c-9e51-58d7cd77942c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e3cf001b-dcf5-4d26-8c82-ffa1588b58fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d049ce-8075-4099-9e50-c4c440013937",
        "cursor": {
          "ref": "cfe186aa-d37a-49a1-93e5-335441769b78",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88a08b4a-566a-44a7-aaa4-5ff135f237de"
        },
        "item": {
          "id": "c1d049ce-8075-4099-9e50-c4c440013937",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8854368b-35ce-475e-85a2-220c65018354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43606a0-8891-49a6-9bcd-0a4421adb637",
        "cursor": {
          "ref": "7b0cdbf3-77b7-48ef-9f2c-093eed317aa6",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "657a8b19-f169-4592-947d-a016687c2edd"
        },
        "item": {
          "id": "c43606a0-8891-49a6-9bcd-0a4421adb637",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56c90e68-94aa-41a9-9e9f-3050612f84d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247f1243-cd4d-4230-be95-9ae2d93541df",
        "cursor": {
          "ref": "cfa9c1a5-a66c-4406-951a-8af0f4b98047",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a246d3c8-f7e9-4b53-a2f7-0ca53a81ff17"
        },
        "item": {
          "id": "247f1243-cd4d-4230-be95-9ae2d93541df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8aa19e1e-91b5-4364-8b4c-bbdd316b257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04251793-9341-4600-9c7f-9d1fa5dca789",
        "cursor": {
          "ref": "29ab4e9e-0277-4c50-a456-a74c1dcddba1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cb100d58-39db-4a08-9abc-0dc1589bbe59"
        },
        "item": {
          "id": "04251793-9341-4600-9c7f-9d1fa5dca789",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "621ce7da-e195-4f5b-9851-cf3048eb3ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a99a46-172a-40bb-a961-44b3306f7a48",
        "cursor": {
          "ref": "6e8f6ff7-a332-448f-a68c-5353295dda27",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a6cdbae2-6a9a-492f-a8d5-640463ea985b"
        },
        "item": {
          "id": "83a99a46-172a-40bb-a961-44b3306f7a48",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ff5738f7-7eb7-4b82-a017-3012c271a76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b6fad-22e6-4952-94d2-85fa83057b9c",
        "cursor": {
          "ref": "a5cb655c-e361-4f5b-a0e0-87e34ccd492b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "25a95efd-3af2-488d-80e6-46e334b822c5"
        },
        "item": {
          "id": "699b6fad-22e6-4952-94d2-85fa83057b9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "acb8ac4f-375d-4d19-8568-2d2192dff47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92361e4b-5e50-4b9e-b486-9ea1c6fb7c67",
        "cursor": {
          "ref": "3b5382de-2561-4717-8c3f-e6cf2db19458",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "85d7228f-ba70-4da0-989a-5524b2e34ee1"
        },
        "item": {
          "id": "92361e4b-5e50-4b9e-b486-9ea1c6fb7c67",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1b68ee8a-d9f3-4020-8d28-acb09192e16c",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "f1d082a1-edb0-4b02-bac0-b2526d42dd83",
        "cursor": {
          "ref": "09f55204-43e3-4f93-8d7e-cb4fc3d4bbe2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bf62f0d8-970c-4592-8227-3552c3bbd4a9"
        },
        "item": {
          "id": "f1d082a1-edb0-4b02-bac0-b2526d42dd83",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "984f23d3-9c0f-410b-929b-a9a65f7dbda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8e5a96-31df-4285-9b78-5fc7bf2a54a6",
        "cursor": {
          "ref": "81e6c83a-dba7-4429-8d77-cb95aae39d2e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0ac8ddd5-2b04-4002-b534-a9507a16961b"
        },
        "item": {
          "id": "0c8e5a96-31df-4285-9b78-5fc7bf2a54a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c2e218ea-fb07-450b-865f-46cbe4a9c51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd3829e-9641-4c22-aa2e-629ebcb81654",
        "cursor": {
          "ref": "d171f83f-c83b-4551-b91a-60523ed06c88",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e0ccf589-c76c-4db3-aa4a-e63719660c7c"
        },
        "item": {
          "id": "9cd3829e-9641-4c22-aa2e-629ebcb81654",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2746fe00-ca89-4b85-96fe-b68262ac2765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4579f3-2478-4abb-aa8c-4be374c604e3",
        "cursor": {
          "ref": "29d2fb1a-2f55-474e-be23-9a48682e7c28",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "10cb63af-77a8-4042-96b2-d94ab2ba8580"
        },
        "item": {
          "id": "1c4579f3-2478-4abb-aa8c-4be374c604e3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "70c7272e-b682-4e83-8f06-b492ceba68e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9537b8b-a2da-4c6d-9b62-0b27cdb1cff4",
        "cursor": {
          "ref": "abc4b1e9-3963-4085-bbd9-40f18d0c78eb",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "48f729d1-50be-4106-8add-a102057a29d4"
        },
        "item": {
          "id": "f9537b8b-a2da-4c6d-9b62-0b27cdb1cff4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "05547f7c-2371-494f-a50e-f5b22f4088b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0312bac1-ef8b-431f-86c0-9b38602e0a94",
        "cursor": {
          "ref": "f97393f6-7556-4de2-b7e7-c6e9e029f2bc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "612571f9-c07c-4d1d-b5d0-4f48be2a2c30"
        },
        "item": {
          "id": "0312bac1-ef8b-431f-86c0-9b38602e0a94",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c57b848a-b9d6-456d-8cea-977c6958e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0777a22-6826-44bb-b1ba-f994d68f2c11",
        "cursor": {
          "ref": "0d49ed62-46f5-4107-b45a-5de944eb6c38",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aa23a3e7-904a-4a38-8d4d-d1023f1b4b48"
        },
        "item": {
          "id": "c0777a22-6826-44bb-b1ba-f994d68f2c11",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c592652-90b7-4b15-bdda-829b5a8c17ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69acedb-2600-4de8-9c0b-2b511c1502fa",
        "cursor": {
          "ref": "3e325149-7e6a-4a02-9d04-6ad7fd11d30c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2b63ed98-1a31-42c9-be17-ca71acfa57ce"
        },
        "item": {
          "id": "c69acedb-2600-4de8-9c0b-2b511c1502fa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b75ab0e7-a205-498f-814f-f2833f2438f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77ec8a6-1898-43bc-9df6-5f60189c45ec",
        "cursor": {
          "ref": "08d3c0cf-46af-4abd-9930-21e22a957f67",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2570298b-856e-42ff-8c7c-f9abe616f232"
        },
        "item": {
          "id": "c77ec8a6-1898-43bc-9df6-5f60189c45ec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ba01302b-9280-4751-a715-730089cb4e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5ba34e-5bdb-4132-b6d2-a964572326ea",
        "cursor": {
          "ref": "e380f149-7bfa-4190-9f50-c0bc7cf11f2d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7ed9ee69-17be-493a-a0d7-eebce7b99690"
        },
        "item": {
          "id": "ab5ba34e-5bdb-4132-b6d2-a964572326ea",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7a3f4144-4444-4b5e-b649-bf2d60d89ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d44fd7-247f-4535-ad4f-b7c8e5729b44",
        "cursor": {
          "ref": "f6e61c9f-649e-436a-a5cd-3dfb08b9dad1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "38b2a2d3-6abd-4947-b282-410ffb73f1db"
        },
        "item": {
          "id": "27d44fd7-247f-4535-ad4f-b7c8e5729b44",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7a2d5b83-6b8b-4c3a-8fb0-54361778e449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f86fe3-d616-426e-aea1-2afedda701a5",
        "cursor": {
          "ref": "f37c48d7-23b9-4a32-8b29-4524f0c3933d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4767be1b-d8f1-469a-b686-5cde2a2f470d"
        },
        "item": {
          "id": "a2f86fe3-d616-426e-aea1-2afedda701a5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b534ad4c-6779-4b92-8a0d-63915ce7fedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794202fa-bf20-4b6d-bd3c-cbc86b04d5a1",
        "cursor": {
          "ref": "63f114af-034b-427a-b979-e8c2277fc1d9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "070793c0-d6a2-4bcd-ac2c-737f46abd9f0"
        },
        "item": {
          "id": "794202fa-bf20-4b6d-bd3c-cbc86b04d5a1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f68c3d9e-2af9-4d76-9d4a-3fbe6d844ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a223f4e-3095-4d14-83c7-f96b8ce5bf2e",
        "cursor": {
          "ref": "ea122a05-e789-4517-92d9-af7c544539a3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "65ca64b3-20f2-4173-b00d-16b49ed3938e"
        },
        "item": {
          "id": "4a223f4e-3095-4d14-83c7-f96b8ce5bf2e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50a30b42-1e4b-4096-8329-91bbf365fb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21b09d3-0c6d-4f83-94d8-45a906673189",
        "cursor": {
          "ref": "72d16e2a-9273-4da3-b10f-764da2d469b7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "87ac784f-dc90-4199-8835-bf21935e694b"
        },
        "item": {
          "id": "f21b09d3-0c6d-4f83-94d8-45a906673189",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1304efcc-f821-48c1-a023-df959dfee888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6d6273-f5cc-44b3-b7df-bcc5ccb6bc7f",
        "cursor": {
          "ref": "721c59e2-c6b9-4f42-85e1-6cacfd2cdc76",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bacbfcb2-0c19-4676-b61d-35b9ca4d935f"
        },
        "item": {
          "id": "6c6d6273-f5cc-44b3-b7df-bcc5ccb6bc7f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1f328f82-3b8a-4a7d-84e1-d01cd1ab73bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4f0a4c-ed2b-432e-bc26-668cb4d22bc6",
        "cursor": {
          "ref": "752ec148-f076-483c-b5fa-d5cc3de92fc0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5f70fce9-901a-4ccf-a58a-adb7e738910a"
        },
        "item": {
          "id": "ee4f0a4c-ed2b-432e-bc26-668cb4d22bc6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "487a1863-5f49-4b7f-be86-9bb1c184eaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb1fd6-a7e4-4b26-baeb-f2a753e8faef",
        "cursor": {
          "ref": "9b47a209-04e2-4e46-99ac-54448a2e8cbb",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc8dab13-f160-45b5-a126-f32c7fc5fe5c"
        },
        "item": {
          "id": "b2cb1fd6-a7e4-4b26-baeb-f2a753e8faef",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8d38ae56-19f6-4c49-b5f5-145eddb1556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3873fd-4efc-443a-9d0d-397e2954006e",
        "cursor": {
          "ref": "626d7650-165f-45f6-85e8-5adac23477dd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2b47e1ff-3b49-4309-8207-6974addb831e"
        },
        "item": {
          "id": "3b3873fd-4efc-443a-9d0d-397e2954006e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b5bd91c4-7588-4b5e-8dfa-50a90bd7e97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab25580-53cc-4864-b756-af6405f679a8",
        "cursor": {
          "ref": "c33395c1-02f7-4aff-bf25-679faebc1601",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "af94fe91-e64e-42fa-98ea-1b7375a093e2"
        },
        "item": {
          "id": "0ab25580-53cc-4864-b756-af6405f679a8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db890d00-1062-4faf-92fa-43cdab6272c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415b72e1-fb86-4b78-89f3-a8e7804d1355",
        "cursor": {
          "ref": "d9028929-7c9b-4684-9619-c11bd0477f4a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "23af9b44-771c-4437-95e1-3ed69d26cd69"
        },
        "item": {
          "id": "415b72e1-fb86-4b78-89f3-a8e7804d1355",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e99a17e-5b58-40ea-925f-610cd8c922f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7238a1f-6452-4dda-b3b8-a619e5b547ca",
        "cursor": {
          "ref": "549173be-5bbf-461c-bb67-e25c70da4063",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "09d56d21-9be3-4042-994f-903817a4d2e9"
        },
        "item": {
          "id": "f7238a1f-6452-4dda-b3b8-a619e5b547ca",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5ceeee15-ba2d-4f7f-86aa-f268927063e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7c5e96-2c47-449b-8621-ebc81eae7d6a",
        "cursor": {
          "ref": "f90ec4c6-5907-4e04-851f-ba79f8b3b9d3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "73a3f3a0-e915-4aa4-b88c-69adff914f5b"
        },
        "item": {
          "id": "ec7c5e96-2c47-449b-8621-ebc81eae7d6a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "11ad11ed-09fe-4bad-90fe-f3a5b86c34bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9f66d5-1311-4e6b-a07f-a6f2d1700359",
        "cursor": {
          "ref": "74c53a3e-de5f-4da6-9784-3866981e3843",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9f4ca96f-596e-4d63-b01b-700b9a50500f"
        },
        "item": {
          "id": "dc9f66d5-1311-4e6b-a07f-a6f2d1700359",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5e34b6cc-ad37-4994-8dd6-a1d6a95f75e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b40c0-ad10-4e3f-870b-efb2b1089fe8",
        "cursor": {
          "ref": "e6698fb4-3069-492d-a481-0276be31d114",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5aff2ab8-31c0-4661-a43b-f36990f58273"
        },
        "item": {
          "id": "ed3b40c0-ad10-4e3f-870b-efb2b1089fe8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5c771a9e-28d9-43f9-89f4-e7a1854686cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf806ffa-efb0-4c2d-854b-bdd57547c5b8",
        "cursor": {
          "ref": "17f6e122-c65e-4b4d-bf88-79292a094b1c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "90632dfc-7c73-40b6-9de0-f14565d84db8"
        },
        "item": {
          "id": "cf806ffa-efb0-4c2d-854b-bdd57547c5b8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dd6f8fdb-f026-4497-b099-a9e5b788b804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34383c3-8f4a-4703-a6cb-22b402cc4d3a",
        "cursor": {
          "ref": "4122addd-1cf1-4290-81ac-44ed98bc3401",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0213c98d-6e34-4636-a8d6-7cb525e4f878"
        },
        "item": {
          "id": "d34383c3-8f4a-4703-a6cb-22b402cc4d3a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "40ba4839-7a24-46ad-9733-5b882a4041d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782d2600-0c95-4329-b055-26db31229da2",
        "cursor": {
          "ref": "b08f4c69-b4fb-4e8d-b240-b8187ab14799",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9bc13378-add7-4f75-9f75-e159cfa42d7d"
        },
        "item": {
          "id": "782d2600-0c95-4329-b055-26db31229da2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "75b66611-f312-45f9-bb26-9a373e1d8962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a4bb08-da0f-44a0-b0c5-351e9949272c",
        "cursor": {
          "ref": "fde03a13-bc8b-4b3a-85d9-aa5f4300f2a9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "446cbd85-02f2-4007-90f3-7b5a4d3b4a08"
        },
        "item": {
          "id": "60a4bb08-da0f-44a0-b0c5-351e9949272c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9653f155-dbf7-44c6-9014-747de5849f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecde7ab-0b25-4ff7-bf5d-a21236e3d624",
        "cursor": {
          "ref": "f30b95eb-b134-477c-973d-ae6498116042",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ea96bd68-2373-4814-8765-ece9037c8f09"
        },
        "item": {
          "id": "aecde7ab-0b25-4ff7-bf5d-a21236e3d624",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9f75dbc2-39c2-497c-9303-848acdecdf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ef9ab9-82ae-4fd6-9014-2b949e666a3d",
        "cursor": {
          "ref": "1e39dd99-1730-46d9-9218-268d8d152692",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c180daa4-916f-4e1e-b81d-fa1ed8c714d1"
        },
        "item": {
          "id": "35ef9ab9-82ae-4fd6-9014-2b949e666a3d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3cdda0fe-1134-4b43-9f2c-24769189716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f021381-6d9c-4574-bd25-4b9d05a260e1",
        "cursor": {
          "ref": "733bb304-d54c-4133-9de2-7c15eeda416b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "39f4f363-2323-4d30-9c44-5619be0d1289"
        },
        "item": {
          "id": "1f021381-6d9c-4574-bd25-4b9d05a260e1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0feffc13-ff74-408b-b1ff-0344b62a4678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8d2bfc-a365-4d09-b878-32a9b98502d5",
        "cursor": {
          "ref": "c84c6ff5-2dbe-4b3e-9755-eaab5a7458bd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1de84907-fe09-4fbd-a70b-3b1203e88ec1"
        },
        "item": {
          "id": "df8d2bfc-a365-4d09-b878-32a9b98502d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cc940020-429b-405c-80e4-b59a5e9973c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c33457-c9b0-486a-a1df-aeecd67cffac",
        "cursor": {
          "ref": "6b104649-33d5-4bec-8fe8-03ca3eff703f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "66138c3d-cf0f-438e-8b6e-c5e2785b884f"
        },
        "item": {
          "id": "92c33457-c9b0-486a-a1df-aeecd67cffac",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "85a684c1-74a1-4cff-ad2d-08f3a5bab7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3468bb2a-6245-4668-89b6-5c6688bd5d4b",
        "cursor": {
          "ref": "6d2961ec-7729-44d9-866d-d261210ef95c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6c30fef9-3759-45f4-a396-7f7fd4901820"
        },
        "item": {
          "id": "3468bb2a-6245-4668-89b6-5c6688bd5d4b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "59e6c6b7-fd17-46de-8129-efd2f8eb4f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df68a984-e472-4e02-a331-e0084264c0ce",
        "cursor": {
          "ref": "74e61a94-d9eb-4484-9d9b-4880584a03e7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "217bc6a6-bb32-4e3c-9779-686f60a89624"
        },
        "item": {
          "id": "df68a984-e472-4e02-a331-e0084264c0ce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0762d440-1934-4b77-a810-6c1ea1fc303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bb802b-421e-4326-aff0-8dfeb8a9a1bb",
        "cursor": {
          "ref": "0746b0c0-5742-4100-8cfe-b5032e8c5973",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d863bc95-39b2-4cc9-a618-04fd64b371e0"
        },
        "item": {
          "id": "64bb802b-421e-4326-aff0-8dfeb8a9a1bb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ce333759-abc5-4e7e-a714-8b59b2488fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9dd76d-317e-4507-950c-bac31bbceaea",
        "cursor": {
          "ref": "be8de3a6-632c-4417-90cc-44eba4dac1d0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9c067b8a-0b64-4317-94ff-b9a7c46a7b68"
        },
        "item": {
          "id": "9e9dd76d-317e-4507-950c-bac31bbceaea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "918378da-8225-4e9e-9d0d-0d64f738232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6c7a59-49ef-4cd2-8f35-bf77e2c698c1",
        "cursor": {
          "ref": "4e8e295d-865a-4e21-bed0-692036e9f917",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "24552e51-80fc-4ab3-9267-6105c3d70a3d"
        },
        "item": {
          "id": "3b6c7a59-49ef-4cd2-8f35-bf77e2c698c1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dfb9334e-2146-4b5e-b9fe-17d2d5f08dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83554bf5-fe8a-4dee-9147-1d7ae17cb8c5",
        "cursor": {
          "ref": "0d22482f-9b7c-4d26-a836-b940d9882fa6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a472093b-8a57-4225-a60c-f6e7881befb4"
        },
        "item": {
          "id": "83554bf5-fe8a-4dee-9147-1d7ae17cb8c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f992e93c-c1a1-4efc-bd1f-54d4208e9089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdff426-9b46-442e-9851-0276b964a3dd",
        "cursor": {
          "ref": "ba0cd3fe-ad18-46b4-b91f-4999f141555c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6e1c3ef7-a5b5-4703-a087-6d9d0cc9101a"
        },
        "item": {
          "id": "abdff426-9b46-442e-9851-0276b964a3dd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "69c47138-218c-4978-ae46-33fe3daded76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36c8410-c691-441d-9a47-f4433b1fb892",
        "cursor": {
          "ref": "7d441532-f2f0-40ee-9d68-32296d00c49f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3f3e3a7f-b8d0-4e72-b367-4326160f6b4d"
        },
        "item": {
          "id": "e36c8410-c691-441d-9a47-f4433b1fb892",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "012476e2-86ed-40dd-85b9-844ff897b6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b7d727-1eaf-4b05-a892-156f277558e5",
        "cursor": {
          "ref": "c773bdcc-c903-4c49-9152-4822803a7941",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "63f670fa-3069-4b72-833d-ce8ca664c018"
        },
        "item": {
          "id": "e4b7d727-1eaf-4b05-a892-156f277558e5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "834334a0-8d27-4548-8557-64f5b9338ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afaa76c-26ee-4d2e-b046-0876d39afafa",
        "cursor": {
          "ref": "05c39320-ceee-48e3-860b-f11aee852635",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2483c869-b445-4a5c-991d-3625eaa01619"
        },
        "item": {
          "id": "0afaa76c-26ee-4d2e-b046-0876d39afafa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "26e09db5-c3ba-4227-ade4-fe68f7516170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0eaa6c-f0f1-4356-b5b4-6d8ca30d19c1",
        "cursor": {
          "ref": "5418ef42-a4b0-4a3e-b1ee-5375609e6623",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7817a82f-0526-4e8d-bfb1-64814fd0d184"
        },
        "item": {
          "id": "2b0eaa6c-f0f1-4356-b5b4-6d8ca30d19c1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "310fd6d0-4c17-4fa1-83d0-d8fe121ea997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c5268e-f9b7-460e-b0ad-93503c5dd031",
        "cursor": {
          "ref": "58dd8931-a80a-4e98-a635-d30909bf549d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "24636894-342b-4f70-8dc3-980e3a0ec2ab"
        },
        "item": {
          "id": "d1c5268e-f9b7-460e-b0ad-93503c5dd031",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9d5b1f74-18d9-4758-b376-76a6372fb64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b19c4bd-aced-42c0-a3f6-b45a1f546c08",
        "cursor": {
          "ref": "3f77737a-293f-43a0-ac0a-2f793ecd6745",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f066e28e-d717-475f-a361-04d68f635bb4"
        },
        "item": {
          "id": "9b19c4bd-aced-42c0-a3f6-b45a1f546c08",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "66d921fe-26b2-4fd1-bf80-36045f0e52e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6659dd00-da70-4da2-b03c-6de998be61d0",
        "cursor": {
          "ref": "d2732886-339e-49b6-8362-4e120b89daad",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cd7f127a-f058-4d4b-ac2b-f05255189dde"
        },
        "item": {
          "id": "6659dd00-da70-4da2-b03c-6de998be61d0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4f355856-3141-4ab9-a481-2b5df21cf9fe",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "160009d7-49a7-426c-a63a-409fb4c5c861",
        "cursor": {
          "ref": "c4dbdc10-6339-4e61-bf2f-41b8f9d879df",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "450f31ce-a878-4697-baaf-34a412f528c6"
        },
        "item": {
          "id": "160009d7-49a7-426c-a63a-409fb4c5c861",
          "name": "credentials_verify"
        },
        "response": {
          "id": "514a140b-3c0b-4d82-b741-b2df53fb4efa",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f81d74-8460-4e3f-bcdf-45f3498fe141",
        "cursor": {
          "ref": "ae0b32c4-687a-4f1d-b582-0b47bda55d15",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3f7c9114-5f2c-476d-9cc6-b76e61a2b01f"
        },
        "item": {
          "id": "51f81d74-8460-4e3f-bcdf-45f3498fe141",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3c6aa7b0-696e-473c-a615-17fd9033420e",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26a6598-b125-4db1-b4f3-01d513e12639",
        "cursor": {
          "ref": "17a5c2d9-da33-40bd-adea-6693fb4239b1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "97bc5fb4-193a-475f-b9d9-30d5d6b374df"
        },
        "item": {
          "id": "e26a6598-b125-4db1-b4f3-01d513e12639",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5dabeaad-2ea1-4862-9cf5-7de09f16eedd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26a6598-b125-4db1-b4f3-01d513e12639",
        "cursor": {
          "ref": "17a5c2d9-da33-40bd-adea-6693fb4239b1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "97bc5fb4-193a-475f-b9d9-30d5d6b374df"
        },
        "item": {
          "id": "e26a6598-b125-4db1-b4f3-01d513e12639",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5dabeaad-2ea1-4862-9cf5-7de09f16eedd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9145e69a-9709-47de-b71d-5b8a5c32eeaa",
        "cursor": {
          "ref": "3885dae8-2927-47ad-94c7-d592a6dcca77",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d97edf8d-cc36-40ca-a59e-2dbd64eab31d"
        },
        "item": {
          "id": "9145e69a-9709-47de-b71d-5b8a5c32eeaa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd9af76b-5903-41cd-b29f-bdcb9188aa43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d458df15-4ba3-410a-9a62-d5b7569dfd28",
        "cursor": {
          "ref": "41e5aac4-303d-4715-9806-d49766cd81e6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "41a5ab41-df81-4a64-909c-8987f8f80a03"
        },
        "item": {
          "id": "d458df15-4ba3-410a-9a62-d5b7569dfd28",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0b8634f8-b86c-4823-aa68-5c016fd38167",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}