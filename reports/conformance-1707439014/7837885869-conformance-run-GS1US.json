{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "827ef947-e94d-4123-ba7e-1705a6587aef",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3098ce4f-bb4d-423d-af7b-06e2f2fbc64a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a664b9ad-0e4c-4f5e-835d-20d5d838f6eb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5bb70e3-6d45-4e3e-890a-42efc9f8087e"
                }
              }
            ]
          },
          {
            "id": "23e901e3-4c8f-42a4-a3d4-468497774c92",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "726e1ddf-0196-45e1-b8b1-b98a9a307be8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "29665fa8-efc5-493b-a7aa-1c7daa577bae"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9cb12bd5-5000-458b-89d4-a21de3a68baf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9efce025-9035-4958-8e55-acc50906527f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5be8575-747f-456a-8c53-1caa8bd351e7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7553f0ed-b0d1-4555-befd-dfbf24e0d1d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf0ce15d-c6b3-4e1f-8473-0da976e3e60b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4a66387-c438-421f-bc72-dafffce3312a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a4c66e2-e829-433d-bbb0-f9f63a6c6a18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b331b53-103a-4f0b-b9d5-ce6614c524db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c836a94-0da0-4558-9943-737fd118e148"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "520a5c2e-1df0-4cee-a281-7e465a055490",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe17f170-305c-4bab-91fd-2d189eff6d0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a273773-d3f5-44ae-a1ed-775183d45c5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a8d4146-5b33-4cfd-b02b-904f80ec314f"
            }
          }
        ]
      },
      {
        "id": "868923f9-142e-4072-8123-4beba3f8e322",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9f0dc318-208f-49bf-81c9-5213c5690920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e1d9391-e4f0-41f3-9006-1c45d1370eee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64dc0117-672f-4812-bed8-83d781c2bc5b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80ac579-b369-442a-b5e4-bb7499dd61af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b1e0e51-0cad-4aa0-b479-80f7e693e9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eef50f-b342-4742-b9cc-026eb9a392d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caf7eeb-89c8-4271-8d86-ad93f7d22592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c971bb04-63db-4920-88b1-35a0087d16c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74dfa4d-00e6-4f52-b4a2-d504795ca612",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94149e6f-3061-4722-b64c-dd2431d0cdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "980058db-aa97-4f00-bc73-cc5b69ef3153"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9aeea60-ac4e-4e97-9146-d54931339280",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0119499f-67b2-40bf-96f1-73be3a03f2a9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f637c69e-7ce4-4f7a-907b-0b883464a6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "869275ab-6238-40c0-ba72-c9fd435abea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35bebda-b599-4b65-aa45-daff13e27060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a5d0a5-03c9-4917-9c4b-5421456f39e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b0db7f7-9273-4ee1-971a-80ff7288ee95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd57bcba-fe41-4e69-a497-0d5bb51a9879",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd725593-cb14-429c-9c32-89bc96b24261",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9809792b-1bb8-4b2a-8e16-1b79758a4241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89f4ec26-a290-4a5d-9526-e3579c20ccc0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "082234d4-18f8-4fdf-8e77-a19f5b4fb6d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4913852-0030-466a-9c8d-c874bf39cc01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "896d5a18-897b-4475-b4b4-7b30a96e84d9"
            }
          }
        ]
      },
      {
        "id": "57a92dce-74b2-470b-9db0-f3c77b7488b5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8a222dc1-1a2c-4346-bbd1-2ff67af6e195",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30f1c986-ccb0-4dc9-845e-933804951a1d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e42c855d-506e-4386-87ad-845320c36e84",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac7611-2da6-4f7d-973d-90c5212b8a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248b630d-5b90-42c2-9998-f85b7434d990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c56a801-d986-464e-bab2-cb436b1b206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2752ecce-f8db-45fc-9f60-0b5218a73f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53df50fd-9b2d-47fd-a547-3e54a13d102c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ba13de-485e-4bd6-a33a-1891c5888c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6937d167-f779-4839-a3de-03462a225bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa03901-be64-4b41-b156-e03cd60bfbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d41fe39d-e1bc-4093-8142-7eedde1977fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a3ea7-bc25-4a80-ad83-57fae267f385",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994178ae-678d-418f-b573-c47538cf312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9f2fe-6729-452f-ba82-ed24c9e810b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168bffb9-30ca-4bd8-9160-1c488d5b703c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48ca2f75-c89d-4385-bb88-c850b7ba79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43770fe-ea20-4f53-bb05-31c7f829e3dd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f0ca97-e5b1-4f9b-9c60-73118e6bf8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0aefaf-0abe-45d0-b9df-9bbdbe03cede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e328c9-1e18-4f2c-beec-a7c9ae196664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70c5f4e-681a-46ff-a055-6ee7165f56df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10e7e6-cf0d-4ca3-8803-7fdb4ecc3990",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fe82e0-8c69-4971-8dd2-e7897d00c3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6fce83-0468-47fe-9bfc-48a11fdf4f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f4a671-fb01-4f57-bcd8-0417fa757496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b91bf46-86f7-41bd-b924-1ac46e803212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01732115-f325-4ecb-8f36-48a88f69f795",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e486fb-bcab-4469-8b24-b67c47e98505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2801d2f-2979-4494-b5e1-17595aea9811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c54aeaf-f4ef-42db-8403-e4da68eac1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bf425a0-4f18-4e9b-b768-7cfba54bb5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a01679-66bb-48da-91a7-5f78d3bfcd7c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33bc679-b758-4abc-a6b5-4b57e1a2bc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42620baf-f533-433b-a642-6b1b2cece872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a4f3fa-4a64-49ac-bf51-f9e543024890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8919ad4-33df-46a4-b803-e030ee62f697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d336436e-e0f2-4663-8841-4e64661160f4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f7466c-a0da-4bbe-a842-8984a07e877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b355b8-1d72-493c-afb6-04fe62b69b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a132c620-00e6-42c2-8c3b-e1746d39f025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a81eb2aa-086b-41cc-aeae-c93ae9ab7422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5dd486-be33-4c8f-97a3-658a72675595",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d8255-0a82-4a66-bad4-e3fc39613518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec52230-1c8f-4542-84d6-fb658e564293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b726ae-8908-43a1-8f2b-3277d61a5af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1492f3-6275-4bb6-8b09-3718e160f576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46463b4c-9dde-4a4b-9e75-c3f4398898c1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6550bb7f-ae69-4e0b-bfae-8889c6585d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85e522b-8c16-48e9-99f6-94431b3668de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37e8781-a8de-428d-85ce-b51b763f43b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28368d38-f253-4f03-8d13-f8bac0fefff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa8df2-1391-4ec7-bf6e-aedbb6de9510",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f6bbba-f3e6-470c-844c-0d23acee0100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f50032e-6d45-45c5-8220-69e13cec5776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c17e6f-9a5a-4106-9653-f0dd9adfb238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70a8cc52-8cdb-4780-8013-6fbf0674f213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f95774-eb2f-4019-a94a-9c76bb15e0df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611bfa56-0c5e-4382-b946-11f629bc4c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e92fcd-b6b7-42e9-834d-69abe4fc3f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634b9085-96d3-4a92-9fed-c7000eee6d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8e29abe-4451-4f0b-8d10-d7fa4090bce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebabaf49-b8fb-4948-bb64-3a4471223631",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b96348-d216-441d-8d4e-2e9cf002889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd87743e-8ef8-4877-9b77-04c3eda483a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac496ad-9e89-4f52-a72b-2159307ca07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ad5cea5-d682-4983-b890-d717703b62d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7298b8-e330-4715-b02a-397e2d2f5a16",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f572b7cd-5bd4-4a96-b945-7b7cb89d1555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1629673c-f997-4a45-8ccf-460256871628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef39412-5226-4f4d-a217-bb3b732b2688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7859c8c8-4d55-4bec-85a7-6ba560d3dfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27c2148-01a5-4d35-8b24-ce846242d843",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d85e95-bc9c-4dbe-847e-a1445324255a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752f9773-d2ec-4a81-a77a-316dba223637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86990c4d-775f-4df2-9781-10338ada53a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "742c6ed0-2b61-4158-a67c-3cf1cae2bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e295f0-5418-4487-9e55-1990f51de348",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f65ddf-51b8-4656-b8e1-7ceae3827aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d7184d-89a5-4313-95ab-2ad1d197ad24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4174dbc-72c9-4804-8277-f7a14caaa07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cb5ad3e-aa13-4b23-986e-88c35d78dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd96c4c-f5f8-4262-88c8-92021da777cd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8283f6eb-6989-47c0-9931-af3d7e1da917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ebb2e7-710e-4148-a11b-5625fc01a541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf882a-17de-4b9f-937f-09c916fdf0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "190dcca1-e6c8-4388-9ffe-483551fed9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a92571-703c-47d2-ae01-a831ef69fb96",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bf46e9-57a3-452a-8bd1-dd15c4fd32ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c39d8a-cf9a-4cab-9891-10b13a0a6023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7c6c77-0ede-4b22-9ebc-5f8ef4074812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa592dd-94dd-4546-8774-8f7997c85a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5399c84-685c-468e-80ea-2fa6fd163ac8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bec30e-dc61-49c4-8964-caffcec036ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9991936-9fa6-4b8d-8e16-5a2639e9e2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5184eb31-158b-4765-b4db-f01fea5292af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3c7ba9-11b1-42b9-8740-f0a168f37a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4511df8a-1717-4827-900c-13442de267d6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314786b8-39bf-4f7b-a556-b512701c3c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4ddcbd-2772-4c73-a09a-9b9498a25419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78faba3e-bb79-4f91-90c5-c9c2bb3f1e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "beeb7bfe-af40-46c5-8810-d9486f753d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da29f085-ef6d-4886-a275-bdf71b879d6e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec50800a-b4e5-4a5e-aba1-6d487cdcefe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c952ddda-17ee-4b8c-a106-dc2ec14c4f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbead985-ad8d-403f-bf49-a203d078e741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b02acc0-f15b-41d1-a11a-2609ef32faad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac9c236-068d-49b7-a069-b989cccee7ae",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a6eedd-83b7-41ef-b83d-2d8953f468a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946db0e4-5220-4f42-8117-e1809bdbac0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9c52e0-c832-4848-8ddd-d9dbf7337083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d08568d-25a4-48a7-95a4-4679ceba58e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902ce229-74a1-4c37-8aec-ddad77582daf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7aa17b-95b4-439c-8884-a069b46dd955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857b70ec-64a1-4008-b672-5a74a4e0e9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac5769b-4fb5-4159-aee6-bbdeecd549cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "582ce66b-b0df-4ad9-a636-dd598d89a46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d75200f-0654-460c-95b4-2e5afc8598f7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f390bb1a-91de-4754-b796-6be356f41c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce7d1b9-5b60-459c-875a-f7abe5455ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8966b70c-31d4-4200-b906-984a7c84608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d30574-cae4-464b-868a-85a08aa55a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e80e88-aefc-41cf-953b-fbe8e191bc78",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ddafe3-a706-45b5-a5af-3580c4726cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0bd118-fd29-4e59-9f70-52b8438eaa3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16536179-86a0-4733-a779-984ae11453ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46d7d94-4d65-4c6b-b598-11393e4ba653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e6dc58-ae4a-47da-b65f-1ef975301635",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a009ba87-25b0-4ce3-ad71-850527c03bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddad5bf9-b519-4b60-bdb5-b1c88114bd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b79be1-501f-414d-b075-f2682b823bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7517d971-875e-403c-8a30-924727626845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f83fac-83f0-4521-b606-c691366467f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a500bb23-63b7-4e4e-bbb3-948fa3f864c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebaa2d52-0e61-4a36-a876-f8fce98822b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42777f9b-a57f-47b8-acde-b8d82fce1223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f31ba9-0bbe-4b1c-b1cb-8e810cf09563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309b578-aa03-40ba-a30d-ff5a804cdab0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75160be8-14ff-43fe-a721-2c1517e33f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085d4992-0915-40d8-935e-55447be39c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3043ec-2233-428b-a3ca-0dfa9a95dfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abab0574-7bf4-464e-8adc-e3b88373d8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8857af-64e6-4139-945a-f915b871856c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2947df3f-89e5-4574-b4ea-969c92ebc85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f845376-e622-4f44-a776-e6f27fcb71ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80087d68-7797-464a-875f-d7bb9331b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fb6910-6acb-4944-b85f-2db4afbc04bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea7a3e7-4b5e-42d2-9504-d78dee67d6d0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a324611-0037-417b-91e7-4370407135d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0d15cd-769d-4253-83c1-d2ab46ad033a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f36f0cd-7c61-4b97-aa20-94a013409c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "99dd3dc5-1cb4-4723-9d82-86971a6aa22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77a5bb9-5c2a-4a52-9d16-3bbee4cc6517",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcfc6fb-7c7f-4dbc-9275-22b2543cb431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9028b1-b2f2-4516-b6d6-b2ed403601ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d416b4a4-e4b7-4b17-aba6-64fbf13a343e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37778f1-d50a-4248-9180-cb4a8e265a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19428e6-654e-4423-a849-81b007521dd2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f11c6f-72e9-4116-b612-a6b5d3688d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd905452-d5af-475e-8fba-2b459eb26557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ace6962-3f57-46bb-a488-5380b8155469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c038eca9-4e32-4cbc-8dad-dd378da308e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0217673-3cd4-49d7-be7d-ee7106dff22c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3860c085-e84c-485d-b85e-87e360714de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e1b573-4ab8-4a86-8fe5-96c8c9c1d3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68f3f60-ad7d-4e44-9e1e-45ee4899d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f16b89dc-bf5e-4c4b-8265-af31847c297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95366868-a38a-4eea-bf07-514b32877c29",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba16d00-d4e8-47dd-9a9b-58dacafa6aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38a399a-ebd7-4259-9b5b-7d706e28c591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dbf817-3291-44cf-9a60-0a32905375fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95bf8292-660f-463e-a326-2b4ff54d7268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2c7009-554f-4b35-8699-586e6845d7fe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e7012-8d85-4a37-9876-3137ea376d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24ffecb-13a2-4154-8eaa-93961025dc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc93501-3448-4ad8-ab68-c9532dfb7f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c42eabdd-09bb-4877-9cdd-4f220e2e36a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1af316-bc77-4297-98fe-e17734c15b28",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d465065-8dba-4cc1-b3a7-a942969dcce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "983f0031-5652-4fb7-bf42-d7773afc2f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aee212-7955-4523-a1e0-948f1d5e69e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48e864bc-1927-40a5-99a8-73791b81d26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb0e3a-01bc-4a27-9ef0-adff9069b28a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8edbd01-6c75-40b5-8bc0-4c5c6abd2213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c5bb8c-df63-41d3-a8af-7d4cfb28da1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e57cb2b-dbff-4d21-a9c0-b3f94ff5a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72978510-97d2-4ad7-b864-ff7120dcf40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff4a814-69e5-4fee-8a4b-4994ebca9189",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee82885d-1df5-4645-b243-18880fefbc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135453b4-54c6-478e-b4d5-1b7c12b9df8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ab8e2d-53dc-4eae-8a2b-4b5f316ee156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc87079e-49b9-4a4b-b341-88ea6c1f7727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc693e81-7739-4a86-96ac-c917a9945820",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238bb8d9-4f28-48f9-9909-0469411f58d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca518bdd-b103-42bc-b3b9-62ab5c199f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f46c008-a6f0-47e2-8ff9-39509909a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f00c213-5bb1-481c-a679-e5d620ceef14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39624bf9-dd96-4282-b4d6-1c5d90049bcb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb640665-d614-4a86-9e3d-0cd7c6336a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15193356-3fab-43df-8be5-9fba0e059b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4024c0-7ecc-4b6c-bec6-de79917e7db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b980d71-1612-499c-9bb0-c9a955d33aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae092e2c-4ccb-4d42-b3d1-9a108d5a94b4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d87f44-b2f7-4c29-80a8-89ed3241486c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94d3ca5-4787-47d3-b610-4bc8ea670e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ece0191-0a58-4ea5-8113-57225807ba23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33d5ff2a-07d4-4646-99cd-1077dc4bcb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14785c2f-237f-483b-9211-5c541930ce08",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1e56c4-aafb-4cac-b26c-bef76d90dc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d7bd59-79f2-48fe-b33a-202f3750a857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315a8ea0-ea23-480c-acab-d36fd4f26857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "068b1dec-b2f9-4938-a665-62909926e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1935b5ca-4097-4a05-a435-767529a719de",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01e8d85-1ca6-486a-9bd2-8dd1f3302cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da68edad-1632-44fa-bca6-e7de2d886010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d011c316-9d73-4bff-aeb6-de0570e21529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f101ca4-0cfb-446f-8b52-5e34f829d0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479c9e86-17d1-4952-99a9-aeff667e7466",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f194db9f-6a56-41a9-8aa4-5f76a83b29f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcb23af-93dc-4965-bab4-26f601b5ad7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9b4bf7-0050-4fcb-bb7e-2c7fe62a3a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0d0689-2ecd-4125-92e1-3eafdbe18b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e824a8-a2ee-4f57-82f7-cf0c03ef8511",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08ee67f-bb65-46db-9c4b-37024728c6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad4bf38-ee5d-46b8-ab14-f8b0a9c68a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850b32c9-8b31-49d7-9552-3b28d0229389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ded3f5d-5ac8-416c-8a49-8a15dc555933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1e8e99-eef2-470d-9e4e-e87a0878f40c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4785b1-ccc5-40af-a8d6-8f2b8acb0f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc59fd26-e009-4116-b663-641afe14e2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab34741a-37fc-4a85-b269-e45d09df0e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fd5875-dbf0-4db8-9e67-b6def3ffb052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe6bcba-0e83-4690-9ed6-b7a9e8bf4661",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a14bc9a-1c41-4c03-8093-778bba43a61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eadc29b-82ad-494a-9104-d54364e60323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b12498-d8e4-43ea-904f-4fb67f8974ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6057f554-1303-4942-8b65-66bd72c299b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77d7834-a604-447d-b455-57e20b323520",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373925a1-d5aa-4a43-9f1c-03c913dc9d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dcf438-786e-4579-bb32-a57b829b8b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32406ad4-c389-4ba3-bb22-500fac2d8bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de2a15b-94db-456d-834e-d6b676173002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53f6b5-1f0b-47b2-9055-2ebb0b864034",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874f1f0c-790a-42d5-8025-c89e36dfd7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedadb8b-2989-4e05-9730-8cccf861e496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59016dcd-0326-4b43-80b7-d22c0925e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24448e53-de08-42fc-acc8-8ee7eb93c3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1ef012-4618-44e3-9fc1-018f8c100bd6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a9481f-ccd4-4129-bd6c-0cbec6d37965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f28821-b29c-4a0a-b853-fd068c51cd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f7910d-5520-4730-996d-ea22e58f5ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db9b9141-ceb6-494d-a314-9abe916b9b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1183c107-1fb7-4c04-a1fa-38a663c04d2f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dda542-c597-4d1c-a98d-3e3dbe32036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86138454-e623-4311-9eee-c1ddb7065391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e045765-59d5-40d1-881e-54d0f834a346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c6b019-f984-4467-9e67-f8d7e24ea3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052302e4-4374-485f-871c-181d097ab2d6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f6eed0-7ca3-4176-ad6a-46767c75f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c93f8e9-3a91-49e4-b575-e8f526bc94b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3e36df-0536-4149-8246-6f0bc952d5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd123f5-39ca-45c4-874f-5b2eb1f57523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163f35ce-2eec-4bb4-85ac-16286ad9cbe3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d33b62-3138-4783-abed-854164801eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d80835e-268b-4a51-919a-5a87c639a6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f44d19-c7c2-4ee4-ba1d-39b1787a5c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "026aed13-e523-49b3-9644-e934cbc3270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b61634-6659-42c4-8fc4-a0278ef9cc3e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1551396-567e-4775-8246-331fc5ec1f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe94a2c-5ca8-48dd-8f86-b45ea1f56a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d61e7e4-8ac1-429c-ab35-66a7993b5b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f320555e-a3e7-4aa2-8ea2-22e7cee88425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce78cb82-7fa5-4f22-9be3-df51b8357cdc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896dbff7-a9e4-46ab-9378-fbc19c787e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6c5605-8a5c-4d2b-8fde-306b575372f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68942b32-3b17-4e57-8a1e-8812b66cdf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3195cd2a-1d81-445b-8901-ab87adb7235f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f7f811-80c5-4bff-a673-748b27258246",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f9e88c-f4cf-47d6-8c2a-df0c9abde0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4c567f-7974-44b5-8869-951d512b290e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16a88e1-db70-42a3-b07e-967dfb3d91b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd43963-0520-4991-a6f0-dfa87c98fb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f222a860-f2af-480d-98a3-20dddfaffc4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cbea46-bb3e-46eb-8e67-1979b63ffcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2b0f4a-1b37-45c5-9f80-fef9fb099517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9134fbeb-0c8b-4f75-837d-f4a1d9a2a497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b56f9baf-74c9-4fe4-9dba-b8fca8a2785d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805c86f8-a692-4c1c-9f4a-1b19cf800ddc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa430c04-a87b-4714-bf63-5b8d34e10e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d1e7f9-c353-488d-8f7d-01630cea3754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6293a41-88be-4540-9446-942969df6705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf692e34-dc19-4ae4-8528-507c407c2347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0efa26f-e051-422d-8549-639138ebf6f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7851a1d3-1309-4b54-b6cc-54aefa25c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "786bcf7d-86a0-440c-8e2c-d3f8fea8a898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149102bc-b08c-4a86-b4ed-4af3a50b57ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23c938a9-23dd-49cf-ae31-9335f7712e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774081fe-c0d5-40e6-940f-1be0fc3e50f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6a970f-239f-4521-a2b7-02085e41a563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855a103e-a7b4-4e1e-ad15-f240e5a4e067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafa0005-aec3-4f2a-9e14-cac00e32a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ea1c3a-5019-4da9-9456-4912b4216eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3a476f-57ad-42cb-ba58-db64af4321fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea225ef-e987-4ed6-a202-3b32b5de0cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb40d35-eca6-4c7e-b64e-dd5d53bec715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1d033e-e267-4b21-8c95-a67949fc4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "509f0d46-6fd5-4af4-8b90-cb56bc3d7134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21955415-8cb6-4885-ada9-0eaef82b2b03",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8406475-f41c-4330-9a46-b8ed88030fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1baeee-fa1c-4fad-a869-a1838acec261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af6954b-da79-4d9e-bfe9-6f273b3e5f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7494dd54-65e2-420f-aa1a-5a86da6fa427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44d038c-4a5b-4a11-a005-d386cc54831f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d17d6a-9549-4450-9f48-11063eda0f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1253731-05c9-4fbd-9800-fc860373b16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b94ee8-2b2d-4f2d-95af-4ce2f70bf369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99536292-cfde-4c7f-b827-1662b60ba7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa2d89a-9d3f-4023-908d-51c6ef846fff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6249a09e-df38-4e96-8d8f-2ab009b5ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f425199e-1944-4638-ba6f-32beadc46b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c11fc38-4a26-4c2e-a6ad-011a3d99097f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a09ad6-1301-4539-b6b1-db5080410a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea0d0a-f7e1-4b3f-9e39-9766098820d1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbc7fb6-aff0-476e-be37-ed29ae191065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e582f81-3eb0-4af0-ae45-3ea0673f2f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32623eb1-2016-498d-8496-005baae5522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e089a0fe-3e36-4b29-b976-3626d67ddc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52789e4-a0c9-46bb-a20d-1f765c127c31",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce905573-46c9-4abd-bced-4e0ca82afd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a81dbac-3a4b-4267-a8a7-63ce28e2b221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5924d753-06c8-439f-9ade-7776cfb9d8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e49744-3492-4f78-9bfd-bf8600a7ce2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11ee2bc-f18e-4217-852a-36e84bc442b6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075cd76a-060e-4f84-bd9b-d4813ff60ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a54950a-b428-427a-adfe-2cc75eaee503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed87873-5e19-4fcb-b62a-c97636f1c4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "299b5aa5-ba37-49eb-82d8-9904f60d80bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f480005-a8cb-48a7-a344-4db1c43072ff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f990ccda-d1a6-49bd-a6e9-6368fd44ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1da971-bf76-4456-85ac-3eb06a7c35e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7071fed-4a04-49e9-94cc-b851485bf44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "393263bb-cb7d-4402-bb2e-7ffca57dc1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e479268d-6773-44c5-8e3c-abc9843e158a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb73dc8-c10f-46c3-83fc-eda2decec421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f2b9d5-7c5f-4b25-b777-c0aa3ea9da6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee93141e-4e32-49d0-8435-9cc47fb42eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb73d0bd-309f-4731-b972-1115fca3a71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf5ce11-5336-4413-b1f0-1a1b15335c06",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d06de8-aaef-4a28-aa56-a759aab5b21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ce0813-973c-4394-ac10-f60ca56e805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e4f28f-2141-4d63-be68-ab6a737f79e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77effde4-39cc-4e00-a06e-935733d093be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f44ee1-5bd3-4fb3-a5eb-bb9e330b3bfc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b89d18b-aaf6-43a5-b166-67ede47d7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c7ec04-e898-48ce-bd40-fab836bd6e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f02125b-7c35-44e7-8310-029ef2aedb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb871ed-0166-4012-8c00-da3bf1cea562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f88bce-53e5-4429-b934-c0915a3e6d5a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db48104-bba8-4616-bce7-e0b8d2bdffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0831cd3f-fa44-47bc-b9da-adffbec2e09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326c57fd-3a6c-49c7-b908-dde9cfd38076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a928a7-6a4b-4e9e-810c-0435d672d471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b3667e-9cac-43d5-b5ad-4556d3bb96c9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5a2edb-0720-458f-89f7-40ff6ee12c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfebd9b-a4de-47e0-afb6-841cd3a1893f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e38619-5276-4db7-ac0c-5abb55b99b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d36aab0-6a53-447a-b3ba-53298fe9726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b1d2b7-aa67-4933-994e-b12c5c2fa480",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c97e32-2a7b-47da-9b7a-e591f48e0a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e29fbe4-e7d9-4090-8967-c85f734af89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac804255-7f81-4570-ad0e-499bf89cec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d0212d-2630-4356-8d2c-b739e1d32636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca8cdb6-47fa-409f-8bad-ccd0722d9779",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f949dc-3136-4873-84ac-8556ec3c4af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbcac64-87cb-41af-8e9a-91ea94cccf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e30280e-75da-4e9e-89bc-09e5ed0118b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f864b0-e00a-4562-8a12-9873c3b36f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1cf231-d794-42a3-a58c-7dd0814be02e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad8ac9b-d1e1-4250-9c9b-7f586ee1efac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999890a1-4d6e-4755-93eb-67b07fe18e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ba8745-1c3b-4c8c-8923-bb69e1ab7c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cc12c2-bdce-4625-8a4d-7159568a9212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891383da-2c3a-4089-9a05-0be38f85f85e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9fc9bc-2f58-4fde-a26b-5c362a63b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44a4a11-9114-476a-8874-0b230fd5b655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc39a3b-be64-482f-8fe0-ecd6a4d44b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20889d96-9ca1-40a5-8c46-30538c4ba73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b14bb90-8795-484a-b341-a1620f64e08b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eb682a-6868-417b-a7f8-bea234f20ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40753aa6-4400-4b5b-b2a0-a8840fb57499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1644d477-08f0-4408-8b9d-07e59c628593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aabcbf6-af8d-40dc-9a29-c09605a372dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3610e430-9fe0-4adf-9fb7-51581b5f9331",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706bc2ba-e4b8-407c-8824-45bfb28e279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e4c809-7985-4f60-a667-078418b6019e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72754ec-bf08-47e3-9c13-5352787e5749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7f903a-56ee-4d2a-b0bf-8a4c1d2792c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4fd141-7514-41f3-a3f9-cdf39f44827a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b93eb2b-e0ef-43c6-8357-f038c13cb995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80efa1f-109d-4c1f-aae3-af06624f058c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6df0c3-e499-460f-9cce-57cbb6bc4b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9bc6d6-42c3-4e72-8dc2-acfe6d8db49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2a95e0-983f-4405-b896-aa8e4148c0d6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79da622e-ad2d-45cf-9f46-3767d880511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc11da2-f0ec-4948-9c73-5488a8f8a5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5171c88f-2ba7-45f9-8963-a2c495f71165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2803f44c-8102-4994-b934-f41cf3832115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d844a475-be3d-4ad8-b6ab-c1334c0082b9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8dea5d-2682-490e-a99f-34c6564a57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8372cad5-853a-49aa-85c3-1c81c30ff7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b26c904-2d51-408c-a132-3914e70dd09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5b32f1-39a8-4ca7-a4da-247327dca014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb2325c-eb44-4a27-8ae4-c456ac490573",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1628441a-f38a-45b5-8164-1a43d80ae4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb9d7d1-75c8-4997-beff-76fd39f73a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fa0ef8-ce64-4980-8598-52d1b801c64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19e6a44-9937-4482-803d-98583932c8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6efef95-f536-4bab-a696-d6aebbbf5891",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75838a47-4b3f-4a0d-9672-6d9aa2c01098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66239009-955a-4be9-b4f2-385c99f42c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b62ff-a5d5-4ea7-aa57-a4ed4c30e75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abc573cb-bc4a-4a6d-b88b-7ba5c1241adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce36675-ea3c-402c-97d1-50ab2e496d05",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7497884-0216-41ff-9eaa-c75f221071b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0756d8b1-a21c-4e7d-9462-3d5db56efdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0179cf20-de37-4ca8-b825-ccfe7efc9ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dba8646-b70c-46b7-8cc0-607200f41730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05e91ba-4eab-4698-be04-ac1396b8e6c9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d875451f-9fd2-47f2-aeae-a2a24a9397f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc5e2e5-2433-4531-a66d-5228a1febfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000aa1e-7c59-4ac1-927e-d19cd964cde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82e5f28b-2939-4422-8216-bd2e0ca7eea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c9c808-5e24-440b-8b61-129193d841eb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60850da0-ad8a-4854-8b97-830559390d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6565bc48-0bc9-43de-9f1e-71fc1b137ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc900c4-03a8-46dc-858a-0ca5a1de412f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ee6e80-f70c-405f-aa44-e4fe6605c226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c81ff79-528a-4371-9f16-4a798f7a35c4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0e7a5-1004-4f27-90f2-6c96bfa79c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5e968d-aaa1-45f8-adf7-0147d45d3a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c77f1-57cc-4746-a4d2-11c8cb72cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6136854b-64d5-4cf7-95f1-8477a8628831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565a07e1-88f2-4aa7-a6c3-d0b7173d234b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dadf4e-11b1-446d-8aea-318805b7d387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0158b1e8-8d4e-440f-889c-b641e9abe417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87eba40-2502-45ab-919d-0ed9564b42ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65eda7b3-53f9-4e10-a598-5cc7f29daa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d097a1-cb09-44c6-8903-cb692f950416",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db56e4d3-ea6c-4668-a810-3327212ea544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e475867-54b0-4446-952f-fef781030db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfaecff-c45f-41f3-be6a-a9dbdd39076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5321b15-457d-4147-b406-6888718afbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d21c5f-829d-47c0-9562-e871a75d65da",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92399533-714d-44cb-bd2d-06656fa74ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36feeb05-57ec-4760-849d-1aa9f8cbb878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fee578-5001-4a77-ae8d-14ff14ec8f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "900bc352-6a6e-4bc0-9a54-12961ffbd512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfee251-c1c3-4245-a3bc-b456c8bfe4e4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8fdb71-2cfb-43de-bdd6-8b1eaff232e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06319ea7-fd2b-4d99-83ce-4824cfbb2bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556ebb8-6a2f-48e2-826b-c7a844039f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24418511-2cab-4119-b89e-71ed75778331"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87c3704e-9a19-4081-afbd-0bba80274534",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c167cd0-c563-4ff9-82d6-f816d20f71ea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcfb79f-3535-474a-9f76-a2cacfe343cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "958db7ac-31cf-4677-a360-5d1e5dd9ba0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d03c4a-d9e3-4474-96e0-0594cdd7d0b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbd584df-d929-48ec-838f-ea5b5206ef5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bc4361e-fd6a-48c0-a9ab-cc055b635a08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5066c4c-6a1b-4e54-81a8-c23316c5c0a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66d111ac-58eb-4a75-a61c-f8d9b6655d6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b029ef53-8b3c-431c-bf56-54acd324b90f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ae6deb6-fc7b-452f-8a26-eb44ccecbf6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b00afb9-2a43-4bd8-bb4c-a4ccdbfd13b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5058135-d303-4758-b464-cc11cbbc9ea2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5183766-3327-4199-902f-81a6c2d46538"
                }
              }
            ]
          },
          {
            "id": "3e1e2098-f6f0-4ca3-881b-dfa4306113b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "136ce851-535a-4483-8b3d-2233057673ab",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "739a5395-7e7a-45da-ba9f-e70f3718eb1c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa512bcb-fc99-4b62-a781-eaf9cb227101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29db42d4-e712-4115-987b-0029e4161e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a540fba-7574-4c2f-aea3-b558ff1ba016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9c9c3c-7a33-48dd-ac9b-e903173a58f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39488a74-792a-4395-b933-6ba78ef7224c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc234790-bd07-4941-9df0-a3749f3fa8d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "781c2386-6bf6-4247-bcb2-f58540eac1b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df04bc5-a650-4511-a5eb-1bb1b9913a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41111a4e-495f-4cc5-bafc-c7c6c3270145"
                    }
                  }
                ]
              },
              {
                "id": "de85e5a6-fab8-4b10-b3c2-515a9aae96db",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97ad0159-d70d-444d-a23d-b28c8b3899e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9181ebab-f62e-441d-bbea-8f8808f72536"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b799817a-6aba-4420-b8f5-0598301ec25e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8e44759-c36a-4f31-86b6-2a949871a660"
                    }
                  }
                ]
              },
              {
                "id": "f026359a-cd77-4b7b-be5a-2e792bb6917c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "feb1f7c3-a4a6-40ee-a4f7-3c5f5b96502d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30ce8c29-98b9-469a-b8d8-ae3d9a6a5615"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79da7b0f-267f-4ada-a8a1-24d42f806f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7dcc2e78-fe36-4c4c-b8f6-d3df4d1e1287"
                    }
                  }
                ]
              },
              {
                "id": "2cc33d80-05b3-4691-9c87-189b0c4fe84f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ca57cfe-4ff0-4290-a680-a60ebdc3fcc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41d1896a-b27f-4169-acef-84e7afda5574"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5915c1d4-923e-4da5-86e7-82d2a3ebc55a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "44d426e6-46d4-4959-9127-7f80789934c0"
                    }
                  }
                ]
              },
              {
                "id": "122bdf47-0048-4d62-a62b-132abc2eca6e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86eeb516-1913-4836-b553-784b20f05809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9df55a6-f517-471e-a589-0e150b317e51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdd2f510-36b1-4330-b0b4-eb282a2f6687",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4bf669b8-e93e-4f3b-80c3-e7c889345f52"
                    }
                  }
                ]
              },
              {
                "id": "9099653a-8cf5-4794-a4fe-1a8854f94dc0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db310005-72cf-413b-b464-7eb515762d57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3634ded-01a3-422b-a6da-bd451fd6f50d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86abff2-18c3-4899-b5b6-95ae2f905c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba88e799-977f-46d5-8a4e-2c06ac9fdaff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17475a7d-f56a-44dc-b018-4dccf88501a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52b8f8d5-c400-400d-916a-837085c28f2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "505bb017-39fd-45a2-96a9-5a92efe73f37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cee7f787-14a3-4bc1-a4d8-b3eb4019235a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39adf146-e5ff-45e2-b2b7-0df299dbe863",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30a6bd2d-2715-4793-9dc1-0d56b62224b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5346a22-a867-4cd8-b7a7-9615179806d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ee5a24d-f9a8-4269-888e-4328df6fe45f"
            }
          }
        ]
      },
      {
        "id": "dcafb9ed-c8ba-4dda-8308-b1a52c99aa70",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b20d5d4f-1916-423d-8cc7-f1ffb3e9e201",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e5fc42f-6332-43bc-9d8a-e76e637c897a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee332f48-814f-410c-bed6-388783f90300",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a9508-6cbb-4294-a482-3aebc02d41cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6597ce91-44d2-45c4-819e-dd945ee617ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94695862-1f25-4820-b1a1-7b4f0a81ac07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cc2f0b-1dc3-4832-b641-e5fb755b81f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273d4380-31fc-41ea-a48a-fad229dea4f3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa89c4a9-c2b8-464b-a39b-c1b11ab03741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abebf29a-aedf-41a6-8189-0549753f98c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e019d6-c9f2-4842-9268-e8647e606959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7402f0-2793-48f6-8d98-55319da6d69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2d84d2-54fd-408f-9dd5-12738cc6eeef",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a19cb8b-6fa6-43b2-91c2-4f16c93bec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a929da7f-11a6-4c73-b924-a0971681c1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe88a7-0016-46ad-8a67-dfa2fab79751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ac1d8c-fc75-4e4d-8992-a7f9ac37d8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f945f805-171f-4000-8b00-9cc83f48e8e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c503312-0d93-49a9-b419-351878ae5f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8673ad14-ca9d-45a7-9120-b519258e52fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d15a70-409a-4084-ab00-adabba533f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b91143d-0210-4b2d-ab90-56b61047343f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f687892c-06db-46ca-8c5b-f2fbcb739003",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eddff43-3c5f-4040-b1e8-def4cce2a609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee09ef82-74d3-4509-bce4-fe4de995d573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95806e44-a733-4b7d-b02b-c74132e0776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68498e1a-7039-4506-9413-d9a3f92915a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f586a8e6-d5cd-4a13-ac8a-ac01ce8bf1d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e183c249-1d6b-4285-a85c-54a8f0c03be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8e02d3-68d9-46ae-ab28-c5b492f6e6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbc68e5-7185-4879-8abb-5d420640941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f341e8-4657-4fbb-890b-de11be8fef88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10c4710-8ec0-4ffc-a3a2-c24f2a7144b1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc492079-94c4-417a-a7c8-d15a16205418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629c7572-a185-4f67-bb39-f4934ce52d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daab674c-fc23-44dd-a789-25880f8abd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "370354df-b3f3-4b9c-a05b-6bcf489e3c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decc93f4-216d-499e-bcc4-6a37881c03c5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fa9ed1-1386-4dc5-bd53-e50811624fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb694c6-c267-437e-aac5-0d319104b74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a977465-f796-447d-b877-42d721d9a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d867c4-162d-42b2-84db-19df499a2632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93cc9b4-63b2-44ab-a7d9-ee2bb0fd502c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e37f777-386b-4cf9-a490-0c1f1f96ab0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e2257d-3b4d-453b-a453-670f374124b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0c5596-6052-441e-a0b9-50478ea9b3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db53ab37-8e70-4aae-b777-7b9ab91748f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15d0d1-d459-49e4-912a-6dd4c876a421",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67507073-d644-40be-a0c1-79a088109e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87d8548-17aa-49fd-9f88-b755895c41ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5466b5d-7530-41bf-9595-6330696bfd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f1563c-874c-4555-b4ee-dff3cb66024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e958c5dc-30ed-4691-accc-fa68c107bf0d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2af8bf-5b25-4ac6-b2ee-13cc1d68a489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d81fdd-75c8-428d-8ae3-825f00d160c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1288018-3580-47d3-bfa9-54818a03b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d70dff72-1d40-47f2-af77-079d075e9c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936f060c-4dc8-482d-86ba-5a3e8eadf201",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2a4cf-e41e-4480-a48c-320ebf0ec1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d96f78d-31ba-4041-8526-772f4c578e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2939239-2270-4ba3-a810-908699ba410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fab20f8-3f43-4694-aa3b-43f00df6f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb39d8ce-a51d-41d2-acb7-c3614cce2ea2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a4ee8f-1732-4da3-9cf5-d2a664233eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19ea68d-de0d-416c-bf10-f9b2b6637bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce913027-da4b-4b65-b85e-94c9cdcdac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91870eb7-7333-4bd4-b3ec-9c0877e2f1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370dd0e6-ec85-460d-bd9d-1ccec09842ba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b0bed-93c9-43c6-86b9-001b1500b728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd436fd-aeca-4482-aebd-02daed1bb7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21b0aa1-7b11-43d6-8da1-44f9d44523e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8aa053-3a64-4eeb-a2d1-3aa13a0a109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17674ecb-0d39-4251-9729-facea9eb601b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d646ad-44e6-4c7f-b01d-46b0a51d7d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e6cd81-1616-4744-ae1d-4913bb213466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec23f40-10c2-44f0-92dc-c8b4db0bc4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d8468d-c392-4806-b1d7-1bd3ba884b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e04a3cf-56d5-46ea-8e07-a849f6465d8f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9a9605-be08-4483-94d5-48acc7803e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f22c67-ffa5-4652-8b66-827b9787bcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877454f9-f2a3-40d5-80e8-7a6b652cd2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1552297d-f0e0-43a8-b7d3-845bcd23bfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9f6978-41b5-4729-9f69-4e5bca5e08a1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc61fa-3a2e-44c5-ad9e-2254c22a2435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff7d754-c26b-486f-b3c9-0bc43c1b2d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5168fe00-ee04-428e-a4f7-9d6849913da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82a6beb-625e-46b8-a32f-b497460dadc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a58336c-85c4-49ce-864e-1a9defb193aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3648c9b1-7d47-4a41-b8b7-0c085116d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c7e8ef-2a7c-461a-bced-9a754e5b6bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fcde08-a137-4bfc-a934-457943cf5681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75deb4d5-8c14-4b6e-b998-eba363e4db7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056525f6-f184-4297-bacd-5735acd72c54",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1968bd32-67e3-4acb-a1d0-5f056f7be9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802beb6d-1d57-4e58-8654-050a14864438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cecb69-e923-45f4-8eb8-16f816cc95ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8cb861-30ba-4e54-b127-dfa05abceb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4513615a-eabb-423a-9524-883d3f023406",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1831f3e-eab0-4b57-ad4f-b1d0ba1b2203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c883ac3-9039-49e6-8e5b-0e30155755d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf5f10b-79c7-4db3-85f1-3b8895cc9dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee87366-1350-4a19-9aee-028f8ef9dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3ff613-8c02-4bb4-b159-0a5e2b776183",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7db4735-6be7-4835-99ff-64d3730f668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fd7c3d-213b-46f3-ae4d-5f96389d49c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceb1c92-adc9-43a9-9fc9-c0e3b71aaad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdaf0ad-c186-43c3-b3a5-5f0d7a5da3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f9623a-2798-4b71-9aa0-7b1ee55bcea6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97393ecc-5eed-4f34-9918-ab8c03eac577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8346deb-a2c2-45e3-b2ca-99787c370835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ece4a9f-05a0-4425-924e-f29b150e0bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44625c3-9286-4b67-9488-540f80162179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc33a57-14b1-4ec1-be38-2dda5ef85a13",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8433b980-d911-46c2-a0f4-e8116b666913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03d07ad-8269-431d-9e1c-f770c51521f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18d8d51-d93e-44e3-b996-f9b84203559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b61593a-a8a8-425d-8847-1fcf34851a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1647b72-3e24-4884-8560-458e9bea5c2c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53195ac-ff93-41e8-84c7-32d987ef850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197bfb1a-4e7a-4530-ba08-7d48cccb0d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d8bdb8-c22d-4bb6-b210-c669786fed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69bd5d8-0f20-4510-ad61-52e2677bc282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608cb85f-374d-4e34-a13c-8874c7137590",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e55cdae-f510-4c90-9ff1-f0dd40455c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a46bb99-2249-4ca4-aaef-189f277e88a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2c1fbb-b1cc-4e27-be16-2820a735421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb5d3c3-ba78-4895-b393-3ca303caddc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f4267c-30d7-4e73-87b8-37d62058889a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a25cf15-9954-48d9-9cff-e07b044ce71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d06d8a0-fdca-4899-a524-b63bd4c0d2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef13dde9-952d-4cbc-8510-4e9413676ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62033c1c-6eb5-450e-afc4-017153995280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3856c4f-6986-4a5e-9985-e628c59f26d2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda299e-c2ef-4761-8889-bd6f5036f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf47bce-f493-4b7b-85b4-587e06086ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40f7b1-2ca9-49cb-99b1-803ca7017d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fa5b6b-8437-4f25-aae8-40d5dec4d467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5daf442-764b-4340-821c-2ac06dab1565",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c1d24f-741d-45c6-8129-01651d8e60a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccb66fe-7468-470f-bce4-2b4b06a5f929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7fcfe5-09a1-4738-bc4c-55d43188691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59903f05-5be3-4d80-894c-30a9a793a491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6589b7-7df7-46d2-b4e2-af02ce61e065",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a383c6e0-f106-421d-a54a-ad4d731e0c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7d74fe-8429-4753-94a2-57c684a1b6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd74109-5e40-4903-b73b-103930ab78b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3de75f5-b630-44b6-b3b5-8d9a13edf7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c08f63-0bb6-4e79-9355-655ba84bd991",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2722dc55-552b-4b0e-85f9-99d52d5425ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b323914-6573-4ae7-b3d5-a91f052518ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1738fe1-b1b9-4564-a70a-8a920167f51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c049a8-5b70-4201-94fb-3d890b5c3618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13b910e-e643-4d61-befc-376a5ef280a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6aecd2-c035-4089-9fe7-b3d3a3bad3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5e69ac-91c4-464d-9e31-db77c49941c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7280e7-2cda-4479-9701-c61bfc2ea9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136731b7-9e63-46cc-83d2-f329a1821335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fafb38c-7494-4bb0-9ea6-812174ad12f3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a410b0e9-d412-4010-8f6b-71ea879006f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ca81d9-cea2-4214-8d02-9a49158a3fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0c61b3-7e8e-4663-9cef-444d9fe6fd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe2eb75-22c7-42c3-a96e-418f8ebd63cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "821d8253-667f-4027-9792-c48d0eb4cdac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04ab978c-27cb-476b-af4e-aef191545b23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484e2e3b-f474-4b81-9c4b-51243f3d8440",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "959868e0-09ac-44f5-86f9-3b64b9864795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fc8f05-c666-4cd8-8e8d-f842f2801163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "825ee6e7-0f9b-470f-9c71-3ca0ba4c194e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ca13670-abfc-41bc-ab04-20837158bd7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f254489-d0d1-407f-a3ed-b5ad8770ce1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56fe5b24-3582-4670-8371-fc7d0612584a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b256a1a-e9b6-41d2-b699-1fd8041cb620"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59b03c78-40d2-497f-b403-afe9236445e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d563046-4d14-4d22-9e02-8cc5aa6ad4ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd8ce42f-36fe-4c2d-9055-2db0aea4b3db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8d6b9a9-e18b-42cd-9727-c8ff1f5668a7"
            }
          }
        ]
      },
      {
        "id": "be904a79-b5df-4ceb-b4cd-a4271fdca264",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a165ecbc-17cd-4e5e-90c4-dda0fe657275",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e7cbb7e-d949-4c88-b0f4-bea8c49715f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f344aaa3-3261-4f66-b1d3-ddf3eed3956f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c60873-400d-483b-900e-16ebaf20da28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddb1e3e-32ac-43b9-bdaa-9f007e318046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc6e3b-2369-4dc9-8f2e-d95455372dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "064f35b4-9a1c-4386-8e6d-1e59e2a8f6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c922d59e-e090-484d-9571-8d38379190d8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8317c5c0-ae80-408c-8260-d2e14ceafd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f88e54-5e38-4b9f-84df-3af20e6e03ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e91f7eb-2ec0-4128-8e42-1b9539066564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80e4a9f-7039-4b88-a403-75167db63ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29222370-2efc-41a2-b0a4-db6068ba683d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96119b1d-3c26-448d-85b5-e02d5c90b989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f65b8bd1-6ec4-4468-ae68-2e6481d1c9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413c9c66-cf58-4318-a8ae-e3f7fbcfe296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afed0003-149b-4a44-8525-1b92867706b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792edf7-efd2-485c-87f8-e5f97d70f070",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d490eca-7765-4559-95a6-e003f2eca11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f1579-ae16-426f-b4b9-d6e59bfee160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d295508-677d-4c09-9f0c-9558152dc35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c98d4f-3849-4bf5-8acb-9a0046de417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a836acf-de79-4c21-8763-36b7fdb7de26",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117d856a-bb52-4bf2-a82f-d417a476b844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c0e697-9991-4a01-86ac-1d90a0d00931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873ab7b-cc7e-43e0-9853-acb19759c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ecb6db-bbdf-4dac-b763-75ad8524a03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b9c414-2606-4c16-b349-34b6a2db8c77",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e194188-5d07-4706-aa84-fec5b9d317b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69aea82c-3c1f-4d16-8f12-2a58951fcd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1d7971-2fd0-480e-8f0b-1c1ff46134ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1b8b9a-385d-4247-9e6b-e1c95d7c9bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51eb821-41e8-478a-b9df-54916b461403",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574bd51-c718-492b-a6e2-4aa79f7aa74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db787f3e-204f-4874-bd38-f2bf0f618e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186b4822-5929-4bb5-a079-a87ebed15a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c1dd9e-44df-46cf-8039-fc34b2796f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0fd503-9c03-44e7-89d5-55db29ff94e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41caf569-7a7d-4cb7-aebd-899b6d415ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f127039e-8cb3-4464-a46b-f9bb1d229a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687320a1-82ba-4848-bf97-dbcf742ece5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46558c3-9019-4df1-83c2-afd0f598c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f08530-3130-4483-a2c6-d23d99b6dd92",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f18686a-d532-45fd-8c48-e98d5e616620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac3ccdc-adcc-4325-9dd6-7e89b527511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f9adfe-9d6d-4823-b5e0-6c1a3a24320f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f112c7b-a5cc-488c-8458-0a662f7c61b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652e74ca-4d0c-47ae-90b2-fbbf194c1eb0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c6cc3d-478f-4bfc-946f-38b56f129129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f56b3dc-133f-4d6f-ae99-55688ddbeeca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2d7821-f815-4eb9-b8d9-8220120ac435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f339fe49-7063-40d0-a6fe-13b4840707e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7df96a-b419-4b29-9773-f64add00d17b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61be8466-9b98-474b-8326-c1dedbdc0637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8de5fc-f168-4bf3-8c52-c726b42634ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c94356-39fc-4546-a4e4-6c0de10b016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a808a31-840e-483c-90ec-6e6df9f721c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33828d50-f3fe-436c-9b7e-e19838449d42",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308a400e-9174-4cf1-ad25-6bda20ce0a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e80031-b98c-412d-9df6-7c3be00497c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142ba3cf-483e-455e-bc8c-55791316b588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eee81a5-3dab-42c1-9619-f0705cdefe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650a5d0c-d275-40f8-9df0-cbe96e30fbc4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c0aea-345a-47ad-a22d-965ef6c7c30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715a47fa-b5e9-46e0-a79f-4db0ada4576b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a05a1b-3d17-45b9-886d-9df0854cb6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5fc3ca-b46a-496d-a1e9-dad880a290ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad3f6e-5793-4e7f-b424-b6101dd03802",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b4ae4f-6714-4c5a-96e4-218930eedf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ea7843-e2cd-4202-b561-b36a3fecb5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e532a3-721c-459d-9b41-082b22b76163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd388f2c-afee-4630-a085-42626e2dc9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402ca74a-ddce-4eb3-9645-5569a4479572",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bade299-5ed1-4712-be96-4d7f73187c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9c676b-ec0c-49ec-9b6e-fe3c5aebfd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee229282-7433-4af3-b2a9-d453ca4cba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2cd69c-3a44-426a-b341-b350eff93578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fa7b40-e30c-49cb-aacf-02e1cf2972e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9b22bb-a43d-4502-9d9f-ae412cffa450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bb9e4b-cb65-400d-b320-7c082c83a3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650870d4-8aaa-422d-be9f-77006f4b7561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff031eef-84f6-45ac-9f07-c5cfd1e3aeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff11698-962c-4685-9f16-546283363e62",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1513fb-1c00-4468-88b5-2d81115997e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28018df9-52ad-47e4-91fe-beccd4c474de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448dfd4f-ec5d-4525-b376-3d8614e65032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7606eb-aff1-47d5-a0f3-ccb80d61898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d09bd77-9818-4290-afc9-d3a39d5935cc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c56976-f026-42d2-abce-ca4599016663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75270247-e203-401a-99c1-660c9f9c8414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5b6684-a578-4725-a351-374b6914ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5ba60e-35e5-409b-9d14-150131d41552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7059b88b-39df-4be0-92ef-31d530c9b5c7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1835b91-05a3-4ff9-a75e-7df86f9ff3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa619698-205c-4dc8-a74f-d43901197d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974c4a19-c122-4bad-b8d8-4c1083a8c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2f5f28-aba2-48e1-a92e-e570f79afe86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63475b5-ab17-43de-971c-a1e00de00abf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cf57fd-0b6d-4559-86cf-8c2062ca146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a583001-b8b3-4258-bea6-b2ff2792cf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad0f5c0-df75-4e6c-82e6-40a34a866a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "125eab94-feb6-4f8c-852a-fc981a2a1661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec49ab9-fb64-4f23-a661-67c00fb88855",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9557e65-4fee-4bae-aa52-fc3d2363b9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5942e63d-fa30-4bce-88b3-e622fca41ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665e0da6-e5aa-44fa-b2eb-113d8d4ccb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b396770-f8ff-4839-bc2b-9cba5316395d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d0cb6c-0788-4e89-a22e-a49513a6f066",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c43eda2-0437-4f21-98dc-cc45e3e4e73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efefb85-2b47-4cc4-83dc-0d0e11a095ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62752dc3-c75f-4220-aed6-1812902d1e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f60b25-0ebf-47ad-85de-6f9c20bc7d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739a584-fd2b-4daf-bb41-117217e39bb8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913f0e08-b4da-425d-ab9a-bb471f5be24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ff0478-ae8f-4aae-ab39-52a9dcd67d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35056f5d-59d0-4df8-ba4e-117b5a634337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f4b76b-5bed-4803-af51-acfd54dacea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291e304d-797d-412d-a4f9-6cdba7e01da9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502ea4cb-c49a-4adc-afdc-47339d78eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d2f0ba-eb5e-431d-9ee6-dde639cfe849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5801d21-a4bf-475c-8b8d-4e80d7ebd50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482cc221-098e-4a5b-a322-992e0947401b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce17ca9-12cf-45b0-9b05-a2cc91eceed4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67bae45-4a7c-4db3-8188-5357a145e18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15692acc-0f28-4ef7-ab33-07b130522625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f602f09d-9bac-415e-80be-531cf7a121a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179505ab-cdb4-4a08-9038-774701f14559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25818cd2-dd66-4309-b2c0-eb5433b07df9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9e724-7934-42bb-9e95-cb6127e03274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59e2632-9e2c-4489-ab88-372841b92993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dbf312-3825-4ece-ac61-c1eaf1d1b5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2b642c-f2cb-4cf9-8a6e-61fe2693a0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4272d43d-5f0d-4b5e-bc9a-2b75a6203358",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d4a5bd-f6cb-4767-962b-afde106175f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7ea3c7-e214-4ee1-9d4c-2d0860cb945e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f45c10d-0ab9-4e89-843f-c517d654cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1af750d-eafa-4928-a27e-c32527836506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7313d-5366-4094-b039-150519276695",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6d90eb-3fa7-4aff-97da-c755456d62d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13826650-cd5c-463e-8b26-b9ddac1b9562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668772c-a9cb-440f-8f46-489f66cc0571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfb5d0e-1c94-48fa-a1c3-52f78ef041a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c31fe24-d352-45b4-ae5c-6d42b7829b63",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6d5fa8-3330-44d2-857a-40aa7d69613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9d3019-1d81-45de-a69a-a0529e6a4767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db78d10-bfeb-4040-ba52-06f2c4618e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c73f954-7057-4e07-abf2-68b1ce6e859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b179815a-9aac-487a-80dc-75b9c99a8d5f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52882749-30a0-4e60-a8ff-1da1927cbcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a4b140-0406-4909-b715-800913555ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b448cd9-1766-4745-84a9-757e1d8e7235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2b41ac-3402-4f4b-88b9-c5a4c5d5b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d9709-5e04-4303-a0ed-7b1aafa721fd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2580bcd6-d0c1-4c15-8af8-30127aec935a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acf0cd1-e84a-44e6-a688-463bc6b1e639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fba00fa-79cd-497b-8bc9-a94c91bb0efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16356ea8-cf2f-4154-b686-4c980b135f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f445a6-956c-4793-9285-3f3e7774cbc5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9bf8a9-9f24-4d26-ad78-7bb44919ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c4a960-966a-4adf-bbdb-9746921088dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7669d7-c9ba-476b-8307-0dab93b6aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d06540-2930-4285-83c1-159661584fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be462d01-5eff-4de7-8ca5-6e9106898116",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6c6db5-76e7-4191-90f1-91d244746e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd76200a-6aca-4bc0-8104-50be703db73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77458c4c-b98d-41ba-a516-5662c94d90b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "976a6b3f-63b1-4b45-a32b-4cebb7a28808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cc537e-32da-433d-8417-ac338d0e599b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4105bdec-2437-4b1a-99bb-ca7244af59cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5a43d9-cf01-45f2-8edc-18968c747339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367f6fd6-fe8f-40ca-9890-3ce36d0e1099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b089faa-e642-47cb-bd7b-d4874eaf3545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d9dada-4edb-4426-8023-a7668b759e00",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e018678-0d89-46f8-8fb3-0333ac3ec57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b610f682-83b2-4ef5-93cc-cbbc1ca1dbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2126fa-c98a-4a46-ad8f-533e9386cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc040afe-6a85-46d4-87cb-20240eea402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dcdf68-baba-44b4-ab94-8fba18b2cd3c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1126f966-cac5-452b-9f64-2e1f5acf8c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088b2125-38c4-4f54-aa9e-5574096709d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6315ed45-e6c4-4dcf-93bb-c2e964c83900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "391d5daf-6636-46f2-8471-335bcfdc1e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5aced9-5048-4349-a4ef-a8eaaa2395f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2537a3-1793-42c4-8386-cf8426a9e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a135722d-7420-4f60-b3c2-35b834f3a111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb974cc-bb2c-4994-befe-0148a82660d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc61eb77-27e8-4153-8165-983be6b17967"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad7fdf6a-3d8d-4adf-b54c-69a0983bdbdb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92e7d3a6-d108-40e1-be90-e712e8cf18d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2f2c9b-e604-421f-8511-46b5fe5cb290",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1761e7-b4d8-44d7-aec0-f37afcad27ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9638e031-8c69-46c5-be3a-cc75a64fd9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57c612e4-c6bc-49f5-bc5d-a5126a6f44a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a5e9a08-7d7f-4134-983a-8c5b35c88f64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d09662-ad7d-4460-8083-392f7b8bf458"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a9ff185-2cc9-4f87-ae1c-73a952a6c537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "193e218e-c8c2-479b-a48a-897747f7190b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2a00ce4-c775-4f33-86f7-5e27aa5f3473",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90a0a548-8566-4481-8493-c7c43df928d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bd6ab42-0ffc-43c2-a0a0-e09453250a81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f63be7f-84e7-4c5c-8c94-5b7262e518ce"
            }
          }
        ]
      },
      {
        "id": "0eb5c19a-69ba-4c6b-9dfc-4dbf95b06813",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a2b4fe49-92c2-406f-84e2-28400c84306e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ecc71cf-9069-4264-9551-e2552c864de0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19287bbf-8099-47af-9cca-3d9227364ad1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9a2f17-35e9-483a-bb44-7650d6113f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74389a8c-7787-418c-a214-a1227b08d1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c811a98-083f-4618-bc1d-78c57daa3f32",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee874827-6b69-4158-acb7-4d15f0926dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e215ed1f-5665-437a-b1f8-17894f2a2e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f38d6a4-9fec-4639-aa6e-8d1b0fcdb9ba",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36694997-e0a0-4487-9c52-8a9e675dd9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8567bdf4-0275-4e45-b282-cf06bef441cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5772d4d4-0ac5-49f3-a38b-1c7425055458",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1702aa24-3b1a-40a0-a5db-84810f0cbe14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d48632-4033-4a61-ae4e-76af6f902513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cdfb9d-06a3-479d-ac5b-12016c5eabef",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380443c0-f243-45de-ad70-34a83c7640a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a86f49-4c41-4479-a755-8486858c56b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eee9ad9-3b80-4e5f-a5fa-2410113b1e26",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29f2bc6-f7a0-44b6-8808-4eba5f9936a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102a8d75-7b6f-4d6c-8cd3-e5561bfca83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3857f4-0875-4778-9fe1-622a5009e175",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3c59a4-171b-4994-8ad8-a20b66195223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b75d8c3-4cc5-4e28-b2be-e851d1d007b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce8471-2fa9-415a-80a0-fa7705705bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e176c88-b373-4d34-ad88-bbcd7b72135a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64fcf08-0f13-450a-a9e0-6552a46273be",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfd3b6f-59fd-4a20-a959-775c549180b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a641987d-6b5b-4f5d-b6fb-e35b70199b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e3ea3-32d5-494f-9f95-0350b6cf270d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cb31b7-789e-4035-ac0c-0b1ce3fb1a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fe6123-9565-4373-907a-3c3c83b9dd7e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b443a6d7-0dde-44f6-8fea-eb6d3e00a19a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638bce9b-e407-444c-8f91-90d89058eb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f1c8fe-26d6-406e-b634-988fe4629729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954d3bbd-c18a-4b0b-91ce-0481b6218561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0282595d-067f-4909-858e-860677b02710",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb62b3d-e036-4725-add5-10253e75d2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb6c0a5-b82e-4de9-9e17-d3be913ce534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae97192-6185-45aa-8082-41725537128c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8948dd6-8cdd-4430-9b70-e5d67bd4ba2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e384b117-fb93-46b4-97e8-7d8fef21e5b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf00945-8a14-444c-a66b-dc36499f83a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0595ce57-354e-4fcd-8c2f-82be7f176284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae091fb-d226-49cc-9a3b-d6f4b524414e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712c296d-9ac9-4e03-96e8-b02418f8cd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640273d5-d42a-472a-9f2e-9ee54d249bf0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3222239-528e-404d-9014-78f3d21181dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f04914-356c-4e7b-9fc6-6caee44fd10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00585f46-c0d9-4d48-9acd-baf74589ef8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1c2f38-eb46-425f-80d3-ba645f897ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082e671e-97ab-47d7-ba65-be325351004f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a996b3-ff4c-4b4a-9e5b-ca0d1a128ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107b3a87-0620-40f9-916e-c6c0e5a78975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb16f019-06c7-4c5c-b585-f553cc356ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f5bc2d-db7d-4563-8bd3-89b03b5d71a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f7d61f-f57c-41f3-b53d-a07a77bab5dd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eac541-34ce-4f7f-b5d5-bc295b3bc527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7411bc1-3a02-46de-8678-1c174f9b196d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dab84f-909f-43c6-a999-3395755676bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b0deea-7b79-4ebe-abd9-ee3e900767eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6be08f-490e-4020-b72c-dfbd7de43f19",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb2cd87-81b6-4a51-91f7-429726f9bab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a539b8-5698-467a-b870-e4b862765fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d0342a-af1b-43cd-b371-e470b46227f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b89d02-716b-4763-b9fb-f91a1d436775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4189f42d-7749-4af7-b6f9-3c4fe256a289",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfd8f49-7d27-4abc-bbbc-ede30e34c6f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b18bea-e68e-4896-9080-fc4ece9d9489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810b03c7-e9ca-4393-8701-386e9bd1e60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a006199e-d716-40fb-8b29-73136397ec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e668cf-f321-401b-a337-a44f74066c0e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4d18b7-848d-4079-acea-7497551e86a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13aeb12-1dd2-4b61-93eb-3ae13707e0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12d7642-cefb-4dcb-aa20-730fbd5866ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a330f72f-0356-4e9f-bb7d-e8f76e98f064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a025016c-6ef4-4cbd-a661-58bc102e8d33",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b78dda-4c23-4e41-8c37-bb50ee694bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13aa255c-3bfd-4425-9b8a-739f85e634ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f852a0-9b49-42d2-93c0-3c4989946ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1cd74c-2412-4669-9574-9dbc0e638713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea8f54-83b0-45df-a17a-001bce3c8333",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc4f380-3fd1-469b-8697-a9c72e782e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030c0319-8882-44ff-9335-28d469846da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1719a1aa-c78e-4b09-bf78-c55f861befe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a630f58f-a34c-4e69-8aa5-4ff53154c178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e751bf-28a4-4d60-a4e4-ae73bbc286fd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba47f112-b3bc-44ce-aebc-e101c6350dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1544216e-b61e-4a52-b9f1-1c58323099eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd1f92b-2394-46c0-aa14-4864a1a5e506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9743cc4-d93a-436f-b438-fbba1835bf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde144b6-19b7-40ff-bf15-e5e95e831d6d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c623ff4-d140-40f7-81b8-1b3cb09f28bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4af8c0-c603-4b3e-aef3-c9d8bf1dcd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a4a3c-5628-4249-b740-f5536d30707d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7588bebc-3216-443e-bdf1-1f2f667172fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b979fd-0c5a-46d7-9651-b28e1530b6d2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f0972a-33d8-4073-a9c8-d4863863d922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e2c1d5-5b9f-4ba4-8763-d2b533ed5ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059c2e40-187d-479c-9295-eee5dcfda92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f2405f-aa8b-438f-a385-ea935f9f50ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4bcd2b-0e4e-4e4c-8593-72e6256c7d9a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bc0565-12f8-4f6a-acda-9f74fa1c2e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbe02d9-9dd6-43e8-ae0a-644ddadfc75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1268e056-a176-4a50-adda-1116d9bc0863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150875e5-2571-4476-b4c2-06ca0a96bd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c2f8e8-714a-4e52-a664-e783bc2f47d9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c995ce79-2b55-416e-9c07-25659a159cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29a3bc2-9c0e-4e8e-8711-ce20ade9f848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a70431d-1ed6-4ef1-a4ea-7f024b5df789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05cf8a3-05db-4765-9656-ca0341a5ec5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3399871e-f42f-4467-b39b-ef46df999826",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a80e3f-9a1a-49a7-874f-9128a7c4a4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2affc139-58e2-4b1b-a622-89ae625b87f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed86364-3e63-4243-8ee7-dd19477240a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb342f3-c077-4de8-af32-9a7988cebe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f09e31-ae02-4d5b-beed-1906f3b1c55a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5ac1ba-a7ca-427e-95fa-6e6f9ddabbca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cdc1462-00bb-4d77-831d-f0f04901f74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8127fdb8-4c0f-4c67-9a72-e477e8c83357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd95d451-e579-489e-8dd7-86cedbcf5c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12bd371-3d5a-4f0b-8819-c3f5f23f602c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c50c637-67f8-44cd-a13f-086fd73cd1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7479214b-9dfd-43aa-a60a-de58161b7146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ef6fd7-d7e4-41d3-aa7c-e2b801be1018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00c514b-e46c-4640-b55b-9244dbeb5768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c775be91-12e2-48c8-a8e7-993d8eb1bbcd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8930f8-c3bb-4fc9-8c01-2a266ee0693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9450847-2ef7-4290-aaa3-2af283b6057b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df29a49-516c-41e7-bfb8-06da35ad5521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b381456-6144-4ab7-acec-826a584e1a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce2cb0-7fd9-4925-9c50-a328d5f1e1e8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d812131-dcf8-48d4-85fd-23539022bc15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3ee8f7-983e-4f7d-82d1-9c15cea99322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aadb04e-ee5b-40d4-bf76-e401472585bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3405223a-6db7-495f-8c7c-e19ed8e426d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad60dc8a-1b0e-4675-b639-3be9f790df15",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925a8964-5467-45fb-a003-2f6dfe487863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595862fd-b10f-4e94-bb74-52fca357fb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610569c0-624e-47ea-a81c-be241ebedbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4e9b99-ddfa-4213-8840-80e84d22120d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef15d2-d810-422e-8c79-756099a75ff9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c7d51-a43b-48ff-871d-e47b527e730b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe190fe-3d63-4780-ac0e-79432abfe834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28791a6-6178-4933-a5b1-2dc43b3347c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aedaa0c-6640-4a5c-b9a3-7a98cd30a13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22658beb-db61-4dd1-aed0-f0276e3a78e4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84a7778-cd8a-4efc-aa1a-7175dccbb06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9331dd9-4aa1-4e09-ae0e-f390f51d18c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751bf38c-9554-47a7-aa5a-88325bf90e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd539a20-4fe0-41b6-8b52-d1ae8994e7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea4f87b-9569-4a05-b427-444de8c36121",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a74b27-9f9e-429e-acce-ed4200c00116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f9165b-14b8-47c4-9e35-2d92a4194c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478ae682-53ba-4bdc-bef7-b98ee2038010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7a4d3e-2ec9-4fe7-8957-2c9dcb18bf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521936f8-6de6-4cd6-9dfc-387f6c121dd2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56b1e88-674a-44bf-997b-22873eee11fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d38897-6e1a-4e6c-9a30-864e5b6c68e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6048fd1c-fe0e-4343-8320-41bbb3be64ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bc5e87-e45a-4593-a4ea-af38d1f54255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1ef25d-e5a3-48c8-9fd9-1b411b12c7e1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f44c390-b537-4411-a70d-04c6db7d6f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5628eb94-88b0-4271-bdc8-c368368b8c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3fddde-c1f1-4e53-8597-ce0e661ede43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025d57db-7848-43dc-97ae-6003899150b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c6be7c-4ee9-4113-b115-e3645be0f6b6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159d5830-744b-4d2a-9241-74e89df968a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a940dd0-f12a-43e1-83e6-25062da1e71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d646c6cd-a8ff-4dc4-9e89-2d7233163edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73a34b9-b9e0-4478-bd5f-f1ab2d3b40bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afa5142-ccc4-49f2-977e-0479905a3b98",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6696a2-1378-4f71-8738-0e1e4c406344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b86bd42-d251-4933-b48d-5b87756cb49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d525849a-6454-4912-bced-ea7bbedd1f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60791ad7-3ac2-4f72-8229-5c4a9ea4bf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b5548e-6740-412a-992c-ab5b954e896a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f17aac8-98c1-410c-a214-7a1aa3e019da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad91e98-e7ea-40e6-9cff-d476e5580fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1606ac4-72b9-447a-9b14-b0646d8ab0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ece8091-fd09-4954-825d-260c71ea0558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86281f1-6eda-4ea8-8141-588174d5a692",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f361a1c-5c44-4493-a0fd-0710dd404a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efe16c6-757c-4cff-a7ca-88e415e146e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d923325-13e4-4af3-8de6-22e71826f44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b94e26d-59be-4d69-a498-42f14e992ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d0cdd7-d578-4e3d-8fae-0995f8595558",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f0a31c-8d52-4a5f-817e-f74f356655ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a508eaf8-7e41-4d69-a056-777dfaffba8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bce630e-f947-4af9-bde3-64c4177c9bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86378549-172b-4b43-9e2f-4274e0d6fcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea3340-255c-4691-bf5b-1e4186da539b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8ea115-e4c1-4f9a-81aa-ce2d754535ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c612e367-807f-454a-9075-30f5eab1421c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89cb889-563c-4b4e-b40b-80ff25bd997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38376786-44a9-4b2b-bc70-4a0789107963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f2d358-b434-4811-8cbf-bd4bdff62248",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10139493-5b3a-4546-8942-0910fe03b73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121495d6-cf5b-4b8f-9762-63e009dfbf63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f246e1-91c3-4e25-a0f7-61585623e872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356a3f15-0edf-4e36-a7a9-e354b63ac874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c8309-b7fe-419f-9eac-332f871f9c27",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c3dfab-24a7-4f45-bd62-56e37ef0b446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192d84da-9fd5-45c9-9806-034eb754ccde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89f727c-84be-4890-b1e2-b2430666e36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09a2153-dc13-4a06-b0b4-5532b06c8ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a46eb5-89be-449d-a68f-4c0e110a716e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2e3545-b403-4bc0-99a9-8d615549e3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6544c2a5-278c-4740-8803-10b2eaa8f071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc58f90e-5257-49b8-94e5-7e028224adcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1d006b-68b9-4ed1-9baa-dfcdbe1a7d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa979035-c32c-4381-9228-44e76f18522d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221daa21-6841-4337-9aec-f1ee280f293f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6b0ab0-8dfd-4d08-b9b9-c36265c26eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c2abca-973d-4661-bf1f-f9b8699a745d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8075c00c-f1f3-4f54-be1f-8da84bd43693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995ad3c6-2edd-416f-bf9d-45de2784b449",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acfaaa5-2d91-4838-b78b-83b7b90e84cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c7c83a-4e29-4eb3-b119-f7dec9a41567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d752c3-ef64-4999-88a4-748c431032da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a1cc8c-f5d7-4a1d-9c1b-bf4c023bebc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30bf22c-b6d0-410e-a47d-b8d235c910ec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614e568b-4419-409c-8053-52b67a06daf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165ef92b-44d4-476e-b606-0b0c4e4ff0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc922488-5cae-4c66-aef0-729644204700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f696876-1198-4e8f-a6ab-5de20595596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70879f61-b1db-47a1-a70a-e93f65ef9efb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a842fdce-dc0e-4e65-9832-fa40f507edaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7482f068-a923-4595-994e-25bde21e69e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d6f5d6-e38c-4b8e-bb00-cf28d8abc43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633d9a24-ddfe-46a9-b563-7aab002bc35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda647ad-305f-4e74-9163-d6f22c9fd9ed",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a703cced-e90f-47bd-a2b5-77174a909291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f387da20-8074-4c3c-bf64-465cae2640b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f418517e-7481-4fcd-9548-11043311b132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb1a980-01d6-4ff9-9ebe-05d4804ae95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6a5747-50d3-47a0-b40a-b8607d6114c9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31583c81-8019-45fc-8500-c009b059f526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85496b2-051d-4c38-a7a1-e1581ee4b164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3ea0ea-664f-4a79-81f1-2a74bd5f1a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a500a63c-47a8-48c4-81ac-5b1836084d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff9e331-a69c-4d03-b104-aa981e81fe5d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59578af0-74b8-415f-895e-37acb0998cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bbffa2-2e31-44f2-b4a5-5b28e85a36a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525ecb21-114b-46c4-830e-1beec8a394cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20388170-4dd3-4539-b3b8-6894f97df1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a664b29-f7d4-4100-a136-1afa16c4aebb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc73e87-4725-4698-8161-a427823d4361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3ef8e5-335d-4598-b8e1-b0a1164feb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5855b4-fd0e-4a09-9782-a61861078bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b9987e-62d5-472a-885b-d601cbfb83ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d378acb-2c89-468b-b4ec-8ce30e359ef8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de18f743-8953-4105-a9f2-2bbbe8c415d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4091f6-2a5f-4cb6-b737-40361cb8524a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b2a02d-c480-47bb-b28b-9566e8b759b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c4680a-31bb-411a-b133-a0ab18f8e5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cef640-7373-488a-bd71-0d77d9db95a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdb16ef-e44f-47b7-802f-48ab841d63d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b8488b-98e8-40b4-984a-04bad37f1a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0120887-9678-4a79-a96a-280eb2f538b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8d2f1a-67de-4182-a3a2-33d7346ea847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58140682-ae84-4728-a210-97d63faf73d0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33cee20-54b4-4c92-b4f1-9c190081a305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5270631b-bcbf-45cd-83de-d0b63976786f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f98bc2f-86a4-461d-8683-944fa17c2fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435696de-448f-44cf-9a52-ce90c870b590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e9f2c7-d091-41a2-b2af-97f88665038c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa9069-eec6-431f-941c-5bd0ddca3133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b148ef7-74e8-48dc-a787-a532e0d36b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7bb564-2c61-4eb3-87ce-b6c50096136d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b7b56c-86f7-439a-9050-a330e8607b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817ca81c-fbc7-41f4-b045-c72fd8433b98",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af3a6de-618a-478a-ab26-1a34802c0044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d8b387-5824-4976-9067-4437820afc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9a6505-1e6e-44d3-9e3c-e1e9c8b18523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f96ae37-a8a5-4a60-8915-18c633008350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdb1662-6ab5-4d67-bb92-3e3e41d53114",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee48f3e7-fc09-424c-94d1-0b14990f526b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc101515-f4aa-4a18-9fec-afbcad1157ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2203e57-9cfa-4990-b3f5-a6bc035269ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba4fca5-7950-458c-978e-56023b85c387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a945e7-11fb-49e7-b5e1-bbf3539a9cf6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330710a6-7006-433f-966e-6ffeb949bdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c299492-0883-4a46-8e35-d5989fb53eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e772532-cc71-40f0-88c5-acc6d21b0e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2d2ce6-cf82-43ec-9196-24675ea26399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b3f929-80fb-410f-99f6-7d88445498c2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36462c38-18c9-4664-9764-be17c86efc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc0d6ae-6df4-430b-a95b-957623449154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63fb2db-e80e-42ac-a352-2f167d48dcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4e47af-82d4-40cd-9f3a-c6ec823598fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8638b522-31de-442d-ba62-71fd18167a8b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5773df07-bda9-4643-b9c4-a2d5c10bcb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2133bc8-8ece-4c0d-a977-20c86d9494cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9d0647-5e63-4ef2-8e91-5276dfc18563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5259af-cb8b-4abd-8c65-2d0e41344412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b555df3-6b6a-4048-b166-b0fb28a01297",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf086e7e-ce25-44bc-91c6-2c72285c8fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a8cf38-e0c6-4213-a5b2-ba3ac06a7447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb230821-719e-4043-8001-6686c43d3261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b122606-9da5-49fb-b8d1-a0f71ecb4a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a15ef9-7d25-4f40-96fc-785950e6c4df",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ff279f-6980-4b83-9377-4e2e13f9d714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3cb578-5f0f-499c-a3e6-de390c57f0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f48e330-78d2-45b3-bd39-fa5ea20e0ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac664ae-5cf6-4416-8b4a-73c2f9feb696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5630b63f-60b6-492a-88a3-2207cc06624f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e025e1bd-05cd-4a01-9ad6-eec2a1ceb1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcf9d58-bddd-4cd1-8a58-08904d678d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a72357-6287-4ccb-8bfa-aac23d1608b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144cc1d2-24e6-4666-91de-051588cd73ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ebd9be-e9a2-48da-9487-42576736c508",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cda75c6-e14c-4882-b4c5-3513fa78c351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63089da-2250-47d8-afa4-748d1412725c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faafcc9-d1b5-4c43-9279-911245382d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391a5827-01dc-4178-9141-80f8db6034a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5023e0e-f83c-4185-9a7c-1b8f14f71fcc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60cca08-d000-4bd3-902f-f798be57da20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6008457b-e07c-42c4-b29b-5634a78d17e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab438bc8-6bc1-48db-b9cc-c68fa4b93fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aef13f9-73cf-4e72-8cbd-058239724dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f03e7c6-8769-4d76-872a-53e28aa5ea51",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf4619a-f67b-42f0-b3e8-728d1d6d1c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3202c6d-2ee0-4b8d-a6e1-a9022aa5b428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc781c40-342b-4707-951c-6f1544fb9d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a6dd36-6bd1-446e-9968-37b6924a8086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29734ec-8005-4190-83c4-e78e6bd21b54",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a52beec-e6fd-4314-9827-58193c666989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73b368f-d3b5-4ac8-b970-50e85020aa90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7182b53-7bd2-4b33-a56f-b92f06903db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c6086a-2afa-47ab-b800-807941f59f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d00d99-9b0e-4104-adb6-b64dc0a65862",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adee2ae5-32af-4fe2-ac86-557bda8f223e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a300e2e4-274d-47c9-8cda-0afb2b14dd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a350bda4-ca97-45d1-a79e-6f4228d656c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ec1b6d-ca38-4632-84f9-c36483161ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc6918c-dc38-496d-8b90-59d902bc7cd0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bd543f-7c19-497a-ac78-7308c9752269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ac64c8-1ae7-49aa-8043-3f808ea97543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ed61a8-ba18-49bd-a879-8aca190f1bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d3b08f-1ff4-4cc9-9788-a8cba585aba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130cbed8-d74d-49c6-a7d2-487a1e48010d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79555c9e-a663-4e0a-bcca-9a9c0b340ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05d0ae1-52c7-4c11-857b-597f0ee431ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea076c15-73b1-4da4-9d29-53225387fffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e91460-cc68-4c70-b76e-b374d6fc5c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921350cc-f414-429d-a363-7bf352c4683f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c875a2a-ccae-4f61-bf37-468a36386870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c073fb-c90a-4f30-b40d-7b50ff087cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b77041c-a5d7-401a-8591-8e859442185d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7204dc-56a0-46c8-ac76-c69e00e7a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ecf4eb-36a0-4b6f-a297-1da2027e96c4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b29187-ef0f-4207-887f-a0390cfa2d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b562c224-5c0a-415a-af6c-eff7f1932acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902c6e4e-5b2a-4f32-93f7-a3006412c443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31dfee3-584b-4f3b-b4c3-1a9ce0a1e20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b52bd40-7a03-4382-a4dc-d3fd90e36cab",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae20881-7e02-4fc2-9fc0-99bf698962c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d447e508-71e4-4478-be4e-425c3bf28c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540c3b98-a132-46f9-b978-bbd3fd2ec1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484b12f6-0b46-4469-8406-910f0f23552b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601cf8a9-4dc6-4e03-ba4a-d10a3db6bb45",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d22a71-77ba-48ff-b578-b8ace3929e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bac9ac-029c-42d4-8385-186b6d1f35ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea123df-8cb9-456b-9333-c0f2a06ae729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613d6a91-2b92-4b80-8f4f-086d2c943766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8a1ea7-d3dd-477b-bdd1-0f89f5a822c0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ea0f5d-cfb0-4f6c-b54e-fde0511de391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a533738d-bd8f-405b-9244-abe54df4e5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7a35a2-9107-4ded-abb0-2aa88fde8aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00d8418-ba74-4358-b504-3dd8b6420fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4c7d86-617e-42f2-b621-bbb8ec600377",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d4f060-b75b-4b2a-b299-59db5db66080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e73aae1-208a-400e-8e5f-eed7f9624aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad6f94e-8eac-4e7c-b0ba-619057e31fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e1e2f9-bf02-4bc0-baa1-398648a4a899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511d67ab-77a2-4025-a140-36987e0ec080",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e6f7ad-1174-4c1b-a6d2-b73a953ef4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9e9767-7160-4539-a1b2-943ab97d02ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae2b5da-77a7-473e-ab0c-6a12cc4af0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b43cf8-d3cb-4e47-a2d4-fb30e39f0e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd240535-b0a4-49cf-9909-7a6eb0b91248",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ffebe9-a167-43ac-a42d-7d97bf14d404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b3a0f4-fc53-4cd4-ad16-cb2f94ee8cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f36d727-80c9-45cf-b16e-56b9f312d22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df77e0da-4f15-4af0-b6a1-0fc2e6a67a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9554719-dbd6-4a8c-be1f-e2b8df245f7b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5548f616-2d57-4180-b5fc-ac03fd21df19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16fe8616-c081-40fe-b360-57ae902f8726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188cd766-7810-4c2f-815c-99f50ece436c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d96578-93f5-4164-a5c9-4a0b020b38d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a4ab90-8a78-47f9-9468-b09207867771",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86175acf-b0e6-4706-946e-a95d5793e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed49f11-3d95-4c2e-882f-a413a59859df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d5111c-328a-4c30-bc24-8c4cf7799bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811252f3-ce6a-4824-8d88-98351658bea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75a606e-afdf-4c96-a6ff-80ae644a22f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7977785a-d8fc-4677-a1b9-fcb5d1761658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067556aa-ac58-493a-a39c-de8622a4b28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5087e0-7299-401d-b58b-5176930024d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9390aa7-0847-4136-9c3a-f700c589eb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8ece25-c863-4c76-ac7a-e9d30b31cbfc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13c0d12-57c9-4ca7-8b8d-6e8557b8abfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42919eda-9ec4-422c-bd42-c658542514a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef91c7-db17-420d-afb3-30733f7134e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f0baf2-f295-4803-80ac-1b76af1365cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d8f2a9-ba14-402c-9868-7c50a4192804",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab99a01-4b7b-4544-b57f-39c05826471f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed3ae4f-8fd9-4c93-97af-38d9e11c5585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b41cb11-bf41-4cd7-8ad0-370acf68f455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc79814c-3779-4ebe-97bb-1aaa1d758aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b722940f-bfba-48ee-92bb-4719a0d627f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ccee21-66ed-4eb9-ba4f-a16368f1daea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ee59ac-ddeb-445d-8da6-efdeb7c9c15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9fe982-c9f4-452a-b9f9-45261bfa8c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8941e5d0-aaee-4f7d-be56-68c5194b2806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477fba6f-335b-48b6-8149-301c9fa3e333",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3685c403-2a3b-42ef-a552-995f2122a285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac50de09-a45a-4a09-b41a-27e803a9b958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c798e0-62bb-4c78-b199-f2a9a5168831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c37592-81b4-48f3-9cd3-7883a849d6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c133612d-69ab-4ba6-835d-c824a1d6b4a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266deb3b-2321-44ee-abbb-9abae2d444fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e00b2fc-010e-47f5-ac50-14970ac2c4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aee78c7-605e-45ac-affd-e66d18613829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e707bc-8d6e-4098-a091-b3b2b7a9e2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5efdf50-6b91-4f40-be6e-c8e9605e0270",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14b5e07-c099-4cf3-a677-87aba4df67e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91169492-8e2c-43c2-a756-ea0528a2279e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f055fc-df6d-4861-b718-38e97456c629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38fbf1a-5f11-4f3f-a4da-601c6e9da215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c407c0-01fd-4a85-bc0c-7a3e7097aff0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9724429a-2c08-4fa7-87d2-3e8fd9810a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9a57df-5859-4dd2-8d50-bc94be92e0b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96089511-9fd3-405f-91c4-d57030cab69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724f39a7-f9b8-4917-8d83-f3c89552992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e06f9b-c95b-4d16-89aa-f457677b27ae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804fd49d-4b56-4c99-86f2-dc00eba0a8e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866313d1-1db5-48bf-9017-7a1786e0b07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4086cd-5c79-4778-9657-a7fe6485f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d328e6b-97d7-4946-b3ee-8880bd3708b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293f50cb-f9f4-4840-88fa-1da6a6fd6248",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe36c152-c7d3-4e0f-bc2f-d68e638ede6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6f8ead-54af-40c0-a8eb-8f53d9f34691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bcb41e-bd66-4cfe-9c38-d2a51864f651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82cda8d-73bb-44e2-b411-52ddd0efaa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb06b9d7-d52c-4a25-9765-15e5875d4acc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b30b9f-91b2-4826-8db5-2f59127f2ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f14eb27f-b10c-4648-b40d-4a4e940bff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5c4f4c-a8ce-4a98-865b-9d310519ff93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fec0e2-efd8-43cb-8b12-6f47f7e3e7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6547f13b-771a-4a91-b833-63f85063db13",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1ac8e1-c6f1-41e5-905f-4668bba80acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e32c543-e0a6-42e5-b8bb-8f1892d672a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822d045-8a37-43aa-a4cc-eccf1b2c6421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb94ded-9551-4f1a-b14a-691d73fc6afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc592c4-845b-486f-8f0d-82b74496bab3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e721685d-eac3-406d-80e9-fa551ffc51c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae60af4-4997-4adb-bb73-0c628b2bcd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fc3356-4d3f-4648-ac0a-2c48fb0faa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cfbea0-f88b-45d5-95a2-e4f15bbe504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61726965-0651-4090-94cd-b2d0bca6b3b8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa95b1f3-c181-426d-a2a6-5374dc75f3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c39f0345-f3e4-4280-8ca2-0fdfbfd3315b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb6d082-e7be-417f-9648-53e4c7b3764e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d35537c-9374-4911-99b3-6190c3fc9aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d10712a-919b-4774-92bd-0e8f981186c4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0532b4a-1583-4059-ad29-aacc09fe62ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3a644f-e797-428b-9469-28d845826959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f8f1d5-a718-4cee-9b73-476459b9c373",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb057bd8-5db1-4435-80ea-7eb3791f4587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e15982-88bb-460f-8a9f-ce8f59ab366f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d90c38-83f5-4326-bbc1-c6d0129bd255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6cf16e-04d4-4390-8de2-505d69bb1b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034788fd-3bae-4797-8d71-472d52ccf821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38655244-51f7-4737-b8fa-b8fdbfc4aed7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f490ae0-4c5f-4156-b2c8-81e7163ab95e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a7fb5c6-44c7-406c-9a96-71532aa20178"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d20e3a26-5a60-4808-9fd1-bbfcceb2945c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f16cbc3b-24bb-45d1-972d-73b31cd30553"
                    }
                  }
                ]
              },
              {
                "id": "3f573ee6-affb-4c27-9978-1da5b67dffff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c351bc84-e734-4b57-a7c9-c887f7f0f22f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b1112d-b615-45f9-ba68-e8ea92835793",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8f0fbb1c-8d94-4e53-a4de-000afe1603fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04d5069-0230-4f9c-9372-7809ea08a43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0812545-b978-46de-bbdb-fcbe1291b170"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd5be0f7-dbaa-4ac2-8fc7-ce53e1c25daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1842b89-2035-4937-a5f5-cea821bc5cbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "119e3770-98c5-4838-b874-95c5fd05261d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04953e89-069e-4269-a389-ef734b7e3b45"
                    }
                  }
                ]
              },
              {
                "id": "10f687ef-5d2d-4ba1-9e58-57a62c348b08",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "83b9b75f-96a2-4909-bfb2-91cdcbaa4374",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e151bd-7b3d-4f2a-99dc-a54611984b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0f3e6870-c280-4d38-b422-00b7e6dc1153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba805af-61f7-4020-8d2f-6047642490ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07944909-c4bd-42aa-80af-ef5082629793"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5859ba67-5723-4f29-83b0-28afd3e47cc5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a71213b9-c03a-4a09-b377-1d75a46dc47a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "deb3da27-3754-4a48-91d8-42e974b8b4a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf4f891f-2d4f-4c0c-9569-74d43411521a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39fb1efa-9352-431f-856d-80262161c05d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "569a0e7e-1c4c-4337-b16d-a7f4a170accb"
                    }
                  }
                ]
              },
              {
                "id": "cf910a57-93cb-4f86-a516-0c8feb07dd02",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "debc19ec-f659-4891-b6ad-87b409a4bb62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb6aa0a4-5290-4982-9eca-e1dfe2f3250c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d735611-2918-45ca-89d5-3b6d302e3ff6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1e29b7e-941d-47e8-965a-b9760dfe98b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f32e3cd4-fa92-48c1-916a-65f1eef49ae3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "006025e6-6a0b-4dc5-a4e0-e148ae8b42b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bffd072-553f-4917-aacc-f670d280f11c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1008b68b-1975-4079-8967-3f9c6de39f45"
            }
          }
        ]
      },
      {
        "id": "d2788643-b427-4a73-b618-d56ab6813de2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0b5c5bf1-d8ed-471c-81ef-b006ff71a8c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d30f4cd-9079-4b22-90fb-8175f73f4bce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc42c1dc-19fe-47d7-9570-96591c6ab532",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fda482a-460d-48ff-a314-efbf6320583a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5c0d6252-ca7c-42d8-9fdb-794395bd3975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8f6bc3-34fc-4328-817b-a4c044579679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "929c776e-2ece-4868-ac92-73f624172518"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ede19f66-d1c4-451d-b844-430c63aeb685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a685c627-86a5-4d80-9c36-241f326b8727"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d240892-da06-4926-85f8-877d0c074996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05015981-47ca-4552-9548-2d28d98615a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf803548-1eba-4cc6-a36d-abb07cc4ec86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d4a40f2f-cf99-4605-b5d8-30c32bd40ac8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "586ef0a2-ba8e-4255-875f-f38e6973ef4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "542baac6-3012-4ddb-ae39-51c9b27bc686"
            }
          }
        ]
      },
      {
        "id": "809bc81e-0580-462b-b646-f7f96e211bcd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a7183f52-27a0-4081-b641-a92bf06f3379",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd143c46-4cee-42cb-be3f-6de4e0b9789e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b87f34e-7faa-460e-8c48-4061cee183f7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7177f348-b16f-4053-8f15-c55836d4726b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dff2c845-0373-4dfa-9e6e-4ab572cd9ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc63d9e9-f07a-48aa-9c3f-1a37d0766e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e1eb99-6e79-443e-bbe2-4beb7a3cdc56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a588d17c-bdb3-445b-a925-75ed4d8051ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87c92bdd-09ca-4b23-b6b7-c5fc00e33d0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a80178-9d43-4562-9a7f-96e5537c87da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbf1af08-ec8e-4172-a920-9967f61bf6ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05dafea7-c852-4a6e-9c0e-7cb95640e91c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "977d5110-19b1-4be7-a44d-ae38ba6f265b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "966ef9d1-6ffa-4759-bf11-8687d43ecc5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95e0107e-d0f2-4475-8a92-8497a6441424"
            }
          }
        ]
      },
      {
        "id": "0db3781a-2594-4937-bc35-de7db89c1f21",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "847844c3-be2a-45cc-a74f-ef4355f96144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a507a72e-813a-4846-ab1e-412e483589c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f661685-db70-481a-a8eb-bc005e9f063c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316a33cf-9f87-40b1-87e3-fde530d52697",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81a63a50-48c1-45ef-a3c7-185ecfb493bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9aa3c6-fd5e-4823-90f2-a493058a0437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7766a759-27d6-490b-8487-3c1e84bdcfc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9265abac-bf22-45af-9aad-c702b0749f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dd0ad63-a17f-4622-991e-dbc3d1d43080"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b22f64e-3db0-411c-a4d4-62df38dd062a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0891fb9d-c7ef-43f9-b71f-24b6e56aa387"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8727ca75-11ef-47a7-ba96-52f35483b4f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24d24c37-f11a-4fe7-85f2-f39a57af0cc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b37ec8c-db2c-44ea-bc6c-44dddaae7ba1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11d6441d-b3fa-445b-b860-bd091451564e"
            }
          }
        ]
      },
      {
        "id": "31a556ec-cdd8-4266-ac62-85d2ae9ba267",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d433ae19-d77a-479c-b922-850595d603ea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe377511-714f-487f-b9fe-b4c7723d5493",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9f5f6c90-1754-454e-8f82-4dd7cfcb2c68",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01b386a4-2f61-4f9f-b745-dadcbbfe37fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66c4ad50-97b0-4b7f-955f-acae0cbba6d9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.08070175438591,
      "responseMin": 3,
      "responseMax": 9900,
      "responseSd": 639.1356914487864,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707438798110,
      "completed": 1707438831519
    },
    "executions": [
      {
        "id": "3098ce4f-bb4d-423d-af7b-06e2f2fbc64a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6e8bfe8f-0a5e-4735-b1a8-4dd97076133f",
          "httpRequestId": "72bfb8b5-163d-4423-994d-52bed8518242"
        },
        "item": {
          "id": "3098ce4f-bb4d-423d-af7b-06e2f2fbc64a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3ea09f41-03ae-468e-af88-1b4bb613dcf5",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "23e901e3-4c8f-42a4-a3d4-468497774c92",
        "cursor": {
          "ref": "5ea66946-e5b3-473d-b582-db99dd703e9e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4bcdc1d0-1606-4929-bf25-cf888cd37fee"
        },
        "item": {
          "id": "23e901e3-4c8f-42a4-a3d4-468497774c92",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9fe5c23f-9b7c-4461-ba86-8342a9e50c51",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a5be8575-747f-456a-8c53-1caa8bd351e7",
        "cursor": {
          "ref": "27d5c487-04a6-43b8-a1ff-f31d2e448168",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "42ac31bd-c32c-4db1-9e3b-e88d4aaa823c"
        },
        "item": {
          "id": "a5be8575-747f-456a-8c53-1caa8bd351e7",
          "name": "did_json"
        },
        "response": {
          "id": "9a300cc8-ba22-47da-b39c-12d3fd7f4665",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc0117-672f-4812-bed8-83d781c2bc5b",
        "cursor": {
          "ref": "66484099-7f3f-4549-bcca-222d623a7ff4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7475ae0f-20b5-41e7-bff5-5be140e91e56"
        },
        "item": {
          "id": "64dc0117-672f-4812-bed8-83d781c2bc5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "5976c73c-065a-4504-b5f5-ae9d150a43df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 311,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc0117-672f-4812-bed8-83d781c2bc5b",
        "cursor": {
          "ref": "66484099-7f3f-4549-bcca-222d623a7ff4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7475ae0f-20b5-41e7-bff5-5be140e91e56"
        },
        "item": {
          "id": "64dc0117-672f-4812-bed8-83d781c2bc5b",
          "name": "did:invalid"
        },
        "response": {
          "id": "5976c73c-065a-4504-b5f5-ae9d150a43df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 311,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eef50f-b342-4742-b9cc-026eb9a392d1",
        "cursor": {
          "ref": "51ec3556-c84c-4b9c-a588-d9ef21fcfe21",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3e26173f-0d13-4045-9894-513537c88ba8"
        },
        "item": {
          "id": "15eef50f-b342-4742-b9cc-026eb9a392d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "76bb258a-6af7-4bfa-ad20-af74749c8847",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74dfa4d-00e6-4f52-b4a2-d504795ca612",
        "cursor": {
          "ref": "f94e0757-b3e4-4411-9d8d-e583aa0b13f2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eb3609cd-d656-4c7a-ac70-048e436b45b8"
        },
        "item": {
          "id": "b74dfa4d-00e6-4f52-b4a2-d504795ca612",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b0705ce-2ff5-43e0-a883-fbba8db4aa23",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0119499f-67b2-40bf-96f1-73be3a03f2a9",
        "cursor": {
          "ref": "72beb68f-1ab4-45a4-a49b-400aab56180b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac9719a1-7f3d-49fc-93f4-c13feab5ec3f"
        },
        "item": {
          "id": "0119499f-67b2-40bf-96f1-73be3a03f2a9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "010401a1-ff36-41b9-92e5-5c6c1a23f70c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd57bcba-fe41-4e69-a497-0d5bb51a9879",
        "cursor": {
          "ref": "95d17b4a-7be0-4ac0-a3b7-f2aedfb062ff",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d74cbe9a-06b9-4646-ad80-472cafa8aa3d"
        },
        "item": {
          "id": "dd57bcba-fe41-4e69-a497-0d5bb51a9879",
          "name": "identifiers"
        },
        "response": {
          "id": "6bf65692-7b73-4aa8-941e-219772dca5e9",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42c855d-506e-4386-87ad-845320c36e84",
        "cursor": {
          "ref": "8519f2c2-8bb3-4899-9e04-2bfaf6cdfd64",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4756d1e3-c782-43d1-bb1d-d6cc1ea4c198"
        },
        "item": {
          "id": "e42c855d-506e-4386-87ad-845320c36e84",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "760b529a-88a3-45d4-8ee0-f3bf1d111a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53df50fd-9b2d-47fd-a547-3e54a13d102c",
        "cursor": {
          "ref": "82a3536b-82bd-4853-bc6a-1049afe1e91f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "712c1c24-5ba9-497c-9235-de75752511c4"
        },
        "item": {
          "id": "53df50fd-9b2d-47fd-a547-3e54a13d102c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b5306c7-d137-4b93-8fb7-140944381e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a3ea7-bc25-4a80-ad83-57fae267f385",
        "cursor": {
          "ref": "658af5aa-8cbe-42b1-8740-a47811a8f1c7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a43007b2-9cd3-4e71-897a-e43d9ccdfb4e"
        },
        "item": {
          "id": "443a3ea7-bc25-4a80-ad83-57fae267f385",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c4c4ea93-26db-48af-a29a-7092f44a6daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43770fe-ea20-4f53-bb05-31c7f829e3dd",
        "cursor": {
          "ref": "7e614bfa-d401-4039-8077-359132ea2f4c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e41ad77a-2382-4268-92e7-57685cb18d05"
        },
        "item": {
          "id": "f43770fe-ea20-4f53-bb05-31c7f829e3dd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b882e301-d63e-42f4-84bf-93cb24220a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10e7e6-cf0d-4ca3-8803-7fdb4ecc3990",
        "cursor": {
          "ref": "6cdf5a93-2e4f-4c80-b2f0-dc2e19b5776f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8ac8824d-932a-4d47-bbd6-9befd97cbc4f"
        },
        "item": {
          "id": "5b10e7e6-cf0d-4ca3-8803-7fdb4ecc3990",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0219fd85-54f0-4177-afff-ef3bb1eb88db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01732115-f325-4ecb-8f36-48a88f69f795",
        "cursor": {
          "ref": "5bed7b2d-59d9-4d72-a425-5bf755d3ee9b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "80487d49-28a3-4387-b30f-2cc14efc333c"
        },
        "item": {
          "id": "01732115-f325-4ecb-8f36-48a88f69f795",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "312a38d1-3f37-4c22-bf26-7dfb623ce01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a01679-66bb-48da-91a7-5f78d3bfcd7c",
        "cursor": {
          "ref": "08c48879-f5b2-4658-b5ad-0ea7f8a2c0ee",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9cffe538-0168-4a5b-9fac-80709ee03800"
        },
        "item": {
          "id": "34a01679-66bb-48da-91a7-5f78d3bfcd7c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dfa1bf28-8a3e-46a5-957e-6f914af9ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d336436e-e0f2-4663-8841-4e64661160f4",
        "cursor": {
          "ref": "9e8efbed-a205-4380-9250-b9661dc72e92",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c82bf5be-6b01-4d1a-8ee4-b1b5656d9bb9"
        },
        "item": {
          "id": "d336436e-e0f2-4663-8841-4e64661160f4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3f207389-8c50-4f22-bc0d-52fec7e6ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5dd486-be33-4c8f-97a3-658a72675595",
        "cursor": {
          "ref": "4ecb1dc1-3514-4eee-8271-10e19538232a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e64a3b1-fcb7-42af-b4cf-896e7d696208"
        },
        "item": {
          "id": "4b5dd486-be33-4c8f-97a3-658a72675595",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1ee42687-1ed4-4df3-9c38-49db29e759da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46463b4c-9dde-4a4b-9e75-c3f4398898c1",
        "cursor": {
          "ref": "fe9ae53e-1178-4bca-ba40-44b43ab44a91",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5657df3e-4979-4bec-8752-1ae43876b40f"
        },
        "item": {
          "id": "46463b4c-9dde-4a4b-9e75-c3f4398898c1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "94b2f917-c864-490c-b78c-21fb4f164dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa8df2-1391-4ec7-bf6e-aedbb6de9510",
        "cursor": {
          "ref": "abaf9707-0d20-42b6-a10b-ae7085cebe98",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9f619391-69c4-4eae-a80b-d461f7642c61"
        },
        "item": {
          "id": "32aa8df2-1391-4ec7-bf6e-aedbb6de9510",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "94c9545d-58d4-4e41-9a17-d3ba22fb3810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f95774-eb2f-4019-a94a-9c76bb15e0df",
        "cursor": {
          "ref": "fd4732a4-7465-4efc-b764-3e75c6877d23",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c4119d4-916f-452f-9dc3-0fa7fcdebd75"
        },
        "item": {
          "id": "f7f95774-eb2f-4019-a94a-9c76bb15e0df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "83781dbb-86a0-43d3-a399-ec8a28ae9f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebabaf49-b8fb-4948-bb64-3a4471223631",
        "cursor": {
          "ref": "c7e0cccb-1d95-4658-871c-96002b258c38",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c030230a-fde4-4645-aa79-5124a4691583"
        },
        "item": {
          "id": "ebabaf49-b8fb-4948-bb64-3a4471223631",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f9781f0-1fe2-45d3-85bb-34045860f6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7298b8-e330-4715-b02a-397e2d2f5a16",
        "cursor": {
          "ref": "aaab635c-b2aa-4541-b925-71de79ce23bf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be683171-75f9-4fe1-891b-eb6929fb3cda"
        },
        "item": {
          "id": "ca7298b8-e330-4715-b02a-397e2d2f5a16",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "505584d6-c531-47fe-a248-0e0eb98e4f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27c2148-01a5-4d35-8b24-ce846242d843",
        "cursor": {
          "ref": "7bcaabbd-c454-4b19-8b5a-8bab78aaf4cb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85dda202-9dfa-482c-8d52-14cbbea7f56d"
        },
        "item": {
          "id": "d27c2148-01a5-4d35-8b24-ce846242d843",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fd1e1560-0f30-41d8-b017-51a8aa5146f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e295f0-5418-4487-9e55-1990f51de348",
        "cursor": {
          "ref": "7604ab17-729a-4f68-b158-92d26b3bd8c2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7a8d1f2-b6e8-4e9b-b552-a6a3802d080e"
        },
        "item": {
          "id": "b0e295f0-5418-4487-9e55-1990f51de348",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f40481b2-42f7-465d-90fe-fcaf88b097fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd96c4c-f5f8-4262-88c8-92021da777cd",
        "cursor": {
          "ref": "11f836f3-67f6-47d2-a846-fa733bf65c82",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a07d89e-6c0c-4e42-a160-3426ffde4b99"
        },
        "item": {
          "id": "9cd96c4c-f5f8-4262-88c8-92021da777cd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b8319e14-cf89-44e8-8782-53b8c7de39cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a92571-703c-47d2-ae01-a831ef69fb96",
        "cursor": {
          "ref": "0a37ab14-1cb8-4927-810b-acd3cd1b36f1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "659f2ca8-d669-4f99-9a15-e7496c90c434"
        },
        "item": {
          "id": "93a92571-703c-47d2-ae01-a831ef69fb96",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "559fe400-4caf-4923-9661-1970fbbb6bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5399c84-685c-468e-80ea-2fa6fd163ac8",
        "cursor": {
          "ref": "f111a8e7-3c3b-418e-bbbe-95c81012c71e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aa93aeaa-a552-4afe-a7d4-8b16176c0fdc"
        },
        "item": {
          "id": "e5399c84-685c-468e-80ea-2fa6fd163ac8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aa8d6acf-9a9d-43f5-9b39-ff642f363474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4511df8a-1717-4827-900c-13442de267d6",
        "cursor": {
          "ref": "816cce6d-82e0-4870-93bd-fb391aa6a8d5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0e2d67f2-325d-45e0-9f99-6f4ca9277fae"
        },
        "item": {
          "id": "4511df8a-1717-4827-900c-13442de267d6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "efb88fc1-23eb-4239-a6d7-293422a6caa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da29f085-ef6d-4886-a275-bdf71b879d6e",
        "cursor": {
          "ref": "39098b71-c464-4038-a916-a091d300c8f7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "48ca8347-647b-4a79-aaa7-b65b57c2dc69"
        },
        "item": {
          "id": "da29f085-ef6d-4886-a275-bdf71b879d6e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f59956e-525c-4904-b0f4-812d7d833ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac9c236-068d-49b7-a069-b989cccee7ae",
        "cursor": {
          "ref": "381039f8-99dc-4c7d-9756-81c2b1439eb2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "63c44f05-81a4-4a9c-9ca7-07dedc0c1c82"
        },
        "item": {
          "id": "aac9c236-068d-49b7-a069-b989cccee7ae",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "87101ef6-17cf-4386-af18-0c6d596fed5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902ce229-74a1-4c37-8aec-ddad77582daf",
        "cursor": {
          "ref": "4301f899-2163-4a23-a930-3b83a9bd8284",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f081715c-c6df-4a63-8b96-620797e418fc"
        },
        "item": {
          "id": "902ce229-74a1-4c37-8aec-ddad77582daf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c998a1f3-9e93-4b26-aeeb-1cc1c4608cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d75200f-0654-460c-95b4-2e5afc8598f7",
        "cursor": {
          "ref": "23ff1571-3ed8-4d42-9198-b5116c1728fd",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0d36ae4d-f0e5-48bf-87df-77ab2213cd97"
        },
        "item": {
          "id": "4d75200f-0654-460c-95b4-2e5afc8598f7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72ff4a93-81f8-45e2-b488-acf714475e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e80e88-aefc-41cf-953b-fbe8e191bc78",
        "cursor": {
          "ref": "1046d2c5-2375-424a-8cce-5b18002efcaf",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "51a42c78-b6e6-4b70-9492-076857450e64"
        },
        "item": {
          "id": "14e80e88-aefc-41cf-953b-fbe8e191bc78",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "25e5a317-6b9e-4602-8929-57bacecb1975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e6dc58-ae4a-47da-b65f-1ef975301635",
        "cursor": {
          "ref": "33163625-d4fd-4d39-adae-da29371ecb4f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "901b870b-5958-4658-8e9c-4b6c2e25c713"
        },
        "item": {
          "id": "b8e6dc58-ae4a-47da-b65f-1ef975301635",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "34730812-a948-46cc-9a98-e44306dd5c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f83fac-83f0-4521-b606-c691366467f7",
        "cursor": {
          "ref": "bbc76d99-f77f-49ba-8d50-f930f6efbbb7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "94f02512-5f8d-4650-9b58-dd0adb36657c"
        },
        "item": {
          "id": "79f83fac-83f0-4521-b606-c691366467f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5b5af74-f614-4807-bbb0-545f08b0b239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309b578-aa03-40ba-a30d-ff5a804cdab0",
        "cursor": {
          "ref": "b3ad8a61-5242-4472-9e03-75b2801343b0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "033ad31a-9937-42a1-8c90-8b5a50d07973"
        },
        "item": {
          "id": "e309b578-aa03-40ba-a30d-ff5a804cdab0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "19595231-0279-4b9a-9452-1f9a6dc45a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8857af-64e6-4139-945a-f915b871856c",
        "cursor": {
          "ref": "461eaf2c-c49d-4dc6-8002-7cc48e51fa78",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c621949-8f36-496c-ac62-0c2b9193332c"
        },
        "item": {
          "id": "8c8857af-64e6-4139-945a-f915b871856c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b80b5707-e459-4867-9183-d7d87b020f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea7a3e7-4b5e-42d2-9504-d78dee67d6d0",
        "cursor": {
          "ref": "d84a221f-1b82-4fdd-9894-89a5a5f04a5b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34aacde6-4b44-4d8d-a01d-f7eed955abd2"
        },
        "item": {
          "id": "eea7a3e7-4b5e-42d2-9504-d78dee67d6d0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "908ed3e6-e20d-4d03-b235-4204f44bb91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77a5bb9-5c2a-4a52-9d16-3bbee4cc6517",
        "cursor": {
          "ref": "15ca6daf-c8bf-42b5-bae0-8dea6e6f1ffd",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "631bd0ae-7de1-4fec-96dd-17dc6dc4b4b6"
        },
        "item": {
          "id": "b77a5bb9-5c2a-4a52-9d16-3bbee4cc6517",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "530f6a03-83b5-47ea-bfb8-09d531c2b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19428e6-654e-4423-a849-81b007521dd2",
        "cursor": {
          "ref": "8ef71667-743f-4053-9a85-17cda3ebb0dc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "16ccd04f-d69f-49c9-9c89-94e42a5946b7"
        },
        "item": {
          "id": "b19428e6-654e-4423-a849-81b007521dd2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4399b7f5-7b30-4856-97be-f9e4300d61dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0217673-3cd4-49d7-be7d-ee7106dff22c",
        "cursor": {
          "ref": "1d50605b-1a08-433f-a7eb-184528f9a96e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c785ab99-8e58-4ce9-b01b-9b96c8183359"
        },
        "item": {
          "id": "a0217673-3cd4-49d7-be7d-ee7106dff22c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "02955552-284b-4373-89ce-91cb9b858e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95366868-a38a-4eea-bf07-514b32877c29",
        "cursor": {
          "ref": "32a7de43-c5ec-473b-a19f-b81e192f1e94",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e5c282d2-2215-49ff-b8e8-b5a5296db343"
        },
        "item": {
          "id": "95366868-a38a-4eea-bf07-514b32877c29",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c1cf1c5f-a87a-41d4-b4f6-f0f11ba7d592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2c7009-554f-4b35-8699-586e6845d7fe",
        "cursor": {
          "ref": "0a9aac2a-1d45-49a8-9f12-72f7f15a3d45",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d0b2f469-44d3-44cb-a21b-e4f2447cf846"
        },
        "item": {
          "id": "7a2c7009-554f-4b35-8699-586e6845d7fe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4efa24b5-94b8-46e3-b630-5d54130c5f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1af316-bc77-4297-98fe-e17734c15b28",
        "cursor": {
          "ref": "8838aad8-dcd3-4aa5-b425-c7babd1e0dae",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bcf6f2a8-c6d4-4f1c-be75-0bcadd7960b2"
        },
        "item": {
          "id": "5d1af316-bc77-4297-98fe-e17734c15b28",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "880c0524-330b-4d57-a46f-dea72cc49ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb0e3a-01bc-4a27-9ef0-adff9069b28a",
        "cursor": {
          "ref": "1023fc91-579f-4ef0-9aaa-6c006bf3ee2d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2600d76a-a723-436c-8c00-4859a496bebb"
        },
        "item": {
          "id": "b7bb0e3a-01bc-4a27-9ef0-adff9069b28a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8e4e4bbf-ace4-4ab7-b771-50952ae97034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff4a814-69e5-4fee-8a4b-4994ebca9189",
        "cursor": {
          "ref": "b038d6f7-e576-4580-9907-1930386c6720",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "323053fd-33d4-47f0-913b-3a44ebbbcb05"
        },
        "item": {
          "id": "5ff4a814-69e5-4fee-8a4b-4994ebca9189",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74bcf9f3-b569-4a9e-9c4f-a76c8e7c0ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc693e81-7739-4a86-96ac-c917a9945820",
        "cursor": {
          "ref": "50c0769d-34d1-44a8-9e5d-5c201990178f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a1be6c98-4517-4600-bde4-7bca8f2bd86d"
        },
        "item": {
          "id": "fc693e81-7739-4a86-96ac-c917a9945820",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "235e6b30-3d59-4262-b9b6-06ce5bf78976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39624bf9-dd96-4282-b4d6-1c5d90049bcb",
        "cursor": {
          "ref": "d75591b6-2cb9-4b85-9859-eb74fbddf780",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6dd6c718-13e3-4e9c-9d7c-05ee171ba5cb"
        },
        "item": {
          "id": "39624bf9-dd96-4282-b4d6-1c5d90049bcb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "621fcac4-07be-4d9b-9c1b-513cfc80a80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae092e2c-4ccb-4d42-b3d1-9a108d5a94b4",
        "cursor": {
          "ref": "0865ad84-e2e4-4c5e-a87b-a523ae32895b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "326d1561-0063-4306-a278-1cd015c9381e"
        },
        "item": {
          "id": "ae092e2c-4ccb-4d42-b3d1-9a108d5a94b4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3622097d-cb91-4b9e-b022-7ffbb5a92c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14785c2f-237f-483b-9211-5c541930ce08",
        "cursor": {
          "ref": "325c1918-062d-466c-a929-8a1d864e7270",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ff6dff24-7e97-4f98-8da4-3fb09b9fd4a7"
        },
        "item": {
          "id": "14785c2f-237f-483b-9211-5c541930ce08",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b1a2391-442b-4927-9b0b-ec4c4598bcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1935b5ca-4097-4a05-a435-767529a719de",
        "cursor": {
          "ref": "3e04d64d-3c0d-4b56-88ab-45af39a8dee2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a549bcbc-cedc-4ddb-b275-fd720a5dad80"
        },
        "item": {
          "id": "1935b5ca-4097-4a05-a435-767529a719de",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "63301334-75d1-4e7b-a51b-6f67c2954f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479c9e86-17d1-4952-99a9-aeff667e7466",
        "cursor": {
          "ref": "ed71291d-66e8-480f-8b48-087bfa9d34ff",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "22d1ed28-3e1f-4057-9ca8-2456376033f3"
        },
        "item": {
          "id": "479c9e86-17d1-4952-99a9-aeff667e7466",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b3726caf-6827-4089-984a-1d2ce0780250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e824a8-a2ee-4f57-82f7-cf0c03ef8511",
        "cursor": {
          "ref": "3d80720b-33bd-4f43-ba76-35d0c70d26de",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "21a0f45c-3fc1-440a-ac0a-29a02c06273a"
        },
        "item": {
          "id": "42e824a8-a2ee-4f57-82f7-cf0c03ef8511",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab602d77-3a9c-4460-bcac-43977e8be3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1e8e99-eef2-470d-9e4e-e87a0878f40c",
        "cursor": {
          "ref": "97267d42-97e1-4e67-9c08-ba32a231dbc5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "968af447-5b8c-4705-b767-0e10b16a308f"
        },
        "item": {
          "id": "4f1e8e99-eef2-470d-9e4e-e87a0878f40c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fea2c2f3-d953-40d9-aec0-8c6b403b7e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe6bcba-0e83-4690-9ed6-b7a9e8bf4661",
        "cursor": {
          "ref": "cabf885c-025e-445b-81c9-bd538007eae7",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4e659140-fe53-48da-86c5-17308dd01929"
        },
        "item": {
          "id": "9fe6bcba-0e83-4690-9ed6-b7a9e8bf4661",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cdeca74d-3821-4ecf-86dc-589e3862a959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77d7834-a604-447d-b455-57e20b323520",
        "cursor": {
          "ref": "1aa37535-5592-4ae2-a359-bd606f051c32",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0630fabb-1809-43da-993d-b8a6176459f5"
        },
        "item": {
          "id": "d77d7834-a604-447d-b455-57e20b323520",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "90a9c482-893b-4f64-a1e6-fc2d2907a7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c53f6b5-1f0b-47b2-9055-2ebb0b864034",
        "cursor": {
          "ref": "d36b1ce0-96be-41a7-b6be-f86feff6fb6d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2c414d99-4331-436f-be0b-805e6866182d"
        },
        "item": {
          "id": "6c53f6b5-1f0b-47b2-9055-2ebb0b864034",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ec50eb09-2a32-4676-9794-dc2d27ae7ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1ef012-4618-44e3-9fc1-018f8c100bd6",
        "cursor": {
          "ref": "722a5faf-00d1-4714-916d-dd0b49ae2703",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5596a05c-2cff-43f5-9b12-f655000f724f"
        },
        "item": {
          "id": "4e1ef012-4618-44e3-9fc1-018f8c100bd6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7bc7a345-9238-4c1c-a496-fde38a750be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183c107-1fb7-4c04-a1fa-38a663c04d2f",
        "cursor": {
          "ref": "0572ac87-93d9-4240-a1fa-29054fa7c1be",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "06603093-c6a0-4953-ba00-ad85e0112710"
        },
        "item": {
          "id": "1183c107-1fb7-4c04-a1fa-38a663c04d2f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9d8d91b-ffdb-46f6-a1b0-88ccdf2bec69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052302e4-4374-485f-871c-181d097ab2d6",
        "cursor": {
          "ref": "005e5834-8ef6-4eb5-b95a-ebc71c077dda",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8fa27670-be34-44ac-a247-f740a73c1f3e"
        },
        "item": {
          "id": "052302e4-4374-485f-871c-181d097ab2d6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8ea8289d-eb77-422d-abf5-045e48099efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163f35ce-2eec-4bb4-85ac-16286ad9cbe3",
        "cursor": {
          "ref": "a0ccfb1f-38f5-4344-bee3-d3a0698aaba2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1c555a85-b9b6-46d2-bcba-25f50bf913c0"
        },
        "item": {
          "id": "163f35ce-2eec-4bb4-85ac-16286ad9cbe3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5ecdb79a-9bfb-4a68-a076-fe9c8f657908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b61634-6659-42c4-8fc4-a0278ef9cc3e",
        "cursor": {
          "ref": "7eed9a4c-dced-4723-9a6c-8ec184508f6a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "808ef75e-ca7f-4a4c-9712-31f2e452856b"
        },
        "item": {
          "id": "21b61634-6659-42c4-8fc4-a0278ef9cc3e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5f6f639b-aace-41c9-a6be-426c8793ded9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce78cb82-7fa5-4f22-9be3-df51b8357cdc",
        "cursor": {
          "ref": "8569fdc9-8c59-40ff-b0cc-1ff7faa64c0b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cd343761-e55a-4a26-8c65-9646ebf935ca"
        },
        "item": {
          "id": "ce78cb82-7fa5-4f22-9be3-df51b8357cdc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "14db2ce2-8114-467d-9740-5fa9b4f449d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f7f811-80c5-4bff-a673-748b27258246",
        "cursor": {
          "ref": "8d4daf8c-70b4-42a5-8cee-e988f910297a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6f2d6ae7-e3a7-44db-8903-4298fa216a61"
        },
        "item": {
          "id": "d5f7f811-80c5-4bff-a673-748b27258246",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e917633-252b-40bd-8b0a-c190b4385999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f222a860-f2af-480d-98a3-20dddfaffc4a",
        "cursor": {
          "ref": "ef2ff3e8-2459-481c-880b-d17e350aa6ab",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39e73559-7d9c-4bf5-bff4-34f9e9c22698"
        },
        "item": {
          "id": "f222a860-f2af-480d-98a3-20dddfaffc4a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "84d3a215-532c-422a-b709-c50a4581de87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805c86f8-a692-4c1c-9f4a-1b19cf800ddc",
        "cursor": {
          "ref": "89d414c0-ef32-4941-94f6-0661c1cff4a0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "65837e60-1b2e-4172-93a7-50d02faff0f7"
        },
        "item": {
          "id": "805c86f8-a692-4c1c-9f4a-1b19cf800ddc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "223cf068-039d-4141-ac9d-e67b200e89d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0efa26f-e051-422d-8549-639138ebf6f0",
        "cursor": {
          "ref": "550d8448-06d8-4ef3-8a7d-df8e088112d0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11570cf1-ea6d-41bf-beaa-37ce68594b75"
        },
        "item": {
          "id": "e0efa26f-e051-422d-8549-639138ebf6f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7b32a9ac-276c-4578-a996-7fcb55adaf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774081fe-c0d5-40e6-940f-1be0fc3e50f7",
        "cursor": {
          "ref": "c5fb34fd-1635-441c-9c3d-0703827830f2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fdb43c70-716a-4938-b6a3-bd4448cfcd0f"
        },
        "item": {
          "id": "774081fe-c0d5-40e6-940f-1be0fc3e50f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "03a122ba-ad48-4018-b815-49e5c94f76e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3a476f-57ad-42cb-ba58-db64af4321fd",
        "cursor": {
          "ref": "0ca06c96-52cc-4d3a-9d63-741a5976035c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "34fa9989-a8a1-4d16-af00-8111d9e69f3d"
        },
        "item": {
          "id": "0a3a476f-57ad-42cb-ba58-db64af4321fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2ceab880-9a30-4420-82aa-8b731b72b290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21955415-8cb6-4885-ada9-0eaef82b2b03",
        "cursor": {
          "ref": "4092c5dd-78ea-4d16-91ac-e5f52f18aee0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7fb42995-5b34-4536-887a-52ae66c3b0cb"
        },
        "item": {
          "id": "21955415-8cb6-4885-ada9-0eaef82b2b03",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ec7910ea-6d2e-4278-aba1-2de75893a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44d038c-4a5b-4a11-a005-d386cc54831f",
        "cursor": {
          "ref": "3a42cbb6-c568-41d5-aac2-448a6586aef0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32c881c8-7478-49e2-b0c1-826e12007172"
        },
        "item": {
          "id": "a44d038c-4a5b-4a11-a005-d386cc54831f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ecf2f2ee-f910-41af-9512-21d82dd24d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa2d89a-9d3f-4023-908d-51c6ef846fff",
        "cursor": {
          "ref": "67264dcb-4fca-4fbe-9b40-4649554e317f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d9dc854b-d957-4d85-8509-5877dd500e9d"
        },
        "item": {
          "id": "7aa2d89a-9d3f-4023-908d-51c6ef846fff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2384a2e5-da83-4c51-9541-81535dc3393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea0d0a-f7e1-4b3f-9e39-9766098820d1",
        "cursor": {
          "ref": "38ad47a6-9a41-439a-99b2-aacf7cd89c32",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "429c1ac0-8fa2-4b6a-b78f-24f4ad1a78fa"
        },
        "item": {
          "id": "a6ea0d0a-f7e1-4b3f-9e39-9766098820d1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9c40f2ad-6180-4c52-9eb9-e6e3f8a9cd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52789e4-a0c9-46bb-a20d-1f765c127c31",
        "cursor": {
          "ref": "044ae269-3d26-41e3-a33d-5567110ef053",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ff308b8-c98d-4534-8408-863b32eb108d"
        },
        "item": {
          "id": "e52789e4-a0c9-46bb-a20d-1f765c127c31",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5899f84c-15be-4583-b631-1169a21fad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11ee2bc-f18e-4217-852a-36e84bc442b6",
        "cursor": {
          "ref": "e56a6fbe-e19b-4da1-87e9-68d3b4e569c5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a5fb0284-305d-4487-b345-5b7bbe3eaa6e"
        },
        "item": {
          "id": "f11ee2bc-f18e-4217-852a-36e84bc442b6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a8ef1c5e-12e2-438e-a8d1-3524949d4d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f480005-a8cb-48a7-a344-4db1c43072ff",
        "cursor": {
          "ref": "9a4b0ef2-49c0-46ba-b172-649ea5c4e9a9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e2403320-5238-4662-9159-65831c178bfa"
        },
        "item": {
          "id": "5f480005-a8cb-48a7-a344-4db1c43072ff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e7f7c736-2901-46c4-aaab-f0b8d1ef8188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e479268d-6773-44c5-8e3c-abc9843e158a",
        "cursor": {
          "ref": "c10c70d5-7f57-4a1d-b5b5-28333d1b100d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c2d657f8-57e8-4f9b-a1cf-3017b466036f"
        },
        "item": {
          "id": "e479268d-6773-44c5-8e3c-abc9843e158a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "22b5ad1f-680c-45f0-9f5b-90e1eec1bb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf5ce11-5336-4413-b1f0-1a1b15335c06",
        "cursor": {
          "ref": "e7e683c4-4361-4f84-bd31-e7a19772efc9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d7c5b289-7e55-42d8-bcc6-40c1a48ad471"
        },
        "item": {
          "id": "dcf5ce11-5336-4413-b1f0-1a1b15335c06",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ee473618-3642-4807-bbc9-6bb0ff8ae7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f44ee1-5bd3-4fb3-a5eb-bb9e330b3bfc",
        "cursor": {
          "ref": "5d0c0cf5-32bc-4f7e-8986-387c75b5d992",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9f35e134-d727-474a-97ca-adabfd63da5c"
        },
        "item": {
          "id": "55f44ee1-5bd3-4fb3-a5eb-bb9e330b3bfc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6de22cd4-afdc-404b-9106-dd0c938e3f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f88bce-53e5-4429-b934-c0915a3e6d5a",
        "cursor": {
          "ref": "cba9b539-5f31-4e41-b630-b59fb3c64327",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "986c9c0e-7cc9-46d5-8cd1-153521d1204a"
        },
        "item": {
          "id": "18f88bce-53e5-4429-b934-c0915a3e6d5a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "34ab8ce4-ef4f-43c2-aa87-8170f3985f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b3667e-9cac-43d5-b5ad-4556d3bb96c9",
        "cursor": {
          "ref": "cb79bbbd-bf72-4a19-be4a-6a2943a7a942",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "816e1fa0-eb1e-4020-862c-e91564e9aa05"
        },
        "item": {
          "id": "d8b3667e-9cac-43d5-b5ad-4556d3bb96c9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1f7739c8-1989-4c77-b89b-f3cfc4aa3a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b1d2b7-aa67-4933-994e-b12c5c2fa480",
        "cursor": {
          "ref": "e3728f39-5fcd-4207-96a4-c96c3ad91b51",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b2301751-e010-4de7-86f5-b19051cefb12"
        },
        "item": {
          "id": "d8b1d2b7-aa67-4933-994e-b12c5c2fa480",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "44cbf505-b11f-4830-a124-b3750b35179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca8cdb6-47fa-409f-8bad-ccd0722d9779",
        "cursor": {
          "ref": "4b047017-5e31-40a8-b8e1-c26b9bac58d8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dd3f78eb-4152-48d8-91de-164ed97845e4"
        },
        "item": {
          "id": "9ca8cdb6-47fa-409f-8bad-ccd0722d9779",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49a3623a-79dd-4c7d-9602-469d9dcb522b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1cf231-d794-42a3-a58c-7dd0814be02e",
        "cursor": {
          "ref": "493a0a1c-90fc-43bf-a8ee-0ae068853758",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e878f88e-c38c-49e5-90a7-08da3278dc48"
        },
        "item": {
          "id": "1b1cf231-d794-42a3-a58c-7dd0814be02e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3be01405-a907-42a6-9423-baec7ad58a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891383da-2c3a-4089-9a05-0be38f85f85e",
        "cursor": {
          "ref": "68034cf4-5cab-4aff-a1fc-3833477b473a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d9df6938-b7e7-4993-bbd7-55dd1b44e13f"
        },
        "item": {
          "id": "891383da-2c3a-4089-9a05-0be38f85f85e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c2de914a-b3d5-4bbd-95bc-ed3596af5aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b14bb90-8795-484a-b341-a1620f64e08b",
        "cursor": {
          "ref": "f95aebb3-dfc0-463f-959f-941716190fdd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "055d1b50-8d63-40ae-a50e-a67d728dd2f2"
        },
        "item": {
          "id": "1b14bb90-8795-484a-b341-a1620f64e08b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2552a521-860e-48fd-b2f8-4d3b5ad97c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3610e430-9fe0-4adf-9fb7-51581b5f9331",
        "cursor": {
          "ref": "4dcef404-4356-4891-b085-8305b7907cfd",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ca85e99a-966d-40e7-9c0f-6219ff913688"
        },
        "item": {
          "id": "3610e430-9fe0-4adf-9fb7-51581b5f9331",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b2af3d2-0a7e-47b0-8307-1ff3e2cc8385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4fd141-7514-41f3-a3f9-cdf39f44827a",
        "cursor": {
          "ref": "4c4a1238-4ca8-4392-a137-56af53b90e0e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "82a155dd-5c29-48da-814c-5ce9daacc90a"
        },
        "item": {
          "id": "bc4fd141-7514-41f3-a3f9-cdf39f44827a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ba03e1c2-da04-4fcd-bce9-7f8e6abce50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2a95e0-983f-4405-b896-aa8e4148c0d6",
        "cursor": {
          "ref": "13d893f4-fd2a-4b15-b755-dcb1ce40496a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6b1cd37a-6a20-4893-94e4-8ef1e8bda54b"
        },
        "item": {
          "id": "cf2a95e0-983f-4405-b896-aa8e4148c0d6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3bfb8d96-e0fc-4b98-b493-07dbd1096f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d844a475-be3d-4ad8-b6ab-c1334c0082b9",
        "cursor": {
          "ref": "b9e2795c-dca6-498f-8881-76da391b3ffe",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5817b856-4f51-40f4-b5cc-1a7cc3857c6c"
        },
        "item": {
          "id": "d844a475-be3d-4ad8-b6ab-c1334c0082b9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a5aa2239-a928-4e61-98df-57cf557586da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb2325c-eb44-4a27-8ae4-c456ac490573",
        "cursor": {
          "ref": "64ed8836-8ac5-458d-8755-07323c1afbea",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1edb9990-84e6-4c49-88da-c407fc77eea6"
        },
        "item": {
          "id": "5bb2325c-eb44-4a27-8ae4-c456ac490573",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e7706bfa-2902-490a-9b84-5b089a132c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6efef95-f536-4bab-a696-d6aebbbf5891",
        "cursor": {
          "ref": "a859dc19-978d-455c-ac6f-477a6aea1b19",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2d77498b-2589-4f67-a3ea-8ffe0b032f93"
        },
        "item": {
          "id": "a6efef95-f536-4bab-a696-d6aebbbf5891",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a2edda73-c1f8-40db-a3e3-b3dc5b61cf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce36675-ea3c-402c-97d1-50ab2e496d05",
        "cursor": {
          "ref": "3134091a-3711-48bd-952b-6a05985a3c1a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a0be1b5b-8b28-4d83-a2b3-84c52f18de0b"
        },
        "item": {
          "id": "4ce36675-ea3c-402c-97d1-50ab2e496d05",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "880b782e-f49d-4dd3-8de4-bc8c37b147c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05e91ba-4eab-4698-be04-ac1396b8e6c9",
        "cursor": {
          "ref": "2e8f0f1b-5ee3-4131-a017-cfaaabd09f1e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e492533e-2a53-4aee-ab8a-91e6e19b3d44"
        },
        "item": {
          "id": "e05e91ba-4eab-4698-be04-ac1396b8e6c9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d1697cef-e583-401c-9c1b-fe6738728ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c9c808-5e24-440b-8b61-129193d841eb",
        "cursor": {
          "ref": "2a3a4379-48f5-4093-985a-b6fc055c30fb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0174485a-97e7-4ea1-9c27-8d76763e0326"
        },
        "item": {
          "id": "80c9c808-5e24-440b-8b61-129193d841eb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a21847b7-85be-4b12-b15e-fcc2ebdc1782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c81ff79-528a-4371-9f16-4a798f7a35c4",
        "cursor": {
          "ref": "0fd5cb3e-2228-48d5-b7f4-92b6c8f0c9f8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "76b84d64-d7a1-4538-a072-4cb8c6e262fa"
        },
        "item": {
          "id": "0c81ff79-528a-4371-9f16-4a798f7a35c4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5aff787b-5bb0-4bc1-bf21-658fbe38e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565a07e1-88f2-4aa7-a6c3-d0b7173d234b",
        "cursor": {
          "ref": "340eb26f-fb9e-443a-9be8-0bb261e415d3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8af9dfb4-52cc-4491-9c66-f23c754831e1"
        },
        "item": {
          "id": "565a07e1-88f2-4aa7-a6c3-d0b7173d234b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4918f2fa-df13-4fcb-b43f-b5cda2551379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d097a1-cb09-44c6-8903-cb692f950416",
        "cursor": {
          "ref": "7be795cf-a35e-4b71-bdc2-f28a8cd51c84",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "79f32597-6ab7-455e-bcdb-d40ae523f871"
        },
        "item": {
          "id": "48d097a1-cb09-44c6-8903-cb692f950416",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "33011794-fce2-445d-a834-eebbcede8e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d21c5f-829d-47c0-9562-e871a75d65da",
        "cursor": {
          "ref": "6cd1e170-c450-4e72-81be-5f6ea73e1e3a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b3553e2d-2775-4548-ac40-da319507f474"
        },
        "item": {
          "id": "b3d21c5f-829d-47c0-9562-e871a75d65da",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b2dba6cb-4f0c-408d-b5fd-c56c0aec42e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfee251-c1c3-4245-a3bc-b456c8bfe4e4",
        "cursor": {
          "ref": "ea8b30c6-8f20-4dd5-a043-657bba64ea17",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "238cd0f7-7a0f-4ddd-9453-35d7d3d172f4"
        },
        "item": {
          "id": "9dfee251-c1c3-4245-a3bc-b456c8bfe4e4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "44073e71-7343-4cf0-a361-d78a318fab77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c167cd0-c563-4ff9-82d6-f816d20f71ea",
        "cursor": {
          "ref": "f6acf230-f3ab-4bd0-9549-212c9266600e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3ea5b6cf-f8d5-4f92-a33d-7be3be04ee39"
        },
        "item": {
          "id": "5c167cd0-c563-4ff9-82d6-f816d20f71ea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0189656f-69c5-4ac7-8a38-684e58cfab5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739a5395-7e7a-45da-ba9f-e70f3718eb1c",
        "cursor": {
          "ref": "ff272eb3-c076-4741-adda-d535d17a80ac",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "16b3f671-8343-4448-9847-f316572b7d76"
        },
        "item": {
          "id": "739a5395-7e7a-45da-ba9f-e70f3718eb1c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "36a21fb9-4590-4854-9d14-c088877a1c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "39488a74-792a-4395-b933-6ba78ef7224c",
        "cursor": {
          "ref": "3a203d88-3fcd-49b8-a387-6905c1f8dc6a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95339ffb-570a-4af7-be66-21f8653150c0"
        },
        "item": {
          "id": "39488a74-792a-4395-b933-6ba78ef7224c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aec12867-aa07-45cd-93fe-cdc9dd64832f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "de85e5a6-fab8-4b10-b3c2-515a9aae96db",
        "cursor": {
          "ref": "c6c4ded9-5a04-46d2-acdb-b113f06f8457",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c482c3f-ae59-4a56-9063-e52c8d33195d"
        },
        "item": {
          "id": "de85e5a6-fab8-4b10-b3c2-515a9aae96db",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "85e1a1e1-f075-46e7-8346-d0abfee50d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f026359a-cd77-4b7b-be5a-2e792bb6917c",
        "cursor": {
          "ref": "34038b1d-acaa-4ac1-a1e1-f9c160181777",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9591c5c6-23cf-46f4-923c-b895b7442d3e"
        },
        "item": {
          "id": "f026359a-cd77-4b7b-be5a-2e792bb6917c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d1188c68-52e9-4d33-a296-e0a37edf2d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2cc33d80-05b3-4691-9c87-189b0c4fe84f",
        "cursor": {
          "ref": "5a35cbcc-378c-4302-838b-9a1942117dbe",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "83200361-be19-4c4a-a223-390af511ddf5"
        },
        "item": {
          "id": "2cc33d80-05b3-4691-9c87-189b0c4fe84f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "61a821f1-1946-4318-b991-d8e7e8a723f8",
          "status": "Created",
          "code": 201,
          "responseTime": 9900,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "122bdf47-0048-4d62-a62b-132abc2eca6e",
        "cursor": {
          "ref": "4d276c0d-fce0-49c9-85ba-cac55394f0ce",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8b7dc3c-dae2-48c8-9e91-24620e52939a"
        },
        "item": {
          "id": "122bdf47-0048-4d62-a62b-132abc2eca6e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65b10dd9-ac58-4286-85e9-985110603102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9099653a-8cf5-4794-a4fe-1a8854f94dc0",
        "cursor": {
          "ref": "cfbe5f59-80cc-4e2e-892e-6fbad37991b1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "97a2224d-2ad8-4c8b-9eac-a414c48c6699"
        },
        "item": {
          "id": "9099653a-8cf5-4794-a4fe-1a8854f94dc0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "745eef85-1189-4548-b1b7-2e35b76de2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ee332f48-814f-410c-bed6-388783f90300",
        "cursor": {
          "ref": "1deb827b-47a6-4013-a693-887a2fa48c8b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "986b94b7-2792-4a4d-b0b4-67c55209ed4e"
        },
        "item": {
          "id": "ee332f48-814f-410c-bed6-388783f90300",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c5bcb44-f472-4247-885f-85e947fb8fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273d4380-31fc-41ea-a48a-fad229dea4f3",
        "cursor": {
          "ref": "e4cd6201-12cd-4556-a079-b228f20fac93",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b92acf1f-2736-4872-ab76-e8332d318833"
        },
        "item": {
          "id": "273d4380-31fc-41ea-a48a-fad229dea4f3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "75f716c2-2d63-45e5-9273-638fc9a084d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2d84d2-54fd-408f-9dd5-12738cc6eeef",
        "cursor": {
          "ref": "98d22cd9-8aa7-4df4-b12a-e3610ffbc5ca",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b269256f-fa62-40c5-bd9f-9f363dbb6fef"
        },
        "item": {
          "id": "ad2d84d2-54fd-408f-9dd5-12738cc6eeef",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5fdf7b8-27f2-491e-ac4a-ecba846e30b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f945f805-171f-4000-8b00-9cc83f48e8e0",
        "cursor": {
          "ref": "0fb9ef21-3994-4f8b-8114-9bb69b987b9b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "760afcb6-c04b-42f7-9981-ff3f166a062a"
        },
        "item": {
          "id": "f945f805-171f-4000-8b00-9cc83f48e8e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8fdb3c0b-601b-4bf3-9255-051e6ee87739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f687892c-06db-46ca-8c5b-f2fbcb739003",
        "cursor": {
          "ref": "af16b447-01b7-44c8-95d1-49089d5865ff",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "56622ae4-8d9a-4fd6-b3f8-9631a369bb1e"
        },
        "item": {
          "id": "f687892c-06db-46ca-8c5b-f2fbcb739003",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c11e8dbc-2b5c-4138-afed-e547e5182c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f586a8e6-d5cd-4a13-ac8a-ac01ce8bf1d3",
        "cursor": {
          "ref": "95a6ae8a-2bed-4f0e-9f36-c41fe426e11c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fabb7063-952e-4383-b8f3-4c8bcfc1dff7"
        },
        "item": {
          "id": "f586a8e6-d5cd-4a13-ac8a-ac01ce8bf1d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1402b65a-c495-461c-95ac-d6879a9da6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10c4710-8ec0-4ffc-a3a2-c24f2a7144b1",
        "cursor": {
          "ref": "25a15a54-84ce-49cc-b7f9-82d9e037daf6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bfad38a3-51ea-4010-816e-60d86874cc3e"
        },
        "item": {
          "id": "a10c4710-8ec0-4ffc-a3a2-c24f2a7144b1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "367b1a2e-a782-47af-bb52-a36a78c2aaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decc93f4-216d-499e-bcc4-6a37881c03c5",
        "cursor": {
          "ref": "73bed14b-094a-46b0-9941-db8b159c50d4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b4d116a-04c7-4b4e-b087-f208a2de248f"
        },
        "item": {
          "id": "decc93f4-216d-499e-bcc4-6a37881c03c5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ad5d0c2-3dd4-4d4c-8b8c-5a748f6e5278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93cc9b4-63b2-44ab-a7d9-ee2bb0fd502c",
        "cursor": {
          "ref": "a20ae115-1f37-4f10-8978-73537f1008e1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "34894351-c9af-4aa2-b2b5-c66d38c8e81e"
        },
        "item": {
          "id": "b93cc9b4-63b2-44ab-a7d9-ee2bb0fd502c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4cfe3a59-86eb-462d-aec7-343e7600c4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15d0d1-d459-49e4-912a-6dd4c876a421",
        "cursor": {
          "ref": "182a4c9e-ea11-4309-9caf-b31ff8bfdd04",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dc09e584-c029-45a0-a45b-d37b8bf47572"
        },
        "item": {
          "id": "ab15d0d1-d459-49e4-912a-6dd4c876a421",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "13bba59c-bfc3-4fd7-8f1c-bdf46f0aaf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e958c5dc-30ed-4691-accc-fa68c107bf0d",
        "cursor": {
          "ref": "839695c3-dfa7-411f-94a1-b3e8e9fb18e2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28f299f1-6f1d-4509-9a4a-9a2bfcd9203e"
        },
        "item": {
          "id": "e958c5dc-30ed-4691-accc-fa68c107bf0d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f947ea4f-89df-46bd-b6a0-736efca19626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936f060c-4dc8-482d-86ba-5a3e8eadf201",
        "cursor": {
          "ref": "0ea781d7-c8d9-4d4d-b2ba-ef83b5a625e4",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "46e360aa-6565-460b-877b-2766ef6474d8"
        },
        "item": {
          "id": "936f060c-4dc8-482d-86ba-5a3e8eadf201",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aae00549-3c4f-4d2a-9568-2d3d7af58d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb39d8ce-a51d-41d2-acb7-c3614cce2ea2",
        "cursor": {
          "ref": "e22fd3cf-31d3-4a18-8c93-938269bbe27a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "79373e77-f211-4159-a100-2a8dd4f4c61c"
        },
        "item": {
          "id": "fb39d8ce-a51d-41d2-acb7-c3614cce2ea2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8e89999-fc79-4c5c-b28b-a4c8a47de6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370dd0e6-ec85-460d-bd9d-1ccec09842ba",
        "cursor": {
          "ref": "39c0b469-112b-4f38-9ebb-fe85b9926e5b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "99cd15cc-0ecd-4056-8020-d16a4986cf2b"
        },
        "item": {
          "id": "370dd0e6-ec85-460d-bd9d-1ccec09842ba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "36356ab9-5bd5-491a-becf-8c84b81e6e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17674ecb-0d39-4251-9729-facea9eb601b",
        "cursor": {
          "ref": "eea163b4-901f-460b-9414-658488b4d628",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "14beaa3a-a41b-435f-9887-e2d76754e7f5"
        },
        "item": {
          "id": "17674ecb-0d39-4251-9729-facea9eb601b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b13eea3e-7412-41bb-83d8-eb236f3037c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e04a3cf-56d5-46ea-8e07-a849f6465d8f",
        "cursor": {
          "ref": "d21fb061-c3de-4e53-866d-e1edf5a23801",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "70609f07-daac-48bf-8886-72a006d3d401"
        },
        "item": {
          "id": "6e04a3cf-56d5-46ea-8e07-a849f6465d8f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcecbda6-47fa-4a5b-8479-c3d2c9e75b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9f6978-41b5-4729-9f69-4e5bca5e08a1",
        "cursor": {
          "ref": "fc258d3c-f07a-4dd4-9674-71cbe7993a4f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7f7035a0-f3a7-4aa6-a870-3fe8aa17dad6"
        },
        "item": {
          "id": "4d9f6978-41b5-4729-9f69-4e5bca5e08a1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c16f2e70-bfeb-490a-8620-01f9f8e8c3d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4a58336c-85c4-49ce-864e-1a9defb193aa",
        "cursor": {
          "ref": "5a6412c7-73b8-489c-8aad-2431b80de02c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d6bfefef-45b6-482c-b1cc-53d5b122ed06"
        },
        "item": {
          "id": "4a58336c-85c4-49ce-864e-1a9defb193aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51a7c96c-e0aa-42f0-8176-8d417c706057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056525f6-f184-4297-bacd-5735acd72c54",
        "cursor": {
          "ref": "f88e5c05-45c0-4a0a-a0c4-67671d6495fd",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9b17d86d-087b-4c29-9129-ff35a50ceeb0"
        },
        "item": {
          "id": "056525f6-f184-4297-bacd-5735acd72c54",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a283014-2f12-4afb-890c-d1d54639389e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4513615a-eabb-423a-9524-883d3f023406",
        "cursor": {
          "ref": "45a8a2a6-961f-4c1c-a407-40f4857e9155",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f5772884-cd0d-4e2b-809e-287d07dd084c"
        },
        "item": {
          "id": "4513615a-eabb-423a-9524-883d3f023406",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb3dcad5-0f64-44c6-b483-bb36f911c65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3ff613-8c02-4bb4-b159-0a5e2b776183",
        "cursor": {
          "ref": "1f382fad-1416-4a0d-b2e7-33592dbf7942",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c5b549f3-e162-42af-b10a-5aff03208536"
        },
        "item": {
          "id": "6e3ff613-8c02-4bb4-b159-0a5e2b776183",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f652ac92-b6c2-4551-923e-26cb24ac1771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f9623a-2798-4b71-9aa0-7b1ee55bcea6",
        "cursor": {
          "ref": "093c5a66-b47c-473b-862e-dfcfa7d41401",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d5588b46-8639-46ba-a891-9c10b5710bfa"
        },
        "item": {
          "id": "43f9623a-2798-4b71-9aa0-7b1ee55bcea6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5e682790-a91d-45dc-905a-3dca5bcff62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc33a57-14b1-4ec1-be38-2dda5ef85a13",
        "cursor": {
          "ref": "cb997bb1-a346-4ab5-b3e0-37b15fac892a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9b4b1a5e-8ef4-4561-b6f5-10972624c5e1"
        },
        "item": {
          "id": "7fc33a57-14b1-4ec1-be38-2dda5ef85a13",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d62a10d7-cc3e-41a0-a593-490c47e6cf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1647b72-3e24-4884-8560-458e9bea5c2c",
        "cursor": {
          "ref": "252fb9e2-306c-4b5f-a4d6-898a4d1c561b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "72750647-aee3-42e4-9807-9bf5cfc49c99"
        },
        "item": {
          "id": "d1647b72-3e24-4884-8560-458e9bea5c2c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b0e2608-4d2a-41f4-b802-4957875584a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608cb85f-374d-4e34-a13c-8874c7137590",
        "cursor": {
          "ref": "7dc90e67-a17f-41df-8dbc-d1c5f438f04b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d1f21e59-cc83-4a1f-be52-8ae787eab90b"
        },
        "item": {
          "id": "608cb85f-374d-4e34-a13c-8874c7137590",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ce9e04b6-3aee-424b-93af-c2eb929b47fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "94f4267c-30d7-4e73-87b8-37d62058889a",
        "cursor": {
          "ref": "3eb91658-fb31-4041-956f-2cc6ffe4ef91",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4882951e-1473-434b-bc71-1fdcf1547b39"
        },
        "item": {
          "id": "94f4267c-30d7-4e73-87b8-37d62058889a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "76a1c953-ab14-44ed-80ba-45d0a76167a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3856c4f-6986-4a5e-9985-e628c59f26d2",
        "cursor": {
          "ref": "f77aeaf5-bcfe-425f-86e3-b41d982d1cb9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "99502119-70e0-4003-9fab-6c02526510fc"
        },
        "item": {
          "id": "d3856c4f-6986-4a5e-9985-e628c59f26d2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "926903e6-8838-4400-8a06-9a6489ab6280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5daf442-764b-4340-821c-2ac06dab1565",
        "cursor": {
          "ref": "a97182f9-afe0-418d-b09a-adaff8604756",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "85df6e63-5b4f-473c-a238-999ec2c2e1a9"
        },
        "item": {
          "id": "f5daf442-764b-4340-821c-2ac06dab1565",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d219a014-8be7-4dbe-99a9-437b40c35dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6589b7-7df7-46d2-b4e2-af02ce61e065",
        "cursor": {
          "ref": "8dff0d03-4ba2-4e17-9719-8064bef7d837",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "024a7036-8fc0-4aeb-9034-0c28c1e208ae"
        },
        "item": {
          "id": "bf6589b7-7df7-46d2-b4e2-af02ce61e065",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4f0d62d-a866-4894-9f82-355a959cfa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c08f63-0bb6-4e79-9355-655ba84bd991",
        "cursor": {
          "ref": "2c7121ca-0b69-4d28-a9c3-15492c6bc1a4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "faf85b41-9746-4bb2-8b46-a6476b058dcb"
        },
        "item": {
          "id": "25c08f63-0bb6-4e79-9355-655ba84bd991",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0bfb15dc-4235-4eac-bf13-bbbbb1816391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13b910e-e643-4d61-befc-376a5ef280a1",
        "cursor": {
          "ref": "36ccc3b9-f10a-4f02-962b-f20bd39076c3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a2ac59d1-4e86-4c55-9a96-f3aeb3ca2f30"
        },
        "item": {
          "id": "d13b910e-e643-4d61-befc-376a5ef280a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aac97055-defa-49f4-9399-ea423c8f2376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fafb38c-7494-4bb0-9ea6-812174ad12f3",
        "cursor": {
          "ref": "8522df7f-02a6-44ed-aff6-2ad9c1f1baa7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a889f930-2f44-454d-921c-42ad5bd6c44a"
        },
        "item": {
          "id": "7fafb38c-7494-4bb0-9ea6-812174ad12f3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f148bb68-133e-41c0-90f1-de06ed71bd46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "04ab978c-27cb-476b-af4e-aef191545b23",
        "cursor": {
          "ref": "3536d344-4db1-48ee-9a92-ac3686bb6115",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ebf87d34-49ba-4d1c-989b-40b9fa421a61"
        },
        "item": {
          "id": "04ab978c-27cb-476b-af4e-aef191545b23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e74bd80a-94e6-4faf-9657-09795fd5531a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f344aaa3-3261-4f66-b1d3-ddf3eed3956f",
        "cursor": {
          "ref": "ea6ee06a-debd-4b21-9aed-1e5cc7d72aae",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e97060a9-3623-4122-9ed0-0aa5128f4f43"
        },
        "item": {
          "id": "f344aaa3-3261-4f66-b1d3-ddf3eed3956f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3add8a7d-e6e9-4477-ae9e-1f34d129fd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c922d59e-e090-484d-9571-8d38379190d8",
        "cursor": {
          "ref": "bbacf199-0aaf-4064-b689-155f1cc78725",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7aafe660-f411-407e-90de-d3690113395d"
        },
        "item": {
          "id": "c922d59e-e090-484d-9571-8d38379190d8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81ad1e27-d4bf-45a3-833c-661eb0f78f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29222370-2efc-41a2-b0a4-db6068ba683d",
        "cursor": {
          "ref": "29a264bf-4460-4262-abec-1cb1918d7090",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f0bb4b57-20b2-4839-86cb-de1de32af86d"
        },
        "item": {
          "id": "29222370-2efc-41a2-b0a4-db6068ba683d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "450ecd14-2905-4bd0-9fa9-288cf378feb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792edf7-efd2-485c-87f8-e5f97d70f070",
        "cursor": {
          "ref": "7a415901-3ae8-43b0-9b42-f44f8fe6e271",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "88e4344b-ba65-402f-8700-d9194d6e67a5"
        },
        "item": {
          "id": "1792edf7-efd2-485c-87f8-e5f97d70f070",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97c3db59-41d6-4dca-b762-8481bb5f25c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a836acf-de79-4c21-8763-36b7fdb7de26",
        "cursor": {
          "ref": "403297d1-2e9b-4b7b-b731-7db77000c28e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "33c93ed9-d2dd-4178-88e8-beda5281b2c5"
        },
        "item": {
          "id": "3a836acf-de79-4c21-8763-36b7fdb7de26",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31aead13-9719-4781-9060-2ab35225899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b9c414-2606-4c16-b349-34b6a2db8c77",
        "cursor": {
          "ref": "3fb8cb7f-8d96-4d28-8ca1-474fe783dbd2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c99a015b-4a70-4d52-a6a9-21362fc0d746"
        },
        "item": {
          "id": "42b9c414-2606-4c16-b349-34b6a2db8c77",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "843e5d18-d80d-44d1-9754-a6b978579966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51eb821-41e8-478a-b9df-54916b461403",
        "cursor": {
          "ref": "5735faf8-72cd-4ed0-a4d6-db814fb946f0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d6983b47-fecf-44b9-a159-421727bda456"
        },
        "item": {
          "id": "b51eb821-41e8-478a-b9df-54916b461403",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "70086ebb-1254-4008-a0d7-7abfa0ecac95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0fd503-9c03-44e7-89d5-55db29ff94e8",
        "cursor": {
          "ref": "74f71b04-e21b-4cd5-b2c4-41d17b552711",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b33db58e-7e1f-4ca2-a66f-f070360003dd"
        },
        "item": {
          "id": "2b0fd503-9c03-44e7-89d5-55db29ff94e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "753b75c9-6188-482e-832b-482af3bbce9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f08530-3130-4483-a2c6-d23d99b6dd92",
        "cursor": {
          "ref": "ded00cb6-aa71-4dbe-a87b-b1acacf8bd02",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7660d3f8-0ae1-4f48-bc2d-d71a418c671d"
        },
        "item": {
          "id": "13f08530-3130-4483-a2c6-d23d99b6dd92",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7bce0299-65fc-413a-bfd2-1f72d689dc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652e74ca-4d0c-47ae-90b2-fbbf194c1eb0",
        "cursor": {
          "ref": "e200a085-45a3-4b86-8bd4-7201617224a4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b8bc106f-439b-4e25-adca-4b456cc23db6"
        },
        "item": {
          "id": "652e74ca-4d0c-47ae-90b2-fbbf194c1eb0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dbc0669f-eef1-4337-a6ad-5151072bfdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7df96a-b419-4b29-9773-f64add00d17b",
        "cursor": {
          "ref": "af53e76b-093a-499e-a7b7-c059446bf036",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "244932b2-c6a8-451d-b73a-f8e28fedc368"
        },
        "item": {
          "id": "0f7df96a-b419-4b29-9773-f64add00d17b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9fdea22a-40a7-4582-b2c4-b2ef64152cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33828d50-f3fe-436c-9b7e-e19838449d42",
        "cursor": {
          "ref": "b2b00237-31c6-4b4f-a677-ce79651d2f03",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "daf9ad27-5dcd-4aea-ad60-b2496d17ec47"
        },
        "item": {
          "id": "33828d50-f3fe-436c-9b7e-e19838449d42",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8945ca3-2e92-402d-98b4-c720df535b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a5d0c-d275-40f8-9df0-cbe96e30fbc4",
        "cursor": {
          "ref": "1eb4dc4b-b32b-449d-aa48-1c38c2883ebd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3ca9bbf6-7804-4f9d-9b22-cdbeaaa01c22"
        },
        "item": {
          "id": "650a5d0c-d275-40f8-9df0-cbe96e30fbc4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "daf017ce-0ed7-4eb1-8244-b96599e2542a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad3f6e-5793-4e7f-b424-b6101dd03802",
        "cursor": {
          "ref": "daea0d5c-b97e-437e-b256-07f5b56613bb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "41cac677-b6a5-4753-bdcc-66be32f40917"
        },
        "item": {
          "id": "4aad3f6e-5793-4e7f-b424-b6101dd03802",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9c5ee686-6e23-47d8-993d-c16f429ce163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402ca74a-ddce-4eb3-9645-5569a4479572",
        "cursor": {
          "ref": "fda06d1a-94c7-4f48-972e-a03cb3893091",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "de3eece7-6974-44d3-b5c8-e944bc0d2f6b"
        },
        "item": {
          "id": "402ca74a-ddce-4eb3-9645-5569a4479572",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "751c09cd-5377-4972-9dfa-34ca6d48fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fa7b40-e30c-49cb-aacf-02e1cf2972e6",
        "cursor": {
          "ref": "ba21516a-b0b9-4d8c-b5c7-7a6add199935",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a68fb3b6-466a-408e-b6fd-790e339d1501"
        },
        "item": {
          "id": "b4fa7b40-e30c-49cb-aacf-02e1cf2972e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d3166f6c-04af-4f3e-89cf-f0e16b49b3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff11698-962c-4685-9f16-546283363e62",
        "cursor": {
          "ref": "2e392e2d-1522-402b-a7bd-947667e48a43",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e443bcf6-f6df-4140-bdae-186f1ad062f1"
        },
        "item": {
          "id": "0ff11698-962c-4685-9f16-546283363e62",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c87b0682-bd3d-48cd-81e2-fdb091ed5096",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "4d09bd77-9818-4290-afc9-d3a39d5935cc",
        "cursor": {
          "ref": "763e04f1-a470-40b0-80c6-aabb3f1386a3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e79dec3d-ee3b-4f49-9537-d046e723e5f8"
        },
        "item": {
          "id": "4d09bd77-9818-4290-afc9-d3a39d5935cc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "103ae7a7-dc54-48c1-abbf-9f068f39a310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7059b88b-39df-4be0-92ef-31d530c9b5c7",
        "cursor": {
          "ref": "d4c007c6-c7f4-4121-a4a7-81ef92e26742",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "17993653-2b7d-4ebf-bbe0-07f22cf8e45e"
        },
        "item": {
          "id": "7059b88b-39df-4be0-92ef-31d530c9b5c7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d9a3874a-1bff-4e29-963f-e5f77bf5a563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63475b5-ab17-43de-971c-a1e00de00abf",
        "cursor": {
          "ref": "0cb4d420-31f9-4ce1-b38a-2326871aa09e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "239ded62-4b6d-46c5-974b-bed4f8ee4094"
        },
        "item": {
          "id": "e63475b5-ab17-43de-971c-a1e00de00abf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "93f922d6-fe53-448e-ae76-ede8721fc3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec49ab9-fb64-4f23-a661-67c00fb88855",
        "cursor": {
          "ref": "2cda2a31-887b-48a0-960d-bc2baa2f9623",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "29391f54-b2b2-44cc-b129-37bd85fcf465"
        },
        "item": {
          "id": "fec49ab9-fb64-4f23-a661-67c00fb88855",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "68051cd4-8543-4d56-b847-6dd8c0741075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d0cb6c-0788-4e89-a22e-a49513a6f066",
        "cursor": {
          "ref": "ff55f631-0e0a-4ea4-9f5c-3215c85fe898",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dc8da250-d6e5-4567-beda-d7e19021a995"
        },
        "item": {
          "id": "56d0cb6c-0788-4e89-a22e-a49513a6f066",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "af3be008-423f-4f00-9a58-6a9cbe3254f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739a584-fd2b-4daf-bb41-117217e39bb8",
        "cursor": {
          "ref": "0b91f557-f9dd-48ac-81c4-d232b18da48d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4d205b7e-b55e-4e95-adaa-92e3422ef60d"
        },
        "item": {
          "id": "2739a584-fd2b-4daf-bb41-117217e39bb8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ee657dd3-d418-418f-afd6-e2568889a82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e304d-797d-412d-a4f9-6cdba7e01da9",
        "cursor": {
          "ref": "34e57b90-860e-4802-92d3-e4a23bd75644",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a3c4c5e4-7ebe-407b-9612-1d27120678c2"
        },
        "item": {
          "id": "291e304d-797d-412d-a4f9-6cdba7e01da9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9c823c98-c1f9-4215-8b7f-c4716966147c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce17ca9-12cf-45b0-9b05-a2cc91eceed4",
        "cursor": {
          "ref": "79aa6d92-e416-4202-ae16-a9c6b07d6f63",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "affe60cc-4ba0-47bd-ab78-76088117e4d0"
        },
        "item": {
          "id": "9ce17ca9-12cf-45b0-9b05-a2cc91eceed4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a2eb8e3-8bc6-43f6-b59e-4cf55abacb1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "25818cd2-dd66-4309-b2c0-eb5433b07df9",
        "cursor": {
          "ref": "31a60860-2ea2-4de9-b518-5d030d8fda60",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f8a2670d-d006-4c61-bb86-f3280cf855ce"
        },
        "item": {
          "id": "25818cd2-dd66-4309-b2c0-eb5433b07df9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ca727df-156a-4a36-887e-47471059f4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4272d43d-5f0d-4b5e-bc9a-2b75a6203358",
        "cursor": {
          "ref": "d042bc80-f685-43e6-a299-1ae5d6c40ab8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b19682bc-f33a-4b12-bcc9-b0c176daf606"
        },
        "item": {
          "id": "4272d43d-5f0d-4b5e-bc9a-2b75a6203358",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7fac3963-b4a6-43e2-867c-28aef7cdc58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7313d-5366-4094-b039-150519276695",
        "cursor": {
          "ref": "f7b1e850-48a4-4329-8b90-0a8da3ce51a2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "077125a9-c020-4da5-adbd-072ff17cb870"
        },
        "item": {
          "id": "9ec7313d-5366-4094-b039-150519276695",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0539771c-6683-4898-8090-5e53778f29a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c31fe24-d352-45b4-ae5c-6d42b7829b63",
        "cursor": {
          "ref": "90125fb7-fde4-4b65-a070-397a66a3909d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e6f1adcc-b3f0-4b50-a2a1-6bbb1a0cfe27"
        },
        "item": {
          "id": "6c31fe24-d352-45b4-ae5c-6d42b7829b63",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98899930-5a43-40a4-96d5-c3132bad6049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b179815a-9aac-487a-80dc-75b9c99a8d5f",
        "cursor": {
          "ref": "87fdf747-8257-4e83-97f7-237dcdaea87c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b9b28529-d275-409b-ba3b-e490cb195b6e"
        },
        "item": {
          "id": "b179815a-9aac-487a-80dc-75b9c99a8d5f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "34549d53-d651-43ea-86ec-2a3c530301cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d9709-5e04-4303-a0ed-7b1aafa721fd",
        "cursor": {
          "ref": "5c6bea8d-8772-43ba-89f1-d8e020a6f312",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "840312c0-0ba2-424b-a317-5eddc7bb6515"
        },
        "item": {
          "id": "903d9709-5e04-4303-a0ed-7b1aafa721fd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "86aba6ce-4731-46bc-aa2e-bd8a3f06ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f445a6-956c-4793-9285-3f3e7774cbc5",
        "cursor": {
          "ref": "09d13939-34e5-4ac9-a445-cfb1bbd8a647",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f4cbd030-6ddc-4236-98e3-83122e4ea755"
        },
        "item": {
          "id": "b9f445a6-956c-4793-9285-3f3e7774cbc5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "12839241-9e37-4eb0-a058-da821b6652d9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "be462d01-5eff-4de7-8ca5-6e9106898116",
        "cursor": {
          "ref": "93c1064f-8543-431b-af37-495ffdab06d1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d897d457-526e-49e6-b338-e5bd160ccd26"
        },
        "item": {
          "id": "be462d01-5eff-4de7-8ca5-6e9106898116",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "823ae785-1f10-4cd0-ba0d-bba8ced0c280",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "99cc537e-32da-433d-8417-ac338d0e599b",
        "cursor": {
          "ref": "585f7695-5f4d-4fd6-9fca-6c95c863e091",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d9fa8cdd-ba58-4b93-8a3b-35e7cb03266d"
        },
        "item": {
          "id": "99cc537e-32da-433d-8417-ac338d0e599b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a591ca33-e139-477e-94f0-aa1696c89026",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "95d9dada-4edb-4426-8023-a7668b759e00",
        "cursor": {
          "ref": "4c3f8624-8de8-41ae-9731-1aa1bc10483c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0e096da2-c9d0-4925-8854-31b32d956814"
        },
        "item": {
          "id": "95d9dada-4edb-4426-8023-a7668b759e00",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3ba6bd1d-5c17-46d3-a2fa-e7ce98f5f25e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "69dcdf68-baba-44b4-ab94-8fba18b2cd3c",
        "cursor": {
          "ref": "6a5de791-8c6b-4214-b768-3bc44786450e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5b64763e-b9b1-4dca-a0b1-a7efa3f1b21c"
        },
        "item": {
          "id": "69dcdf68-baba-44b4-ab94-8fba18b2cd3c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5c5ba022-3e5c-4c3a-8df9-e9b05e5c9f19",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "aa5aced9-5048-4349-a4ef-a8eaaa2395f8",
        "cursor": {
          "ref": "0d59da1b-ebab-4764-b08a-cf7b1ad35852",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0e933ba4-3f22-4165-ad19-b653650a7eb3"
        },
        "item": {
          "id": "aa5aced9-5048-4349-a4ef-a8eaaa2395f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a87c3c9b-cf7e-47fe-a0db-4ba707b27043",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "92e7d3a6-d108-40e1-be90-e712e8cf18d1",
        "cursor": {
          "ref": "00bfc37d-55e9-4e84-ba47-8f67b75775a4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9f2dd52d-68b7-4155-be2c-81b0068787bc"
        },
        "item": {
          "id": "92e7d3a6-d108-40e1-be90-e712e8cf18d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ae690b6f-d7aa-4b97-aab2-16c7f90fee46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19287bbf-8099-47af-9cca-3d9227364ad1",
        "cursor": {
          "ref": "84145283-a6c9-4d05-8336-167227e3d508",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7f3cba11-f151-4b30-a63e-dcbcc690fba3"
        },
        "item": {
          "id": "19287bbf-8099-47af-9cca-3d9227364ad1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "32ec10c1-5d1a-4b5d-90aa-832d546f03d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c811a98-083f-4618-bc1d-78c57daa3f32",
        "cursor": {
          "ref": "6e2b56cb-ff36-4959-ab87-19f8f9069a39",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "836027e6-cb28-49dc-a507-1f88e119e5d8"
        },
        "item": {
          "id": "7c811a98-083f-4618-bc1d-78c57daa3f32",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "045eb383-2e8a-4b02-ac80-c1f6845bd1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f38d6a4-9fec-4639-aa6e-8d1b0fcdb9ba",
        "cursor": {
          "ref": "7c10695a-5ab5-4db3-adc1-56ebbeddfbd5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "33225186-740f-4052-b1a6-532503a0054f"
        },
        "item": {
          "id": "0f38d6a4-9fec-4639-aa6e-8d1b0fcdb9ba",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c03a0bc8-ca4e-4da8-806f-0fb210663407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5772d4d4-0ac5-49f3-a38b-1c7425055458",
        "cursor": {
          "ref": "3a8f25e9-37ac-4a53-9a3e-54f4e16e2c6c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2a1470d-aed9-4f36-ba5c-5f6b53bfdd75"
        },
        "item": {
          "id": "5772d4d4-0ac5-49f3-a38b-1c7425055458",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "60981389-66de-4f90-bcd4-42b2c18dcbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cdfb9d-06a3-479d-ac5b-12016c5eabef",
        "cursor": {
          "ref": "f59a224c-8ba6-404a-985a-64273ee5367c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "391daca1-50a0-4d74-b3ce-38e302e393b1"
        },
        "item": {
          "id": "03cdfb9d-06a3-479d-ac5b-12016c5eabef",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5e90cbf5-6719-4734-bc09-586bded48944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eee9ad9-3b80-4e5f-a5fa-2410113b1e26",
        "cursor": {
          "ref": "a9036d10-1de6-4bba-bea0-ac33605a38fd",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a4c4cce6-df19-4855-8ccb-8e571087e365"
        },
        "item": {
          "id": "2eee9ad9-3b80-4e5f-a5fa-2410113b1e26",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "42741f12-c888-4ba2-b5e1-5da208a8f2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3857f4-0875-4778-9fe1-622a5009e175",
        "cursor": {
          "ref": "53fb6dd2-7c7a-40b6-a4c2-9aa8f49404dc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f811fa9-05c2-4418-9426-f906d04355d5"
        },
        "item": {
          "id": "be3857f4-0875-4778-9fe1-622a5009e175",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f89cb9f7-dac9-43ec-97d3-96da90be8099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64fcf08-0f13-450a-a9e0-6552a46273be",
        "cursor": {
          "ref": "cf0ba233-f26b-4ed3-b0d6-527cf666fb01",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c3f18dc7-a819-436c-b259-1420dafed740"
        },
        "item": {
          "id": "b64fcf08-0f13-450a-a9e0-6552a46273be",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8ddc49bc-8150-47f9-9b70-2a2999d756fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fe6123-9565-4373-907a-3c3c83b9dd7e",
        "cursor": {
          "ref": "f4110024-4149-491d-95f7-4915eb4f8bc9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "062f4b06-5de7-4bed-879c-2b039ef3dd52"
        },
        "item": {
          "id": "96fe6123-9565-4373-907a-3c3c83b9dd7e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "31297e21-32e3-4769-82e6-33c4762a5bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0282595d-067f-4909-858e-860677b02710",
        "cursor": {
          "ref": "b5203acf-cbb3-4d87-a257-f30aff3fc801",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2ec3a168-a6bf-4f2f-baf4-6ea982020f23"
        },
        "item": {
          "id": "0282595d-067f-4909-858e-860677b02710",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b5fec2ae-1bb7-475e-8a20-e06e8f381a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e384b117-fb93-46b4-97e8-7d8fef21e5b6",
        "cursor": {
          "ref": "d166740a-79cf-4bc1-91bc-09bf7d8c0f4c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "909643f8-397e-4200-acf4-2354f86f311b"
        },
        "item": {
          "id": "e384b117-fb93-46b4-97e8-7d8fef21e5b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "06b09332-e253-4951-b231-e8e69200c06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640273d5-d42a-472a-9f2e-9ee54d249bf0",
        "cursor": {
          "ref": "d75e424a-fb1a-407b-97c4-2aca1efed9e4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9d2a640d-7793-4bff-95e4-7f701e287d0c"
        },
        "item": {
          "id": "640273d5-d42a-472a-9f2e-9ee54d249bf0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3950b7cd-0d65-4ac6-8270-8c914a6d0b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082e671e-97ab-47d7-ba65-be325351004f",
        "cursor": {
          "ref": "20753acb-d88d-48f9-98c2-4fb6583cb9a0",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ab138505-aaf6-4a1a-8154-366d883aa04f"
        },
        "item": {
          "id": "082e671e-97ab-47d7-ba65-be325351004f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "41ee8c89-1385-44bb-838a-aa31813011a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f7d61f-f57c-41f3-b53d-a07a77bab5dd",
        "cursor": {
          "ref": "90646dbf-d82f-4f12-b22f-0f713fc942e0",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1fbd1caa-96ef-4b51-a21e-fb55c1b58a56"
        },
        "item": {
          "id": "f0f7d61f-f57c-41f3-b53d-a07a77bab5dd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "72e9a606-75bd-4466-8ade-22a3f9c25a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6be08f-490e-4020-b72c-dfbd7de43f19",
        "cursor": {
          "ref": "ed74e6f3-a6ec-42a3-b6c6-b7f2bc6cafc3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4841077d-a580-4f37-9e2e-d642fc0f42da"
        },
        "item": {
          "id": "da6be08f-490e-4020-b72c-dfbd7de43f19",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "85e1c84b-5e53-4c58-9dd0-832b08edaeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4189f42d-7749-4af7-b6f9-3c4fe256a289",
        "cursor": {
          "ref": "99301fbc-1f78-4b6f-b4e5-1f805626f419",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3ffcabcd-58b7-43f0-a2cd-1b437d2c331b"
        },
        "item": {
          "id": "4189f42d-7749-4af7-b6f9-3c4fe256a289",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7ebba177-188f-46cd-af43-41cd649b0051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e668cf-f321-401b-a337-a44f74066c0e",
        "cursor": {
          "ref": "efefea93-76b4-432d-ba37-101a76dc32fd",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8311d0f4-f7df-407b-8eff-c58ea89e4e47"
        },
        "item": {
          "id": "b7e668cf-f321-401b-a337-a44f74066c0e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "984e3d0b-c73b-4df0-8194-8b5931c071fd",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a025016c-6ef4-4cbd-a661-58bc102e8d33",
        "cursor": {
          "ref": "77dbbc0b-d9a4-4d63-96b2-6d45c29f8d0d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9482465d-bab4-4b0b-bc3d-d9944644fce3"
        },
        "item": {
          "id": "a025016c-6ef4-4cbd-a661-58bc102e8d33",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4e2dff4e-273d-4143-b8c1-dd009e0d1755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea8f54-83b0-45df-a17a-001bce3c8333",
        "cursor": {
          "ref": "34999340-ce18-4163-9357-7a7a261f952d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "af4f4eb8-d64a-41bb-bbcb-ca4511f0ca38"
        },
        "item": {
          "id": "1bea8f54-83b0-45df-a17a-001bce3c8333",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dbd0077c-8deb-49af-b9c5-91ea21616feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e751bf-28a4-4d60-a4e4-ae73bbc286fd",
        "cursor": {
          "ref": "54b1e59f-93de-46ce-bc01-cd14db46fd57",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4c54844a-5c09-4f13-9e3c-538d11707618"
        },
        "item": {
          "id": "f8e751bf-28a4-4d60-a4e4-ae73bbc286fd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "10725a57-2052-419e-a7a2-adcdbd7bf81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde144b6-19b7-40ff-bf15-e5e95e831d6d",
        "cursor": {
          "ref": "d6db5fa5-a022-409d-87e4-f60a8852a20f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "976c04af-c228-4124-afe0-c288d0a9e7ef"
        },
        "item": {
          "id": "bde144b6-19b7-40ff-bf15-e5e95e831d6d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "05473b16-e4e4-45b9-adfa-acec3235b4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b979fd-0c5a-46d7-9651-b28e1530b6d2",
        "cursor": {
          "ref": "271dcf8b-b4c4-49a0-be40-0ecb5ec3e6f6",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a50eb3dc-3645-44ad-9b16-3346eafc5f1f"
        },
        "item": {
          "id": "d9b979fd-0c5a-46d7-9651-b28e1530b6d2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "610b3265-900b-46a9-bbcb-6db6804d52fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4bcd2b-0e4e-4e4c-8593-72e6256c7d9a",
        "cursor": {
          "ref": "06b868d7-afec-4625-aef3-42b4bb093cb4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8bdc1d61-3bd5-439a-84be-876b1af19c2d"
        },
        "item": {
          "id": "cd4bcd2b-0e4e-4e4c-8593-72e6256c7d9a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "06d1980a-4307-494e-8c0b-a2aa0533e506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c2f8e8-714a-4e52-a664-e783bc2f47d9",
        "cursor": {
          "ref": "6ad9f47d-146f-4a14-9762-be6e6bfea95a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d9158404-6509-4cc5-8330-1acff18b4b6f"
        },
        "item": {
          "id": "35c2f8e8-714a-4e52-a664-e783bc2f47d9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "82098796-9b87-4744-8c0e-4d5de1bca592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3399871e-f42f-4467-b39b-ef46df999826",
        "cursor": {
          "ref": "20190eed-1bbc-4c63-b37d-ffb221bde35b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "21a803b8-969b-4261-a110-f300f9aee680"
        },
        "item": {
          "id": "3399871e-f42f-4467-b39b-ef46df999826",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "93b4b235-816d-4daa-a1be-ee4c2ba1a363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f09e31-ae02-4d5b-beed-1906f3b1c55a",
        "cursor": {
          "ref": "40c389fb-c260-4d09-b532-30d74601de21",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1e42bcb6-65ac-404f-8582-0a3b9920b9f4"
        },
        "item": {
          "id": "b2f09e31-ae02-4d5b-beed-1906f3b1c55a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27c4e4aa-36ca-44f1-9083-2f44dfddd0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12bd371-3d5a-4f0b-8819-c3f5f23f602c",
        "cursor": {
          "ref": "8de85256-5bcd-4c44-8311-77522644d657",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "794b7223-3d2d-4a57-a50c-0b7e98cf2539"
        },
        "item": {
          "id": "c12bd371-3d5a-4f0b-8819-c3f5f23f602c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "879c0b0d-085a-435d-97b6-3a4f6ce16574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c775be91-12e2-48c8-a8e7-993d8eb1bbcd",
        "cursor": {
          "ref": "1b11c911-a566-4685-bbc6-4850eff849cd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "92171596-c97d-4261-80e0-82730ccfa595"
        },
        "item": {
          "id": "c775be91-12e2-48c8-a8e7-993d8eb1bbcd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d6f097c2-4009-4e4f-b4c2-0b9009474d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce2cb0-7fd9-4925-9c50-a328d5f1e1e8",
        "cursor": {
          "ref": "a387f435-1db4-4ac2-b842-3d690396bcf3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "93dde96d-c0fe-4ae6-b18e-ea22a9f0a250"
        },
        "item": {
          "id": "94ce2cb0-7fd9-4925-9c50-a328d5f1e1e8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "83816ea8-2e8d-41f1-9395-09e1d1204075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad60dc8a-1b0e-4675-b639-3be9f790df15",
        "cursor": {
          "ref": "862a6498-23cd-431b-a441-4d4f534e97cf",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "759ea00c-f451-4a9e-95bf-5e3fd5e758e1"
        },
        "item": {
          "id": "ad60dc8a-1b0e-4675-b639-3be9f790df15",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f60aef7a-20a5-4551-bde4-1870da09a1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef15d2-d810-422e-8c79-756099a75ff9",
        "cursor": {
          "ref": "1ea0ce05-90fa-42b3-b437-f96b3fb55e21",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "473c9d76-3615-41ce-abaa-6c1b4c9af3c5"
        },
        "item": {
          "id": "51ef15d2-d810-422e-8c79-756099a75ff9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a50d469b-ec30-43cb-9686-54218180286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22658beb-db61-4dd1-aed0-f0276e3a78e4",
        "cursor": {
          "ref": "af6495eb-5249-454b-8cb5-1abecb8bdbd2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5f3acc0b-1f81-438c-9951-673ad3bed36f"
        },
        "item": {
          "id": "22658beb-db61-4dd1-aed0-f0276e3a78e4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "99a0605f-8672-4fd7-80b8-7185af9e0e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea4f87b-9569-4a05-b427-444de8c36121",
        "cursor": {
          "ref": "33c2f419-c979-481a-bb44-fdb618f17674",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "76c48675-cf39-453d-a114-61d3ff09969b"
        },
        "item": {
          "id": "bea4f87b-9569-4a05-b427-444de8c36121",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2edb9d23-eb3c-420c-a92d-4729e40f60dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521936f8-6de6-4cd6-9dfc-387f6c121dd2",
        "cursor": {
          "ref": "41921002-2d78-4c08-9421-611b7da2550d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0fbf2451-6110-456e-b5bb-b83448ecdae4"
        },
        "item": {
          "id": "521936f8-6de6-4cd6-9dfc-387f6c121dd2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "93335050-d7e7-4536-aec5-7c612aabc7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ef25d-e5a3-48c8-9fd9-1b411b12c7e1",
        "cursor": {
          "ref": "ee6e97be-5a42-4b3f-b3ed-b50880876b0d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "03174e59-146e-4069-8c20-d9852a05fb7c"
        },
        "item": {
          "id": "0b1ef25d-e5a3-48c8-9fd9-1b411b12c7e1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87dd4d8d-78ae-4587-aa95-95459931bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c6be7c-4ee9-4113-b115-e3645be0f6b6",
        "cursor": {
          "ref": "5e9f4dbb-5239-4f2a-bd57-6d59767ba9f0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "262ca26b-8c8a-4bb8-9c86-719d3e6aeb50"
        },
        "item": {
          "id": "76c6be7c-4ee9-4113-b115-e3645be0f6b6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "32332fbb-e40d-4150-b101-9b276a38ec82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afa5142-ccc4-49f2-977e-0479905a3b98",
        "cursor": {
          "ref": "04e789e9-21fe-47ae-ac44-2953138a5d18",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0d413705-58c9-48c5-88bb-bf8d85e14501"
        },
        "item": {
          "id": "9afa5142-ccc4-49f2-977e-0479905a3b98",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a373a4f9-e8f9-4f0a-be00-2420847031a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b5548e-6740-412a-992c-ab5b954e896a",
        "cursor": {
          "ref": "a52fea67-3c10-4bb3-b522-dc3d7249e002",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "212cc481-fc22-4129-a80f-20800feb0476"
        },
        "item": {
          "id": "41b5548e-6740-412a-992c-ab5b954e896a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "44aa3e0f-c317-4c04-ba45-e61b50d7aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86281f1-6eda-4ea8-8141-588174d5a692",
        "cursor": {
          "ref": "82c29341-f99e-440f-89b4-cd53d34ba410",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fcda3a88-96a1-4d72-b9d2-ed3ac3124950"
        },
        "item": {
          "id": "f86281f1-6eda-4ea8-8141-588174d5a692",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b27b8a41-c46f-4d7d-a61e-5e1de49a01dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d0cdd7-d578-4e3d-8fae-0995f8595558",
        "cursor": {
          "ref": "53a1f3d3-da2f-4c4a-9bc6-80877092b913",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1fbcd915-1475-4159-9749-b5834b5801d8"
        },
        "item": {
          "id": "e8d0cdd7-d578-4e3d-8fae-0995f8595558",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a3449fc-e877-40fd-a7ce-7098e7e7de83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea3340-255c-4691-bf5b-1e4186da539b",
        "cursor": {
          "ref": "6f93a5ba-87fe-473a-bc67-277654c736cc",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70866e77-33e3-42d8-84a0-99e46bb09468"
        },
        "item": {
          "id": "31ea3340-255c-4691-bf5b-1e4186da539b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "37583b2e-248e-43da-9b92-28add6f84120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f2d358-b434-4811-8cbf-bd4bdff62248",
        "cursor": {
          "ref": "b8d8576a-8336-4616-bf9f-6955d1787368",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b1cec697-8c5c-44e3-8f6c-c323db9e394a"
        },
        "item": {
          "id": "d0f2d358-b434-4811-8cbf-bd4bdff62248",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6f343dcf-7afc-4cf1-a42e-44dcc8a9d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c8309-b7fe-419f-9eac-332f871f9c27",
        "cursor": {
          "ref": "0f0cc6ec-67a5-4d17-b1a3-3e5621d9fc6b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "11ab1fd3-f36c-4ffb-ac67-bb51fce2d972"
        },
        "item": {
          "id": "698c8309-b7fe-419f-9eac-332f871f9c27",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0fa51828-fae6-4541-96e5-d60e3438be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a46eb5-89be-449d-a68f-4c0e110a716e",
        "cursor": {
          "ref": "f24203e8-b565-40be-a122-e563b6842b54",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "76ccf893-dd0d-42e3-beea-c93e1e5b48d4"
        },
        "item": {
          "id": "c2a46eb5-89be-449d-a68f-4c0e110a716e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a6913b11-9825-40c1-baea-fac9cf43ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa979035-c32c-4381-9228-44e76f18522d",
        "cursor": {
          "ref": "fa4f0d9e-07f8-46f1-9e6a-219a1208f27b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dd4e9272-a0cc-42fb-9163-b45da0001877"
        },
        "item": {
          "id": "aa979035-c32c-4381-9228-44e76f18522d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea526f59-df60-4ba8-8ce6-a3c211a1fa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995ad3c6-2edd-416f-bf9d-45de2784b449",
        "cursor": {
          "ref": "414cdaba-ed0e-4c77-8a73-4c6ddf866b42",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c7e5a8ed-759b-41be-a629-759b532eb144"
        },
        "item": {
          "id": "995ad3c6-2edd-416f-bf9d-45de2784b449",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "887b37b3-0947-449e-8a96-02f89450d98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30bf22c-b6d0-410e-a47d-b8d235c910ec",
        "cursor": {
          "ref": "3bb2f11a-3700-4e84-9659-e2f729e9001e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "283d889d-b368-4907-bfcd-64e846ed4897"
        },
        "item": {
          "id": "a30bf22c-b6d0-410e-a47d-b8d235c910ec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0f0befe1-5827-485a-8200-de45c48bc9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70879f61-b1db-47a1-a70a-e93f65ef9efb",
        "cursor": {
          "ref": "7d16abc1-0206-4856-8b65-9ac17514291c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "df90e26c-db20-4311-928d-047f593f8f87"
        },
        "item": {
          "id": "70879f61-b1db-47a1-a70a-e93f65ef9efb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b34969b9-cf06-4e30-b1b4-f194cdd4cf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda647ad-305f-4e74-9163-d6f22c9fd9ed",
        "cursor": {
          "ref": "d02f8696-483e-4c6d-939a-71d78b800c98",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "919aaf2c-4474-407f-9319-1f7ff48438ea"
        },
        "item": {
          "id": "bda647ad-305f-4e74-9163-d6f22c9fd9ed",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9cc2f9ff-000a-4dab-9d1a-24f2c6e9d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6a5747-50d3-47a0-b40a-b8607d6114c9",
        "cursor": {
          "ref": "5fae3ae1-feb1-45bc-bef3-cc217919428b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7f3e95c4-3b05-4d14-9650-db2f821daac2"
        },
        "item": {
          "id": "fb6a5747-50d3-47a0-b40a-b8607d6114c9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "34c02a31-6440-4434-a289-22a4b0585089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff9e331-a69c-4d03-b104-aa981e81fe5d",
        "cursor": {
          "ref": "25b6b496-a102-4c8b-bb96-1ecd52ff3f84",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d32a89b1-8711-4379-ba29-1f5bed129b43"
        },
        "item": {
          "id": "cff9e331-a69c-4d03-b104-aa981e81fe5d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "963e7b1f-76a7-4707-b873-9673da1edb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a664b29-f7d4-4100-a136-1afa16c4aebb",
        "cursor": {
          "ref": "7b9d70d5-4dcc-4f88-9fff-f53e8ba2a646",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "89306bf6-9994-47c6-884c-1df83d9e78c6"
        },
        "item": {
          "id": "3a664b29-f7d4-4100-a136-1afa16c4aebb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "56b7112d-ea4f-482e-b0c0-0bd598b8deab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d378acb-2c89-468b-b4ec-8ce30e359ef8",
        "cursor": {
          "ref": "5fe8ae3d-6b40-4f8d-8187-4cc9b48dd17f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2743cfea-ff7a-446e-990e-667f8ddc784b"
        },
        "item": {
          "id": "6d378acb-2c89-468b-b4ec-8ce30e359ef8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac4d53f3-a11d-4d57-8789-ebe1283c4795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cef640-7373-488a-bd71-0d77d9db95a1",
        "cursor": {
          "ref": "ca5e5f72-7aa4-499c-95ac-f8a2d821ee40",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7248cce5-a51b-4ed4-9a61-11fa176ade51"
        },
        "item": {
          "id": "60cef640-7373-488a-bd71-0d77d9db95a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2bc9d7df-5cf3-4581-83bc-a8099772fe7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58140682-ae84-4728-a210-97d63faf73d0",
        "cursor": {
          "ref": "aae6fe31-70e6-4d56-9bc8-58ad7793b0cb",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ee0b0fe6-b147-4914-a79f-6881c72545bc"
        },
        "item": {
          "id": "58140682-ae84-4728-a210-97d63faf73d0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "17db2726-9888-4390-a496-80fcabb0910c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e9f2c7-d091-41a2-b2af-97f88665038c",
        "cursor": {
          "ref": "15c6828d-d275-4065-aeec-a7ca0a61b0a2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "21cb254c-1fb9-45f3-91c1-114724dbe7ce"
        },
        "item": {
          "id": "08e9f2c7-d091-41a2-b2af-97f88665038c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f9d5e61f-3d15-415d-a294-f8b69fd2cf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817ca81c-fbc7-41f4-b045-c72fd8433b98",
        "cursor": {
          "ref": "2505a225-aaa6-4aed-b011-ebe45c5ecc5e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a57283a-3a3f-43c1-a364-4ab586c489d9"
        },
        "item": {
          "id": "817ca81c-fbc7-41f4-b045-c72fd8433b98",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c3a260bb-e232-4d46-adbb-c26dd58c4ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdb1662-6ab5-4d67-bb92-3e3e41d53114",
        "cursor": {
          "ref": "7ab002d2-983d-4b25-bb53-b6b7b483eddc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cea601c5-abf5-47ea-abf7-4c8b4fa00450"
        },
        "item": {
          "id": "0bdb1662-6ab5-4d67-bb92-3e3e41d53114",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f457f5a2-f809-4f0c-ab63-a6f7d723757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a945e7-11fb-49e7-b5e1-bbf3539a9cf6",
        "cursor": {
          "ref": "204ee21b-565b-40cc-8711-cab104ce7c6e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a37a2fc4-7dbd-4065-8f85-d21be8e52f0c"
        },
        "item": {
          "id": "b0a945e7-11fb-49e7-b5e1-bbf3539a9cf6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0029946c-4b32-416d-9395-65ed751616fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b3f929-80fb-410f-99f6-7d88445498c2",
        "cursor": {
          "ref": "116363a1-9d32-4291-8752-9509676cb06b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2d954f48-ca60-4ee3-bbbb-34f72193d1d3"
        },
        "item": {
          "id": "65b3f929-80fb-410f-99f6-7d88445498c2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e4ab1d67-de07-4904-9bec-1e3ab2d9d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8638b522-31de-442d-ba62-71fd18167a8b",
        "cursor": {
          "ref": "3c78a37c-8d21-45bf-b4db-34fa8473c27e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "447e36c9-c638-4e39-9b84-157bbc328b06"
        },
        "item": {
          "id": "8638b522-31de-442d-ba62-71fd18167a8b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3b7f36a2-c2cd-4216-a01a-6a92e28c84ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b555df3-6b6a-4048-b166-b0fb28a01297",
        "cursor": {
          "ref": "df87bbe1-71f1-4955-9d51-c98c9648540f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3dcd149d-8a99-4452-8b9d-1710430ff415"
        },
        "item": {
          "id": "4b555df3-6b6a-4048-b166-b0fb28a01297",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e2c6d2dc-9908-4195-a676-7845d98e5704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a15ef9-7d25-4f40-96fc-785950e6c4df",
        "cursor": {
          "ref": "278bf6a0-dbeb-4e18-abc4-4e891420d53b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8f74d272-81b7-418e-85dd-5611e5c2dbaa"
        },
        "item": {
          "id": "b6a15ef9-7d25-4f40-96fc-785950e6c4df",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed15d010-138d-47fb-a261-37a283479059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5630b63f-60b6-492a-88a3-2207cc06624f",
        "cursor": {
          "ref": "375c291b-ae40-4273-8afb-4ac2771672fa",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3c5a5c96-e1aa-4b15-825b-39366c57f294"
        },
        "item": {
          "id": "5630b63f-60b6-492a-88a3-2207cc06624f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "46cc911f-5127-45c8-8f37-755828361389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ebd9be-e9a2-48da-9487-42576736c508",
        "cursor": {
          "ref": "bdf9516f-1218-4195-bd00-9d4b5a237f9c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9202a784-d9f2-48b2-91d0-da947ece13f8"
        },
        "item": {
          "id": "65ebd9be-e9a2-48da-9487-42576736c508",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "191c8b48-3ca6-4049-9667-52bab47e51e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5023e0e-f83c-4185-9a7c-1b8f14f71fcc",
        "cursor": {
          "ref": "93c40785-65d8-44c0-9cff-c0eba3cfade0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5bfe00b6-109f-40bd-a902-2f445c36afe8"
        },
        "item": {
          "id": "c5023e0e-f83c-4185-9a7c-1b8f14f71fcc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "751c6c07-e44f-4750-b4a8-408cf807ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f03e7c6-8769-4d76-872a-53e28aa5ea51",
        "cursor": {
          "ref": "68e55c81-01db-4860-9367-80b339a2d87e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d568720a-4ab8-428c-bdc6-38ca65822af1"
        },
        "item": {
          "id": "3f03e7c6-8769-4d76-872a-53e28aa5ea51",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78effcd3-d034-4bf3-8081-e3fdc6d55dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29734ec-8005-4190-83c4-e78e6bd21b54",
        "cursor": {
          "ref": "5e93dceb-e65e-40f4-98ca-8a7e7bbb0741",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "02a42d0e-01de-433d-bec5-252c05f9cc9a"
        },
        "item": {
          "id": "e29734ec-8005-4190-83c4-e78e6bd21b54",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7a1dd20a-8aa8-40dd-a12e-dc912743010a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d00d99-9b0e-4104-adb6-b64dc0a65862",
        "cursor": {
          "ref": "fe1a41bd-3e32-4260-9126-0cf05cdac195",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c60a80e-5512-44ec-a8ec-75edae566314"
        },
        "item": {
          "id": "b2d00d99-9b0e-4104-adb6-b64dc0a65862",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fbd451c7-accc-40fc-8695-53d055242d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc6918c-dc38-496d-8b90-59d902bc7cd0",
        "cursor": {
          "ref": "fbf78946-fb15-4725-b5f0-06f311237ab2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b18e421d-ff07-42d4-9041-d50e7c8a7e5e"
        },
        "item": {
          "id": "cbc6918c-dc38-496d-8b90-59d902bc7cd0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f5147176-ea75-4ab7-96f8-e5addc8f161d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130cbed8-d74d-49c6-a7d2-487a1e48010d",
        "cursor": {
          "ref": "e6827def-26b9-4bb5-b3ee-a4c8656e636f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6a7c07dc-caf7-438c-abb7-124062525adf"
        },
        "item": {
          "id": "130cbed8-d74d-49c6-a7d2-487a1e48010d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "33e9ab83-ac74-44d0-acc7-093775f86fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921350cc-f414-429d-a363-7bf352c4683f",
        "cursor": {
          "ref": "93a206c5-bade-493b-88b8-5e12f39ce7a6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "99274489-3910-4cdf-ab8e-9e69fd655f48"
        },
        "item": {
          "id": "921350cc-f414-429d-a363-7bf352c4683f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fc22fb74-2a96-43bf-a06f-34e70d31b409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ecf4eb-36a0-4b6f-a297-1da2027e96c4",
        "cursor": {
          "ref": "96415262-84fe-45ea-8fe5-753a4a773e2b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b07d1630-0538-4d38-a950-3002d41be1f9"
        },
        "item": {
          "id": "63ecf4eb-36a0-4b6f-a297-1da2027e96c4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4d10a037-caf5-49b8-be21-c2e89788b91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b52bd40-7a03-4382-a4dc-d3fd90e36cab",
        "cursor": {
          "ref": "8b97fe19-c420-4cb3-8553-f222f855bd10",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "78090ee4-7745-4003-9c98-ac2634b7c55d"
        },
        "item": {
          "id": "3b52bd40-7a03-4382-a4dc-d3fd90e36cab",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "02e0c902-6094-4920-ba2f-f0d9ded381c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601cf8a9-4dc6-4e03-ba4a-d10a3db6bb45",
        "cursor": {
          "ref": "eae9d34f-3030-4024-8ea0-5e2a611704b8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "07827b43-da7f-42ea-8506-3224911dc1f5"
        },
        "item": {
          "id": "601cf8a9-4dc6-4e03-ba4a-d10a3db6bb45",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f04e5e11-fa4d-4424-a54c-dc4fe5972b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8a1ea7-d3dd-477b-bdd1-0f89f5a822c0",
        "cursor": {
          "ref": "e41b9a0f-b598-4af6-8650-eaea449f9cac",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a82aed66-5280-419b-89ae-a30b7851cca8"
        },
        "item": {
          "id": "9a8a1ea7-d3dd-477b-bdd1-0f89f5a822c0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b67c83e6-226e-496b-9387-c86c36d14227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4c7d86-617e-42f2-b621-bbb8ec600377",
        "cursor": {
          "ref": "2fca9895-d120-4f81-b5f3-ef9c648239c3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7977d11d-566d-4787-858a-3ce58c89b0bb"
        },
        "item": {
          "id": "9c4c7d86-617e-42f2-b621-bbb8ec600377",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a33e1f5a-7304-49ff-9bdf-7114a2915492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511d67ab-77a2-4025-a140-36987e0ec080",
        "cursor": {
          "ref": "a52911fd-2fcd-4fcf-b091-f301663da950",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "409df151-7d99-448b-b628-40de45773a65"
        },
        "item": {
          "id": "511d67ab-77a2-4025-a140-36987e0ec080",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "13dc7c85-cba5-4c66-903b-55ba5efaec15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd240535-b0a4-49cf-9909-7a6eb0b91248",
        "cursor": {
          "ref": "be46365f-2937-4d83-9915-a57cf43fac65",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2cc75651-adfe-45db-8b7a-a54c2430e7d1"
        },
        "item": {
          "id": "bd240535-b0a4-49cf-9909-7a6eb0b91248",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9eff6a65-2a6d-4c76-b8c7-1b4aa24bc6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9554719-dbd6-4a8c-be1f-e2b8df245f7b",
        "cursor": {
          "ref": "49f5d40c-d8bd-4a87-bd5c-7639c2cee95e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f285eda5-3092-48f7-ab82-faa41a003027"
        },
        "item": {
          "id": "f9554719-dbd6-4a8c-be1f-e2b8df245f7b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4cd10752-6602-42f5-8151-311f9daaef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a4ab90-8a78-47f9-9468-b09207867771",
        "cursor": {
          "ref": "b0c5759e-aa8d-4cab-90b8-442de077427b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0045bdf2-1a63-4184-bcc3-0ead9d5f025c"
        },
        "item": {
          "id": "95a4ab90-8a78-47f9-9468-b09207867771",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "41d8f5f6-6077-4b9d-9a64-44154d413650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a606e-afdf-4c96-a6ff-80ae644a22f6",
        "cursor": {
          "ref": "4e877400-fa2a-4bee-8615-5e8fd38aa29d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "97b86d17-b1e0-47fe-9e40-cec8919f5b85"
        },
        "item": {
          "id": "d75a606e-afdf-4c96-a6ff-80ae644a22f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "656efb74-71fc-4377-8163-712756b785fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8ece25-c863-4c76-ac7a-e9d30b31cbfc",
        "cursor": {
          "ref": "04679664-3eee-46e4-a27c-6ad849ee5868",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2e7cad07-23af-4402-aea9-6fdfffdfcafb"
        },
        "item": {
          "id": "9d8ece25-c863-4c76-ac7a-e9d30b31cbfc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9042bed3-ac3d-4414-9069-3daa228266d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d8f2a9-ba14-402c-9868-7c50a4192804",
        "cursor": {
          "ref": "ac39789d-63ec-4c48-a546-c280165641dc",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cf264531-b29b-49d7-92ff-f2d5c83ea132"
        },
        "item": {
          "id": "76d8f2a9-ba14-402c-9868-7c50a4192804",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d6854450-cd9f-482d-a096-dd4c3d93d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b722940f-bfba-48ee-92bb-4719a0d627f2",
        "cursor": {
          "ref": "76b24caa-5b0f-4478-863b-ce055422ce74",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "44014fb7-3c20-4457-8338-056adf5a6f21"
        },
        "item": {
          "id": "b722940f-bfba-48ee-92bb-4719a0d627f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3542ce31-63a3-49e6-80ae-9b1ca6441ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477fba6f-335b-48b6-8149-301c9fa3e333",
        "cursor": {
          "ref": "84ccf656-f77e-45fd-bf4d-73bc0db878b2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "35a42374-27e7-478f-a9d5-a9cbec5fdb34"
        },
        "item": {
          "id": "477fba6f-335b-48b6-8149-301c9fa3e333",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0b6642ca-c327-44c9-82c5-805cfe4f2d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c133612d-69ab-4ba6-835d-c824a1d6b4a2",
        "cursor": {
          "ref": "4f29d82c-b8b6-4578-b3f3-645d166cebaa",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "130e293b-b1ae-402a-8a90-c22a254a0803"
        },
        "item": {
          "id": "c133612d-69ab-4ba6-835d-c824a1d6b4a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d5aeff1c-1c46-4c05-b586-57040ed572b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5efdf50-6b91-4f40-be6e-c8e9605e0270",
        "cursor": {
          "ref": "76b495e0-cf71-41d0-9b6d-418947636459",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "255ad9c1-c69a-46d5-b308-655ef2e0566d"
        },
        "item": {
          "id": "d5efdf50-6b91-4f40-be6e-c8e9605e0270",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bcc6de1c-8ff1-4fb4-b35e-c9aa15a17145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c407c0-01fd-4a85-bc0c-7a3e7097aff0",
        "cursor": {
          "ref": "32d8ddb7-efb1-4cf3-9bdb-2a85e762bbee",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "71997a9e-c309-45e2-b17c-bf32624bfb8e"
        },
        "item": {
          "id": "a6c407c0-01fd-4a85-bc0c-7a3e7097aff0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ea8fd15c-db7f-4889-a74f-e3bc90d6d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e06f9b-c95b-4d16-89aa-f457677b27ae",
        "cursor": {
          "ref": "5ddd7dad-8bb6-43e3-9bcb-b791eed2195b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ec8b8e81-caed-4499-bb20-76257f44ff19"
        },
        "item": {
          "id": "f8e06f9b-c95b-4d16-89aa-f457677b27ae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5e8f6212-6187-4afa-871d-6b2643d5cb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293f50cb-f9f4-4840-88fa-1da6a6fd6248",
        "cursor": {
          "ref": "7980202b-afa0-47a6-99ed-ed150cf45098",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ee7685d4-6788-4a35-b232-44079dcd3198"
        },
        "item": {
          "id": "293f50cb-f9f4-4840-88fa-1da6a6fd6248",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3f9009f3-4da6-4f92-a87f-8101ccde2ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb06b9d7-d52c-4a25-9765-15e5875d4acc",
        "cursor": {
          "ref": "1dc81b5e-f199-437e-b4cb-65e5b1cf0230",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2909c7ae-51b0-4a8d-98a8-5bbe0e8f2d4b"
        },
        "item": {
          "id": "eb06b9d7-d52c-4a25-9765-15e5875d4acc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "decb5373-77fd-4a07-8c60-3033151e3015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6547f13b-771a-4a91-b833-63f85063db13",
        "cursor": {
          "ref": "a75956bf-0815-46c4-baab-b9ff7bf7dd8e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8bc26bc1-ab02-4d5f-a37e-c563ad5d58de"
        },
        "item": {
          "id": "6547f13b-771a-4a91-b833-63f85063db13",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "54a46838-6476-43da-8f02-9c946d781ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc592c4-845b-486f-8f0d-82b74496bab3",
        "cursor": {
          "ref": "61cd7ae9-b9ab-4cb4-bc94-99aed1c73bd0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e0caf3b6-bf17-4c81-834c-e9d5f97bf99e"
        },
        "item": {
          "id": "8fc592c4-845b-486f-8f0d-82b74496bab3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5ee21f63-1e88-44f2-a733-04973a2640b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61726965-0651-4090-94cd-b2d0bca6b3b8",
        "cursor": {
          "ref": "799755e4-2b63-4d61-8fe3-42b9ba98049b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3f0e08ad-cb0c-41d4-8fdd-73b241bb2b6e"
        },
        "item": {
          "id": "61726965-0651-4090-94cd-b2d0bca6b3b8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d12408a6-3ff9-42c3-8e8c-c751d3a87baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d10712a-919b-4774-92bd-0e8f981186c4",
        "cursor": {
          "ref": "126d7f5e-dd20-480c-837a-d0cbf98202eb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1ba21100-3eda-4342-9db0-8ee5ed7f8ba1"
        },
        "item": {
          "id": "7d10712a-919b-4774-92bd-0e8f981186c4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae198c7d-71f7-4f39-b25d-a515c3347545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e15982-88bb-460f-8a9f-ce8f59ab366f",
        "cursor": {
          "ref": "02d97cf2-9d0b-4019-b36a-2c6e0c2e0845",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "beddf1b3-a54e-4012-9448-6dfea70733ba"
        },
        "item": {
          "id": "b8e15982-88bb-460f-8a9f-ce8f59ab366f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5eb3258b-e68d-4af4-a898-464a6b351ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c351bc84-e734-4b57-a7c9-c887f7f0f22f",
        "cursor": {
          "ref": "8ad987e7-9f87-450c-a471-c6a9e64ccac3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6a0c5eed-3da7-4e85-b6d9-a1727940c200"
        },
        "item": {
          "id": "c351bc84-e734-4b57-a7c9-c887f7f0f22f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a20b5001-b668-4410-9835-fa0428e0bfda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b9b75f-96a2-4909-bfb2-91cdcbaa4374",
        "cursor": {
          "ref": "6e6119f7-3bec-4d67-a99f-0898ac2ed634",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c344c476-9a37-40c6-9c23-a7b77d367627"
        },
        "item": {
          "id": "83b9b75f-96a2-4909-bfb2-91cdcbaa4374",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d3fc9a6-662f-4ffb-90bd-c1b4522f5f05",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71213b9-c03a-4a09-b377-1d75a46dc47a",
        "cursor": {
          "ref": "d0e22a6f-669c-4830-a6f8-e87011ed1d6a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9cf03f6c-6aca-42b0-a53e-ed51c02a1df7"
        },
        "item": {
          "id": "a71213b9-c03a-4a09-b377-1d75a46dc47a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "73ab9cbb-14c1-42d8-b64b-579a4f6be699",
          "status": "OK",
          "code": 200,
          "responseTime": 2404,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf910a57-93cb-4f86-a516-0c8feb07dd02",
        "cursor": {
          "ref": "5d644a2c-008f-4015-8c8f-fc8d10d84e37",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ee247f78-a481-43ad-9994-60ebc4ebd71c"
        },
        "item": {
          "id": "cf910a57-93cb-4f86-a516-0c8feb07dd02",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef683b67-9f92-40cb-bd7a-25e3b6a5ffa0",
          "status": "OK",
          "code": 200,
          "responseTime": 3346,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc42c1dc-19fe-47d7-9570-96591c6ab532",
        "cursor": {
          "ref": "3b392cdd-91c9-414d-af7c-bc3f29e211c2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c097a7af-8108-4574-b3b8-a5146aa1854e"
        },
        "item": {
          "id": "cc42c1dc-19fe-47d7-9570-96591c6ab532",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd63af9f-c548-438c-9b7e-c9a712c5c570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc42c1dc-19fe-47d7-9570-96591c6ab532",
        "cursor": {
          "ref": "3b392cdd-91c9-414d-af7c-bc3f29e211c2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c097a7af-8108-4574-b3b8-a5146aa1854e"
        },
        "item": {
          "id": "cc42c1dc-19fe-47d7-9570-96591c6ab532",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fd63af9f-c548-438c-9b7e-c9a712c5c570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b87f34e-7faa-460e-8c48-4061cee183f7",
        "cursor": {
          "ref": "831d483d-bd52-413a-925e-6fa73ad4ffd5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bb081cc9-e404-40f3-8ef8-e2a7e3231ea5"
        },
        "item": {
          "id": "6b87f34e-7faa-460e-8c48-4061cee183f7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b3c6d8be-e39d-4c95-aa31-de2af5764373",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f661685-db70-481a-a8eb-bc005e9f063c",
        "cursor": {
          "ref": "a36a607f-ccd5-486c-89a9-e234711d8b8a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9dc0d31c-d7bb-4aef-8be5-646457073da5"
        },
        "item": {
          "id": "9f661685-db70-481a-a8eb-bc005e9f063c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d433177d-0445-4aef-b996-132a2cb58e8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}