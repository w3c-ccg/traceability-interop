{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5a164f8-a276-4084-90f6-4facf5da5186",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1ef74148-178e-4da6-b733-c70f6073056d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a380371e-9118-4d94-ad1e-b4f87578a477",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31267d7f-ebce-494e-9de1-779c51488084"
                }
              }
            ]
          },
          {
            "id": "5bab52ec-f24a-4869-ab65-49603e78fc00",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5559f290-7d04-40b9-814e-fa42869066ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3d096989-3dfe-4871-813b-299b1c03337f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dfbd627b-ea89-46de-8a70-31986117bd11",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ab452564-a0da-402b-9201-6b7117c59d60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97db3340-9996-4be3-bf68-9fe01dda688b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d03e6ad-afb4-4b7b-80b4-be886b687475",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24199bbf-f186-48ae-92b6-3c65cef77564"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1da1b14b-6c1b-451a-a3b8-1a10d2d489d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00c3e9bf-fe96-4e68-a674-ea12c9196df9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d8f33bb-71b3-48a3-8fcb-222a2f1ddf4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a638c160-2304-4877-89fc-b091884de0ad"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a55c762d-9255-4156-947e-d6429cdbe365",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "29308cb8-ec55-4f98-a9be-ebd7a4b237e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c60ded47-0656-40e2-aca7-8408e4ec7b6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d492542-fc32-47e4-a507-695199ddb166"
            }
          }
        ]
      },
      {
        "id": "f02ba3c3-f27b-4d74-bc12-5bfc678b2431",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ec617058-3320-4a22-8389-50a80f8307d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aadda2fe-de86-4128-8f6e-43717c812aec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1987ef8f-366e-4368-bdeb-3fa73d6ac37a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee195fd2-81c0-491f-b6ca-e19773eb0754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80852935-a6f1-4892-b8cb-04b5d0d25ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2563a853-1dc2-42ca-a106-a2f720a6556c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bc702e-c489-4a4f-9464-2100bd6aa719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1be80e7-4eca-4aff-b005-8384f736930d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae243b6c-734d-4ad6-ad45-099cac58fb0a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3b8fbd-0203-4711-83f3-121143252e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee07fa59-bf4f-47dd-9fa9-caf5586137b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "112a481a-25b8-42d3-8dab-db5b81860b20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "879bc6f1-1265-45cc-947a-12d9955c0232",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930c01ef-9df6-4741-8de7-33b5ffcbd0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b504e41d-3a9d-4599-a7e4-5a753bb06a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9391c6-4099-48af-97fe-bb00b50b1464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaad94e-9953-488d-a1e3-7a245235fc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa01fdc-9205-4b2f-aea0-d482b31b8c34",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386b710f-1a6f-4f18-bc5e-86158a7197ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af8754ad-54d5-4bda-917f-3150370adcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9e40ed-2147-422d-aaa2-e64985feaba5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c0031cbd-5813-4820-b35d-fddd9ccc7ec8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff6b7094-39d3-4d36-927d-b795e7dd2662",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f727df6f-c66a-4fdd-a81b-4bb25accd598",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04d10d53-903b-4a4d-b005-d3974e94678b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e754f737-2697-4ec0-a6e8-e0cdec507b7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a77c2877-caae-43d1-8c8e-9b4d24af2af9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "341b9849-3c28-449f-951b-f15ffe3cc6a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ddc57e3-5121-48c9-8699-e11c19404aab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f4a6bbe-1688-4ec7-9bf5-b44b042863e5"
            }
          }
        ]
      },
      {
        "id": "c67c76e5-779e-4ea0-91f7-6b885dc9b77c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f8e12994-8549-4ee3-9588-39dacd33957b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ebe39f5-228e-4dae-ab78-5bf5ab6964d8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b7f7a3c2-fa11-493e-8ba6-a5d5ff3b0ebd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83b126a-717c-4869-b8d8-222a4aa739d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9191bd-e266-4f4b-a84e-45cf6eeececa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b3cb68-b596-486b-8af4-9535a12b7db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6546fc09-f17b-42df-aa14-617d97cfb183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5278a7d1-d623-4052-821a-2a178653b0c1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761f2ef2-3aba-481d-88f1-70476dfab4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8647db07-e7c7-4ca3-be1d-28ac7a143ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f52586-a0b0-43e7-adc9-6bfc8d44b17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad89421-a43a-45b1-adf6-07f169b8cabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03b82aa-9639-433e-8ed2-fc8856f17299",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ce0048-2168-42f4-a725-63dbd0cd82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babb393a-c5b2-4cd6-9173-fe6e9e552467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd66c969-cdbd-4284-a5a9-bfb9b5095a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2896ae87-1745-464b-aff2-d5bbfd3b4202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae367aa-005f-4abb-962f-b6ef16957cf2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda9394-f1ee-4e48-b1e6-e59382e9ae80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5674d0-9cf5-4dd4-9a46-e96edfa2e929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770ad7d7-0045-44c1-bd70-24046c87fc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb1e1738-c726-4c11-a537-b3b9b4d64b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8421eef-6571-4777-9a80-c56ea988c4ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f40b9e3-2a3b-45fc-a0f8-a474a0dd8f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9699c77-07e4-4fff-a74e-18408f444822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7566c1c0-4845-452c-a092-b2ac5b99b599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab250495-5c1d-4eb9-8dfe-76cdb00ac501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3ce1fb-4ffa-4d8a-b0b2-53756c97041e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da764a0a-668d-4ef8-8a5b-1fc42a47c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82a12fe-77a0-4e60-9c14-d7644be2acaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbabf26-71f7-4fdc-b425-424b65c205e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "230873b0-f42b-460d-83bb-40469e20b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd61fc2-e795-4130-88b5-bd25d8c7de0d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f03e1b6-5a01-4766-bffa-8548404c4934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd66803-91ed-4cc8-9188-7343b7a8be43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec841970-5136-4154-a2d2-2f37a8e8eefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4814a5b-41ee-4369-a800-bff2186d2bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cf8112-63b5-4f0b-951f-656cd0c8fa6d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7db4e-fe3b-48c2-9b54-d63bf06c394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd9703e-e404-499c-aff2-0c86252b9a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37022c2-677b-4193-b2e6-12d7c6679617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5762b7a1-3e3c-44c2-8a69-b6764b1af10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5af239-7248-430d-b293-c6415ae04b5b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee038f46-8824-4641-8d79-58caf67d5a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816920ae-211e-4c41-b556-4b246198952d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618bc529-ae94-4f1c-8e87-673242d8b375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53450b8e-7e87-4d80-a78e-7b2a761a7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeffb1a0-3e52-48e1-9d69-4870fa838541",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b93149c-9141-4fad-94d3-d2a79982dfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d203b6b4-bb8b-4db3-9cfe-7d02c11930e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222766e0-0831-4718-a646-8139e835535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d21d1d7-1531-4916-baf9-440a6aa05159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec8709f-47a2-4fac-af95-a3db5449f719",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15711a65-de3f-4184-815b-fa5a2f8a2255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b0054a-7b26-4019-9fc5-56b527a1d29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0747f0a-e0b0-41e6-a6c4-0606945dac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d0d2a86-4972-41e4-b00c-9464eea74a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180ce7fd-0846-4aeb-9975-b55379b17d8f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d49b51-d390-4a85-a1dd-e3a7e561d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac488984-5808-4186-8484-9053a13ef5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6796ea4-dfae-48c4-9ac7-c0afefc74961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23afadc6-9292-4e68-8479-7158594ca43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3f0480-a723-438d-bb2e-8da2fc8bffd7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7411e0b1-71d7-4973-bc1e-119f26d559b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a3a6a7-6657-4f62-8767-edfb4c8a29f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f31f2a5-3a15-45e8-a68b-f721990c06f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe1f8112-c5ed-401c-870a-b885c2e5d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b7c58c-48bf-499e-9285-88ca289f7e2d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76397a30-5080-47c9-adb3-2752161ee554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f890534a-8c0f-453a-adb7-8eb20d600044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb93d32-0d3c-4e2b-a2a0-bb2662cb6fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff7821f8-14b2-4059-8f06-11c4eabbc1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f45de9d-5ff1-4bb4-8b26-9a55926b4154",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137891a8-717a-4bfe-81b1-e69e460a374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc97f8fd-eb6d-492e-be07-d20ee0d2d54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0967e9-9559-4c19-966f-2f8ef7de56ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6758846-9c18-4bdc-8068-d95be2185b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2824dcdf-5b24-48ca-be6b-e08b98b7aac1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77409c5-e3e1-41ef-9cce-7c186237b466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8197600-70b6-45a1-80b1-3d161aced2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0f7a3b-5d05-4cf5-b844-74749d61d2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fa35c83-ec2c-4aac-a140-05d015da00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56914fb7-d2a0-4eaf-8058-cd68594af87b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee1d631-5f68-46c4-9a8d-c615faac74d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42701df3-6c8b-413b-b3b7-6ed25916c0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174f2e2c-168a-4ee1-bbd2-1f332c4fcb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88530295-77e0-478f-b0cb-aaf20a153d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd4c1a4-2fbf-40c4-b3d6-0ce70c7b564d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b12cffe-1cf3-44d9-920f-db6b11e463ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f5e179-ae96-4d3f-be94-9ecf15bbeea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1928ed49-f09f-4747-bb51-2ee76e94ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c7ab24-5c4f-455b-8510-213a13c84b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf95ad19-0206-4ec6-b36e-2647ac8b206d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593bb0a7-6851-4ef8-a923-5ed6fbee54e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2455d7-653f-4ef4-a498-69ac309201d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ec303e-84d0-400f-aae7-9937d9e51124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac56997-94b4-4523-87a4-44a4f0fc461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0beb54e-1d37-4ee9-955e-c5707ee373ae",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d177a3-04bc-4768-9c59-25c8eaaef742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1608e6-da25-4d57-b0f6-e21a3fc41ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6726b013-4c92-4fac-8222-e6f786440c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf2ef11-0273-427e-8297-28eeb009a9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93994f6-9493-4c8a-8aae-b0699f917175",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43791ff1-e1d6-4e70-9f90-a26313e6ed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5598c5-b02c-408b-8753-a199ddcbb65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fc6ac6-96df-49ec-8912-6fb28e7163df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e984d1a-163a-4d52-b157-642f4a087646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a48e49-47c5-4f37-ac22-0c4147fc53db",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123362f8-c7ca-4f38-a67e-fd73ed133217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d6d44d-4992-4f5d-9c6a-08a87f6aa6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c108747a-676b-4eef-9996-85cfaa81018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69b9dd23-6b4c-4a28-9ba4-eefbcfc469cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5882639-bb47-401a-8313-a2095ef60972",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322662e7-c749-457a-85c6-94b34febc9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29817a17-31e1-44c4-a5a5-056f7ebce768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a569aa-cd4b-4537-a024-2074509116b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6016de-e60f-4676-8966-85548ed09c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a198fd2-d9d8-4bda-a4c1-efbb5e482bbd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf17664-27c1-4321-8cfc-3d21246f5562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4c0d90-be76-445b-ac8d-9e0aaa4810f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacbe234-be68-4aab-918b-36a504e53d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "439fd1c8-a3d3-4778-8454-344dba3badc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e10a2a-a431-46c1-96de-3786e5248047",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94758b8b-b445-4efc-b2bd-b7c41b1c3bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9d5bcc-d9b1-40e4-a3d0-6d78564190bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45542c5-a8c1-4531-89b1-fe996297f931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0858dd01-0053-4d39-b1a2-0d0c600fae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5476c5a7-1ed4-4147-adbf-4d174e03b4d9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9459a2f9-ab29-48ec-9d46-e809c81a2768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7e3ab7-cd0e-4556-9fbc-22db1e649d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54de80a9-d4c5-49c5-9256-0cab4d61b42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68179837-da35-41d2-9367-702259197601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1a9c00-e89b-441c-af36-250508435fde",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4106546a-6d4d-4578-9383-a251515349c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72c732e-353c-477f-a7ee-6f4b014acbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11fc6c5-d17a-4406-aac0-ce3b2bf90a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09b27c5-75f3-4801-ae93-7e8bb7e453de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa08908-9b5a-4e69-b4ba-917e0a476e1f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8df3850-4c1a-43fe-a39a-1a15b146e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cdf70b-5b65-4ef6-b1eb-1f70e659d54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f9548d-0b96-4312-b074-9229156061cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc52939-f906-4093-8400-aea3de2f0ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9845f5fd-b268-4bbc-8e52-7e22f125df6a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2575e84b-b088-40da-9987-b522835de974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684b550e-9635-4c9e-86c0-827d27aeec28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cadc027-22fc-4452-b446-0a597a546efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d552dc6c-221a-4aac-aa8b-9b2f57e6eaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4c4964-30ee-4826-b29b-08186a393b21",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17b6e80-b2b8-47a5-a521-873089610fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd13301-3a48-4049-a793-d6eda4580ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f437d9-cd8e-44ad-8315-cbc71b204fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "15e71633-f8d6-40aa-9dd3-da4ef7d457de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeacb5e-5f2b-4323-ba53-68a6d6ac1646",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0064b4e3-8a4b-4e68-ac16-ee1278646650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaee605-08e5-4d17-b5d1-05b74c3f528f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba5fcc-481e-4123-a8f0-582399711c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87fbe7a-5334-4b05-849b-bcb7ebd522f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8866fc8b-b1f3-491b-9048-6f16ee5f025b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd949e58-18e6-4ba9-8473-371ceeb6e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edfc1ec-2369-457a-8309-9fdd08874ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695aaffd-ecf9-42bc-910e-2cbafb269bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8beae486-eeba-42a6-948d-56d2692e6cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef706ef-c7c1-4c69-9333-41994bd59d4c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790086ec-7bb7-4c58-b32c-8a407e20ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eafae54-ab28-4e3f-9ab8-517cf06ea337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59161a-f8dd-4fdc-8f21-14f4d5a33ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b48f71d-7143-44f4-a077-037a475a3550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1f3944-d166-49c8-89f1-6b4e49aa5dd2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c089269-37cd-40b3-8a76-cccc09bff596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96525125-a9e0-4ce7-93a2-8b7ce37419c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0933318d-6336-4cfd-8b13-bbc376d47a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4a375a-6986-459c-b098-2cf4b93b61a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f94a1b5-7053-42d7-89aa-ea0624dff59e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c138dee1-c6e6-49b3-8c9f-9d5fb6bc0878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5595eae7-2ea5-4b14-ac3b-b92c2a77a24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fbcf6a-ff89-4215-9927-4dbbbe7d3de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e69942f4-a6ed-4e75-bd8d-af9b68fb97c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02877c45-18df-4643-82b1-972beccec110",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728b767a-3490-4ef6-9fad-1654e88c8604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ceed304-7b2a-49d4-bcb8-1251abc22385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97e7aac-e5b7-4187-8c83-a3a6f4b78350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d791605-2633-4a40-84db-c2e13aad43c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0becd8c-b379-4f52-8300-5ce4b78da6a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326fe919-918a-46e9-a95b-a8bbcb3c2566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed58ba3-14cc-40eb-9e69-0c44934fa7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3777d424-dadb-4e2c-963f-de994ecf6064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6880a595-73fc-4021-896b-da15f590c4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae29387-b733-4bfa-8e7c-22fb07c052cc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da517658-01e3-4cc5-bfce-1c753efb21b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d072ba2-3c94-4e27-b365-16de39f152d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c63115-efd0-45d1-81fb-05d6da1deaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9899fba6-ac5d-4454-b285-212510756f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d76913-0c96-435d-87d7-2e2821f4ace8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a97ace-b06c-4320-b1f5-8a44273ae045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c50a17-b988-4403-96b3-ab53150c12c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c3079e-aeaa-4fb3-a9ae-0ebfb39dce95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91df4b61-7923-4817-ad8f-2b142011aebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e036331-febc-488c-958e-039248304c72",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e238340-b491-4d0d-9074-1f28b27f7374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539bbd59-dc9b-4194-9de8-a4de0fcf0ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4aabb0-0666-4504-9d7f-93c4ba7d12c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "600d7cc4-884f-4893-9927-b5b0bf25d416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a589e06b-1894-4a1e-b302-88f2edcfeb98",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db802ed0-885e-4f69-97af-e50d705d5392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f76ccd9-3174-4036-ace2-5dea827eef7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6615387-9da0-4c54-bec9-f7a5c518b969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2117a39-7f09-4661-94ab-5f1e3fe87f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5286b300-e868-4de5-9c41-b0b87e34bc7b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9ca04b-d063-4902-b7e4-73ac43897e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf7dea9-afb5-43d2-b87e-3f0ee649aa5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375baf81-26b4-4bfd-875d-78fa6c80ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5999056d-37fc-48bd-b89c-742266252682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54427b1-49b6-49a2-aa59-c8717caa0cae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8fba67-c0c4-48a8-8e83-743cd8a5f378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846eefba-7490-4d2c-aa6f-5fa7b0568057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44031128-d1b0-43be-a089-6435a2ffa307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7dd534-8052-485b-a261-56d6b43e23b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922400bd-a450-4c2f-9bd5-82532f9457b1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1494aae-e39a-4def-9edc-f4fe65d33d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9d0761-9c80-41d2-8d2c-0632af2957b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a6b1a0-f49e-4e86-b38a-9e85feabaa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf58c617-ba28-4f11-ba09-3a0e461788a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d920fb-5101-4efa-a0e5-22df762923a8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9151a61b-3fbc-4e52-840d-0796fdfbfcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da968ce1-a405-4cd9-aed1-28bb828dfef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5248dab2-8658-4b9f-963e-ffc02e572df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e393c88-8872-4e4f-b206-f4ee24f03865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b23c002-d8c0-4450-b2c5-24ee35321c0a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e5fedf-1a0a-4887-a732-821d98b175eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2c365f-b1a7-452c-a221-c17f6fea54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43378cf-8c9d-4d70-8005-ef355de32c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "248379c3-9f36-47b3-b263-f77420a7af23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f4df30-249f-468e-809e-120bd870f2f3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416bbf1f-e1a6-4803-aa8d-3b5283b527cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e41ec9-248a-4fca-a227-fdc2463556e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a86c5-1c8f-48b2-83ee-eb66e30489af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3091a5-88d5-461b-ac05-b8defec94161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68672a88-0855-43aa-8101-85dfdde9befb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f85011-1bcb-4a1c-bab0-44c91ab8f1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed726c8-2f20-44bf-8b68-25df5ef14952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed0af87-cbea-4235-a4ad-eb2f2480b41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb742214-a061-4bd0-88b1-1553ee7b5995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef4818a-4ff0-4ae9-8bd6-fab603358e1a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796470d-d624-4107-a45f-9fde802f0009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff8428d-0f1b-4685-b1ad-af753b22843c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c63b61a-32dc-421f-beaf-c0a7e6f90889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d27ff72-2512-4a76-88bf-cea0069e9ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d71b90-adf4-48e0-936f-30799cda8abe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5495e230-593f-4be0-bad6-217267dd5fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66427aa-9653-4c43-b8b6-7402819804cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27437e5e-b236-4ba5-9754-ab83a9a60551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1ba03c-39d4-4895-a95e-2a513cabfbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813a9b1a-0cf8-438b-b70f-83e232cea5b8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586b3c41-f9d2-4a13-ab79-01642b37f481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f182f43d-fed8-45fa-89ff-32348372033f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a52514-28f9-468b-a4b3-0c97ba5c9a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3621bdc8-cd92-4116-b6cc-144599784e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a40dbb-81be-4433-ae92-3b20567a27c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db649718-e9fd-41be-86a6-84ad91ff0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dd7773-8281-4140-a139-607b2a3a2f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ce3dc-981a-48ce-8161-7fe1021d5763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "555b9dcf-c78c-48a5-b153-839460f948b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feae2745-aa6c-4560-99d0-6448454d016f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8434d0-9a5f-475f-844f-b7834054441e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad0e572-0504-4bd3-8752-b4cc1e283af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f6434a-24db-4fa7-8191-95b713986696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2762ac20-00f6-40be-b3ed-01b6575fd1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6ca5eb-876a-48e5-b68c-47b6c11a7648",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd238d5-ad4d-4b64-b99a-202ce7a151ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c26c0bd-2c18-4448-8fea-2a45ce4894e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea2c3c1-0e0e-41ba-8095-ae7be81afda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55af37d-b498-41c4-981e-17637861e499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e4e956-d4ec-4568-bfa7-eb14a03e3610",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd2b4ef-0670-4156-8371-f81443cd82f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8983b80-331c-4314-aef9-997b47e3bcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc90f90e-e68b-42f3-a8df-71d6f56546a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fadc4020-1c5c-4f1a-8ef2-7803f3744a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3c6462-42c9-440f-90a1-65a294deb790",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0da018c-919f-4440-88ce-47287dca6379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb5abe7-53fc-4c8c-850f-eca24f2fa100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87870b53-6a59-4819-b35b-36d016c07b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1f692448-f2ca-46e7-911c-7415a04e22a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952a6a24-d7a4-4b92-9c0e-fc41893ac1c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42c64e6-cd6d-4183-bc53-d0545d9dbca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bae83d-7e25-44a4-ba44-b84e0522a4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ef8b80-ea2c-4d1e-b88d-ce4c62d07f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92d26168-2426-45d4-a06c-d49bb6939932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9f57f-a80c-456a-af71-f8ea077b1408",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14c30a-283f-4e5c-8960-545f09bdcb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac086212-7bc3-45e3-8716-693895a3da97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef882b8-9f74-4098-9624-93446a45a68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0f02a1-b954-4702-9bb1-d96b1b9d55eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7889de46-e2e0-4b2b-a737-edbc3fadb065",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5f9e95-25bc-4ee0-a155-937d96e986c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4f7f83-8371-48d7-93d6-bb69af3bbd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974441e6-a606-423e-a811-d077a0b147ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5f5cef-b0a6-4a0b-8f88-5de7dad395de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9912971a-21a2-47cb-8cc8-f986d2c3ebe7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95cc4a9-ab1a-44c9-80eb-1957049b658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6b8b06-08f0-4026-a4ee-dec9062c12c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d154e8d-8931-4a41-ba64-9f743777b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf325797-8f9b-44f3-b7a8-0deb3a3a4538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5ec8c-0774-45d3-8468-3cab2f1bb688",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338fcec3-895d-4d6d-8352-7ea611d57205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ae6a48-edf8-442c-a6c6-8bc4f49d30fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac24063-411e-46dd-90d3-325aab10097b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20400c70-2133-4329-9359-dc008debbf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5f7c81-9afe-430c-bb2a-27070c56ed51",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea58d7fc-3aae-4f31-a11f-da98dcfe9543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f199897-bd40-4e3c-850b-8aa1738eb8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a5eaae-b2e7-48ce-b711-dede4efd96e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c18183-7b45-48e2-aa89-e1e34f410773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ff8a9e-c8bc-418b-ba12-90f7fe60a4eb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dac8a40-f72e-4f51-a44a-181842081f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43710a3-82f6-485e-adac-dd5a8b25d985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d5d7fb-9637-43e4-bcb8-415821d9253f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67ced92-35cf-420c-afe0-7a1f4ce83049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee62ebd-f068-4efa-a89f-709562736019",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396614cb-12e0-419f-a997-afef26a949df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf17f71a-fdea-40ae-bfbe-37145b535e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619854bc-58a6-4028-9cde-4dd970aab108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af0bb90-6af6-487e-85dc-6565185b7893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53786bc-f95d-4793-a7cc-9eddcd21dcc6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756a52b9-07f4-4975-988a-7cc288e5fff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cd53a9-dd8f-4511-a2e0-20d639887cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01eed89-5dd6-4eb0-8cbc-9cc76e4bae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5914beca-9151-4542-a26c-1dd57a19bd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d96c21-fefb-4232-b870-3b6fd9a4d694",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7653866c-a169-4af2-bd55-bc2d5554e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1989da0b-514b-47a5-a384-9ce26d232e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955f4af4-ef29-455c-8025-d6b04b1ba13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0c5d4f-55c7-44e7-9aa8-ad13d4b033bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3958a3f3-cc6d-4143-add3-7ad373d5014e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5742686-0de1-4752-9d00-fc5cc9001aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59f7eb1-3d8c-4634-96a2-298f8636c786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecc309a-6c6a-45e7-a195-449f0a2d9889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5afff03-6288-4dff-ae75-13ac7127a24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8caf487-8048-4d88-9626-5648f2da8502",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94cdc0e-af0a-464e-81c8-ff329d73d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4698d1-9eb8-4409-8cdb-1fcca0e028dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa48fe2d-6303-482a-85f8-ff3b92577931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1616717-7645-49e3-be44-7eb1a28189fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0120f9c7-c00b-4d50-bda8-e1e883b5a7e5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa0384d-ca3e-463e-a05f-1abe27c7f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cba6134-b8a9-45e3-9876-8e382c7ef1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c84998-537b-4db0-b013-90755a193e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b06b264-0b5f-4091-b687-a6d77d49cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa1c85-9824-4d7f-b02e-144bb371a4fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779b9b52-f937-4a31-9594-d0ad8ad64a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421f7a5f-abb7-4d5f-b3c0-867e31ad5fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230cd31c-2517-4089-81c5-7a8af68927f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09c83f0-f7a0-4488-b503-736b615007c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5900b2d-3501-460f-9207-6d36dc5d9575",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671df558-1435-4f47-b959-fa59fa4f2671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d334eb35-2000-4ded-843d-f021a5f3b8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0188ea48-9a05-4194-9e8e-c1c47ac7e06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf6865c-c927-4d86-ac10-8e2a2b436205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc35429-e394-4c2a-9dc7-1f12595ea573",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f838c25d-17ca-4c5f-886d-585b0755877c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208ac555-c5fa-4c62-808d-54f3d1f75687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8e89c4-62b6-4a86-a013-2e71af172854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef65732d-db4a-432c-959c-c0ae8d3c115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5d906-f6f8-4dc1-a4f6-72a8b65c28ed",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916e2513-5029-485a-961e-3c047cba4063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efd1377-9dfd-4562-ad01-753979a50196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4badeb-ed6c-46bc-9998-b3d0a3765f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9740aa8e-32de-4f51-8f69-a00bfc892fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c8dc55-be2f-4408-a3e8-0840a487beab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12898e2-ae02-4cb3-a0b5-9ec11670d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89bf2fc-328d-471d-8d6d-daf40e638b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4cc505-bb19-48fe-b792-99dee8155214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfb5137-eaab-455c-a293-ecbf2597b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e081232e-9fab-4ec2-8a38-3edf5f884421",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3f6173-90c8-47b3-a8f9-06e8c524d091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ba86c8-99c1-4c4b-8ce7-92c174ee57c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc5b39e-e7fa-4ade-ab58-44c61ca6d712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0339454e-5a94-4d37-9d4a-244fce2d194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b580fbe3-b5be-4d8f-83d4-9fefb7a231e5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a740c7-4e50-4357-9a5c-99196606067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3d9a0b-27a6-4f94-bfeb-d72eb1340ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814e589d-22d9-4961-b370-b0d217cbc348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b090065-dde9-4ad2-ad66-6f18cee8e0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80056564-bc10-45d9-9b58-1e85460359e8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3480e1fb-17c3-42e8-bd98-80efcb1242d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598bf7a4-c368-4d3a-adc9-bff063f5bf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d83bf5-e01a-43ab-98da-b58e33cb9773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4d8256-5afc-4dcb-9960-46a183dbc5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef57230c-f778-4795-91b2-88696eb99b09",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e456cee1-2585-46c1-869e-7f83fb3c08af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4fd548-7aa7-4a07-93f0-7cb9116aa33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5ebccf-8dbd-42e0-acd1-59eff74f011a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b17e5896-d2fc-49d0-bc20-5302f735d76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f95ed-610f-4f36-9991-db1ee4b7b0ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202aa220-f71a-4d06-a827-e7b826481219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ca713c-8982-45a3-a307-92545ba7230e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48c720e-99c2-402d-be11-7c29b91d36bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce99067-7848-48fb-85f2-9dfe3110fca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10425db9-fb82-4f98-8e11-e4afa0b10ba4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98575387-8986-4efe-bc3d-2c39b4b2d78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b6809b-b80d-4445-b4bd-5b2cd8c65b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c7bb1e-d940-497a-a414-4b1c735cbae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaf97fb-10c0-4208-98f3-6da5d45c179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84181bb6-d920-4a1a-bcdf-2e00debb04d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5429e50-f470-4a4f-ba49-5b5b1461ce0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcfdc65-e02d-45a9-8da1-837c6e8c9b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c757f3ea-afc6-4375-bc4d-6e9204b91776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15987e8f-6bca-435b-88fa-17140780c55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e16f3c-e7d9-419b-891f-f8f559c664d5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9852eb-5388-44f8-a972-ed45dc994a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5de3e6-5eb5-4410-aa93-19321ed524e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc827522-42b7-4040-ab24-6d4fc88408b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8720f270-3271-4baa-a3df-f3c7f034eaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66da997-5ce9-42b3-a177-fea268fbac54",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e01fce-cd2f-4afd-a8b5-93921fc8927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092cebc7-2afb-47ba-9782-ab660177b8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cfff7a-c6a1-4b8c-a031-97c6f6afa8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1af7782-15d1-4318-bfcf-21aad1b4b385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4365f90-4cff-4acc-891f-6aa41894355a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb7d990-e356-43db-bf6e-2a0081472247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6307bad-1c81-48e7-8a86-a78b53168aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c7cc60-93bd-4123-92d3-b0a03c590054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d472ae74-bbf1-4a84-8f88-711d67f987e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16b137b-0946-4880-b3ee-2d5c00daa65a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc9195-3a48-49b5-ae0a-4d6959904df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b402372c-8895-41ad-8473-69eb168c0af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fce3bf-34f3-4ceb-8014-c5f197d8846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c63e0a7-5858-4448-b655-21ddd82a1500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba41f8e7-6e92-4918-9bfa-6518b9e0bcc1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6954ad2-642f-4ff5-98f1-94c791ba67fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d74b61-7466-4fb8-8cea-3ab87e46cec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a600409-da38-4b2b-9beb-2ed734ed1a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc71d30-4f8b-46ab-96dd-0e3f1425ce0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9646f29-6822-4664-8dab-187bcac235fc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfa5e6a-6bf0-472d-8f22-9ae5c659fe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d422799d-e225-4427-adc2-3e7f387ff205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414e84c8-51d6-43ff-af1e-bf6a1fe8dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac47defa-5cc9-4849-9353-9c7203d251ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf9d571-21d3-453a-92aa-08dc084029fd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312ecd37-0351-4485-9e46-d3b8b3a44620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a53f4c-9dd4-49b4-9c6a-bbdda904919e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc04c7b-d560-4842-a9fb-1dd344924498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c14ede-7f5d-4edf-b762-b2e0a13261cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e732d2ec-f972-4248-bc31-d137eb134e73",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37588a51-c105-4455-a270-e9597b9e6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffeac15-ee1c-4b72-944c-893a18dda39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f3065d-c07a-454d-af76-2471bbf33f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e29c4c-596d-4cc9-966a-60fd95781062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364ccb60-1688-4e82-94af-f7c6e192b79c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebfbbd4-79e8-4cc8-9061-b6f6ce00ac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d655e76-75a6-46f8-b9e9-d15013d17648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162bd335-b267-4e62-8d6b-81cb9a1c6e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b98c70b-ffef-4f5d-a0ce-a82f7407313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040632f0-3659-47c8-89ac-22b08b1a2e47",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a68c78-f39f-4ecf-9462-ca4ad8349919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf53910-d0cf-4a0e-8d4c-94f3772ec8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb32bd0-6cc8-4b22-8c47-a1eb323ee3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9e86eb-e518-4a62-bed4-c3769d4d9ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e99ed0-d56a-48f2-ada8-9a6d3889b93a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7913fe74-291e-40ea-9d3d-1e4b7e399f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "93f40d9f-e2f0-45e4-89eb-475a1932edc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9b6d1a-daeb-48d9-a75f-509defb0b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a16c50-4d77-4dc6-8862-86116b37b625"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91f72b05-8c54-4197-a189-6c58ad343f22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e85ac50-7c1b-4728-b9bb-f3bc4366fd65",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf2ef84-670c-4719-8228-3a93e6721975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce5df914-20b2-4ae0-a57a-bc9b9b39992f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee0ce55-f270-4f11-858e-2dbfc0f61645",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd5a9a4-91fb-43c3-b110-c4e887967cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6117a1e5-2e3f-410a-be9c-ac9408f72945",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5a4be5-9417-4d07-ae59-af010c66fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99105760-c2c7-4105-81fb-7ac235c287a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e1c9da-d516-452a-b046-f1abe6309a72",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1b8b203-8993-4730-bae0-1635349e3b10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1e3eeb1-b5d6-4b43-b2a6-0b6b06c66bd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23829235-a962-42c8-8c35-c9319b27aef1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f318b2de-ebd2-4369-959c-acfae11601bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a943b1bd-3df3-42cb-a0e1-0427b03416e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e38c92c5-f3e9-466a-9e54-017aec1d2817",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ae70ae5-b959-485c-ad69-ac700b6bf75f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6329456b-d45f-4a4c-896a-03060bb96b68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "308f51fb-780d-4aca-9922-9cc6a11db416"
                }
              }
            ]
          },
          {
            "id": "6fd6e9ea-d894-4de4-87fc-a7fde2342cce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b433f46-3ed7-4259-9c28-a94a841fa1c0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db2d5250-c2c2-4679-9649-859196e8eeaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43b592d4-1b6a-463e-bedb-2db03428a4bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e85c1d03-ef93-4e18-a3c1-bbcd8b799500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "949c453f-2e67-4f50-9e81-f82ac37e10a3"
                    }
                  }
                ]
              },
              {
                "id": "33cf793c-3196-4587-97f4-dd12cb51fdd9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebb39c82-4ddf-4f24-93c1-fcb55363663c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e0a7e0f-d1e0-4deb-8d59-59aba8ec6155"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54616daa-f74f-4fa9-9b52-a2fa956e6c0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd5b5d1a-9258-43ad-ba00-cabf6be46c94"
                    }
                  }
                ]
              },
              {
                "id": "2c2d686d-afc7-41e0-adbe-b4b54678bb5d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "217ad848-4344-462e-9b09-66366a61cfcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f148ef4-af79-4c93-9675-986084dd4b13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dce09b0-c731-4ff2-9cb2-6cb9a79f67c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "231b6ef6-6031-4094-b2be-80138bf6895a"
                    }
                  }
                ]
              },
              {
                "id": "4f326d39-1f86-4ff0-9b4f-a449a1a36e5e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3ebeda3-4011-41e8-b37d-35942febdfd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "298c04cf-e813-46db-8db1-7f4eefdd445b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "435824fd-fbaf-4ab8-9513-b5c137c04455",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4190d78f-01b8-4d38-a603-c75d9177db04"
                    }
                  }
                ]
              },
              {
                "id": "084c4ea5-f73b-41ec-8f6f-049e03f3a015",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7403764-2c68-44ae-8cce-879a4e701e5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "311ade84-9b8c-4698-8b51-ccb74abb353c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0a95b64-9b81-469d-bfbf-51daa4c87a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f1a7caec-6ab5-4d3d-b6f1-03d77c009050"
                    }
                  }
                ]
              },
              {
                "id": "24275266-c96e-4c3a-9b40-3e45930599aa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "817b40e9-0928-4ff8-9493-00c9d9af5ae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2ba5fbb-9176-445e-998d-0b283144f4c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7afa85ad-9351-4a5b-850e-9f3af77accc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1435945-3ec2-4a39-a6f3-d2adce6739d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28330203-a816-451f-8db5-b21cd78e7977",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2376fa37-9fa1-4d3a-9b5e-71e2b60addfe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79124744-239d-452e-893d-74b4aada5c9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c1000f0-158b-4243-be88-a672a5e3018a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5500a914-77e8-406a-9e72-292eb7cfb730",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54f6e403-12be-4332-80f7-fcf16e9c71a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ca49392-6cf7-4209-aaed-fa38a2122980",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97afcc4e-19f9-4d03-86d0-04c8b16aa027"
            }
          }
        ]
      },
      {
        "id": "d468465e-f475-4b1a-b85d-dd9a923ce38e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "412e86a1-d9bc-42d8-8480-2333ccf4198f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6c805e3-7461-4a96-aef1-62a5cede47ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ed173d4-cd58-4cf5-b19e-e88d4f5bed08",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea55fad0-9617-47df-800b-f25e6aab809a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b6b9c7-7afd-45fc-b9ee-3b271ce48f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45f82e8-8f00-4e62-abb3-49c55cdfe0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "989e4cdc-4940-41f5-aaef-c5c0a468fe70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dec9ea2-a598-46e7-979c-e9a3af0a4499",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0373bdd5-8dbe-4cea-b48e-dbfc6ecfbf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983a4fd4-9a33-4af3-b0be-835a6bbf9165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ea3b3d-5c96-450e-9d4f-b82e91a5237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6700af81-67f7-4f5b-a3b9-4c4ada215872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad8826-1236-4151-b623-8feed376073c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a9c6f-ef87-4456-ad37-c95f21c2d102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d80c823-820a-409f-9bfe-715c64cc7e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849e7415-2fad-4019-9091-0332d22b5e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7a9174-76e5-4b70-adbb-d007770e838b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e8d52d-7044-4af3-806f-5c33cdd2167e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1afc20-139e-4495-bfc4-827ab6d850f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972bbeef-512d-491a-9edd-0033fd12b93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7de1bc0-506a-485d-a1e2-a2566ccc9893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "122881c7-5d62-4f4b-9709-0b73bba36894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5e6b7c-78b1-4ae5-9dbc-0263efd34f8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe44f22-a701-41bf-9e6a-4e9e649761c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dc6784-9de9-475a-84e6-d8cbd3bcbc85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30646cc8-6358-4f4a-8c90-056573d5fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc60a79d-180c-4d45-9a70-0d5aa0d20c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c3277d-9621-429a-8c0c-8de383dec3d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca8b477-18ba-4d18-bef1-c707b9ae2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014a399b-b5ad-457b-b77e-cb9f4346d13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d7cb2d-c10d-4a60-9689-8027dcd1840d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67400c0-c9c2-46f5-a93a-7a0d312b3244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d0de35-a1a5-42b5-b8b7-9b9c1020fcb3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8218af9d-9f91-4a37-9269-4076e88d3390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34099a14-5a48-4895-9dda-a6e79bba35b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb768502-1f97-4e17-a46e-dadd6495a17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8411478-4662-4f06-83f3-74bdf8be12b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d7b30a-8f39-4c5b-92f1-6d31dec04883",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9300d61-ea41-4774-8b24-4d96bfbfde2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06dd4a9-4790-4be4-a259-bd96208ffecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85663c1a-fdb9-435e-8034-198d3b796bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1035499-e62b-49a5-bfbe-f4b5d8efe925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a1cd70-477f-4c1f-8709-847a7650f8bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4eb2d4-cd61-4015-80dd-c4a8631d314b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f21ee3a-d6d8-46f2-8c21-84d3d8ffbba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dccdca1-0d24-40ea-8f13-fcc293f5cced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa0d1c5-d74f-4d5f-9655-278924305b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180ccd3b-0d11-4bcb-84d9-054465416351",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0869ef08-f3eb-4f2b-9231-d2eeca008a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850bdf33-e9af-4c44-a063-214de3c2b10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8cbf88-294e-4388-9fea-7eee0bca2191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25030083-324d-441a-bc57-4c482ad30226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b69ad83-6e90-4e59-afb5-2971c73baeb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c737acd-7738-4ac3-867f-58b384b2a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd10e9cc-8d6f-4daf-9350-ca90fd00e140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877bbb81-683f-4dd7-bae0-37fd074bd66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c69d12ea-44bc-4070-bab0-b2302ca32acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0361ecf-03df-43e0-979e-63c804c04450",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d24ed67-d189-48ed-9c70-683083ed99af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e219a999-8b0c-4ef4-9798-2aceda4ec7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86254e6-86e0-4697-914a-77620b94626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cf7317-683f-482e-afdd-33081c5654af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20b449e-d429-473d-98ba-9211a4f7b3ed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f24961-fa8d-43ae-bd35-58bff0d423f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca7357-fc93-468f-b810-a01d29f7f5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c72163-dd3c-4feb-b36e-dad59fe92eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bfb190-7faf-4d77-bad9-1d59eb2ca459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c233d03d-b359-445e-84ad-9b7e098e2772",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8e55c7-bcc3-4477-9c29-7189d5fea2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c8b2fc-6361-45fd-9cbd-aab042deff9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d73b17-a535-40db-9896-e59f5e725e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6929fa-fe3f-407c-b14e-0df2530657ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdfd089-2489-4aa6-93ee-4cf41b653eb1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a3636d-f7e0-4ca1-ba8c-8147de55b5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2313fe5e-e24a-4819-8783-31afe199e2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ca8710-7c78-4aeb-85c6-9e02488b6101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5405ace5-a213-4f75-9fd0-1970afd5b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be8b9cd-3313-4dcb-92c5-6e8f80638007",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30077c69-f755-4b12-9e16-44349a4f0a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a698a4-fab4-42b6-a256-2e6c8e694415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779c2ced-2075-4bfa-a5db-c94bc9733ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "47702ed7-115b-46f5-a1a1-a1758ceffa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f703d5d-0171-4cde-baad-10f65322920a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c0e329-9d73-4e40-b79c-b7f739d8d626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3dafea-3127-4171-a61f-e9e92fa75f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107d90f0-4447-4438-a436-649f3c041766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe20b1a-a29d-441d-9826-a9ef56a5b4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c771065-06bf-4401-a462-25115d64eafc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115e0572-3d33-48b6-9407-6771c2a8ac94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4f5969-c6f4-401d-a95a-ff2fcfca4521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f6be86-6dd7-4124-a07a-7c092970b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5e7742-7b6a-4ece-8530-2573854da864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437472d2-e178-4661-b5b1-0c90815d16fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4713f6ad-50e7-4c89-aad8-8ef7859fa24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6134aca1-d984-4d99-9e40-3c9e442d12ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f745d14-6c79-42e4-9558-5aab26dc56b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab9e4a0-49a6-461c-a1d8-a2c252c387a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f8b27a-961f-473e-b63b-e6aebd4e9a51",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f066b2-cf7c-4394-be74-4685f358b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749ad499-53d7-4a3a-9b34-15da0295ae24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5affea-87ce-4cb7-8865-04b63c6119e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "745ce713-addd-4234-bb22-295d7c125e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b8da8-cc20-4c01-8456-f92001283643",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c708eb35-8946-4854-a8ae-bf78090c8177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ea2661-f517-4303-8d8a-e29a20152816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413938ef-5b94-4502-af85-9d12fb13f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f7ddc4-7588-4f45-b5cb-b10283966e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3160947-3612-41fa-ac5a-d31bab65893c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966304c7-40c0-45cc-b61e-5ab131b2d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cddf826-fc0c-4e66-b9dc-e69cdfe3d64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75201581-bdce-4cd8-82d1-9981fdca74b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b3f290-a3d2-49c2-b16d-0e3325f718c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c9354b-0807-4b71-8575-ff49d05d1dcd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a689b1-7005-4fe3-b62b-a8fb1a2a1d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bb096d-a342-4708-9d24-336a1c13722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0662b1a3-5974-4eb1-978a-e7258369667d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "865df0ba-8026-4aee-8c4c-f81c127f3ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f1a676-86d8-408b-a001-6545443b65e1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a52d17-f3bc-40a2-a17a-62b83d367518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e85f717-72d3-49de-aa1e-d7c52aa55e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04955ee6-156c-43aa-9467-9a290bde53c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4da073-53a0-44d3-bccb-e779dc880fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61133ba5-4e84-4ed9-8d5a-031e3d9790a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bac58f-83ba-4d24-8416-f440468d54cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf39d98b-7e3b-42f7-8ed0-079ab7c1c894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca318a2-0b1b-43db-b481-4ecca66f208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db10362a-39a5-497d-ac70-ee392d3a8ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b9e698-d6ba-42ba-acaa-5a45c644d6eb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf0f7c5-0c98-4cbb-b1f1-cd6e2db56ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5c084e-6ad7-4cdf-b703-009611b6b574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68785c6e-9fc9-44f0-9b6d-8f387745adf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0c7dc7-c746-406d-bcfc-79e8de911cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd219df-a0d4-4cef-a6b0-4c3ee6c85a2d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf36e780-86e8-41e8-8e09-6539888378b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabd2473-0173-458d-a507-3629b97fc1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8101a4fa-de52-4510-b402-2957946a291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90356f83-aa29-4991-a63c-72137f4c576f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3e5007-d2a8-471f-986d-36331f8d5b3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30610b69-5d82-4459-80a4-dee9eda5bb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49680b19-4727-47ac-97cc-c1b7f75dad84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08365c3-8a00-43ee-ade8-c146a86f4572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f155bc-34e0-4937-a4a6-b96d33a4e0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d27a849-ad64-414f-ab39-00e369b97225",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16594a33-c238-4990-a3ef-c1e88215c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016bb832-2a5a-4df9-a0aa-4a0581676414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b549818-8154-44ac-a762-35b2292a3f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2435cb86-8f0e-42f0-95ec-ae23c9ced447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb46ca50-b9ad-4ebd-a8c5-22aa1072585b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6601bea7-a144-4ae7-8547-712c4a13ab07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42a8f33-2a23-4aee-b30a-93df20cc383a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7402632b-77d3-4c33-b92b-4ba2f667a8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c181847-d936-4127-b39f-9718f5affd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171ab333-1847-414e-b57d-b6883a56d773",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c80e33-0c08-4745-8019-b2dfb9717831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d7ea92-46da-4a80-9eb8-90edee328fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8946bfd9-4ebe-407e-8385-7db03d35ace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a365801-af57-4a85-8a7b-993451e6c2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa612124-6fa1-4d70-b39e-6846182695a0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805c647f-1502-4931-91be-3d357cd94de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3f9353-d8d2-4e89-9028-2077a9c5900a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561820a-59fb-421f-ab0a-1da491ad0a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d08779-586e-4d97-ae75-8c57a435827d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19778317-5716-4fc7-8389-0beb6fccac1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b79a07b-705f-464b-a4b4-bc6eec9eb744",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34693a0-741d-45dc-ad2a-37c2146612cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "815ae1c4-7144-4b2f-854c-96e100e83d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173588a9-5aec-4f00-ad26-b99c7bacf375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "453c1f62-6dd1-41b0-a081-31a092df7ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2239048-1034-40df-aeaf-79102bcf13ed",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482df5e4-5237-4cc7-af37-c17e85905b0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "485f0019-a386-4bc3-a0a0-bfd573d5efce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787dfba4-c625-4b6f-9ee0-f4093d0c6357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13560d12-da94-42d7-b1b4-3f15c1dc0276"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e89966aa-5694-4096-807b-a1572cf3e5ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f4856f0-debc-4f84-9ab4-19f610c10c0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d87badfb-e019-4f22-abe2-87211a3a207f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ab80d5e-fc08-4759-8341-058940110c84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c51c0ad4-1f0a-4bed-82c0-ee2268e671a0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b9d9c5c-f4b9-4b85-8087-010891488352"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "647c0baa-84fc-4c4e-b662-03542435a007",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efb4d307-ddfc-423f-8b1a-02b24ffab68a"
            }
          }
        ]
      },
      {
        "id": "6ae78a20-a97b-44e4-9640-d6e163efcd3c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "34ad72d3-0ab1-4849-833b-daa6982eb09c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c040a20-2287-4910-9aaa-80415a3b7d19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93b26c2b-6862-4de9-a7d5-a8ba86e9fe0f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199b15ca-e18f-44e4-ab4c-4275ce71e2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e5b213-e28b-4f81-b370-2d78339f96a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dd2cfd-2cec-47cf-a050-4b5baf716864",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1da1873-da69-47c1-8179-49e2e2d75749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec775bc6-1d38-4fd4-a8bb-02afcd11270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b219c610-599a-4c8a-b56a-9b11ade9fffb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73793fd0-ae89-4ceb-9438-5efa2e5581a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7749ec5d-d39b-4bcf-b520-412e8fe81250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac8cc29-61b4-4c06-a43a-7d64d589709b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ca2ebf-8cd4-402f-b679-b3c80f379692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0d39d7-65cf-4ad7-862a-07c3bd773398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1497a85b-75d0-4bd1-b8e3-892131243610",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d34ec7d-e287-49f3-8823-415854975ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26620015-de9b-420c-8e2a-35da357712c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7976c7-d897-4157-addf-aea4395342de",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4449997-0cfe-4b3c-bae1-0f7ce2f85bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c895e9e-67f2-418a-a753-cb88022ad283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dac18e-af90-4a89-afb5-812812882d7b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b14e3f-542a-48f8-bee8-7a5dfba95a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03374460-6ed2-46bd-8889-215e1e752920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbedca86-0c70-4aaa-8365-c2f1e2ee0baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6211c1-cbc4-4d3b-9802-81022aee4686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac8f40c-1fa8-41eb-965e-0b2579ca7139",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df3878a-c0ee-49da-868b-0ae5d0bf9d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee049a4e-b258-4918-ae1e-1e95d6e488cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2716cbea-02cd-4752-a31c-8dfe89b355f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9516b907-774e-4c9a-9b67-e07b271ceb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f462a068-474d-4916-8ac2-1d669b81524e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e946d571-b838-41fb-9fa2-d5c2dedfdf7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9546709-516c-4a6a-8b43-4a1f3d74e9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912604ca-32f5-495e-8015-a7f6e2a91cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cffaa2-0f81-4fa9-a58a-f3c65edaffdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5772a88a-1c30-4d00-8093-c477ac64c500",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9879af-dddb-40a3-bbd8-eff3514cefc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e81f06f-8dad-40b5-820c-896b016aa153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d382bf30-3fd5-46aa-b7a2-f31de37eb5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38f2971-73bc-4126-b9cf-431b86939750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5652e240-1409-4b04-83b0-2170b30ec71b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bb11c3-f029-4a61-af98-368a35989683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cb32f6-3280-49bd-95ed-c2508e36a699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2770d190-9456-4d9e-ae3d-2daab23c8bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2151b7d1-442c-491e-bc55-809b2c563a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6bac61-3365-45a6-a011-b5b6823933d1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca62847-bf89-4469-8b4d-eac4e18897be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c069a10-7ad1-4019-a376-db50561250e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c2e4ca-e093-4703-9833-88b83f824b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b366957-2be1-49a8-bcfb-6cc3aedde84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3cf1a6-30cd-4f92-ac03-e7868b4c8070",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c41d65-3a7a-4c9d-a26d-15e2f4e3f0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ba7b92-be2d-4f7c-869e-e31c466ba402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f941fcd9-954b-45d8-89d8-e88aad9c973d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5dc99c-dc50-4ad9-ade6-204fe923e812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9f9013-d1ad-41c3-a093-54241a24f4dd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e72aad5-c79b-470d-ada1-f8c0ff9bb3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37768ef3-245e-42cf-bca1-29f826838786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bce7e0c-a661-4389-904a-e454cc5e7be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e8ab65-4e92-44cc-986d-9d14cc65cea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e4bd4-8f2e-42eb-83da-f539f56061c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb1c8ba-b4e9-4c7d-9def-26f2df05bb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07628afd-9343-45d8-bc25-69891eeb25cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c81529-9a3c-4263-98cb-59ebf4f9df04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bcde81-3023-4bc8-83ca-4ff414d18cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfda2ba-f23a-4d3f-aaed-ecf4ab6a23a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd806df-229a-41bd-baa3-0771edea18fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb4a9f2-f7df-4a77-8723-41aae91e7865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553559ab-1725-4672-b911-7c3aaab3af53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8b9fd7-6493-4c65-9e5f-c3deae68c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daee2ca-b5c5-477d-b79a-29b143df91e3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4284f0-dc2e-4ba2-a035-e61253a552dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f2954d-0923-4ad0-9686-11b23810f4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc6d79-dbd0-4240-988f-b08b3e1e4b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0de6a3-0d19-4e49-9310-153af77071b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6df878-a5de-41d4-b996-6fb01e2d24ac",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36822e4-22cc-481f-8f54-14937394d22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9975c52b-300d-49cb-abb7-d10a6729caa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ba533c-e917-454c-bff7-879a09a0603d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71046750-017a-4768-b3ca-9f0b10185e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51d016b-60fa-48dd-a222-ca38def87118",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe62740-4ba5-4c59-ab8b-797108a971c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74563cd-a956-4909-936e-0c9c8974b2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c306144-4ab0-4477-be35-3745c95c80fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8103869a-8c1c-4494-94e1-586b332d84a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a4046-5e8d-4a6d-a6bd-89950f2f69eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0f0ba8-a711-4433-9be0-864608f80dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2199c2-f507-4302-8235-825d275b96be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439fc729-99d2-4bbe-ace8-ad65b22e0bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283985d5-ca36-49c8-9a2d-6fef2335ea5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9927584-51a0-4401-a375-2a4451fefcd6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c5b1e-8342-4109-8378-6039474130f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e9be02-35c9-4be0-88d0-5ee30c8740e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae210bd5-9223-4fa7-a6f1-a3d2b6790d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dfc67c-deb0-4216-97c6-1c04035c7a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63bbe6c-3f25-45a8-8d05-915457e729a6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9087f3d3-4496-4e95-b8f8-fb1e6146442a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ae3938-0e07-4c7d-bea2-e7d5410279a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f555d755-2ed5-4a96-a270-b82fa5e5702b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1876896-3c76-4475-a143-119f449857c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5592ed3-d31b-451d-aed2-17945b08006d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a2109b-3296-4ee4-b639-9cf54949c7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c068dfb3-1f7b-4a29-a9f4-7fbc8609df70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2640f4-3a5b-4533-a3f4-5734245a2d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02f739c-d64f-4f7c-bc01-0f795694c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dede62-12d2-4eb8-911f-10d06a2a600e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b538372-67d4-4eaa-a302-e1c38ad94506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bddc22-4489-4fdb-9ae0-12f765331190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6616aec9-3af1-49a5-abc4-7c498fd54d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fdcff76-6186-456f-bf54-97b8307371b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef5ed43-0cdc-4bd4-b811-fcca22ff6b9e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fe24a4-764f-43e4-ad5e-98f5d57bc89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f133b7ac-e470-4bdc-8341-8cdeeaa9218b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8339d5b5-782c-4d4f-8e75-93ca93ed5097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef7f098-72e0-4a2a-bfc1-0a702f138238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fa0e6c-511b-41ea-84e2-4edad79d1e10",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe63b1b0-b8d0-4fc4-86eb-af816fa7ed3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ec74ad-205a-4793-94a4-b103f3b2a4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc82532-b052-4254-865c-99ea2c0be74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a34866d-916e-44d9-a5b3-089c522e8932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a486378c-51d7-426a-b667-054a1601737c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad187709-8e72-4c50-ba51-451a118c200e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57aa26d0-0031-49a6-8b7c-6636e72f30a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef4e43c-7f48-4ed9-98c0-7179d6b61040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78d6d76-74bb-41ee-a021-36e7e8ca8fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eabb77-8ff9-4ca7-b23a-bc2214ad753c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b925a570-ca68-4258-8eab-6dbfa5a0edd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2094f39-cd9c-4b3e-af60-639db0ad0755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a39476-07d4-49ea-ad15-8c374c162f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04931d85-8c88-4849-a515-cf1eef3df636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf664f1e-c4c1-49d7-aa93-d68ccab714ac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d1409-e949-4d1e-a686-b0aaa4d388c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6a8ad5-ad1b-4a49-8cd3-84bad2b02510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe504e3-92b4-4d09-8996-a50745906ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3e4ed2-9dfc-46db-8c04-614cc4b87c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aef91f1-c519-40c4-823b-8f340e27d88c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641b103e-ec03-40ea-b648-88457b4aeff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e20a881d-2d0b-4b72-a77e-f1a78cacab3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521f170c-abdf-4457-895d-b5ca0f857d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4513cc35-f1ec-4cfa-b120-644a7045580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3985824f-42f1-488e-97f4-7eb0d4e0f60c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351e723f-68cd-45a1-be19-5c98cacdc483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b412d3c-f002-4b71-8221-e810658fa03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce4fdb0-062c-4006-88ad-dd32558cf825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4806ca6-d33a-462c-9243-d33f7dfb4ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2ce159-ee62-48aa-b22f-5266d7cca4c5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4391e44c-1865-4e3d-aaf9-99ef9922cfbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9537172-e470-4b5c-9ba3-06a4e775c2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cec0852-dc6f-4834-91f8-e589b4623227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6841ca-b73e-45f8-a17f-28b5d5244d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97f5937-7c98-4ee2-88f4-6011f451ab3f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1258bc7c-596d-4494-9f1c-cd0cb3f1baa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e414014b-f944-4d25-9787-e9b10a692bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b5c07-8fa1-4ac5-a4b8-a7e58957d55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4794e295-e5e6-4a86-ba4b-f733a861ee9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38535104-fb2d-4cf0-81c4-12b01727d202",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84014555-b8ca-433d-843b-0af5fe431461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1525671d-9e95-410a-9681-106e0f8bae03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ae986-ba39-44ae-adb2-ac9a20fd2df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60e4d0e-6054-4617-bbf6-a918c5edcf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665bfaab-47db-458c-a1a1-31ccd5355fab",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7708b7a-0cba-4a07-96f3-8c50ccf226ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8b0870-402b-4ef4-8259-a9f9de1e7f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1372512a-8e03-43b3-9437-bcbab5e2aff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc89edb2-d136-419f-b6b1-7e70651ee968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3dc764-a16d-4048-9a03-01b5188999d8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8158247-37e2-408c-8afd-6e3c2da7e69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92641f2-5e4b-418d-97c1-1687c6cdd95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61b6f7b-1f84-44f2-8c0f-699368d3f4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4661236-e83c-499a-9bf3-ce950c1f3152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cffdd5-9b9c-4293-be92-a8bef209a8c4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac3f38e-8dc3-4d26-af23-a9337c825fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5039a65e-c282-4625-ba2f-a40180a8af15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437f9905-21fd-4006-b28e-8c197f7b4f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5ec949-683f-43ee-808c-5bef6fa8fa30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2777f7-8c1c-46ee-a377-3f7c6e7300df",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11769405-c5a0-456d-bee9-ea011eb6b964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c925a8af-134f-4e88-9c20-15d1dbc171ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624de2c1-a3cc-4243-8354-8dc1de204fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398b6d76-780a-43ba-bbff-8e0fa1760f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac606c83-df85-4923-82dd-610516ae5004",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f749a46-0186-40aa-89da-202bb926b39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1539d75a-07a2-4512-91bb-4aea33c2f24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a83b8-3501-4f51-8c4a-a80e2a7a1361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcacf2b-0437-41ab-8c2f-db3cdc804d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e9c074-48cf-476b-b134-33f0f45b3eee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b8053c-8b2c-4c77-8403-9cdc6c455154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c944978d-d92b-4a2e-8cfd-925ca983a359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e73fae-d55b-4ea7-8c5f-10a79579ae42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cff26e3-5a0f-4604-9655-fa84a886b2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f29bfc8-2562-4765-b153-3d2e07af9e4a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa58b59-d093-478e-a4d5-015479811aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcae3125-99ec-4af6-a93a-3071a0e8c6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c951ea56-4a6f-4ae7-8942-ab728b6b0450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbab972-8130-4d57-a080-87c72b814b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bb1342-35bc-4333-bd7f-a5baf8e20da6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55e156a-2095-45f3-9c7c-41f6dc14d097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b268d6c-072d-4de4-a784-07dc8935c6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e441aeba-f51e-484c-b7f2-73e7fff2aa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2977c211-557f-4071-bebb-3880a18009e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc51cbd-eafb-4e59-9371-6b961abdddf5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53bc086-fdc8-4c1a-b218-0242f5fe17a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1320214d-0ccb-4cea-af45-9786cb93ec76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896be944-4c23-4558-ac7e-9ba329f5ecc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db42624-125c-482f-b9a3-ed2e7534d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9953dc87-f4d9-49a6-b989-d739708d3d5a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4acb24-403e-4239-941b-d5f29f448612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c20388d-2c98-4961-af3d-6b82868721c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa40d6-10c2-4306-b327-bde769287da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9d5bf4-fee2-4b72-9d77-3c17d0822636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5869adbe-125f-4296-a10c-d740e3fe6660",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb2405d-0c80-4aab-beab-82df11063a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc8790f-a594-4b8d-9c14-8e8d58d2d042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b19d13-4f8c-4fc9-a8c1-752e48888d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da0e6cf-c300-4d39-a990-fa4365a49013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d1dfc-4e6f-4a95-861b-93ba34e3bf6f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d170922e-c5e3-43b4-9010-7b478310be66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9e2c59-ba7e-4a93-a9a4-ea05078060b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab1ba3a-3d0f-4187-a429-59d44b995a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceba6ba3-115e-4ff9-af94-ff3e624f7833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe26fc-28a9-4059-9aa3-63f6f46d0769",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3235a47f-b1c4-4b5b-89c3-29af8da569c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c00a2f-2ec8-4f67-bb5a-63d9d7702593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4455476e-d415-4698-b580-d55a64c4afb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df43b83a-e6f7-492d-9001-06b84e464999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9f3b0a-6b3f-44c2-9825-e24c8ebd8337",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7e45bf-a28a-4f4b-8531-05590cf3c476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cb9694-6a38-48d2-b9e3-ab5690970d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c334dd-70a3-4752-83ca-9a78ab4a4a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f2c740-b279-47f8-8959-b3f2b4ab3394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73e0cd0-1a1b-41a1-b4d5-b3466119c34c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b6c334-5274-4c2a-a5af-d8e846cec455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81e2b27-582f-4429-9d08-efa9327db32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169d8bd0-8abc-43f3-a6c8-b045b5b8b328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d54493-c38b-495d-8152-ae8c68e8c5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de49a0-fb77-41fb-8b57-eb59893ebd88",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dded38-e924-4c90-8925-259bb144618b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88651cfa-e89a-49a7-a7cb-d906e08380b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e964dbc0-bcfa-4867-a970-e57f36aea13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15ddf88-e490-4a5b-b0a6-4357f1ba9d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c605fb15-1681-40f2-8bb3-966bfb3c4c7e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3483f92a-0abf-427f-9d0b-41947cc698a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2155854a-a38b-4dcc-a06f-17814f1dc897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9916485e-41fc-4511-bde1-282f318785f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21a2dcf-b86a-460c-ab5a-8d241393ddcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c4e8f1-9994-4797-8b6d-c74de67b6b4a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493da557-6ceb-4374-8567-3611a6a8ea36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b8826b-641d-40da-9dab-47cee85af9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83b8b04-7b63-4318-bf61-856e908d814c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed98469-9410-4137-b3b2-5007ba11ee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fa76da-f435-4719-bbd8-2e9c7436db7d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cad350e-2018-446d-b558-b659e40d54bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62588ef3-ae71-4449-a8e1-03e0ce809c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeb26a7-8918-4dbe-a6c1-5aca47cbee25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed31ae5c-f581-4df8-98a7-4d908ab5d615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f14ec6-0079-42c0-a553-e2df9339772a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bd0c21-fcdb-419e-a456-6c3a54cc9d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4497d06a-08f8-476f-8a35-cbde1ac4e05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2329befa-aab5-466e-9ac2-0447cfdc3577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff4e239-9757-4d22-b335-7232c3326dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca55e533-1e69-49c0-8f0f-be92f500584a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df1300f-4456-412b-bbf5-9fd578ff37eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50dcecf9-635a-4b42-b5a4-ed47e8515287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b97baf-7612-4061-86cc-e23e9ac4da9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec23cfbc-264c-4819-9066-99611384b745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0b6954-4ee4-4c50-97d7-b6d61f32b485",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2697c1-e759-4e6b-82a8-ba7d25392c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7056a00-f3b0-45eb-94de-55b338c35f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264a2c49-c221-4f3c-a4ab-e09d82ae723c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc86edc-304c-4c43-97de-a85742d426a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca64be27-5728-4ec7-8a76-55c6c49d6cbd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d855b306-2845-41b9-9a3d-0ec3212cd72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb84ab5-490f-403f-8f7d-7b8313894d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38b47ae-4541-468c-851c-175ef6dcd7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b0b5e9-75ea-4f2c-b0aa-2885da1e2f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00355b6-492e-4d26-aa8d-efbce1e07e3a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a90fe2a-c934-4d0c-94ef-6d92c3770074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18879bb8-08e2-4fd8-8a7a-9dd1d856d983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67a7bea-1205-4318-b233-25e0091f996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb76db1-3d56-4ada-a6a6-1ea34cea3916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b245d3-8459-4c69-aa7c-eb38bc6323f2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de04ddf7-892f-4c00-aeb8-7973a7daa6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea8b21d-48cc-49a8-87f8-584a6e39accf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3426cc-ab27-4d54-9c75-d42b40e5514e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1478bb-316a-40da-be53-ad5ca3988742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e1ce5c-b7de-41b9-81ba-1f27fb41cadd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0658a1a-a29c-4cd7-bfca-88d834dba302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85a7bb2-1a75-4810-9dd9-e11c874d0856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c55b151-fd0e-4d2e-903d-1d153553e4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c590769-7fd1-462f-b4ac-466fc693d9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfe92f6-e147-4058-9bac-d38e52c69c2d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550c2a2c-b950-4f23-9176-4361c14f51f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc4a6cc-27d2-46b6-ab9b-af12b94fcc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a617b4-d24a-4d1c-b214-c7eb07634e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccaa387-68b8-40de-845e-24af6a40da7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca52abe7-8f41-4897-ae17-0fb54bf31baf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6fb70b-9362-442a-b3b3-708c3c813451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923a0870-dfec-46c6-9013-fe59a2f0472d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29d5d05-e5ac-4fd7-9949-791531a33535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5eb9343-d63a-44d4-befc-4a40e5fa94bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ec747c-e97e-4923-a5f7-26a5541f4f06",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f06660-81c3-4204-9413-bce7d0cadd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606a9858-960f-4477-8db0-830c6152a369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e529a3de-a261-42d9-a6fb-e56dce540355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae929b0-df5c-42b5-9da7-8d4058ffd8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bc7829-6027-4f08-94cc-4ca1c52b45a8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ec1ec6-abcb-42d6-b2a7-00b76d62bdad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85526efc-026a-421d-a8bc-eaf82f9ee0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b03d364-443e-4973-949b-279fc8a60010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd5cc9d-2a53-42a9-ac27-5e3a3bfc7127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6680bd19-352a-4aeb-99a4-b19fbab2620e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845de63b-339c-4866-a006-c915655cd234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630e2c9c-200c-4d09-8e8c-4d9923b4f998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1218b7-36e7-4d1d-a103-cbee5077a4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c8403f-27a6-4078-9c06-c9b6bed75146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f1dc39-f339-4f80-9dae-ba5bc83d58be",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7836c4a-75c7-4241-b279-e6b0226351aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9adfaf1b-9a0d-4900-9c24-e016b0673784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2309d9e2-638f-422a-8d55-98f73c857004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02d623b-1b17-42c2-a42c-6f15114303fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e2d7bc-ca76-411c-a389-15f4ffcc0690",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41409ca6-d039-4e3a-b773-1697c0956e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ae5834-0bf2-4530-8519-7304e0106aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811a8d5e-cbb1-417c-b8ff-2278933eba84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517fbe5b-7239-4d87-88b2-ede859ef8808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3cbf59-4e2b-44c8-8e1a-805b83126723",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290ddd9c-ec93-4a23-9507-fc317910f752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29980100-8a53-404e-9bc2-abf9f4b760bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b227afa5-6571-44c3-9763-173a43d8cf7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d646bf3-1ae5-4dae-bad6-6167c44063f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9a8c50-fb38-4003-b1d3-a12b8f8357ba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72feb30-5703-437c-a792-e38a235da64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "303c9063-5bd0-4768-a79c-c7d90787a99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba4601-e701-430c-b550-d2b7b445b4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707ec96d-4fc2-44cb-ab48-c2b3e58e1ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bca8d6-9dc2-4c49-813a-a6b36186fd79",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bf25ef-952e-4b67-be17-87808cbbd1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60020113-5dae-456f-b156-f93f68826e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f981b7e7-e6e4-4050-ac2f-f00563d196f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ec4594-7256-4df0-9e37-77df8981edae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff6782f-95b0-4f87-acbc-d0a593c63ce9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4220a4a-5e76-4436-a1e6-6d14199d010b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da0a695-ef1f-41de-adb8-02ece2f4ea09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456dcb5e-4442-4933-9989-42c5e4b4e787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccf4c6a-f706-45bd-a50a-e20c6daad7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc95d37-e127-4ef3-b0a7-531f941d9167",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cbf56d-a8ff-4f53-ab41-00a8fc7cefe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd0145d-f04b-4440-b251-7d472b99041c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a809005-7f66-495a-b083-bb28afe1162b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0256bb0a-4dfa-49ec-90ca-33e2eb4770a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295f6211-fd3d-4f1a-9306-4215ed37a51a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f47a87-61d7-4b00-919c-fce6a141c42f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0ea02b-d50c-4331-b445-8fd8c26dcd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736fbef6-37df-48a5-872f-5b2f4cab965e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6a76d3-b0b7-4458-bab3-f0720abf5717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91d8a27-dc68-415b-87f3-97419117c725",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8e9b93-85c8-4c56-8102-e22e7a27b717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8352279-a306-45bf-bdc7-510236c36ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793e1a03-b6a9-4f2d-b8a4-94a8231e2b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778f86ea-125e-4aec-947e-88c6bd3ce28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066e5441-40ec-4732-8992-6858bc1b231f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fac719-b41f-451f-a32b-712862e7bfad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8079210-4e58-4927-b4b0-c04f4f8827cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d91519b-87d3-49fd-9f7a-cce31d89827b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8b3794-a2c5-490d-9d9a-d9507233998e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eccb1b-ee2d-4bb3-b0d7-83154b55f52f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0766b-87b2-4c3e-87c5-a9d2d49471fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9996456-3d4e-443d-8e5e-4b77afafc219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79eae68-d435-449e-a6ef-31e1e74d2004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a038c6-6b24-48d9-9703-9e60731447e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a47878-a851-4c50-b34a-e6c618d1fd3b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea27e1d1-c274-4569-97d6-085bcb04f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3efdbb-7668-45f3-9788-38d4ecd16c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b72f64-1315-4fdf-918c-68ab5967c7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a48bb4f-9fb2-4d07-bf31-949df5c9b873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfe8887-342a-408c-a074-1f7c963c90b6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9212b3b-c816-43b7-826f-22426a6ed1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa7642a-4ea9-4cdc-93b3-de98ae9d7c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3a7e93-a8a5-4be1-8c12-3c6c7dabd263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecde849-f795-421a-92dc-1e906b78c6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980621bf-69d9-4e76-a3d6-355e1efa8a85",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853cbb61-42e9-4d69-bc1c-583a376e60ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706b72ad-0c48-40b4-83bc-4d92a7750c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a83a53a-37f4-4c3a-81b0-9ffc3c2fd552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89296c60-5f05-471e-93b4-b25fba457fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53d9b18-da5e-484c-a162-da10557ea845",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9535506-b00e-49d3-8965-bea10a6ac478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79e942b-2429-4da4-b84a-b502b00e10c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361c78ac-c8cc-44d4-899e-807fb30b181e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207e88e3-39cb-43d4-aeba-3a0193a2a55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab0e733-9645-403f-a3ba-76676f1d4666",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59deebbb-e4f0-4156-891d-e055b2c3375e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9dbe86-3929-4ecf-89e9-6fe8c3668684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbad922-9a15-49c6-a1a6-36c41d241f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6eb147-8092-412b-8f82-205013a9417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c42e5c-a5d1-4521-9bc6-ab7b460b607b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a2f05c-9333-42dd-8925-5bf11488e900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae462ce5-a396-44ac-be20-6c36281fa0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a519ac7-4798-4c69-8f49-eac8027e3e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469dd975-fef5-4369-b287-9091024729ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62c5342-cfa6-4af3-b561-5c8bb74da23c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715a184-5298-4071-b747-67b9c6f6e46e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1faae2e-ac4a-4b98-bf05-dec28e7e566a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92c0e16-7be7-4d09-86cc-8b818d23e380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bbef92-a7ab-4818-b578-405407b18de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bae5047-eadb-4889-b362-af4c53eeefd6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76d20c0-90cb-4eb3-adbf-62807a902f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a3316e-4edd-4424-a9d2-a185547ee864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c5a0e-5f6c-42c3-be83-161537ca9751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d229c84f-9d03-4c65-8f3f-c82eada26520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92724f6b-122c-43b4-b790-f51ea6bf2232",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e299dfe4-bdb7-4e3d-832d-217fa55bd18c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b94fa4c-3bf2-4f94-972b-2715340e707f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc510b55-9614-407d-ba9b-615350f3a6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5475a804-5eb5-43a3-be6d-f5b0bd6e8195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8efec4f-95aa-42ba-aab1-4669048c101d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1190c60-bab2-424a-a5e8-5385956e5dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff962238-d057-4ccf-89c3-bbc0a0615c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0967fc-fda3-4c12-b57c-27e727c23938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374b4312-b0ff-407d-90b7-d821d99f9843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d2f6b5-2772-4a48-a686-711a56192e4a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d409aace-5b3f-4a73-88b3-ef09b8bbf297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70f7408-e3d1-4092-b25d-47b4ff503b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9d2f2c-7159-40ae-a373-134c19292044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c468f00-02df-487f-b7dc-7d586ed666a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6edbd8-9fdb-4f20-b25b-ba651e721bb1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45c5514-c4f7-4457-b652-db00cee06d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0465d99-cec0-4071-9c4f-6ae427aa81aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6414e6-4642-4a3e-ba88-307ea837965f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee8b687-928f-4e94-a709-6f4549ea7070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70af1fad-1ef8-41af-944c-572914836c81",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e0ac8f-8e52-4e65-8f7a-2e993d4fc01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f02069-259e-4434-9ff0-8b1df7df5653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de60366e-b9ad-46d9-a139-bb92caada9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5bacf0-808d-44bc-bf8b-cdada5df710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9f3f29-3542-4543-ba43-a095a0cf2385",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4595264-1b06-474b-8eee-cbc79ab77aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6259de83-5808-4292-9298-1b5712d95858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589cab64-0f4a-4590-ae3d-559e749686c7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815446c6-a02b-436f-8233-8e19f38f7ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e683fdc4-9d2d-458d-83c1-6fd09278e723",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885a0fed-dd87-4e4b-9351-66cdd2efc4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6adec04-f771-4c63-b99b-2919085d67ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1ee512-655c-4414-89eb-729104b712c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c911ed-713b-4671-a4ee-c6080d7c84fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c7ad1e-dfc1-4dfe-97f4-2cd0eacc7580",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c770724-35d4-4a49-83a0-430a28b5a649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fc868e4-6b61-4f6a-9dea-0d0657c44bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c2de5a-6406-435e-b442-102e5a820977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0bae98-fe7d-4f71-a5c1-b2a98b39d3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13322a85-3c38-46b4-90e2-eceb7853a63c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ae48db-dd22-43a9-a4d5-ee4aed976b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b788f084-a0ad-4fe0-927d-335177c0da40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891fb145-d5f0-41c7-8976-e60936c38b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7ed9c1-0731-4c1d-b547-c8a650f217e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316f02d8-b635-4a30-b9ad-0862d102f8c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cb8283-172d-4473-bc99-83a03bcbf02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc69ed3f-f4a9-49b9-b226-40614736342d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5ee08f-7826-4101-9330-5a78f643ce10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f9241d-2a3d-4849-9bf6-fc6bc73af0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3c7966-a917-48d5-92fb-6ff243adbfc7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8846726d-36b1-4be4-9ece-bd5b9a7a9593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb699552-e5f6-45ea-9ea4-e179f5cf29c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e046055-2350-4316-b003-14f768d03be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71801a7-2b03-45cb-8e69-ec32b97b5f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f95e63-79b2-47a4-a78e-7a596806930c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee833ab5-b1fd-4896-9d3c-c40afd13ae35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08148b22-bd0a-4a78-8143-a8d1f69d6dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33fcd31-2f00-4a10-b7af-3637055ab3fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3fe47b-0534-4354-878c-1980710b035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01888f13-55e8-4020-b6c4-49fc247ad4f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea49e339-68c1-4be2-9f9f-2e84ce728971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f287a2d1-a7c4-4e21-88b8-b33b6a14e158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe995b5-5c48-41be-9579-8d4eda0357a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2827df62-9ebe-44ce-b76d-ef0120eb6734"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98e32be1-cedc-475d-843a-7e9e4cd878d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "738aa11e-c593-4b44-9351-8216105d51e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0df0e2be-92c9-45ae-9368-81e24e66c153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54e5120e-2bf6-4f04-b9f1-2f8a01353655"
                    }
                  }
                ]
              },
              {
                "id": "df98b8bc-11f9-49e5-b398-0ba45ece18f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e63339c1-e26c-49d5-a73d-43588e2589a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5e233c-c83a-4054-af99-5a58cdc340bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c3664282-8ddc-46c8-a0af-0853c78ecfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa090c8e-9b53-421b-8d1f-b2bb1ee70966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9be43d27-87e6-43c5-9ea8-a0193c22fc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe95f68-7319-4724-96ae-84bd3ad26c46",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbf72dd-2010-4220-9c0f-17e0114369c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e1d9f18-fdb8-4587-9257-88de1ec21e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd3ebf8-5843-4c93-894e-c264b04b3497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c44e5313-d64f-454e-88ff-02314877d7a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43d52dc7-24a7-4c08-8f8f-165bfd2bbd30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c4b96a8-766a-42e7-bc1e-a5f1591099cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55e7c3ae-3185-4274-a4d9-6b3a9a925afa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "300c121c-612d-4816-a28c-6a8aa9805f08"
                    }
                  }
                ]
              },
              {
                "id": "04f09fb9-2fa2-404b-8fcf-adeb7d02b727",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c122acc3-ceb4-4230-95fd-31610c016a99",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f903d2-c454-4a54-9d62-332effc8f19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f6bf0d76-02de-4eb4-b04e-b0b5eecdbd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ee8fd5-504a-414c-8be1-f72f1a71f0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df24012f-de15-42fa-be41-a215afd24a16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b6f241bf-5d6d-4725-8a6f-7f59feb6d3bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "864fc373-c594-448e-9556-1b5f36218693",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6d7ad9f-1dbf-4f60-b550-b84fbdcb48c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "acee7203-a1ef-4f03-9dd0-83896f02cfe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24c429aa-f4d6-4487-ba6f-a88387de11d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e950b7d-2a69-480d-8a98-7d7a0d71ffed"
                    }
                  }
                ]
              },
              {
                "id": "07559418-24eb-43c6-a54b-99841ae038ed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6da5b025-29dd-4610-ba52-d1ee12231e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb409bf6-d724-4301-9ece-b081d71a90de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be52d9d6-d113-4d56-9401-dd3ad015cb65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4adb0616-c070-4bd5-a429-8ab43f0ce040"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8de810bf-071c-4bfe-aba5-c753072eba95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dd952aba-5054-453b-88a0-58146964e186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c63c4ec-eebe-4632-b02c-5b7fbccdb700",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff56d029-e190-4264-a9ad-5aab5d768e0c"
            }
          }
        ]
      },
      {
        "id": "362c29cc-dc7a-447a-a235-9aeb34d1e9ad",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "20ff2d6d-771c-4b3a-beec-e32518434738",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89099533-7460-4c95-9339-1e3672cad7a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e4ebb6-8a1e-41d6-bd7f-abf35fe467bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "14582e7f-5f7d-4510-a2ce-de3d604e5989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a203f1f-f437-4111-9ace-e65c73c31001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55b84b71-dce9-4441-b586-bfbe52b6c803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3a3a11-80a0-4a35-b33a-a954a03e9dfc",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1f113e-6e93-4e27-a841-34037ffee9f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "37737f17-82fe-4b6f-be45-739fc4422457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32fe12f-808c-4fa5-acb1-605e4940b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8a5487c-8d6a-4a96-a9c2-a0c91a3eb45b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6331b3b-33f9-4fa9-ab0f-697a65436693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6ea4654-0eae-4a73-bc87-724b2f84467a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db6ebefa-a0ce-4d4a-9564-20fe48716b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c52a29cb-5200-4213-9c74-961b8c1d0e8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac215c4d-d403-424d-a646-46e8805127ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5b82f4b8-bd3e-478c-bc49-31a32d2aa144"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "644f7b65-58da-4778-8054-0794ce56535a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8b11ecd-10db-4e42-9293-aabe8e966470"
            }
          }
        ]
      },
      {
        "id": "e565604a-e070-4fcb-808d-10f3352c6f21",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6597e120-bd3c-4a05-81eb-c7dd935532c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33660db9-90ec-4e2e-a6ca-584ebf2c120e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20a65e1c-1c64-444a-ae48-55e37cffdd2a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9916d-c778-4ef5-92ff-aa33729927ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "725221ec-cab6-4a94-8d61-4fa92f0ba37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e0372b-694b-475f-aea7-ffbbee1a0463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb2f300-edc7-4f83-852b-ea41e8c5041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b24771-82f0-41fe-bc72-204d93fb39b2",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a26a3e5-7cb1-4ca6-8bc7-3e8159a01c3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "26943618-fdc8-4779-a196-e8b2dc1f8b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8369f60-6a76-4844-9521-107fcb70126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6bdea9e-9c5e-42d3-8977-befa2c939899"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b64e85d-936c-4ef6-905b-20df53ea9705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa8e251-d897-49df-a5b1-999ee137b0e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "762eb9b1-b2da-4376-b38e-e90c4c9b3d9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "404267c8-e247-4add-b2c0-3460908bb739"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "793fb86d-2167-4074-9e4b-62d9eae2f29a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f0753e9-5ed8-4812-9f20-0d467afaaf92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efbdef91-053e-4589-95f3-3520b2446d84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a48f5224-7d36-44e0-94d7-fd3c151ed3d7"
            }
          }
        ]
      },
      {
        "id": "8f2fe72a-4820-4f85-bcae-c098ce2f885d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "908e6523-488c-40c6-aff0-021a224cc113",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78777d8f-89b0-468a-9e34-7ceb23195ad9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35d0553a-f12f-40ea-97d7-674d2f13d08d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd00a8f3-fef2-4f70-8581-f03cf7083c2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e98045-1801-45cf-9b20-301c3f6569b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba0890c-37b3-43fe-bb50-aee3db847c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a52c50fe-b9be-4738-9449-a06d072efba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59de4a2-7e46-4fb8-8627-2c2715a8231c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b702fba0-f5ff-473c-975b-e91606451dd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9049a8-2047-4637-adc6-37dc20f5f093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284d9367-0bac-4bed-abbd-f505a4cc3584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f229c79-ed75-415c-b47d-8391d180899a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c88f8ae7-8206-4352-8580-bafba8477aad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9865a261-1f76-4b31-9810-53dbf857a578"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbf73091-08ea-4d5a-8add-8b85355bee5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a4a19cc-21a7-438e-a6f8-5444e00cf282"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87b2b99c-859f-4c9a-96ee-1c3188a5ae1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13832818-6e0a-4b96-90f0-d61434d40514"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab4ac505-ea6a-4d15-8240-c82587aa4a05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2861561-b668-4f2d-8a0c-f3c274a1196a"
            }
          }
        ]
      },
      {
        "id": "bacb8568-2449-473c-ae42-df49e7d012b2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd2ea28a-46f0-4513-b769-93b719b80b7e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "756307db-35b1-4b57-8907-2ece89caaf28",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c1ff2ef7-41fb-487f-9ce8-8ffd3cecb058",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a37c43dd-37d3-4dab-8418-677ecca4d551",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acdc4e43-d7ba-4b75-8499-5ea69f208656",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 939.9884615384614,
      "responseMin": 21,
      "responseMax": 11177,
      "responseSd": 1275.5286309324467,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680827580614,
      "completed": 1680827835710
    },
    "executions": [
      {
        "id": "1ef74148-178e-4da6-b733-c70f6073056d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cc20fb98-2f11-4921-95b6-515a5ea64aa5",
          "httpRequestId": "67006034-1d10-41c2-802e-3be2630f1735"
        },
        "item": {
          "id": "1ef74148-178e-4da6-b733-c70f6073056d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d1869aa-7349-4f7c-918a-ee44b09de8d4",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "5bab52ec-f24a-4869-ab65-49603e78fc00",
        "cursor": {
          "ref": "a91d1215-1a5e-469f-8aee-b3937c3b76ce",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5bdc4c60-382a-49fd-95c7-0ca98f7f7803"
        },
        "item": {
          "id": "5bab52ec-f24a-4869-ab65-49603e78fc00",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1cd8dbcf-7b60-42f6-8824-139748b06447",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "97db3340-9996-4be3-bf68-9fe01dda688b",
        "cursor": {
          "ref": "df58a311-64e9-410d-b697-f4fee79c0c62",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e13e3a8b-1696-45ef-b608-af3383be627c"
        },
        "item": {
          "id": "97db3340-9996-4be3-bf68-9fe01dda688b",
          "name": "did_json"
        },
        "response": {
          "id": "fbd97af5-0176-440f-9bc2-803c8c2e1ec9",
          "status": "OK",
          "code": 200,
          "responseTime": 2853,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1987ef8f-366e-4368-bdeb-3fa73d6ac37a",
        "cursor": {
          "ref": "9212a2e1-5928-4140-9c4d-01c150ae4e5f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "42107258-7ccf-46bd-83f4-70b8ed30a22d"
        },
        "item": {
          "id": "1987ef8f-366e-4368-bdeb-3fa73d6ac37a",
          "name": "did:invalid"
        },
        "response": {
          "id": "f712ce09-593c-46a5-bba5-6f1eab933cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2213,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1987ef8f-366e-4368-bdeb-3fa73d6ac37a",
        "cursor": {
          "ref": "9212a2e1-5928-4140-9c4d-01c150ae4e5f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "42107258-7ccf-46bd-83f4-70b8ed30a22d"
        },
        "item": {
          "id": "1987ef8f-366e-4368-bdeb-3fa73d6ac37a",
          "name": "did:invalid"
        },
        "response": {
          "id": "f712ce09-593c-46a5-bba5-6f1eab933cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2213,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2563a853-1dc2-42ca-a106-a2f720a6556c",
        "cursor": {
          "ref": "e17292b4-70a8-4cc8-9f9a-e6a72db26904",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "91f9174d-ecec-4350-868f-0d85f8c4881d"
        },
        "item": {
          "id": "2563a853-1dc2-42ca-a106-a2f720a6556c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ffa9ee22-9c2f-449c-bce8-9c5330e27ca3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2814,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae243b6c-734d-4ad6-ad45-099cac58fb0a",
        "cursor": {
          "ref": "9b2ad197-fbbc-4597-9c83-8b554c0a9d76",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "83bd3cc5-9280-4086-8ca5-fa4f6ccb5cfc"
        },
        "item": {
          "id": "ae243b6c-734d-4ad6-ad45-099cac58fb0a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3d809ca0-0666-423c-9c73-59545730d4a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1225,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879bc6f1-1265-45cc-947a-12d9955c0232",
        "cursor": {
          "ref": "9f1ff22d-09b5-49aa-9f33-287525ced00c",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "44f3a745-69c7-40cc-bbe2-c921f8d1f514"
        },
        "item": {
          "id": "879bc6f1-1265-45cc-947a-12d9955c0232",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "36958f59-aad7-4aac-889c-f1228cf8b11f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa01fdc-9205-4b2f-aea0-d482b31b8c34",
        "cursor": {
          "ref": "b2057447-0ee8-47ec-8eb3-a8b153398ad0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "204476de-1c90-4621-90a0-915879e48df7"
        },
        "item": {
          "id": "3fa01fdc-9205-4b2f-aea0-d482b31b8c34",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5b669065-0dd1-42aa-bb29-426777d81e3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1061,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa01fdc-9205-4b2f-aea0-d482b31b8c34",
        "cursor": {
          "ref": "b2057447-0ee8-47ec-8eb3-a8b153398ad0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "204476de-1c90-4621-90a0-915879e48df7"
        },
        "item": {
          "id": "3fa01fdc-9205-4b2f-aea0-d482b31b8c34",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5b669065-0dd1-42aa-bb29-426777d81e3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1061,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f727df6f-c66a-4fdd-a81b-4bb25accd598",
        "cursor": {
          "ref": "d93bf5f4-c862-4811-a7d9-7825230af826",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ee2a639-8416-4dbc-ac96-799731e6ff4e"
        },
        "item": {
          "id": "f727df6f-c66a-4fdd-a81b-4bb25accd598",
          "name": "identifiers"
        },
        "response": {
          "id": "2480e821-e054-4d0e-958e-633057e444e3",
          "status": "OK",
          "code": 200,
          "responseTime": 1339,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f7a3c2-fa11-493e-8ba6-a5d5ff3b0ebd",
        "cursor": {
          "ref": "28d32841-5127-4c09-90bf-0816a76f7e72",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2efa2d23-33d7-49e3-8e40-d1ee60fac64a"
        },
        "item": {
          "id": "b7f7a3c2-fa11-493e-8ba6-a5d5ff3b0ebd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e81be85d-cdc1-49f3-b216-0d60f408bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f7a3c2-fa11-493e-8ba6-a5d5ff3b0ebd",
        "cursor": {
          "ref": "28d32841-5127-4c09-90bf-0816a76f7e72",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2efa2d23-33d7-49e3-8e40-d1ee60fac64a"
        },
        "item": {
          "id": "b7f7a3c2-fa11-493e-8ba6-a5d5ff3b0ebd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e81be85d-cdc1-49f3-b216-0d60f408bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5278a7d1-d623-4052-821a-2a178653b0c1",
        "cursor": {
          "ref": "e11cbb41-57a0-4011-88f0-895a8f91865a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b4f7bec9-9653-4b44-be0e-accecaa5430b"
        },
        "item": {
          "id": "5278a7d1-d623-4052-821a-2a178653b0c1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b7954779-1769-4906-ad70-446ce77fa9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b82aa-9639-433e-8ed2-fc8856f17299",
        "cursor": {
          "ref": "18947f88-57bf-4dc3-88d1-9e6795875333",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "604788ab-f67b-43bd-b80d-387c8db0cad4"
        },
        "item": {
          "id": "d03b82aa-9639-433e-8ed2-fc8856f17299",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "58d1495b-e272-4f6a-8a78-ca31e1c648b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae367aa-005f-4abb-962f-b6ef16957cf2",
        "cursor": {
          "ref": "f9d71413-f4ad-4f17-b4a0-f3d112f909ee",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7cdba779-a6d1-44d1-85d4-6ad0c19cde81"
        },
        "item": {
          "id": "7ae367aa-005f-4abb-962f-b6ef16957cf2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "90a58b64-0b66-492d-9917-487e9cba87db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1427,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8421eef-6571-4777-9a80-c56ea988c4ec",
        "cursor": {
          "ref": "4bf8103a-1e30-4ac8-986d-fb0b25aadfa9",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e763fe08-646c-4508-b0ff-8944a16b9cbe"
        },
        "item": {
          "id": "e8421eef-6571-4777-9a80-c56ea988c4ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cd425375-a370-4fb5-add7-1cf509da8c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2411,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3ce1fb-4ffa-4d8a-b0b2-53756c97041e",
        "cursor": {
          "ref": "93c09997-b23f-4045-b7a3-789fd7bd28e2",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "851b37ad-0044-4206-97de-bf832399ff3c"
        },
        "item": {
          "id": "8f3ce1fb-4ffa-4d8a-b0b2-53756c97041e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "baa9c857-10a9-42fd-b5ab-bd570efc2638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1898,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd61fc2-e795-4130-88b5-bd25d8c7de0d",
        "cursor": {
          "ref": "282e1f18-a6e3-4545-b275-cb3e755f176a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c576b25b-1209-4f34-9556-720ad4718b1a"
        },
        "item": {
          "id": "7cd61fc2-e795-4130-88b5-bd25d8c7de0d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "af504e84-3764-4205-be2c-1a49d0866869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1689,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cf8112-63b5-4f0b-951f-656cd0c8fa6d",
        "cursor": {
          "ref": "8a886d8f-e928-4dcf-9666-e5b0752f8565",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04c34fdc-9b48-4ae5-9e1a-10bf6b85381a"
        },
        "item": {
          "id": "99cf8112-63b5-4f0b-951f-656cd0c8fa6d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5807b9d8-cb97-4278-9fe4-eb9f6ba6d603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1420,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5af239-7248-430d-b293-c6415ae04b5b",
        "cursor": {
          "ref": "827bd241-3b60-4d35-8dab-7927ce0941ce",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8cb6a54a-5582-42ae-96bd-49b798a13cb7"
        },
        "item": {
          "id": "3f5af239-7248-430d-b293-c6415ae04b5b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f19fc50b-ffb7-4d7d-b320-182f2b58b5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeffb1a0-3e52-48e1-9d69-4870fa838541",
        "cursor": {
          "ref": "657bf396-23a9-418f-ba2f-f3c0b2927c43",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3e8686c4-30dd-4845-a5f2-3b5ff8d9e950"
        },
        "item": {
          "id": "aeffb1a0-3e52-48e1-9d69-4870fa838541",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "add63eab-9e23-4610-9415-a8fd3e4acead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec8709f-47a2-4fac-af95-a3db5449f719",
        "cursor": {
          "ref": "dcf0d056-38ae-47c1-bc74-de5bcb52527f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cc790c57-dc61-4d27-bab8-fb4b50ecaab2"
        },
        "item": {
          "id": "5ec8709f-47a2-4fac-af95-a3db5449f719",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b1f852c9-32d8-4d52-ab33-69fbf967db7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180ce7fd-0846-4aeb-9975-b55379b17d8f",
        "cursor": {
          "ref": "b0f9b782-bf7e-49a8-83d4-064e907ca463",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3bb1c6b0-c8c9-4809-af8d-50a7a513e865"
        },
        "item": {
          "id": "180ce7fd-0846-4aeb-9975-b55379b17d8f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "599c09cc-9c91-4d72-aade-23770490cb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f0480-a723-438d-bb2e-8da2fc8bffd7",
        "cursor": {
          "ref": "10249c5c-de1c-48aa-ba6d-2c39e543b4c1",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b99f69b8-ed7b-4ac8-a161-8885ab4e2b2f"
        },
        "item": {
          "id": "dc3f0480-a723-438d-bb2e-8da2fc8bffd7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "90ce8651-d674-4ddc-b617-80c16867fb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b7c58c-48bf-499e-9285-88ca289f7e2d",
        "cursor": {
          "ref": "6538136f-3e39-42f7-adf4-75dc67e00303",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "537cd496-3a41-4f76-8556-3f15f5c5e7d0"
        },
        "item": {
          "id": "82b7c58c-48bf-499e-9285-88ca289f7e2d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0e3f4fbb-c55e-46d3-95e9-2376a58930de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f45de9d-5ff1-4bb4-8b26-9a55926b4154",
        "cursor": {
          "ref": "016ec657-f4be-4411-95ab-c591946e6ea7",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1d0f3015-45a5-4d57-ba6d-859284504975"
        },
        "item": {
          "id": "4f45de9d-5ff1-4bb4-8b26-9a55926b4154",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e9af57b-6b31-4c9a-bbe7-7f8e487e4a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2824dcdf-5b24-48ca-be6b-e08b98b7aac1",
        "cursor": {
          "ref": "91b816ab-7622-43f3-8864-4894f8ee30c0",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eea1e3e2-d5f9-4a81-99f5-ffb732694a0d"
        },
        "item": {
          "id": "2824dcdf-5b24-48ca-be6b-e08b98b7aac1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5a51f856-c4e2-4ed2-8cce-408f9136f8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56914fb7-d2a0-4eaf-8058-cd68594af87b",
        "cursor": {
          "ref": "1a31cc5e-a0df-4281-99bf-01b1153919c2",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f363af5c-69e1-43c4-93b7-da5d133532b8"
        },
        "item": {
          "id": "56914fb7-d2a0-4eaf-8058-cd68594af87b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "10188079-1068-4398-bfcc-321d1ae4c757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd4c1a4-2fbf-40c4-b3d6-0ce70c7b564d",
        "cursor": {
          "ref": "b8375f5c-3329-413f-8fcb-7676bb3a73ca",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8bec4ed5-c3d2-4570-8fcb-abfae54db2a1"
        },
        "item": {
          "id": "4fd4c1a4-2fbf-40c4-b3d6-0ce70c7b564d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c3556436-da98-4517-9935-fd6fe06645cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf95ad19-0206-4ec6-b36e-2647ac8b206d",
        "cursor": {
          "ref": "2d6116fa-7e1d-4004-83ee-99ad7be53b51",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4ef9b508-7b4b-4b56-9304-b5344f82f8f0"
        },
        "item": {
          "id": "bf95ad19-0206-4ec6-b36e-2647ac8b206d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "487b7f89-a5e5-4cb1-88f7-abc1003480f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0beb54e-1d37-4ee9-955e-c5707ee373ae",
        "cursor": {
          "ref": "3f3bc94f-385b-401e-a9b6-9e11f9ed86f3",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "85fb8bb6-4bd1-43f8-97e8-bf7fe43def87"
        },
        "item": {
          "id": "b0beb54e-1d37-4ee9-955e-c5707ee373ae",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "80297e93-fcf1-4c87-a2eb-f160a75951ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93994f6-9493-4c8a-8aae-b0699f917175",
        "cursor": {
          "ref": "ff3c7bc4-ea7e-4869-a812-e10a3d67a2d7",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8b409ed9-0463-4ecd-955b-5eb81336d2e4"
        },
        "item": {
          "id": "f93994f6-9493-4c8a-8aae-b0699f917175",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5a7bb53-9ada-430a-b8c5-50b199c6d012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a48e49-47c5-4f37-ac22-0c4147fc53db",
        "cursor": {
          "ref": "ba609176-0114-40e6-b7c5-2ca2b45e8dda",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d7d5539-2491-4730-97d8-8a5eb26d4ca3"
        },
        "item": {
          "id": "99a48e49-47c5-4f37-ac22-0c4147fc53db",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6f69a32-66d9-444e-9e1f-3a3f6cfbe691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5882639-bb47-401a-8313-a2095ef60972",
        "cursor": {
          "ref": "84383f8b-8ffd-4ee1-b7ed-d45a0313e982",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "048937ae-1935-41e6-9ee9-66e15869e2cb"
        },
        "item": {
          "id": "a5882639-bb47-401a-8313-a2095ef60972",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1b128dc4-99f7-435c-8017-862044a4b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a198fd2-d9d8-4bda-a4c1-efbb5e482bbd",
        "cursor": {
          "ref": "54115635-d7ec-45dd-b55f-1296ad4803a5",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1f76aeaa-b6f5-443f-99f7-11486547d037"
        },
        "item": {
          "id": "5a198fd2-d9d8-4bda-a4c1-efbb5e482bbd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9d561158-2059-41a7-ab5d-ad20ede3367e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e10a2a-a431-46c1-96de-3786e5248047",
        "cursor": {
          "ref": "627acd19-6cd1-450b-abef-2ab2b2ff0501",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "17672b47-be4f-404a-838d-25aaa10d6e36"
        },
        "item": {
          "id": "b8e10a2a-a431-46c1-96de-3786e5248047",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1c01f2ef-491d-462c-845e-8a3b6345be37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5476c5a7-1ed4-4147-adbf-4d174e03b4d9",
        "cursor": {
          "ref": "505986cc-f8d7-40ad-b11e-8b46757666a4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da67c566-fe1c-46c2-b115-858bb6c8bc66"
        },
        "item": {
          "id": "5476c5a7-1ed4-4147-adbf-4d174e03b4d9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5892aaeb-fae6-4407-b559-e3d19ee68739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1a9c00-e89b-441c-af36-250508435fde",
        "cursor": {
          "ref": "697654ec-84c8-4048-9d56-a23245a06490",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b1e32104-ebde-41b1-93ef-da71e769b795"
        },
        "item": {
          "id": "1d1a9c00-e89b-441c-af36-250508435fde",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "94cf9e67-9aa7-4d85-aec2-f995f5444645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa08908-9b5a-4e69-b4ba-917e0a476e1f",
        "cursor": {
          "ref": "deda51a0-a755-4a7c-a91b-73ecec7f1955",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1116f4f8-9014-4646-82ca-ae734c43fd85"
        },
        "item": {
          "id": "eaa08908-9b5a-4e69-b4ba-917e0a476e1f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d9a8063b-71b3-4200-a5e5-fe86040fd258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9845f5fd-b268-4bbc-8e52-7e22f125df6a",
        "cursor": {
          "ref": "4a4fd188-6d10-4813-bf48-b4dd86f2d826",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "97a3366b-a31b-4305-a1c6-6af344700109"
        },
        "item": {
          "id": "9845f5fd-b268-4bbc-8e52-7e22f125df6a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aa3abe71-30ca-4307-83cf-03ddce008753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4c4964-30ee-4826-b29b-08186a393b21",
        "cursor": {
          "ref": "fb4af980-825f-431d-84a5-8e7cb54e0ba1",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4d4dc42c-e53d-40c3-ba63-756e8ae4d096"
        },
        "item": {
          "id": "3d4c4964-30ee-4826-b29b-08186a393b21",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "053c233c-dc84-4bae-8532-c13608ed111a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeacb5e-5f2b-4323-ba53-68a6d6ac1646",
        "cursor": {
          "ref": "ca293083-df82-4114-a601-deadfc4e967d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c3c3ca9-371d-463e-bf62-9fa767a5c8c8"
        },
        "item": {
          "id": "bbeacb5e-5f2b-4323-ba53-68a6d6ac1646",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "516a052f-f126-44d3-a66f-97e3bda3fc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8866fc8b-b1f3-491b-9048-6f16ee5f025b",
        "cursor": {
          "ref": "559dc5fd-9683-4227-9c3e-e965025de5e5",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "db9f71cd-4d04-417d-b7a2-d78808f8a22f"
        },
        "item": {
          "id": "8866fc8b-b1f3-491b-9048-6f16ee5f025b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6d02387d-e22c-4747-93d0-a2fbdab0f953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef706ef-c7c1-4c69-9333-41994bd59d4c",
        "cursor": {
          "ref": "740dbbed-408f-4d29-a596-4a1b72d5473d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1719473f-8ac0-4fa0-90bc-4e5acd64f1b9"
        },
        "item": {
          "id": "7ef706ef-c7c1-4c69-9333-41994bd59d4c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "220d91eb-50cf-4d38-ac61-7b6d22815990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1f3944-d166-49c8-89f1-6b4e49aa5dd2",
        "cursor": {
          "ref": "8e8433d4-8106-4e1f-99ce-e296e94c770d",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6ac8c085-0ad5-4a08-acbc-00217e39988e"
        },
        "item": {
          "id": "8a1f3944-d166-49c8-89f1-6b4e49aa5dd2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "95eedb4c-b674-42d0-8d5d-e015b0f6bdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f94a1b5-7053-42d7-89aa-ea0624dff59e",
        "cursor": {
          "ref": "b48f9ffd-71de-4143-b775-8527b8c2545f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1d326d9c-025e-406c-b38a-4da7ba4a8b1b"
        },
        "item": {
          "id": "3f94a1b5-7053-42d7-89aa-ea0624dff59e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e84976f0-9ba7-4b45-99de-22e33d58f99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02877c45-18df-4643-82b1-972beccec110",
        "cursor": {
          "ref": "5471d718-498a-4883-9d06-03b15a791be6",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0be11f20-a109-4ede-9cfd-9f75a12bf421"
        },
        "item": {
          "id": "02877c45-18df-4643-82b1-972beccec110",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1918ac1e-5091-4939-85fe-936fead95c25",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 851,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0becd8c-b379-4f52-8300-5ce4b78da6a2",
        "cursor": {
          "ref": "61f8d0d3-9ac2-4f48-9747-8e31bc25e4b6",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8671e745-b6c9-4996-a7a9-9604a8790034"
        },
        "item": {
          "id": "e0becd8c-b379-4f52-8300-5ce4b78da6a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36171fe1-f6d2-43aa-b528-00a1f53e7d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae29387-b733-4bfa-8e7c-22fb07c052cc",
        "cursor": {
          "ref": "51d702ad-89e0-497b-ac80-0d98ad95c513",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6bc43a65-d67b-472b-b129-7adb0815bc6f"
        },
        "item": {
          "id": "0ae29387-b733-4bfa-8e7c-22fb07c052cc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "176d1dae-7e60-4d77-bb7a-eba6b78cf450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d76913-0c96-435d-87d7-2e2821f4ace8",
        "cursor": {
          "ref": "c08c0fb6-f34d-4879-8492-1ebfc7daa47c",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "475c65bc-f33c-4921-84b5-9ffe1e39461a"
        },
        "item": {
          "id": "58d76913-0c96-435d-87d7-2e2821f4ace8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9be395bb-2cd2-4a4e-98e2-5ca58e896a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e036331-febc-488c-958e-039248304c72",
        "cursor": {
          "ref": "10b9f562-543a-4141-8b37-b92ec622285f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2ba9a71f-1570-41f9-b779-14baa4c1ed46"
        },
        "item": {
          "id": "8e036331-febc-488c-958e-039248304c72",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d25e84dc-15a0-4487-894c-4e98d0f7f08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a589e06b-1894-4a1e-b302-88f2edcfeb98",
        "cursor": {
          "ref": "5e7e7c6d-a2c6-4aa6-95cf-a0d32359d9a5",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4bc7017e-b0fa-4608-ad64-3eebb3b7db85"
        },
        "item": {
          "id": "a589e06b-1894-4a1e-b302-88f2edcfeb98",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "30ffe158-70f8-4fb5-854c-8e99e005c535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5286b300-e868-4de5-9c41-b0b87e34bc7b",
        "cursor": {
          "ref": "cf8f0499-44df-4a9f-9517-606cb1ae5057",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "02843045-f9a5-4b5a-99df-c4857f9049fe"
        },
        "item": {
          "id": "5286b300-e868-4de5-9c41-b0b87e34bc7b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1f4b4d30-e2a9-4bad-9e2a-dafe472aa97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54427b1-49b6-49a2-aa59-c8717caa0cae",
        "cursor": {
          "ref": "819f6a84-0879-4f68-a833-a172760a9b54",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e39753f-a0cc-41c9-bddf-ebf9007435db"
        },
        "item": {
          "id": "d54427b1-49b6-49a2-aa59-c8717caa0cae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a0e8b364-594b-47c9-9bbc-3b038a815fae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 746,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922400bd-a450-4c2f-9bd5-82532f9457b1",
        "cursor": {
          "ref": "4a1b1925-9a0c-45ef-a266-34a542696fab",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "08847c52-4c74-4b6d-bbef-d1b8b8a13a1b"
        },
        "item": {
          "id": "922400bd-a450-4c2f-9bd5-82532f9457b1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8f208c02-2d79-4abf-bab0-12f178d49864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d920fb-5101-4efa-a0e5-22df762923a8",
        "cursor": {
          "ref": "6cded22f-6abd-4fbf-993f-a37d9f61f7f9",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b280d370-a761-467b-979d-04c39a0bf655"
        },
        "item": {
          "id": "82d920fb-5101-4efa-a0e5-22df762923a8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e82b8ba3-498e-4fcb-b6d6-a06f3eb56fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b23c002-d8c0-4450-b2c5-24ee35321c0a",
        "cursor": {
          "ref": "e27a9468-1bde-4a85-b78e-a4bd10307755",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dfae5452-2c42-4666-9107-bf959d9fc757"
        },
        "item": {
          "id": "1b23c002-d8c0-4450-b2c5-24ee35321c0a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3d026e5d-a5ab-4339-a7b7-6ce0f9515411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f4df30-249f-468e-809e-120bd870f2f3",
        "cursor": {
          "ref": "e6da9a5c-dfc4-46c8-a792-c8a560ed4525",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6c6efa9b-59ab-4082-95d2-ae95c3d1a143"
        },
        "item": {
          "id": "d0f4df30-249f-468e-809e-120bd870f2f3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f3ce2681-7514-4218-bc4a-d5439105c7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68672a88-0855-43aa-8101-85dfdde9befb",
        "cursor": {
          "ref": "c833d463-d611-45ff-bf45-39fe72d75246",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "853f83fc-0322-4ff8-bd5f-384222471b3f"
        },
        "item": {
          "id": "68672a88-0855-43aa-8101-85dfdde9befb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "45c2090c-e197-480a-88b4-c05f1a9426d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef4818a-4ff0-4ae9-8bd6-fab603358e1a",
        "cursor": {
          "ref": "1f98c8c6-2627-43ad-a1d5-cc8a740bce71",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e5609894-5392-4dcd-8234-7cdee1cb7008"
        },
        "item": {
          "id": "6ef4818a-4ff0-4ae9-8bd6-fab603358e1a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6e80f311-e6b8-4919-8458-a61eb5f31872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d71b90-adf4-48e0-936f-30799cda8abe",
        "cursor": {
          "ref": "09259f05-6271-471e-8b43-b0fa0455d155",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7082350b-cbe4-4583-80a0-2c6b8615da60"
        },
        "item": {
          "id": "63d71b90-adf4-48e0-936f-30799cda8abe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cd1d3250-18dd-4c24-85b5-f936de71f3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813a9b1a-0cf8-438b-b70f-83e232cea5b8",
        "cursor": {
          "ref": "6055cc33-6a65-40c3-9e13-f6ec116c8a8d",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "664a4988-5309-4e3c-93f0-de4181824c71"
        },
        "item": {
          "id": "813a9b1a-0cf8-438b-b70f-83e232cea5b8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "32162ba7-0d61-4c51-a346-9ea65fac92d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a40dbb-81be-4433-ae92-3b20567a27c2",
        "cursor": {
          "ref": "0a0adb6f-075a-4f6f-9a31-fbe8951e620d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ace63855-7782-4641-81d1-847d442b74e0"
        },
        "item": {
          "id": "06a40dbb-81be-4433-ae92-3b20567a27c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0a7708e8-55e3-4aad-a9da-9a5e8f8f4980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feae2745-aa6c-4560-99d0-6448454d016f",
        "cursor": {
          "ref": "b55606ce-2a25-4a33-af26-f3e16e774198",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "726d0cab-31cf-45a7-a32a-eb751e3cd5c2"
        },
        "item": {
          "id": "feae2745-aa6c-4560-99d0-6448454d016f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e543466-669b-4ecf-b93f-ace6a078fa16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6ca5eb-876a-48e5-b68c-47b6c11a7648",
        "cursor": {
          "ref": "9b23063e-35c3-4b48-8258-6dcf739a4629",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8ec9736a-67cd-4849-a98b-b721491e4d16"
        },
        "item": {
          "id": "3b6ca5eb-876a-48e5-b68c-47b6c11a7648",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8f81b17b-0819-4c21-82e3-eb0224a3013f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e4e956-d4ec-4568-bfa7-eb14a03e3610",
        "cursor": {
          "ref": "cbf86701-fcdb-4aa9-a72a-e9d9afca7c89",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8e00b5bc-77ee-482c-a5ac-481456720f68"
        },
        "item": {
          "id": "05e4e956-d4ec-4568-bfa7-eb14a03e3610",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c7f37fb5-6d46-485b-bbc9-02e96ac9cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3c6462-42c9-440f-90a1-65a294deb790",
        "cursor": {
          "ref": "5ffcdad7-6522-4a65-ae61-af02c73fc928",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a144bde3-bd2d-4e3f-8204-4678c4d657b2"
        },
        "item": {
          "id": "1b3c6462-42c9-440f-90a1-65a294deb790",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "578431b0-f665-4689-a0f3-2235f4e80070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952a6a24-d7a4-4b92-9c0e-fc41893ac1c3",
        "cursor": {
          "ref": "068ff2c2-4de1-4496-bc63-6e0c8472e4da",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7f73d6d3-d213-48e4-8ded-c0864061554c"
        },
        "item": {
          "id": "952a6a24-d7a4-4b92-9c0e-fc41893ac1c3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "403da678-58ba-44c7-a732-46ceefa22a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9f57f-a80c-456a-af71-f8ea077b1408",
        "cursor": {
          "ref": "a028d764-a050-4eb0-b2b9-b8049aaeb1e7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b02c4f25-e892-48b1-b7bb-555d004321b0"
        },
        "item": {
          "id": "2fc9f57f-a80c-456a-af71-f8ea077b1408",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5480c409-2f1c-4729-806b-2cab215440d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7889de46-e2e0-4b2b-a737-edbc3fadb065",
        "cursor": {
          "ref": "e93315a2-7acf-40c2-94e9-cd9bfde806ef",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f17481ae-51ab-4ff2-ad4f-2c3373359eb9"
        },
        "item": {
          "id": "7889de46-e2e0-4b2b-a737-edbc3fadb065",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3ff536bb-0542-46ad-8e7a-f4ca1c14fb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9912971a-21a2-47cb-8cc8-f986d2c3ebe7",
        "cursor": {
          "ref": "51061a45-8133-4edd-a8cd-1f91b813b1fb",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7a80dc21-f469-4727-a34c-f926998fe6e5"
        },
        "item": {
          "id": "9912971a-21a2-47cb-8cc8-f986d2c3ebe7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "39630db9-ccc8-433c-8206-32fc64458c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b5ec8c-0774-45d3-8468-3cab2f1bb688",
        "cursor": {
          "ref": "b2390188-edd3-4105-b011-a229714204d5",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "345cc282-69e9-4f33-80d0-a6bab6833bcb"
        },
        "item": {
          "id": "34b5ec8c-0774-45d3-8468-3cab2f1bb688",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4b333e28-f9d0-40f3-90ea-3a8a3ca0f353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5f7c81-9afe-430c-bb2a-27070c56ed51",
        "cursor": {
          "ref": "a5a97bf4-3fde-4437-9c8a-701638cbcbfd",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0c28a988-ee2b-4697-93ea-dc59eeb7aa55"
        },
        "item": {
          "id": "df5f7c81-9afe-430c-bb2a-27070c56ed51",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f5e7db93-e179-4bc8-a71c-ca1933b69b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1320,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ff8a9e-c8bc-418b-ba12-90f7fe60a4eb",
        "cursor": {
          "ref": "2aaa7486-cf65-4330-b01b-775a5801ff8b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e9d8c989-d471-4d87-90a5-0ef1189cd0f7"
        },
        "item": {
          "id": "72ff8a9e-c8bc-418b-ba12-90f7fe60a4eb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "238e70b2-470a-46e3-bee8-76d32b5f8ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1191,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee62ebd-f068-4efa-a89f-709562736019",
        "cursor": {
          "ref": "73bf5ac0-7a3f-423d-8270-cbc5422c5317",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "88913751-f2f8-40c9-b769-4ae796a5707b"
        },
        "item": {
          "id": "cee62ebd-f068-4efa-a89f-709562736019",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81e0c344-5bad-43bd-9ed6-64bdebc48fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1174,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53786bc-f95d-4793-a7cc-9eddcd21dcc6",
        "cursor": {
          "ref": "5992976c-4698-43df-852e-bc455b108ef0",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff72c686-649d-432a-8343-4378db38a37b"
        },
        "item": {
          "id": "d53786bc-f95d-4793-a7cc-9eddcd21dcc6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a9a18048-e989-47b8-8c7f-35a9afa425a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d96c21-fefb-4232-b870-3b6fd9a4d694",
        "cursor": {
          "ref": "fde6724e-5094-4376-a619-18017f4d9a48",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e4941503-5727-47b6-92d4-a5d2eefe924e"
        },
        "item": {
          "id": "57d96c21-fefb-4232-b870-3b6fd9a4d694",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6670e100-1c12-4634-98c7-e59fbd2a86e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3958a3f3-cc6d-4143-add3-7ad373d5014e",
        "cursor": {
          "ref": "56e1d570-eced-4119-94d1-976b516b6ece",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3232aaf3-e90e-4e92-a665-2c5d779667ea"
        },
        "item": {
          "id": "3958a3f3-cc6d-4143-add3-7ad373d5014e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c520d3f6-04b6-47ac-a366-f121bd6d087c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8caf487-8048-4d88-9626-5648f2da8502",
        "cursor": {
          "ref": "5182cdb8-48eb-4817-817e-260525d363df",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cb2d3b05-0831-49eb-8d3f-f2f27df12d51"
        },
        "item": {
          "id": "c8caf487-8048-4d88-9626-5648f2da8502",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dacc2318-b44c-4d82-9e89-efadd5fb508d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0120f9c7-c00b-4d50-bda8-e1e883b5a7e5",
        "cursor": {
          "ref": "17377d0e-02b7-45fd-a725-2c5b1cbf821f",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "daed9263-33a3-4a6f-9b29-6931701bcb78"
        },
        "item": {
          "id": "0120f9c7-c00b-4d50-bda8-e1e883b5a7e5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "414285c5-5e6d-4047-bcba-6354516fc7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa1c85-9824-4d7f-b02e-144bb371a4fd",
        "cursor": {
          "ref": "2933c7c9-07bc-4cb2-b809-3c23a34a3b44",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "77d620d8-4cc9-4a2c-a25b-96e3692e1b9b"
        },
        "item": {
          "id": "8faa1c85-9824-4d7f-b02e-144bb371a4fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a56318c5-931f-4eab-8240-34e504d48a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5900b2d-3501-460f-9207-6d36dc5d9575",
        "cursor": {
          "ref": "1d46e69a-175e-4f9d-ac01-96f1d1d4079f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc1add58-6312-48a8-a747-186a96cd7ca4"
        },
        "item": {
          "id": "f5900b2d-3501-460f-9207-6d36dc5d9575",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "84b7400e-5f1b-4dfd-a9da-b15376f48204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc35429-e394-4c2a-9dc7-1f12595ea573",
        "cursor": {
          "ref": "a206348e-8f2b-4c99-b62f-510a62736bae",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ae952a32-f76f-4909-9126-cb34413146c5"
        },
        "item": {
          "id": "2dc35429-e394-4c2a-9dc7-1f12595ea573",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "36d9721e-66c7-42c8-b714-8a69258ea616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1040,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5d906-f6f8-4dc1-a4f6-72a8b65c28ed",
        "cursor": {
          "ref": "7bd983a0-52bd-49c4-94f0-36052a06bb19",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1078cac7-86ac-484f-8353-d44517dd9927"
        },
        "item": {
          "id": "69c5d906-f6f8-4dc1-a4f6-72a8b65c28ed",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f380b6d3-b397-4d11-89c5-ba6d31897015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c8dc55-be2f-4408-a3e8-0840a487beab",
        "cursor": {
          "ref": "29225547-a41b-404b-be32-59f214b8603b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "97e8245c-c5b8-4dae-8bb2-03036a36fc13"
        },
        "item": {
          "id": "01c8dc55-be2f-4408-a3e8-0840a487beab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d380771b-554a-4157-b877-c477784cafd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1290,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e081232e-9fab-4ec2-8a38-3edf5f884421",
        "cursor": {
          "ref": "9d459403-31ff-4252-a226-bdd114ea5a41",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "10d21188-14ce-4b35-8768-ef1ac2b7bed3"
        },
        "item": {
          "id": "e081232e-9fab-4ec2-8a38-3edf5f884421",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c40c3803-fde8-45ef-87f5-31bccc75a631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1317,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b580fbe3-b5be-4d8f-83d4-9fefb7a231e5",
        "cursor": {
          "ref": "7543af44-87ce-4d20-a69d-1c47d0692b21",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d729b59d-3571-404a-b064-c9a237c37dd7"
        },
        "item": {
          "id": "b580fbe3-b5be-4d8f-83d4-9fefb7a231e5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c34f7725-e778-4f8f-af09-10fcbe32d89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80056564-bc10-45d9-9b58-1e85460359e8",
        "cursor": {
          "ref": "ff8aeb86-34a8-44e2-b547-dff2736cd87d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "da8958f1-2b3f-4523-b41b-63584a5bd1e6"
        },
        "item": {
          "id": "80056564-bc10-45d9-9b58-1e85460359e8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5dda0795-3362-4b6b-b5ab-f4993d63cfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef57230c-f778-4795-91b2-88696eb99b09",
        "cursor": {
          "ref": "1f435ed8-24e7-4db4-90e9-e2be660b75a4",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2fd94425-1f1a-4cec-ada1-874dd135d5f9"
        },
        "item": {
          "id": "ef57230c-f778-4795-91b2-88696eb99b09",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf2162e9-2e89-44b0-a4f6-d3e8ce9ee4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f95ed-610f-4f36-9991-db1ee4b7b0ec",
        "cursor": {
          "ref": "62f39b8b-91ce-4a29-8234-d6c88f876f0b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d0767f90-a7d4-46c2-8d18-9ed5c93ed431"
        },
        "item": {
          "id": "119f95ed-610f-4f36-9991-db1ee4b7b0ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8d7f5ce1-d8ae-48ed-a4de-31c279150917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10425db9-fb82-4f98-8e11-e4afa0b10ba4",
        "cursor": {
          "ref": "fcda2c09-b7c7-4119-9c5f-dc8c1de0ab2e",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5df55700-1b0c-445c-ba3a-3cba3bb1b61b"
        },
        "item": {
          "id": "10425db9-fb82-4f98-8e11-e4afa0b10ba4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "52411f49-df51-4312-8e9c-26d1ad8983e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84181bb6-d920-4a1a-bcdf-2e00debb04d5",
        "cursor": {
          "ref": "eed534f8-dfcd-4da8-b868-cc88e359fc5a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "986e3b72-beb3-4b9a-82a3-e480433f11b4"
        },
        "item": {
          "id": "84181bb6-d920-4a1a-bcdf-2e00debb04d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8a0acc41-8862-4a60-941b-c491edc8a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e16f3c-e7d9-419b-891f-f8f559c664d5",
        "cursor": {
          "ref": "96095ef7-76ce-44a6-a9c2-44c130d9eaf5",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f3cbd1f9-f736-4c62-b020-9be0e53927c7"
        },
        "item": {
          "id": "70e16f3c-e7d9-419b-891f-f8f559c664d5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "df457912-fd59-45ee-a26b-d2f489af06f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66da997-5ce9-42b3-a177-fea268fbac54",
        "cursor": {
          "ref": "8ec6ac9d-99f3-4d3d-b064-27c260f9bd77",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f4d03830-a4f9-4dbd-a50e-60110339b500"
        },
        "item": {
          "id": "d66da997-5ce9-42b3-a177-fea268fbac54",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "97fab2cd-3b17-43b4-802d-5f5d663affe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4365f90-4cff-4acc-891f-6aa41894355a",
        "cursor": {
          "ref": "4d72b602-34c0-47e8-964e-2d35d2847d17",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cc5b50bf-83a6-4e59-bdf0-df3ab1af4af8"
        },
        "item": {
          "id": "f4365f90-4cff-4acc-891f-6aa41894355a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b28d9088-6cef-45f0-bd12-7942de064acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16b137b-0946-4880-b3ee-2d5c00daa65a",
        "cursor": {
          "ref": "a95c2e3e-5050-427e-a878-78f423b037bb",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e80d0147-a079-4424-b27f-501fb1a61213"
        },
        "item": {
          "id": "c16b137b-0946-4880-b3ee-2d5c00daa65a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b16a6a4-359b-4096-bc1b-8f35b967801b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba41f8e7-6e92-4918-9bfa-6518b9e0bcc1",
        "cursor": {
          "ref": "7d89d6ac-3ead-4529-8e04-50ac7299cc5c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "623584d6-3834-42a1-aeb9-0dff7f162e94"
        },
        "item": {
          "id": "ba41f8e7-6e92-4918-9bfa-6518b9e0bcc1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "26189030-d584-41ad-8da0-12acb8efa524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9646f29-6822-4664-8dab-187bcac235fc",
        "cursor": {
          "ref": "0a130c1e-1875-41af-a124-f7fbc7468393",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "04e237b7-95cf-426f-99d4-c2107692eedb"
        },
        "item": {
          "id": "d9646f29-6822-4664-8dab-187bcac235fc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "abe323ee-f566-47f2-b4c5-b9c1ae0b7024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf9d571-21d3-453a-92aa-08dc084029fd",
        "cursor": {
          "ref": "aa17bd4e-c8bd-4466-800e-e883100bf3ef",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9ef49095-d696-4580-8e6c-fc5bd205e72c"
        },
        "item": {
          "id": "cdf9d571-21d3-453a-92aa-08dc084029fd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2d1dd049-b446-4311-84f7-54e625211fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e732d2ec-f972-4248-bc31-d137eb134e73",
        "cursor": {
          "ref": "d95a4a0d-7f1e-4c38-b20e-c1f4e74d6398",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e20f8c99-ca17-449e-af8a-6aa40361e5a5"
        },
        "item": {
          "id": "e732d2ec-f972-4248-bc31-d137eb134e73",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5222cf20-ebe4-4326-a7d5-caa0bdf512ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364ccb60-1688-4e82-94af-f7c6e192b79c",
        "cursor": {
          "ref": "922c1301-fe97-4b35-8da4-a4d2d23f7a0f",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4bc19b4f-b17a-4671-929b-0bf5380d7406"
        },
        "item": {
          "id": "364ccb60-1688-4e82-94af-f7c6e192b79c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "414cf5bf-bf2e-4809-b2c4-988e1c7550a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040632f0-3659-47c8-89ac-22b08b1a2e47",
        "cursor": {
          "ref": "2cd27b19-62e1-4797-aaee-c8b041f10b73",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4c825b0a-6cba-47a7-88bd-ee5bafe280fb"
        },
        "item": {
          "id": "040632f0-3659-47c8-89ac-22b08b1a2e47",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "da305c0b-ad72-418c-bbc7-aa0f051db6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e99ed0-d56a-48f2-ada8-9a6d3889b93a",
        "cursor": {
          "ref": "e02aee8d-8e2f-445c-bb9f-868518f25ed9",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2e3e6785-9706-4f6a-94e2-15c0eb337753"
        },
        "item": {
          "id": "c2e99ed0-d56a-48f2-ada8-9a6d3889b93a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "77576126-2b98-45f0-abf3-0d58ef329735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e85ac50-7c1b-4728-b9bb-f3bc4366fd65",
        "cursor": {
          "ref": "5422175f-2fa8-4c1d-a5b4-1106c7fdc07b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "064e223d-7f77-4cc3-8c20-85bae448d48c"
        },
        "item": {
          "id": "8e85ac50-7c1b-4728-b9bb-f3bc4366fd65",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ab26ba2f-f798-4d9c-8eb7-5a13fdb8ad64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6117a1e5-2e3f-410a-be9c-ac9408f72945",
        "cursor": {
          "ref": "b8255621-db44-4265-9845-4e92c286f55a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "88bd7779-216b-4033-b8e5-68b7ae2e3c9a"
        },
        "item": {
          "id": "6117a1e5-2e3f-410a-be9c-ac9408f72945",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "68fb6651-00b3-47ff-82c3-1f1c46aef9b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 998,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b433f46-3ed7-4259-9c28-a94a841fa1c0",
        "cursor": {
          "ref": "f46578b5-d8c0-4709-85b7-c74e3d2dff99",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "75b7acb7-571a-4b98-993b-a9f1fa076883"
        },
        "item": {
          "id": "6b433f46-3ed7-4259-9c28-a94a841fa1c0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a38458e5-4a51-4949-979b-116b795b63a0",
          "status": "Created",
          "code": 201,
          "responseTime": 8590,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cf793c-3196-4587-97f4-dd12cb51fdd9",
        "cursor": {
          "ref": "49ef5848-548f-4875-a667-672a40104cca",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6706372c-c700-471f-beab-9a84acc197f3"
        },
        "item": {
          "id": "33cf793c-3196-4587-97f4-dd12cb51fdd9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1a254e5b-23a5-41bf-905c-9137a2807cbe",
          "status": "Created",
          "code": 201,
          "responseTime": 8395,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2d686d-afc7-41e0-adbe-b4b54678bb5d",
        "cursor": {
          "ref": "27462534-3ad0-46a8-ac48-57cdb800aed0",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5d07a7f9-7017-4c8d-80b3-4f19c79c44df"
        },
        "item": {
          "id": "2c2d686d-afc7-41e0-adbe-b4b54678bb5d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bbf9ced8-cf79-4fa7-8f3b-19bae4846975",
          "status": "Created",
          "code": 201,
          "responseTime": 8687,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f326d39-1f86-4ff0-9b4f-a449a1a36e5e",
        "cursor": {
          "ref": "8044c8a5-b057-4dee-ae27-6ed01accedc7",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e9d6a581-4c70-40b9-aff5-89e4b4dce302"
        },
        "item": {
          "id": "4f326d39-1f86-4ff0-9b4f-a449a1a36e5e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d7cc53af-412c-4768-a0ae-680fb39b51b7",
          "status": "Created",
          "code": 201,
          "responseTime": 7074,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "084c4ea5-f73b-41ec-8f6f-049e03f3a015",
        "cursor": {
          "ref": "ed51e477-6039-4530-8889-712846a207db",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c2770b3e-7360-4610-9360-ba05417222da"
        },
        "item": {
          "id": "084c4ea5-f73b-41ec-8f6f-049e03f3a015",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "98650f95-855d-43d0-955b-b06a1da24558",
          "status": "Created",
          "code": 201,
          "responseTime": 11177,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "24275266-c96e-4c3a-9b40-3e45930599aa",
        "cursor": {
          "ref": "b7536b4e-2779-49f8-81e5-75a93a5b43eb",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c58dfce4-5323-438a-923a-72a1190f6eaa"
        },
        "item": {
          "id": "24275266-c96e-4c3a-9b40-3e45930599aa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7bd3d793-64de-48b5-912a-3f5bc0526c55",
          "status": "Created",
          "code": 201,
          "responseTime": 8352,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed173d4-cd58-4cf5-b19e-e88d4f5bed08",
        "cursor": {
          "ref": "7d4e5352-cb99-44f9-bd6e-cd2e569d2ca8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b3f4c13b-8847-46f6-810d-8767c6ef7460"
        },
        "item": {
          "id": "7ed173d4-cd58-4cf5-b19e-e88d4f5bed08",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e0cfa79-243f-49e5-86e0-ef6f7797fe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1350,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed173d4-cd58-4cf5-b19e-e88d4f5bed08",
        "cursor": {
          "ref": "7d4e5352-cb99-44f9-bd6e-cd2e569d2ca8",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b3f4c13b-8847-46f6-810d-8767c6ef7460"
        },
        "item": {
          "id": "7ed173d4-cd58-4cf5-b19e-e88d4f5bed08",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e0cfa79-243f-49e5-86e0-ef6f7797fe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1350,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dec9ea2-a598-46e7-979c-e9a3af0a4499",
        "cursor": {
          "ref": "d7dd36cd-f89f-4efa-b662-b8d050d36175",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3f6d6131-a8ba-4fc9-8cf6-50e9cfd65716"
        },
        "item": {
          "id": "8dec9ea2-a598-46e7-979c-e9a3af0a4499",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a912515d-3e8e-4ed8-ac41-27867dc5fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1405,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad8826-1236-4151-b623-8feed376073c",
        "cursor": {
          "ref": "848654a9-9eae-43e7-a0b9-612014fd527d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "369a0096-4e1a-4588-8755-11f8b2cc19cb"
        },
        "item": {
          "id": "42ad8826-1236-4151-b623-8feed376073c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "70908f92-6a1d-466a-85b0-a60718a065ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1217,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e8d52d-7044-4af3-806f-5c33cdd2167e",
        "cursor": {
          "ref": "3d5d24bb-0bc3-424b-9fbd-ad96d859a07f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "273dfcc1-23da-4a10-82e2-6036c0647967"
        },
        "item": {
          "id": "04e8d52d-7044-4af3-806f-5c33cdd2167e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ab4e92ff-6316-4c78-925a-adb09b12f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5e6b7c-78b1-4ae5-9dbc-0263efd34f8a",
        "cursor": {
          "ref": "a155d24d-a890-427e-8163-9a7f7b4398cb",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8e03a392-ed4e-4093-bd12-73e73ec3001d"
        },
        "item": {
          "id": "fc5e6b7c-78b1-4ae5-9dbc-0263efd34f8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fddbe554-e07a-44e4-b963-fbb78f8ffdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c3277d-9621-429a-8c0c-8de383dec3d7",
        "cursor": {
          "ref": "0eb1afe7-5455-482f-ae63-f46b972d551d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d1373755-65be-4aaa-940b-ce8fdf750816"
        },
        "item": {
          "id": "e3c3277d-9621-429a-8c0c-8de383dec3d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a84fbceb-051b-4d4c-b6d1-1d68d6cc4823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d0de35-a1a5-42b5-b8b7-9b9c1020fcb3",
        "cursor": {
          "ref": "dcb8686a-d5e9-409e-9d9c-fec3412ba237",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "97b4235a-74b2-4520-9abb-88d8c577dd28"
        },
        "item": {
          "id": "f9d0de35-a1a5-42b5-b8b7-9b9c1020fcb3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2dfe81b3-6622-4f64-9999-e72fc014b587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d7b30a-8f39-4c5b-92f1-6d31dec04883",
        "cursor": {
          "ref": "56be3b76-c121-46fc-af57-006226970199",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "749d015a-89aa-4708-903a-6e1381a54bd2"
        },
        "item": {
          "id": "c8d7b30a-8f39-4c5b-92f1-6d31dec04883",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "34fd1749-fc39-45d0-bc64-bd793cb43960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a1cd70-477f-4c1f-8709-847a7650f8bc",
        "cursor": {
          "ref": "89d7da79-dbfb-4a4f-8216-397d91346a3c",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "357559e2-4bb4-4fdf-92db-761e79d9db45"
        },
        "item": {
          "id": "96a1cd70-477f-4c1f-8709-847a7650f8bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d3578d64-69b1-45e0-ba57-91ca20ae704d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180ccd3b-0d11-4bcb-84d9-054465416351",
        "cursor": {
          "ref": "78e5d864-d3d5-4dd3-89f9-c0e295e23b7a",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0d32aa30-f74e-48d7-b91e-cfe762320e8c"
        },
        "item": {
          "id": "180ccd3b-0d11-4bcb-84d9-054465416351",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "87187c76-0460-4603-829d-87c7480acf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b69ad83-6e90-4e59-afb5-2971c73baeb4",
        "cursor": {
          "ref": "5b88bcda-546d-4111-a6a6-fdc1bea049c8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "922bab19-5671-4743-9b49-84dbbe80d417"
        },
        "item": {
          "id": "2b69ad83-6e90-4e59-afb5-2971c73baeb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "140d033d-c909-47f3-812b-8dc76bc0a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0361ecf-03df-43e0-979e-63c804c04450",
        "cursor": {
          "ref": "a8a2f744-57d3-4bf9-9b5a-d43400f755af",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8232068c-f5d8-4810-aff8-37f0d09cb7b6"
        },
        "item": {
          "id": "e0361ecf-03df-43e0-979e-63c804c04450",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0ec55886-8aa5-483e-9814-1da64c6ee3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20b449e-d429-473d-98ba-9211a4f7b3ed",
        "cursor": {
          "ref": "da7765f4-2d8a-40c0-9cae-87327237f9b8",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7041a4ff-1fe4-4692-a2c0-a591157c4ffd"
        },
        "item": {
          "id": "f20b449e-d429-473d-98ba-9211a4f7b3ed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b4108d27-0be3-489d-bcd4-14948aab2057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233d03d-b359-445e-84ad-9b7e098e2772",
        "cursor": {
          "ref": "0e2a13f0-3ae2-407e-a8dc-cd7004b356f6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6bc8318b-71cb-4f6c-bd13-cd351119f68b"
        },
        "item": {
          "id": "c233d03d-b359-445e-84ad-9b7e098e2772",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e798e4ed-0b1e-47e3-843e-e8212fe97640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdfd089-2489-4aa6-93ee-4cf41b653eb1",
        "cursor": {
          "ref": "1c33f8ea-7cbb-42a7-b1df-4f150380f0df",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27c96055-909d-4f9c-bd70-b1198d98fedb"
        },
        "item": {
          "id": "2cdfd089-2489-4aa6-93ee-4cf41b653eb1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0d75128-ea63-467a-a1a1-0ad1acadd0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be8b9cd-3313-4dcb-92c5-6e8f80638007",
        "cursor": {
          "ref": "57370d1c-c79a-4ec7-b303-a43494a01e88",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6af6f62d-bb59-40af-80e2-3e9e362ba0a3"
        },
        "item": {
          "id": "6be8b9cd-3313-4dcb-92c5-6e8f80638007",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6eaa15ee-fe60-47e2-b1da-f924106e6016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f703d5d-0171-4cde-baad-10f65322920a",
        "cursor": {
          "ref": "b0c133d4-55cd-4540-b023-e8f1baea9382",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "676cdeeb-9da6-4310-be9a-ca717efbdffc"
        },
        "item": {
          "id": "8f703d5d-0171-4cde-baad-10f65322920a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ae6ae29-6403-4a3e-b664-eb432ace6094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c771065-06bf-4401-a462-25115d64eafc",
        "cursor": {
          "ref": "161ddabc-1500-40d8-881d-b17a2ba0fcab",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "32dbbb14-c003-434d-8346-c1607748de61"
        },
        "item": {
          "id": "9c771065-06bf-4401-a462-25115d64eafc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d12af86a-3006-4315-b6e1-f8674544abe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437472d2-e178-4661-b5b1-0c90815d16fa",
        "cursor": {
          "ref": "6e67ce1a-1387-40ac-acec-011427f26e0e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65ea64aa-6892-4fc4-a306-c5d501c12366"
        },
        "item": {
          "id": "437472d2-e178-4661-b5b1-0c90815d16fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27e8f20a-61c6-4be8-b11c-36b8415df203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f8b27a-961f-473e-b63b-e6aebd4e9a51",
        "cursor": {
          "ref": "dfbe389b-8bbf-433b-a399-ec146a4e3f0d",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1dc04eb4-9c56-4743-af64-c16754253be4"
        },
        "item": {
          "id": "63f8b27a-961f-473e-b63b-e6aebd4e9a51",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce71a827-30db-4158-838c-7065ff942f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b8da8-cc20-4c01-8456-f92001283643",
        "cursor": {
          "ref": "3abc8dde-2beb-41b0-9146-9aacf6c00865",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f8e23622-2261-445e-b935-c0980af8cdaa"
        },
        "item": {
          "id": "a67b8da8-cc20-4c01-8456-f92001283643",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "146ddbe3-7564-4a04-9d9c-68df07905880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1386,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3160947-3612-41fa-ac5a-d31bab65893c",
        "cursor": {
          "ref": "f4bf006c-d3fa-4ae6-87b7-72c75787ed71",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "194b5326-35d0-4ad3-9427-4605d0c8688f"
        },
        "item": {
          "id": "c3160947-3612-41fa-ac5a-d31bab65893c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c20d13f-62e9-4818-ad34-1a96401f2113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1109,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c9354b-0807-4b71-8575-ff49d05d1dcd",
        "cursor": {
          "ref": "2e05c4a6-ea03-45df-b1b5-1c6aa35f93ad",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74647e85-fc44-430b-bc3f-0f65c543a45e"
        },
        "item": {
          "id": "f4c9354b-0807-4b71-8575-ff49d05d1dcd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4615d868-ecd7-49fc-abe9-c7bd909d4de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1229,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f1a676-86d8-408b-a001-6545443b65e1",
        "cursor": {
          "ref": "4503ec52-7e95-4254-8d32-c80c0253a41a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7c01c579-f91b-4f9b-b32f-29e65cde9a58"
        },
        "item": {
          "id": "d6f1a676-86d8-408b-a001-6545443b65e1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f2338202-83a0-45f7-9bcc-64f9df6a15b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61133ba5-4e84-4ed9-8d5a-031e3d9790a6",
        "cursor": {
          "ref": "dd285d89-850b-41d0-8957-764304b2a2c5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "28fa78cd-01d7-44e3-99ee-7e6c24cd3a7c"
        },
        "item": {
          "id": "61133ba5-4e84-4ed9-8d5a-031e3d9790a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd16900f-016a-4cc6-895c-3448ef200238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b9e698-d6ba-42ba-acaa-5a45c644d6eb",
        "cursor": {
          "ref": "1103ca29-86e7-4b1f-b755-c24b8f968a9d",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ec7de03-c767-497c-bc44-4c2e453d63a8"
        },
        "item": {
          "id": "b2b9e698-d6ba-42ba-acaa-5a45c644d6eb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9833c42-65bd-4e22-8d24-00a5c47b03f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd219df-a0d4-4cef-a6b0-4c3ee6c85a2d",
        "cursor": {
          "ref": "1be084ad-8739-44af-8559-58d8e9623450",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4d67b764-e033-4462-9db3-abcaf02a5fb7"
        },
        "item": {
          "id": "6dd219df-a0d4-4cef-a6b0-4c3ee6c85a2d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6fba0a2-cb68-46e5-beba-110a0cabc054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3e5007-d2a8-471f-986d-36331f8d5b3a",
        "cursor": {
          "ref": "c6814849-57da-454e-ac14-9ac8ae6b4e5a",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf495fcf-061d-4c41-a706-f0cad3f64a1c"
        },
        "item": {
          "id": "5b3e5007-d2a8-471f-986d-36331f8d5b3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91432f9b-c54f-4b38-b04e-f56be46f49c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d27a849-ad64-414f-ab39-00e369b97225",
        "cursor": {
          "ref": "a19d0ede-6a89-4a87-b905-9e485c65990f",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8ae47899-b91a-4552-aa5d-ce3de4b68c7a"
        },
        "item": {
          "id": "8d27a849-ad64-414f-ab39-00e369b97225",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "95d327d5-0f57-4651-98e7-3ddca62ca291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb46ca50-b9ad-4ebd-a8c5-22aa1072585b",
        "cursor": {
          "ref": "f888dbbb-ba32-431c-8203-858419d0b05d",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "975ff91b-6271-4b84-bceb-9b47267a4a5e"
        },
        "item": {
          "id": "cb46ca50-b9ad-4ebd-a8c5-22aa1072585b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cbf36ec3-a800-4dfb-934d-08ff65c713c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171ab333-1847-414e-b57d-b6883a56d773",
        "cursor": {
          "ref": "1987fd1b-ec66-49b2-bcbd-875dbe951ba3",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d4ae105a-d6ad-4572-8381-d590bcf9e80c"
        },
        "item": {
          "id": "171ab333-1847-414e-b57d-b6883a56d773",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2b53c12-93e9-4ced-8bb6-382b6d5e39ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa612124-6fa1-4d70-b39e-6846182695a0",
        "cursor": {
          "ref": "f604bc54-1dbb-4f38-860e-b9bc86b4f84a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f70b8a88-f709-454d-bbfd-380209344310"
        },
        "item": {
          "id": "fa612124-6fa1-4d70-b39e-6846182695a0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5fb0800c-77ab-49b4-b35b-42aefa0da240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b79a07b-705f-464b-a4b4-bc6eec9eb744",
        "cursor": {
          "ref": "0d54a59b-d450-4c09-8f50-ddaf7665d445",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2b8387d9-4e3c-46ea-a311-3c12a3d3f7c8"
        },
        "item": {
          "id": "3b79a07b-705f-464b-a4b4-bc6eec9eb744",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "14e8bd67-b05c-4efc-9a22-2d4715d2e1ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2239048-1034-40df-aeaf-79102bcf13ed",
        "cursor": {
          "ref": "aacad186-686d-409b-8cd7-279a81530ed7",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "487c2f2f-cd4b-472a-a5dc-b1110d6bc85e"
        },
        "item": {
          "id": "e2239048-1034-40df-aeaf-79102bcf13ed",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "bdc5575f-81f9-4abc-896d-68d5897d146b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 811,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b26c2b-6862-4de9-a7d5-a8ba86e9fe0f",
        "cursor": {
          "ref": "871cc315-f4de-44cf-ace4-fcb4ca1cccfd",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b3e3136-84b3-4a9b-88fc-948525f1efe1"
        },
        "item": {
          "id": "93b26c2b-6862-4de9-a7d5-a8ba86e9fe0f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "65d8888d-9e9c-48c4-8537-8a325475b203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b26c2b-6862-4de9-a7d5-a8ba86e9fe0f",
        "cursor": {
          "ref": "871cc315-f4de-44cf-ace4-fcb4ca1cccfd",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b3e3136-84b3-4a9b-88fc-948525f1efe1"
        },
        "item": {
          "id": "93b26c2b-6862-4de9-a7d5-a8ba86e9fe0f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "65d8888d-9e9c-48c4-8537-8a325475b203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dd2cfd-2cec-47cf-a050-4b5baf716864",
        "cursor": {
          "ref": "a4e315b5-8dba-4ac0-8776-fa438539c69f",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b137241b-08aa-4233-8df9-9d5dd3bf54bd"
        },
        "item": {
          "id": "35dd2cfd-2cec-47cf-a050-4b5baf716864",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dbded574-c4db-497a-8bbb-094c74e283bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b219c610-599a-4c8a-b56a-9b11ade9fffb",
        "cursor": {
          "ref": "ce1ed115-25d4-4e3d-9bfd-6ae6e1accdd5",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6c785c7b-9e8f-4316-888f-3295b766c829"
        },
        "item": {
          "id": "b219c610-599a-4c8a-b56a-9b11ade9fffb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7557c86f-8704-45cf-aca0-0c43787739fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac8cc29-61b4-4c06-a43a-7d64d589709b",
        "cursor": {
          "ref": "1df4dd44-9d2b-4ee6-8f8b-bb94e09a3c35",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ee600650-2cef-40b9-8f36-2f0178378695"
        },
        "item": {
          "id": "dac8cc29-61b4-4c06-a43a-7d64d589709b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0969a393-a0d5-49e7-9e18-3e7d722cfb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1497a85b-75d0-4bd1-b8e3-892131243610",
        "cursor": {
          "ref": "9fa56ede-ed40-47d0-b181-1dc8f8d6734c",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d1008d88-ff78-4c14-8f7f-dec2af1ae1e1"
        },
        "item": {
          "id": "1497a85b-75d0-4bd1-b8e3-892131243610",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "47c8ce5e-7d9e-4d08-a664-27a000400cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7976c7-d897-4157-addf-aea4395342de",
        "cursor": {
          "ref": "6c86a215-f159-40aa-9f90-2da5a3e11dae",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e2690651-e4d7-41b5-945d-e8ce10e1885f"
        },
        "item": {
          "id": "ea7976c7-d897-4157-addf-aea4395342de",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "09e6c81b-47df-49b8-9db1-a12749643f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dac18e-af90-4a89-afb5-812812882d7b",
        "cursor": {
          "ref": "58ac100c-7c3e-4953-bddb-2645f33d3476",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb034c4e-ff5b-4d18-b231-9359f56d27e0"
        },
        "item": {
          "id": "85dac18e-af90-4a89-afb5-812812882d7b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "04a39731-721c-4a21-b2d2-65d9bdb2f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac8f40c-1fa8-41eb-965e-0b2579ca7139",
        "cursor": {
          "ref": "20d0d280-c665-4b7c-8a4e-17e14191a191",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1b3c688e-1cf6-43d4-9593-f6d717153f08"
        },
        "item": {
          "id": "7ac8f40c-1fa8-41eb-965e-0b2579ca7139",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f93a539d-b782-4ed3-bc37-5895c5ac0629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f462a068-474d-4916-8ac2-1d669b81524e",
        "cursor": {
          "ref": "a014763c-1809-4fe6-9a4b-f967a43ffa36",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "55b03f8a-e54c-4946-a86a-3ec6adb87acb"
        },
        "item": {
          "id": "f462a068-474d-4916-8ac2-1d669b81524e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "36d8f480-fe84-47ae-b7e1-8fbb0c05ca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5772a88a-1c30-4d00-8093-c477ac64c500",
        "cursor": {
          "ref": "5244ccd0-fc34-48ac-914a-d73ce592ea86",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "54e00414-94e6-457c-a2b3-8793296a7a40"
        },
        "item": {
          "id": "5772a88a-1c30-4d00-8093-c477ac64c500",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "52aac8e9-2dcd-4afb-b555-bfd580c8d3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5652e240-1409-4b04-83b0-2170b30ec71b",
        "cursor": {
          "ref": "2b767fa8-a73c-4bb1-a81b-efe500fdb897",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1cc80b91-1213-404b-a184-7a0908b06d7f"
        },
        "item": {
          "id": "5652e240-1409-4b04-83b0-2170b30ec71b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bd764489-4c67-4ed3-b76e-7a5606304ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6bac61-3365-45a6-a011-b5b6823933d1",
        "cursor": {
          "ref": "650be0be-8277-4a25-a755-e25ba8bfc0a0",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "375ee079-5459-439d-bb53-5b0a2ba83e57"
        },
        "item": {
          "id": "5d6bac61-3365-45a6-a011-b5b6823933d1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3689f68c-2d36-4e27-aae2-6a1c52e30bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3cf1a6-30cd-4f92-ac03-e7868b4c8070",
        "cursor": {
          "ref": "5b44d955-fc7e-4ae1-bc51-f1af931fdab2",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "22ba6e15-225b-44ac-a79f-8fcbb718ccca"
        },
        "item": {
          "id": "fd3cf1a6-30cd-4f92-ac03-e7868b4c8070",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e75502a-f0ee-4014-a219-fca310019b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9f9013-d1ad-41c3-a093-54241a24f4dd",
        "cursor": {
          "ref": "7e311ec6-0dcb-424d-a334-d270b834cee4",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3914a64c-0f33-4456-95c7-fa2d3fa2cc48"
        },
        "item": {
          "id": "3a9f9013-d1ad-41c3-a093-54241a24f4dd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "31d89a96-6e86-4583-b2e1-65922992aedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e4bd4-8f2e-42eb-83da-f539f56061c6",
        "cursor": {
          "ref": "72bcd520-a03b-4f1a-a89e-e271c4a0c523",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bf24d398-aee2-46be-a719-6bfd752f62c9"
        },
        "item": {
          "id": "f25e4bd4-8f2e-42eb-83da-f539f56061c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d0195dbf-4821-4206-b906-1735e253f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfda2ba-f23a-4d3f-aaed-ecf4ab6a23a5",
        "cursor": {
          "ref": "505ccd25-c9b5-464b-ac3a-6dcfc191ac37",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad0f4c8f-d5bc-4fc2-a9d8-1d31509f082d"
        },
        "item": {
          "id": "3cfda2ba-f23a-4d3f-aaed-ecf4ab6a23a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "47ec0845-99ea-43df-b297-631ca12b5055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daee2ca-b5c5-477d-b79a-29b143df91e3",
        "cursor": {
          "ref": "95eec347-090c-489a-aa39-1fdc08a72404",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f797f460-007e-4bd8-956a-ace96cc38c5a"
        },
        "item": {
          "id": "8daee2ca-b5c5-477d-b79a-29b143df91e3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1e6110c7-05c2-41b4-8a8b-651ae8f68228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1102,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6df878-a5de-41d4-b996-6fb01e2d24ac",
        "cursor": {
          "ref": "9c9b8eb0-3eb9-4b6e-b490-493f71940e0d",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4791bf76-ffbc-4d3c-85ab-3517fb34b8db"
        },
        "item": {
          "id": "3d6df878-a5de-41d4-b996-6fb01e2d24ac",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "86a4f60a-9e55-4d12-afa1-f477d6a3f1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51d016b-60fa-48dd-a222-ca38def87118",
        "cursor": {
          "ref": "57dd308b-9fcd-44e4-8250-c3bf2df9f592",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ec9b327e-b362-42c9-9eba-3dadde3e89cb"
        },
        "item": {
          "id": "c51d016b-60fa-48dd-a222-ca38def87118",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6932b756-e688-4cba-9e0a-b091aa1b6026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a4046-5e8d-4a6d-a6bd-89950f2f69eb",
        "cursor": {
          "ref": "041f7dc7-3319-4c87-9ed6-90f44e7af0b4",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87c8204d-f9e1-4bc6-9cde-1e088c6563ba"
        },
        "item": {
          "id": "7f4a4046-5e8d-4a6d-a6bd-89950f2f69eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6e586079-7b62-4b7c-a622-354bc1ccd369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9927584-51a0-4401-a375-2a4451fefcd6",
        "cursor": {
          "ref": "2a0c5db0-aaac-4006-b289-75b781051948",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3c65ad4d-2b52-4ed8-80d1-9fec31b6504d"
        },
        "item": {
          "id": "a9927584-51a0-4401-a375-2a4451fefcd6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b3f426b1-9f8e-48ba-b73e-69575825bc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63bbe6c-3f25-45a8-8d05-915457e729a6",
        "cursor": {
          "ref": "11cd6df9-7e27-4959-9f92-8e12c08275ef",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cb8dfd10-6f5f-47cf-85ae-8a7f339f5c9a"
        },
        "item": {
          "id": "d63bbe6c-3f25-45a8-8d05-915457e729a6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "44641aca-7da9-4c93-811a-1dfc2fbc8e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5592ed3-d31b-451d-aed2-17945b08006d",
        "cursor": {
          "ref": "9368dc6d-972e-4233-a1c4-49dff04afd1a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "df49f69a-c593-4f38-8e28-b5dd398adc1d"
        },
        "item": {
          "id": "d5592ed3-d31b-451d-aed2-17945b08006d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9c4ce1b5-1546-437c-8e3f-8f72cffc679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dede62-12d2-4eb8-911f-10d06a2a600e",
        "cursor": {
          "ref": "9376b0af-5e88-4ad0-aed0-51ff0ae8384a",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "551db9da-f6c4-4e9f-b1ff-993835989489"
        },
        "item": {
          "id": "58dede62-12d2-4eb8-911f-10d06a2a600e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "638c0e76-5c0f-441b-8f3d-a7249ca22226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef5ed43-0cdc-4bd4-b811-fcca22ff6b9e",
        "cursor": {
          "ref": "9bd0682c-a8f5-4d8e-a47e-21a0aeb1bef0",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3374dbbe-e45e-47dd-ac90-20ee73a52127"
        },
        "item": {
          "id": "3ef5ed43-0cdc-4bd4-b811-fcca22ff6b9e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f81c86a1-b672-4344-92cd-4b340ac57a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fa0e6c-511b-41ea-84e2-4edad79d1e10",
        "cursor": {
          "ref": "27fbbb89-f4b9-4667-989a-d2867588c01f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "43fbd2d7-7946-492c-9310-6c7bfe34684e"
        },
        "item": {
          "id": "12fa0e6c-511b-41ea-84e2-4edad79d1e10",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5ecc7e2b-388a-4e37-a480-e439f4ac38f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a486378c-51d7-426a-b667-054a1601737c",
        "cursor": {
          "ref": "1b918598-34f3-41d8-8fe7-95863a50ac8a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "acd38f3b-11b2-4538-87f9-5e0df31814dd"
        },
        "item": {
          "id": "a486378c-51d7-426a-b667-054a1601737c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "76351181-de72-4839-92d4-06b417bdb6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eabb77-8ff9-4ca7-b23a-bc2214ad753c",
        "cursor": {
          "ref": "64f782ee-93ef-4b5e-800b-6480ae3dfd2b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "90975dfb-a5b0-42e2-8663-fbdaddd8d813"
        },
        "item": {
          "id": "22eabb77-8ff9-4ca7-b23a-bc2214ad753c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "732de562-993e-4535-a279-f38698e9eccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf664f1e-c4c1-49d7-aa93-d68ccab714ac",
        "cursor": {
          "ref": "4f01192f-52ee-4ca6-b053-0c6e51728216",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe72777c-8c09-4df8-bd4e-ce5a47535d99"
        },
        "item": {
          "id": "bf664f1e-c4c1-49d7-aa93-d68ccab714ac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fdec07d6-c672-4bee-b97e-3d4fae2508da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aef91f1-c519-40c4-823b-8f340e27d88c",
        "cursor": {
          "ref": "387285ef-e4ef-4b58-a902-39b690fd5aca",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2c7b305d-2024-416e-91c5-c8b449bb72d4"
        },
        "item": {
          "id": "6aef91f1-c519-40c4-823b-8f340e27d88c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "58453de2-ac71-4ccb-afa1-0c2897ebb37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3985824f-42f1-488e-97f4-7eb0d4e0f60c",
        "cursor": {
          "ref": "f1a8bda9-6947-46c3-84af-c00ce981955a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5674aa7c-d6c5-4aa3-b77c-3d30e59a49f7"
        },
        "item": {
          "id": "3985824f-42f1-488e-97f4-7eb0d4e0f60c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0427c84e-1870-4b6f-9c51-b5b649b04a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2ce159-ee62-48aa-b22f-5266d7cca4c5",
        "cursor": {
          "ref": "a6c9bdde-5e41-4260-acf6-4bd57da890b1",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4f4be43e-60d3-40a8-9831-5207e6346cf9"
        },
        "item": {
          "id": "ba2ce159-ee62-48aa-b22f-5266d7cca4c5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "638f23ea-395f-4d2c-9ffb-c2acafd99ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97f5937-7c98-4ee2-88f4-6011f451ab3f",
        "cursor": {
          "ref": "936de8ab-8f45-469d-9527-9886f690268a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78587520-a1e7-4c36-9f94-526e7540df5d"
        },
        "item": {
          "id": "a97f5937-7c98-4ee2-88f4-6011f451ab3f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "df3508d5-52e5-4386-9b9f-85f8eab87a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38535104-fb2d-4cf0-81c4-12b01727d202",
        "cursor": {
          "ref": "8d585da2-4c8a-49f5-8129-62e4d898f634",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "07c9bbeb-e538-4092-ad02-ca13fdf2000e"
        },
        "item": {
          "id": "38535104-fb2d-4cf0-81c4-12b01727d202",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e7551a0-ab35-4b9a-a77c-73be5ef47622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665bfaab-47db-458c-a1a1-31ccd5355fab",
        "cursor": {
          "ref": "3b44b658-4a14-409f-aedb-b63053b4632a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fded61a2-4b1e-4e3d-acc3-8f665a9bdd5c"
        },
        "item": {
          "id": "665bfaab-47db-458c-a1a1-31ccd5355fab",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "79bd2479-dff0-4f90-97b2-c375be81cdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3dc764-a16d-4048-9a03-01b5188999d8",
        "cursor": {
          "ref": "7759ee8a-0e67-4e55-a91b-f06bc662f92d",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e240c988-7d60-43d7-b1f9-c78499baac8e"
        },
        "item": {
          "id": "5e3dc764-a16d-4048-9a03-01b5188999d8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "415cdea1-f144-4120-ba0a-b51575022c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cffdd5-9b9c-4293-be92-a8bef209a8c4",
        "cursor": {
          "ref": "89595676-2269-487a-8a61-5d9b32df2bfd",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5569611b-5f5f-4c84-b17e-5dc450c794d4"
        },
        "item": {
          "id": "46cffdd5-9b9c-4293-be92-a8bef209a8c4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "56bed8d4-874a-452b-9de8-9b305f9d8017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2777f7-8c1c-46ee-a377-3f7c6e7300df",
        "cursor": {
          "ref": "ad1a4a8f-526c-4a53-a20d-451764cbbbdb",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7249d4d3-633d-4e65-b07f-229ee9297587"
        },
        "item": {
          "id": "bf2777f7-8c1c-46ee-a377-3f7c6e7300df",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0685eb7b-8622-427e-bb32-2f3c1dfc3864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac606c83-df85-4923-82dd-610516ae5004",
        "cursor": {
          "ref": "895fbf30-9a14-468d-9add-73035da2197a",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9d503252-b950-49f7-a8ed-f3e0f156066e"
        },
        "item": {
          "id": "ac606c83-df85-4923-82dd-610516ae5004",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a3db79eb-56f3-46fa-bd79-c725735869f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e9c074-48cf-476b-b134-33f0f45b3eee",
        "cursor": {
          "ref": "dd5c6783-cc8c-4c85-a72a-62060395b2ae",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fc6a7cfc-b98d-4d56-85b3-15378ca97216"
        },
        "item": {
          "id": "e9e9c074-48cf-476b-b134-33f0f45b3eee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "52a52447-2a3d-476c-876d-95dcdf4854d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f29bfc8-2562-4765-b153-3d2e07af9e4a",
        "cursor": {
          "ref": "4dee2c9a-e26c-46a9-8021-928e8eccd8f1",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a2db1b4f-fd4a-4be8-97d8-8a26b0e6c2f3"
        },
        "item": {
          "id": "4f29bfc8-2562-4765-b153-3d2e07af9e4a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "891793c3-2995-4ec6-b860-b08e7c4496da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bb1342-35bc-4333-bd7f-a5baf8e20da6",
        "cursor": {
          "ref": "fde52d01-e397-4c18-bbfe-dad78094a4e2",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bb3d7425-4c11-46f9-8816-07aaeedcba08"
        },
        "item": {
          "id": "f3bb1342-35bc-4333-bd7f-a5baf8e20da6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "45ba4631-f57a-48c8-979d-30d7722c6374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc51cbd-eafb-4e59-9371-6b961abdddf5",
        "cursor": {
          "ref": "fcf15c43-4f4b-4b50-a8cb-44d3319d5ec3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dcad0a5f-fc9a-4cdb-8637-9c1385c77da9"
        },
        "item": {
          "id": "4dc51cbd-eafb-4e59-9371-6b961abdddf5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e1651afb-4c99-4562-99c4-7ef301a11cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9953dc87-f4d9-49a6-b989-d739708d3d5a",
        "cursor": {
          "ref": "752ba2a1-0cf5-4145-9552-09049e1add52",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8b3d239e-8e28-4e53-adaa-b730669bec57"
        },
        "item": {
          "id": "9953dc87-f4d9-49a6-b989-d739708d3d5a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4a18e5c-2e20-4ff5-84c6-c59f28525356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5869adbe-125f-4296-a10c-d740e3fe6660",
        "cursor": {
          "ref": "0cbfc329-b39e-400f-a96a-8055686cab49",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6aca8ecb-68fb-4788-8c7b-095dc343c151"
        },
        "item": {
          "id": "5869adbe-125f-4296-a10c-d740e3fe6660",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e848f6b2-7df8-4390-807f-84f8d3b1bd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d1dfc-4e6f-4a95-861b-93ba34e3bf6f",
        "cursor": {
          "ref": "56ddb91c-7757-43be-977c-ddb61501d47c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3fb90942-6daf-4705-8ad5-5c067be53947"
        },
        "item": {
          "id": "328d1dfc-4e6f-4a95-861b-93ba34e3bf6f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "44113258-ccc7-404a-aaba-26a3d45a2b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe26fc-28a9-4059-9aa3-63f6f46d0769",
        "cursor": {
          "ref": "052619ce-a2ee-41a4-8c27-42d987b3458a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "838941b9-ad33-4c87-a73c-3bbf34445eb6"
        },
        "item": {
          "id": "6ffe26fc-28a9-4059-9aa3-63f6f46d0769",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e4bf9b82-e64f-4fa0-ad5c-0f69f91b0cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9f3b0a-6b3f-44c2-9825-e24c8ebd8337",
        "cursor": {
          "ref": "98dd1242-ef99-4ca4-9ac5-a8df9d10f8a0",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b29d8287-027f-4186-9778-7e12fa4d42b7"
        },
        "item": {
          "id": "dd9f3b0a-6b3f-44c2-9825-e24c8ebd8337",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9d8c1507-a883-4757-aab3-468f95ba7417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73e0cd0-1a1b-41a1-b4d5-b3466119c34c",
        "cursor": {
          "ref": "4968138d-096c-4c54-a080-71988ada537f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "960a2d8a-1e6a-479a-b033-79026ca6cee7"
        },
        "item": {
          "id": "b73e0cd0-1a1b-41a1-b4d5-b3466119c34c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "06d6149a-6875-479e-982d-e8d4326c853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de49a0-fb77-41fb-8b57-eb59893ebd88",
        "cursor": {
          "ref": "d88ee042-c9a0-49ca-aa40-b206cafcd4ad",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fd4182a3-1984-45b1-9609-62c85ee67b64"
        },
        "item": {
          "id": "c9de49a0-fb77-41fb-8b57-eb59893ebd88",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d53647b1-8670-4608-a84c-bf383d39a7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c605fb15-1681-40f2-8bb3-966bfb3c4c7e",
        "cursor": {
          "ref": "3fb7bfdb-59fd-437c-a251-1646234d8fd5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f98c31ec-8faa-4f54-b2d5-8e8cf359a748"
        },
        "item": {
          "id": "c605fb15-1681-40f2-8bb3-966bfb3c4c7e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a3d013a5-608f-44f2-9b75-4effd9529fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c4e8f1-9994-4797-8b6d-c74de67b6b4a",
        "cursor": {
          "ref": "7cd588dd-ee00-49ec-892a-2017bc13fd4c",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2f004599-7abe-421f-863a-9f495f2180b8"
        },
        "item": {
          "id": "d1c4e8f1-9994-4797-8b6d-c74de67b6b4a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ab934d2a-b271-44c2-a0e3-4a8d59868b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fa76da-f435-4719-bbd8-2e9c7436db7d",
        "cursor": {
          "ref": "91332e2e-3630-447b-bef0-c37f0f0e7878",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "69d6fa2d-14d4-40eb-942d-77703657f6c7"
        },
        "item": {
          "id": "a9fa76da-f435-4719-bbd8-2e9c7436db7d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68934513-d1e1-4860-91f6-51362aa8455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f14ec6-0079-42c0-a553-e2df9339772a",
        "cursor": {
          "ref": "8f1a7698-0010-42d6-a4b7-106075c566de",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2c03f49f-b468-4117-8c03-064fc32b06a2"
        },
        "item": {
          "id": "25f14ec6-0079-42c0-a553-e2df9339772a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f9b3ebf-b6c8-43a5-bcda-1c7fafff600a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca55e533-1e69-49c0-8f0f-be92f500584a",
        "cursor": {
          "ref": "c02dc1f7-c515-4605-b249-eefc60ca4aa2",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aa54f397-dab1-4053-a1ae-56d45c115012"
        },
        "item": {
          "id": "ca55e533-1e69-49c0-8f0f-be92f500584a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "90c8f365-efcc-44a4-a032-d008a01e5446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0b6954-4ee4-4c50-97d7-b6d61f32b485",
        "cursor": {
          "ref": "6e313824-f40e-44f3-a361-a7adad5248e9",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c92a113f-d435-4377-80c8-979db21b6203"
        },
        "item": {
          "id": "1a0b6954-4ee4-4c50-97d7-b6d61f32b485",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "54ace0ab-08e4-442e-94dc-15032a26b0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca64be27-5728-4ec7-8a76-55c6c49d6cbd",
        "cursor": {
          "ref": "b097e1dc-b5f3-4eec-ad8c-70610341c1eb",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2d5b293a-ab24-4e28-a5ee-ad6d0764fd95"
        },
        "item": {
          "id": "ca64be27-5728-4ec7-8a76-55c6c49d6cbd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0fbc9792-5fab-4f30-850f-18117d73981f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00355b6-492e-4d26-aa8d-efbce1e07e3a",
        "cursor": {
          "ref": "fec53550-0522-4444-b3ea-631a6882f0e6",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b890f353-bf0d-4071-b744-68f869636c45"
        },
        "item": {
          "id": "b00355b6-492e-4d26-aa8d-efbce1e07e3a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0fa07ade-ae0e-42c2-a066-4e07bf026e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b245d3-8459-4c69-aa7c-eb38bc6323f2",
        "cursor": {
          "ref": "906ee078-9423-447a-ad1b-0ff8be0079db",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6497b235-2cf6-43bf-a6bf-145e5e458a43"
        },
        "item": {
          "id": "43b245d3-8459-4c69-aa7c-eb38bc6323f2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f0c8c440-35c0-4277-ac00-104f0a5583ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e1ce5c-b7de-41b9-81ba-1f27fb41cadd",
        "cursor": {
          "ref": "559816df-7787-4a62-aaa9-ddc8d49ce98f",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "25444140-08e1-443c-903c-cbe8498c45a9"
        },
        "item": {
          "id": "58e1ce5c-b7de-41b9-81ba-1f27fb41cadd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4d55e518-ae08-4a42-b64b-ab1be50bd45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfe92f6-e147-4058-9bac-d38e52c69c2d",
        "cursor": {
          "ref": "25c1ba1a-1ee3-429f-a87a-35f70ee51084",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9907ac3d-36ef-415f-be26-cc944f29d539"
        },
        "item": {
          "id": "9cfe92f6-e147-4058-9bac-d38e52c69c2d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "904bf8e2-0b78-490b-ad07-946030e8f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca52abe7-8f41-4897-ae17-0fb54bf31baf",
        "cursor": {
          "ref": "e6d84b15-c67c-47a7-87be-ce21b9571ff4",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b9bc6b16-3c76-4dc9-b95b-4b4645a0f753"
        },
        "item": {
          "id": "ca52abe7-8f41-4897-ae17-0fb54bf31baf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0bbfa838-099b-426c-aafc-3afff136d82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ec747c-e97e-4923-a5f7-26a5541f4f06",
        "cursor": {
          "ref": "19373d12-c3dc-4d7e-a4b3-f248c3ee6ad6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cfb72e85-5e95-4354-a265-a921ed5ca16a"
        },
        "item": {
          "id": "77ec747c-e97e-4923-a5f7-26a5541f4f06",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1f0cf3c5-7410-443a-80b0-b40f8e901581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bc7829-6027-4f08-94cc-4ca1c52b45a8",
        "cursor": {
          "ref": "ffdcb658-6b19-4a5b-be9b-661508d27a8f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "18eaeb41-e017-4f23-bc30-96b588c9a6d8"
        },
        "item": {
          "id": "d9bc7829-6027-4f08-94cc-4ca1c52b45a8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a94d0645-ef33-4e95-bfae-22d650873aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6680bd19-352a-4aeb-99a4-b19fbab2620e",
        "cursor": {
          "ref": "bcffee5e-de37-4f4f-a303-08fd07191750",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "494017e9-b74a-48e0-9dca-5545480899f1"
        },
        "item": {
          "id": "6680bd19-352a-4aeb-99a4-b19fbab2620e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0e9c4994-3dd3-4b13-b656-1bbb49b447e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f1dc39-f339-4f80-9dae-ba5bc83d58be",
        "cursor": {
          "ref": "364f792a-39bf-480c-a19a-0c03fc51251a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fb6260ce-a014-412a-82f3-d71cab5f1546"
        },
        "item": {
          "id": "58f1dc39-f339-4f80-9dae-ba5bc83d58be",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d4d7b3ec-aacb-43c1-b67a-c0d6132338b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e2d7bc-ca76-411c-a389-15f4ffcc0690",
        "cursor": {
          "ref": "f2c366fe-c919-4249-bbba-db17909e040d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e5319c4f-a727-4897-a9c2-f4f2e57a82ff"
        },
        "item": {
          "id": "d3e2d7bc-ca76-411c-a389-15f4ffcc0690",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2efc9ad1-1261-424e-ad4c-86026303b753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1157,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3cbf59-4e2b-44c8-8e1a-805b83126723",
        "cursor": {
          "ref": "af9c8a5b-d358-4590-992b-a04f585c9140",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b55815b9-ade3-4ddd-9097-5db4f1c8fc00"
        },
        "item": {
          "id": "fe3cbf59-4e2b-44c8-8e1a-805b83126723",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "656b2995-f58b-4dc8-84ae-186a7d23f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9a8c50-fb38-4003-b1d3-a12b8f8357ba",
        "cursor": {
          "ref": "c62b1e53-e0a2-429d-a2ce-e828d42eedf8",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "51053428-fd0a-483a-bab4-6b2afcf9f59e"
        },
        "item": {
          "id": "fa9a8c50-fb38-4003-b1d3-a12b8f8357ba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ac36425b-5f62-465b-946c-7b072a0f2573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bca8d6-9dc2-4c49-813a-a6b36186fd79",
        "cursor": {
          "ref": "0b1630d2-f11c-4347-9400-f16067187a61",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "18086e2a-02a3-435b-a76c-56b92f50d4d5"
        },
        "item": {
          "id": "37bca8d6-9dc2-4c49-813a-a6b36186fd79",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "abbf3c55-e832-48a4-a51b-17a0a168b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff6782f-95b0-4f87-acbc-d0a593c63ce9",
        "cursor": {
          "ref": "7f50a696-cb51-48b7-96b4-003e282f3d9c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08575ebd-15af-4116-8689-5d4501f78366"
        },
        "item": {
          "id": "9ff6782f-95b0-4f87-acbc-d0a593c63ce9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "958a30ed-4613-4ed7-bf07-9760ecb037dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc95d37-e127-4ef3-b0a7-531f941d9167",
        "cursor": {
          "ref": "f763e2f5-fb13-417f-982e-de78a8b0ff5d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "113c8281-f639-4180-8f82-d2a3410b49e6"
        },
        "item": {
          "id": "2fc95d37-e127-4ef3-b0a7-531f941d9167",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2c47c4c8-c478-45a8-b1de-da5832c04924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295f6211-fd3d-4f1a-9306-4215ed37a51a",
        "cursor": {
          "ref": "1d88e163-a3c7-4d1e-9ad6-fc0c6181064c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1de6157e-9310-4945-8af4-3258ece7347c"
        },
        "item": {
          "id": "295f6211-fd3d-4f1a-9306-4215ed37a51a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "caeb6234-aea7-4541-a3ab-8b1f66954bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91d8a27-dc68-415b-87f3-97419117c725",
        "cursor": {
          "ref": "ab76e71d-6c77-48cd-9807-4433351927a4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4b157567-c586-44f2-8d90-291c46260d1c"
        },
        "item": {
          "id": "d91d8a27-dc68-415b-87f3-97419117c725",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e1ec2f99-3889-420e-bb49-1c269056d1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066e5441-40ec-4732-8992-6858bc1b231f",
        "cursor": {
          "ref": "ed196282-6362-46dd-a740-30f06e9bca2d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4b7c9fc4-7b91-42ab-8948-bbf0b3b0db20"
        },
        "item": {
          "id": "066e5441-40ec-4732-8992-6858bc1b231f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "841564ec-11f3-49f3-8f7f-8d418bbefaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eccb1b-ee2d-4bb3-b0d7-83154b55f52f",
        "cursor": {
          "ref": "2cb06acd-f3b7-4672-b4fd-2f4c3e565e58",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4bb8dbc6-36c1-4feb-8dc6-3eba0794626b"
        },
        "item": {
          "id": "01eccb1b-ee2d-4bb3-b0d7-83154b55f52f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d4856324-97a1-4b67-9317-61b1be382a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a47878-a851-4c50-b34a-e6c618d1fd3b",
        "cursor": {
          "ref": "60b5fd0e-3fd9-48ce-ad8e-cb11472b918d",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9c0f9bd5-70c8-4030-b541-31803d6abaf8"
        },
        "item": {
          "id": "c8a47878-a851-4c50-b34a-e6c618d1fd3b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b36b397d-bf77-498b-85f4-f734628a0f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe8887-342a-408c-a074-1f7c963c90b6",
        "cursor": {
          "ref": "b52daf23-acb0-4a83-80b4-2a94c5a1687d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dae27e37-1f2b-40f6-8e9b-2c6841f7b9fa"
        },
        "item": {
          "id": "2bfe8887-342a-408c-a074-1f7c963c90b6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "27cb023a-bd70-4139-90cf-e1a2f7e8874c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980621bf-69d9-4e76-a3d6-355e1efa8a85",
        "cursor": {
          "ref": "025673b0-6d36-4004-88cf-df6bea5df099",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "66d1cbfb-17f9-4dd9-b0b0-6defc2271395"
        },
        "item": {
          "id": "980621bf-69d9-4e76-a3d6-355e1efa8a85",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d1163f8f-cf4c-4172-87f5-ac273822f4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53d9b18-da5e-484c-a162-da10557ea845",
        "cursor": {
          "ref": "f8bcd172-105e-4b02-a8af-811fc20436ae",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d35118cc-fddd-4198-b5f5-40cac192f128"
        },
        "item": {
          "id": "f53d9b18-da5e-484c-a162-da10557ea845",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a294126d-51b7-465a-b074-bba86204ef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab0e733-9645-403f-a3ba-76676f1d4666",
        "cursor": {
          "ref": "bad36181-dd07-40cd-aa16-feec60cf60fa",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "86c15009-e277-49cf-a31c-ca2e5ad9880a"
        },
        "item": {
          "id": "9ab0e733-9645-403f-a3ba-76676f1d4666",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ebd1bd5c-6160-4856-a7d1-3578b4aa2523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c42e5c-a5d1-4521-9bc6-ab7b460b607b",
        "cursor": {
          "ref": "e2c9dbde-8e8c-4e9d-b245-e6bb0b822cb4",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "821b4b2f-12f0-467b-a31f-dd6dd76fc488"
        },
        "item": {
          "id": "53c42e5c-a5d1-4521-9bc6-ab7b460b607b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d83c3673-5c22-4368-b60f-0ba4ed207606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62c5342-cfa6-4af3-b561-5c8bb74da23c",
        "cursor": {
          "ref": "c3342d28-29ec-4cc9-9b85-a7bd17384e6c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "16adaa4a-4e44-4b24-8ce3-a0e66736124e"
        },
        "item": {
          "id": "f62c5342-cfa6-4af3-b561-5c8bb74da23c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b11f0d99-01db-4ec5-bb64-bc0f4abe74fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bae5047-eadb-4889-b362-af4c53eeefd6",
        "cursor": {
          "ref": "61faa8a7-4a79-4754-b3d8-0b5eead86f3c",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e5af4b65-9ba7-405f-9508-037dbb0ed9b1"
        },
        "item": {
          "id": "4bae5047-eadb-4889-b362-af4c53eeefd6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f7932cad-3cfc-4758-a7b6-c2462ff011f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92724f6b-122c-43b4-b790-f51ea6bf2232",
        "cursor": {
          "ref": "b035bcc3-71ef-4459-aa94-e0c05e37c723",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fc211f3e-9ff4-45e9-9217-e9a2f7827ea6"
        },
        "item": {
          "id": "92724f6b-122c-43b4-b790-f51ea6bf2232",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7d5c0d66-3a8f-4b5e-bb71-ac40ae882ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1078,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8efec4f-95aa-42ba-aab1-4669048c101d",
        "cursor": {
          "ref": "0403069a-7490-4397-84c8-606ff2f46da4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a7eb1e0c-cfcf-4823-a9ac-5b5806fe031a"
        },
        "item": {
          "id": "b8efec4f-95aa-42ba-aab1-4669048c101d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cde483df-8157-4995-ba82-72b502a6f7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d2f6b5-2772-4a48-a686-711a56192e4a",
        "cursor": {
          "ref": "d409307c-98d3-4205-b6d6-2a3694fa5f8f",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0b45447e-5ce1-4071-9f3b-044196463ef5"
        },
        "item": {
          "id": "f6d2f6b5-2772-4a48-a686-711a56192e4a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ce9102af-863e-47fe-a74a-98d76ce4bb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6edbd8-9fdb-4f20-b25b-ba651e721bb1",
        "cursor": {
          "ref": "84827a91-245e-4837-985a-3579bd8d6a7b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "aa7dc63a-2f40-47b9-8bea-e097e84d6fec"
        },
        "item": {
          "id": "0d6edbd8-9fdb-4f20-b25b-ba651e721bb1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "205d5bdd-70e8-4157-ab76-48a6f852ef34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70af1fad-1ef8-41af-944c-572914836c81",
        "cursor": {
          "ref": "5e8b29ab-67f7-46df-8192-c009d4e071ef",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2885a914-add0-414a-b2eb-8bb0bc6c817e"
        },
        "item": {
          "id": "70af1fad-1ef8-41af-944c-572914836c81",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "67da131a-de6e-4418-a737-5d3cdb9cc645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9f3f29-3542-4543-ba43-a095a0cf2385",
        "cursor": {
          "ref": "8009761e-8302-4438-b12a-5d4ccbeaff34",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "64220797-6c1f-47ce-a9c8-d68c8adfc509"
        },
        "item": {
          "id": "5a9f3f29-3542-4543-ba43-a095a0cf2385",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "217224c2-a19f-4aa8-9af4-5a7bf16ddb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e683fdc4-9d2d-458d-83c1-6fd09278e723",
        "cursor": {
          "ref": "7771704e-230b-407e-9a0d-b0ec5e71df80",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "876053ba-1c32-4b6d-b997-cfe497e8f451"
        },
        "item": {
          "id": "e683fdc4-9d2d-458d-83c1-6fd09278e723",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e816ad40-99dd-46ea-a847-6f42a4b167ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1124,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c7ad1e-dfc1-4dfe-97f4-2cd0eacc7580",
        "cursor": {
          "ref": "f4300d71-6d57-48df-ab70-2459bf12ec09",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "262ef987-a723-48c0-ac71-94c13d57aac2"
        },
        "item": {
          "id": "a5c7ad1e-dfc1-4dfe-97f4-2cd0eacc7580",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "91a8f95d-584b-43b4-9d39-15d9d0857aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13322a85-3c38-46b4-90e2-eceb7853a63c",
        "cursor": {
          "ref": "f8a44e86-03eb-45fb-aaa5-c634137cf95f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "982e3031-e7fe-4c2c-b309-5d6aca980837"
        },
        "item": {
          "id": "13322a85-3c38-46b4-90e2-eceb7853a63c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "699300b4-97e8-4c80-9042-3214790850c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1199,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316f02d8-b635-4a30-b9ad-0862d102f8c8",
        "cursor": {
          "ref": "fc466227-1eb1-47aa-8264-7f1635126b14",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "88bc3feb-1f74-4057-b029-1c12af94384c"
        },
        "item": {
          "id": "316f02d8-b635-4a30-b9ad-0862d102f8c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "569c90f2-4156-4f8d-a7d0-b4d89561df44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3c7966-a917-48d5-92fb-6ff243adbfc7",
        "cursor": {
          "ref": "5c588322-0fcb-4ef6-acfd-33e9cb8cdda7",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "534a15c7-b736-47fc-a4a9-b3b350e5ff8f"
        },
        "item": {
          "id": "ba3c7966-a917-48d5-92fb-6ff243adbfc7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "566acd0f-2a6a-4820-a033-53aca4b95e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f95e63-79b2-47a4-a78e-7a596806930c",
        "cursor": {
          "ref": "62088af4-7188-44d1-985e-8ab6976347ee",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8f8e187b-dbf3-42b4-8421-617309025b94"
        },
        "item": {
          "id": "64f95e63-79b2-47a4-a78e-7a596806930c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5552d7f4-c5f6-4d07-9071-8368663fa861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01888f13-55e8-4020-b6c4-49fc247ad4f8",
        "cursor": {
          "ref": "0ee173e3-c8da-4503-929c-8a78e6e0d8a3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "32bd933a-d34a-4c73-9f74-28626b1a08c1"
        },
        "item": {
          "id": "01888f13-55e8-4020-b6c4-49fc247ad4f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "12170a8c-d08b-47c2-9693-b8a53b544c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63339c1-e26c-49d5-a73d-43588e2589a0",
        "cursor": {
          "ref": "fc76599c-43a2-4e1f-97c2-95fab5005922",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d82e6e96-832b-4558-9b4d-c46915950761"
        },
        "item": {
          "id": "e63339c1-e26c-49d5-a73d-43588e2589a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6268628d-1305-4475-851f-09001574494f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe95f68-7319-4724-96ae-84bd3ad26c46",
        "cursor": {
          "ref": "162f3f38-4e44-49a2-8bfb-5ed64d974be4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbc4663c-1f60-4954-99fb-6075bca5203b"
        },
        "item": {
          "id": "dbe95f68-7319-4724-96ae-84bd3ad26c46",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "acae783c-c278-4d29-a752-df4f8c9db43f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 715,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c122acc3-ceb4-4230-95fd-31610c016a99",
        "cursor": {
          "ref": "7f2d992c-fa9f-4e70-ba01-62b2cdb3eb15",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7e59ac35-96b7-47b1-b1a4-4a2fab79ad96"
        },
        "item": {
          "id": "c122acc3-ceb4-4230-95fd-31610c016a99",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cd6809c6-fdc9-4ee3-9d60-630377fb2ab7",
          "status": "OK",
          "code": 200,
          "responseTime": 1156,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "864fc373-c594-448e-9556-1b5f36218693",
        "cursor": {
          "ref": "38005518-cfdf-40b8-b5b2-375922288a7c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5dd9ca35-e5c0-4a0f-8579-1ed9cef60e0b"
        },
        "item": {
          "id": "864fc373-c594-448e-9556-1b5f36218693",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f7529b3a-0920-4e43-9a67-45048ad399fc",
          "status": "OK",
          "code": 200,
          "responseTime": 3331,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07559418-24eb-43c6-a54b-99841ae038ed",
        "cursor": {
          "ref": "b25dc7ad-fa74-4256-8365-c25abaa19805",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ffb3898e-0ba7-4059-aaa4-4faa6a8b4c48"
        },
        "item": {
          "id": "07559418-24eb-43c6-a54b-99841ae038ed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e3c44b7b-95e1-4dd7-a841-539a8b6ed4eb",
          "status": "OK",
          "code": 200,
          "responseTime": 2775,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
        "cursor": {
          "ref": "9bc2b452-a499-4c64-bbdd-bf37a8bcfe34",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65e133b8-383b-46d1-9901-f969ca8bbf59"
        },
        "item": {
          "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "472d2f03-7bb8-4627-ba0c-09869cf6ba90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
        "cursor": {
          "ref": "9bc2b452-a499-4c64-bbdd-bf37a8bcfe34",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65e133b8-383b-46d1-9901-f969ca8bbf59"
        },
        "item": {
          "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "472d2f03-7bb8-4627-ba0c-09869cf6ba90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
        "cursor": {
          "ref": "9bc2b452-a499-4c64-bbdd-bf37a8bcfe34",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65e133b8-383b-46d1-9901-f969ca8bbf59"
        },
        "item": {
          "id": "d44e45a3-3a3e-431f-9675-79e0d79c0efc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "472d2f03-7bb8-4627-ba0c-09869cf6ba90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3a3a11-80a0-4a35-b33a-a954a03e9dfc",
        "cursor": {
          "ref": "709ae21e-b969-4df3-b94b-2b147e933023",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9be544f1-884e-4073-881c-3b1733bf6540"
        },
        "item": {
          "id": "9d3a3a11-80a0-4a35-b33a-a954a03e9dfc",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fd55b116-942e-47f1-8de5-8c3f92db9909",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 514,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a65e1c-1c64-444a-ae48-55e37cffdd2a",
        "cursor": {
          "ref": "edf6a078-f247-4e80-9bdb-8a449887b7ff",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8b8bc581-4e52-4a26-bbd7-00817a7b307f"
        },
        "item": {
          "id": "20a65e1c-1c64-444a-ae48-55e37cffdd2a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f8d8c6b5-a536-4336-84fd-446e7d1c78db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a65e1c-1c64-444a-ae48-55e37cffdd2a",
        "cursor": {
          "ref": "edf6a078-f247-4e80-9bdb-8a449887b7ff",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8b8bc581-4e52-4a26-bbd7-00817a7b307f"
        },
        "item": {
          "id": "20a65e1c-1c64-444a-ae48-55e37cffdd2a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f8d8c6b5-a536-4336-84fd-446e7d1c78db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b24771-82f0-41fe-bc72-204d93fb39b2",
        "cursor": {
          "ref": "c4b651ca-909f-459e-ac0a-65ded6d12293",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e4864d0b-7d54-46e2-bda2-5b22892f8766"
        },
        "item": {
          "id": "c4b24771-82f0-41fe-bc72-204d93fb39b2",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d53cf198-a294-46ec-9dab-02828c24bc56",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 782,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d0553a-f12f-40ea-97d7-674d2f13d08d",
        "cursor": {
          "ref": "8ebaf05e-0094-4043-8467-daee6ae49794",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c7da19f6-d3ea-4f8c-ab1b-52ffc4ea5136"
        },
        "item": {
          "id": "35d0553a-f12f-40ea-97d7-674d2f13d08d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d426c925-f256-4ace-b3f2-3cd7bfcb0fe5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d0553a-f12f-40ea-97d7-674d2f13d08d",
        "cursor": {
          "ref": "8ebaf05e-0094-4043-8467-daee6ae49794",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c7da19f6-d3ea-4f8c-ab1b-52ffc4ea5136"
        },
        "item": {
          "id": "35d0553a-f12f-40ea-97d7-674d2f13d08d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d426c925-f256-4ace-b3f2-3cd7bfcb0fe5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59de4a2-7e46-4fb8-8627-2c2715a8231c",
        "cursor": {
          "ref": "2943f527-627b-4e3d-bfcd-9d97c60ff7b0",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6ff38d68-d129-4c4f-be6b-2e3a8ab23d42"
        },
        "item": {
          "id": "f59de4a2-7e46-4fb8-8627-2c2715a8231c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "294dce32-1288-41d2-b5f7-67deba46140f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 790,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}