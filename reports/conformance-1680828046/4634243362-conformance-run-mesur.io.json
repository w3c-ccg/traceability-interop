{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f338f193-767b-4fa1-ae10-7e3f00ba3264",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a812fb85-86f0-475e-9fb6-fbe120ea247e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8781421-6a00-4971-87ba-7154a3c6c50f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f439c62-ef1e-45f0-b7cb-7ce717ed1032"
                }
              }
            ]
          },
          {
            "id": "8c8c0808-3fae-4715-b627-2c901bf5212c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37a4fd46-c1ed-4c2c-90ad-d4fd21cc68c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6269eb9d-edc3-499d-9eb1-b03050d9ae16"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cbbf7971-434b-40db-a22e-480ad250c7e8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f7e993f7-a9b9-4140-aee4-8aa97f3ff8af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22946d38-8ab9-4999-967c-900d32e86b00",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e02efcd2-7c20-4f4c-b4f9-dd7864e612d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f892f6d-9403-4697-a03c-ac534f0ff58f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e419594-52cc-42a1-ac9e-3c9c30d89273",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db796832-955e-4e9f-8c63-28e29986f7a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a68d036-e21f-41ad-ab34-5c4c47b5cbca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d546471-0a24-45b1-a37d-e04501939bc6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3845dafa-557d-4a32-9289-38eef086e38d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3b59d68e-172b-4513-8335-93ae62e3d7ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5be33990-c13e-46ef-9b26-35129a7ff394",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "473b6017-5b44-4fe8-92fc-23193ed45756"
            }
          }
        ]
      },
      {
        "id": "a5f69773-9dd8-4169-9276-64f738c5e2df",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e1e7d5e0-7768-40d0-a74b-7a6af73653b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68bcc629-93fd-49f9-b6b5-5d043360d2a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a062473e-1762-4894-a1d7-981adba78be9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb090237-2d57-492c-8895-f71cf11c510e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8253f825-f61e-4bd6-bdde-7ea00260302a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a63a8f3-9acc-4c29-bd79-fdcc2549581b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051f912e-fc3b-4449-a6c0-f5e3325265a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07e09f6d-d755-427f-bff4-a89ccd7363f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe4e0a0-aa89-403b-80fb-c3df5181e0b1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381d03e3-eec1-4238-93dc-58b52365cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bd51dba-e598-41b9-a3fc-a1256e6dd4a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c49c9fea-a7c7-4615-8005-2ee1302403b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adf28b8c-a2a6-41c7-aa4b-28c40fed20f9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d4bdc3-e6cc-4f9d-b88a-40de8d299a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcaf9337-0f03-4196-9e1c-70012557292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9eb219-b0be-4531-8e81-61d79d92869a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e75a27-9105-40ea-b879-35cac9c732b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4974e8c4-5862-402a-93b2-b6e6580fa83d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae09d2a-e293-4ed5-b22c-776426cb92ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "830e4e02-d573-4635-87d6-e7695fb9d038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb9d608-002e-49bd-a9a6-b5d6ac958404",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3d559626-d900-4972-8eb6-78f8b6077b4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0394bce4-61f0-48c7-9fbb-955feaa2de29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba8f2e7d-8d78-4e5c-b5f5-d881695a8ba4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eb0456f-fa61-4d01-850b-948ff2ed436e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0d470431-61c9-4c19-8d13-f736c05afe33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85c991ef-4cf3-4c03-bd25-3d55e04529ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "69e62b98-3c3b-4790-ae03-8759dc9becd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7a92e3d-bf55-4b3d-84eb-205b81d98ae5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a31d21cb-2496-4d2c-a64e-507229412d6e"
            }
          }
        ]
      },
      {
        "id": "8a9e748d-8033-4b1c-aa10-acce4e35f88f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a7e91e5a-6ef6-4514-878d-0d6ee00506ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "880dedf0-504f-4cc9-9224-fcefde586321",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bc12ff90-0330-4d3c-844b-7ec839bae18c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b12570-493c-477d-8124-a306a015f1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6daefb1-8837-4a05-ab56-0c9777387168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1d36cb-897d-48cd-9f65-104fc7aa3407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ee2c796-e597-4541-8525-99df0893f2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143380a3-8b98-44bc-a015-ded4b913db3c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ade1565-25d3-424e-81d5-78cd7c4b9f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c34fa2b-555b-4b2b-b26f-b815b7349bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc31e7d-4961-4bf1-8c9d-37ee9b59faa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e00dfa-fade-461d-abb8-f70042627f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46750069-1a22-4f69-be6b-9484aa75e574",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7353acee-ef80-450c-afa1-4f072c23e482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f9ba8d-4ead-441a-a267-df17d0ba0c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269103ad-0646-477d-801d-cda7b9bfe215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35079a0d-a167-44ae-a0b2-709a8e917786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d464f58d-f743-4471-a6c0-6e93ddad4660",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6945fb-9144-4ec4-9ae1-34d3a2746c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f35eb9-8212-4266-8b68-79ec684ca656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3944475-84cc-403f-8fcb-fbd8005d90f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d14bd933-85fe-4e1e-b874-f22e508cd375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ff0902-de9d-4ad4-9a2b-98ef41c8f533",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5859b3b1-ee17-4c54-9cd2-f06e4a21d875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69078978-8882-4ce4-9ada-2f6a5fc9b7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b68ce48-6a42-4c3c-b7e5-2b9fe1d199b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5346f58-dd76-480d-93e7-1620bb65355f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8fb247-33a6-4356-84ce-b5542e9f7736",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c343e-8d18-4d3f-8539-9809bc329056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7886b29-dcd5-4375-922a-1df50fa8654a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a27a500-5e80-4dda-918a-2b221b995928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da184fd1-3bbf-4a16-b50b-79d2a7b4fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc38286-9715-4ed2-b656-4b2d839dec10",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d493957-dd2c-40fd-95b1-e8f78bb087b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cb5b8f-2c93-421d-bae6-1ce36a73725c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc57af6-04c6-4b8a-852d-39806844279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60304670-a480-4afe-94cc-40acd2f3ced4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa43c7a-f3e8-45ba-9200-46e481037db7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e0b046-885f-4a73-9868-2f5a125a9fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbec67f-99b9-4e02-ae93-1a654bc8492e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1518f579-2637-4e71-b434-647383ed595d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b0becbf-9f19-42ea-9a6e-ce5756bf637f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffd853c-a6b6-47bb-a5cf-c79012418d98",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aac0642-26f2-490a-9f66-7d9bb79b1633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f6bd4a-acf2-4bdc-a274-ca57aa68a2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80337a87-0f7a-4823-a5a5-e08f75d63353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0d9eea-f826-47e5-82a9-db1279e85ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240db41f-3f9d-43c6-a751-002fe3159408",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcf522a-7a72-4b2b-abcb-582bf4d84903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb30435-a6be-4f3b-99b0-9f1548fbae1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd2ef77-f8a3-4b92-8fc6-d4b3bf1ea58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "568f639c-2a71-4cae-b64b-39cf76a5d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0b0aa7-b862-416c-be18-2938c6a500a4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407f2df-dcee-4fda-82ee-ee2d247fc4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74341870-7fa0-4772-ad47-f5cb506cd848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7293b27b-4460-4602-9565-7b741363aedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8ed2693-55d4-49c5-ac11-26fe3b080c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bdc7a3-4b47-485b-acec-2360929a5948",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add9a556-8db3-48e5-850f-7575424a4942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacfa4d4-0eff-4229-b0ad-2ed0e3142c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f289fd0e-6854-414f-90cd-e6907f75c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fafd4f75-f318-4e0e-aa03-48c880047612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccf5599-8bc0-445b-8df5-15838bb16e74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133723e4-1b01-4ee8-91fb-ff2a11ae666f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb196ee-b94d-4c20-8e87-f40241ad8fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12722ecb-5616-4aeb-8951-010c5e6b815b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c998a8b-aeac-46d5-b6c6-b12efcb223b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5364b450-9753-4613-be36-f369a92a6160",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dbf597-eb5a-47a4-9c27-9e1ee601f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47743ef-9ae9-4e12-9e94-a49845c6e087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a281ab7f-8e72-4292-be2f-ce30332ff98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3128fc6b-236f-41e1-8c91-377cc7efae3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c818118-e617-4373-bf30-3ec936aec3f2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a680a77-b915-42e3-b97b-eabaa3fda850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7662e5e-74a3-4be5-a273-c6e65d9f1803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d5d714-5ba6-4fba-afd5-55b95814e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4050f61-26a6-419b-95d5-2c3d75655525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2311658-369b-4aea-9905-c11d898d6979",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceb76ba-5e69-4f56-bc1b-45fa85a2acbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867e899a-3cc2-47c7-9008-c1a421513914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb981bb-91fb-4371-8cf3-7664dee0425f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca8e1b4-977f-4d79-adeb-e9ab0c0b3eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fe8b61-4443-4624-b461-5b898f21a82c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa46ea1-bbff-4dd4-b51f-d5c2da816147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a217db9-6483-477d-a9fa-34e5b18b225d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f22e54-8eef-463f-96a8-10a2ee18802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a4baa5e-dff0-48b3-8a92-f13f76762f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ab6fa5-eb5a-4df1-8dbc-9cd4c74cc544",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65879e6d-a21d-4cba-817c-6c6eebddcea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275ff397-898a-4e84-aade-a929d7416523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bff027d-1f0d-4e17-ba65-876d6054e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a33bc2-f887-43b0-8530-c3e71d1715f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8bc3d0-90c4-4653-9259-d7533283c5e6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d998a5be-b830-4d84-bfdc-449338b3a308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5dfd77a-1117-4589-a767-307159eb22e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e573bf4-717e-4245-9505-83b75e2117c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b331e63-011f-4980-8966-c017281c7b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e33094-3f6b-49bf-9e52-ef8be88af907",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6deb96f-b455-4ab9-a567-e2acb2062a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734ef4a3-7876-4bf1-9b66-ec7d0ebda847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80efc97a-2655-484f-8272-48a9b82ac103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2b8d14-65b2-4392-9200-f54735cb5969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a41373-a3d6-48ff-b9d7-d2e63617a1ff",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70cb5b5-b33b-4b44-bc9f-a9d0adc0e106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3666680-3724-438d-9272-86e2f34c7110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d337b150-92e7-483f-98fa-53fa3995bd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe69e30-d200-4323-8c0f-08bf84cb8dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6b31f7-0b9a-4647-9948-34c05237e716",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e2f702-231d-4a17-8844-5c4a5a21de3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c72fe7f-7353-40b8-9e1b-b994d2428aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51badcb1-5832-4bc4-aa74-0996eac5ae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d50057c0-d7de-4341-b561-27d1edf2ed21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f534df20-3f7e-4fdf-941c-0c6728097735",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5845c797-95cb-4f3e-86e2-3358a2905bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb5a269-52e6-414b-89c1-b1335d3d7c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7325f34-c0f0-4f3a-9348-45074007fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7543cd-54ab-4b79-8535-c0b4e9605d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4728aa7b-c8bc-44b5-b150-377cb092e126",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e29fa-9cda-4ea0-a5be-a3cc02d9434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227e618e-9003-41f0-b0e2-980cca8ea94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcb3022-3940-420f-a6f3-e8bf642fbaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "26eafdef-7fb8-4bee-a0dd-504028a1e119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91057fb8-1e4e-4b73-aa80-00ea8b859e62",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2143e-4b63-4c48-8d87-f625a1ddd8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efa24a5-053a-49e1-aa64-421e1761fb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2242fe26-ef33-4507-aa1f-67f2e727f5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00760cf1-8e1e-4077-8da1-dbbc8262d087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b77de6-faf6-4422-ba97-138d17921465",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6581029d-8407-421a-85f3-abdd4b56c6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8e44a0-d59b-4599-a5f9-d73b30ed4e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28fb70b-6b66-4417-b3b0-9f8439bab57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c36f863-f5e5-4f44-8a06-3d56c4f116f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9e3c40-6a05-46f1-8ff7-216733a6575d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6076bcc5-4990-4dcf-ab7d-1240f78ed1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c91ec-ebac-44cc-a933-d4973bb26edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60022731-3ebb-4939-af6e-98ae1ea3a3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "836fc23f-79b4-44a1-90fa-7fa99e98336a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba205f8-9aa3-4325-9286-4abe2c905e4d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a55e75-3732-4191-9cb3-f20126373daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0cdb2f-bc4d-4af5-a615-68c84c4d3d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e91388-3606-4010-93de-332eb0ebefae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4948ca4b-eef4-426b-bc52-70b4a356dc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca205e28-ea50-42cb-aa6f-417978a41f7c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e12ec47-deda-4be4-9c6c-47687778929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd79fa43-45a2-4ad6-bfef-91fbaea96218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dee7b38-f0b2-43cb-834b-9739bb600345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b95784-bfd4-46be-92b6-84c4f097fefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5273458-8614-4273-a7af-1d28ee2384de",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6428cdf-9bb3-4137-887e-c01b57119e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45f313b-bc48-4c6d-85a5-a5825ca5b362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d430f74-6751-4ed8-b7df-47da6d18d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5c8034-b8a4-4fac-8e0e-5a7fd80bad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250a69fc-a7fd-4b45-8426-c495af3b1451",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd547fa-865a-497a-bac5-bef5b8020c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61adad6b-3dfd-4c9f-8be1-c1cb38c5b149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a85938d-7ef6-4f5a-8dbb-affe0cc9ee42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b70c24-e1e6-4c79-9242-508effb502d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812f8677-2783-4e0d-9f71-b7d0c639868a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d566f9a2-e196-4f56-854d-6cfb0a154dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae316b5-467c-4695-86fb-89b21b30a929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346cec7a-e354-4d04-94db-c3de9feb53ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c984c8-a8fe-4f8b-a25f-b855d3220f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a283c9-885b-4d77-ad91-0f432abf4261",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957eaf5e-cd3c-4b8f-9dd1-977f2984cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb5edf3-7b89-4826-896b-9bf1933c8dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecc43a1-6ab8-46f6-97b8-aafc8e6ad1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ae3d83-a3b1-488d-b09e-abb10393a941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103ec82-1348-47d1-b402-d531ebf82ae0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f86b4f-df34-43d1-a426-c9cb186df98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98ed302-2bc0-459c-b65c-181c81e92afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f7455f-ad95-4441-9c9a-6437c2b88ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d7a67c-3ea8-4cb5-8a14-b724c50e4ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e35b4ca-66ef-44b6-ace5-c6681587937a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fb1f6e-876b-492c-9e52-a4b182561cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d4fc8c-a1f9-4873-9432-a14d1fc30dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f8c1c4-152c-406b-bb0d-6f31ab501b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "11dc691e-ce9d-457c-950e-de391adb45a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cae4c62-aba0-4d98-8a53-485191db5533",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e04a797-3f16-4674-8d90-62010b31f966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c21faf74-2fe3-44eb-8723-6e73f9d5d2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf36f31-bce7-4246-8ea7-39cfbd799c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff67052f-87e3-4b7a-a655-07dfec345fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573e43cc-4de9-4413-b01e-221ab23d9cfe",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31cf4eb-e249-4985-9171-7ab17aeda6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a174864e-714a-48a0-99e6-192454f421ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05758ddb-75f2-44f4-a24a-dc7021269c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "815d9af8-9e57-44d5-8d05-cfc0402121fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2c10b3-a3ea-4353-946d-b52afe037b33",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3add67a9-45d0-482c-b214-a0463dadedd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf2b2c3-335f-49c5-8bd8-ec6d6a14771a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c210c56e-2057-4fc1-baa6-b580a4c1758c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc14b4f1-9da4-472a-a78b-1e8ce10c58fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30450f4-726c-42a3-b020-62614315187f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb830df2-d95c-447f-92ee-555fefd8c66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd73c61-5f4e-4c88-ab89-8c3cd5a537bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0973798e-e9eb-4b1c-b580-1878c2bdc087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c43206c1-1157-489f-b13f-7f3c1ec62fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22624b4d-2baf-494e-8eb6-becd6fe6f81e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbffeb1a-9ceb-4663-836e-3812e5b96e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea3335c-d9fd-4b47-901d-566e7aee9e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7666fe-06ae-4323-8cfd-feade6f51d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a621707c-8315-4cf2-9e52-e10703d2bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0897b57-4274-4440-bdd3-10ae0dfe5067",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03a429e-c69b-4e17-93a2-1a252f7ed614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d6268f-0328-4ac1-85d3-99284d0d1d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e706498b-a04a-4ec4-8f66-e7474c5affbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f115356-536b-422f-9ff2-376d85a8ea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575e1293-c15a-40fb-8451-fb58733f1e34",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceeeafa-0795-4b2b-bd1e-abb8c1dcb7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e71a32b-ec14-41ec-bb6d-034b887486a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac01b39-a35c-4d20-a20e-ee4481d34803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9ab516-4e9c-4c91-b3ca-066425442206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f4c072-13d4-4414-ab5b-e5698580149a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b90bbf6-83b7-400f-838a-6560d8403ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8d6770-6399-4c66-b96c-a0d3aac00781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2107de5c-6a15-450a-a777-416b15d87ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3325e066-154c-4571-a97d-408f2f217231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598dc8f4-7059-49fe-a413-b29f023026d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e81c57c-aade-4f71-a9d6-e76e4672257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf80b4e9-142d-4c3d-8172-7f3ed89e206b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52816ee4-964d-4be1-b4a5-fa657d3bc320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4905dfd-cfbe-4880-a6a7-8b0e0a681b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b388369f-ba6d-43ad-9278-48b89dfd55ec",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c54ec7b-aa99-4a6f-9c0f-d28f77a50fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dd8379-9c4d-43aa-bfe5-7f192411099d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9115aa98-2623-493c-a3ea-893403d7461f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b654f5bd-d4ab-44a2-ab2b-d2050a986ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2761f2d4-0173-4381-b7d8-71314cc14b1f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c633d5-cbc0-451a-b982-f8fe37710a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a3e236-bb6b-4ef1-a6fb-55f51fb915ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6471f5c2-5561-49ae-b971-907609b08a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2bec54-c239-4639-abd3-14505dd4ba72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b350f35b-32ef-4cdd-bd57-10cd5ba46cbd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6653b39b-f14a-4089-a650-871c990744a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a591ae-831d-4811-afbc-b9cf274d2e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d2d433-df32-4ec4-b81b-e6988956f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a76ee5-28d7-4e2d-a0c6-7e6bd7824e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3c18e9-7832-4788-a9bb-3ce662327754",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78a88a7-3f30-4285-a1db-aa8b5ed824b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c768b8-298e-4da0-8889-6028f67937a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a26c4-8993-40f4-bf51-603b1f3c3a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f333fa-bfc9-461a-931c-8ed67a4652ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0815a40-3a06-420a-bd55-37e8e9691ad3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b0c89-cf70-4a23-885d-2ca845e7b1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163a76cc-e55e-48bf-a2ad-8262b3f09697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d95850-0edf-4ebc-bded-32d62683ab25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5b6a5a-9a8f-484a-ab21-9b34f5702bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d4e63e-51ad-4bef-b43f-3c1908f2c007",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cd897c-61aa-414b-8f1b-404f8955476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89d002d-69f0-4710-bf81-a985b648e70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a418f41b-f37c-4632-a521-406ad3dc599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b62684f4-50ae-4b76-9c95-3bcccda676e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c87af23-8f9e-4c4e-89f6-240998f6fc0a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06431ef0-76ee-4b7c-88e2-4165ef88ba8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d06d0a-050d-4604-9e15-42f670acdc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa643d56-39aa-4446-a1f5-07c9e3ad7947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f463da-d9a3-4328-af69-cb2d97ec19df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57af098-d9dd-43b2-9478-85bff3d73b3d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fab47f-3991-41c0-a665-419ed8a97393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14611c86-4ce5-4dee-afc1-8bb3f64da34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab59a3c-8a42-4c28-abff-80bbe057950d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "316f73cb-291e-4ac8-bff2-16ad7ea88d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a8a47d-1fe4-4ebb-8cb4-170e9c5a8728",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1415834-93b4-423e-b5db-88e3dad40225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf06c52-c8ee-4748-8f9d-f2a31d862fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d399cf-4de4-4b9f-bfbb-573257dea2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8af009-e942-4e08-8417-c308e382ca15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4407ec2a-fef0-42a3-9017-b76b36818964",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b027a11b-5103-4509-bbd7-0b56dc4f9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d64961f-a984-4483-a5d3-7b56d39e8643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c731f85-d84a-4ee5-8003-f364b4befcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82080428-84c4-4f08-a0a6-523c2ef260f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769f4404-83fb-4e59-b1c8-ddb759619100",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0530522-8205-4b2a-ba8d-109fc87ad5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76beaed3-8f53-4597-992d-a773381ed0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84417a77-0822-46e2-af58-c95d8d2ca6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ada6cee0-6938-4e27-892b-39d475d966e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceaa8bc-cea2-4a8a-b5ed-7aca179f7585",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c832a8a-7263-4c38-bf27-9612677b9297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9165c8-1698-4a20-ae74-19dd31ff16fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9bc6b2-7cd2-4bae-b9ab-75efa273f610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "87dbe7d0-02ba-4edf-9cb1-2475f4b22901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b005164-11f7-4449-a357-7e2515fb0128",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74d8dfc-30d8-4cbd-aa95-f23c0daf2784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792f318c-5158-44ad-8403-41e37711c72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df4c601-fd1b-45d1-99b3-c547e79c9a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "078851c9-45c3-4939-a27f-4b6831ae1f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c32687-70cd-40ef-849a-eb452670b963",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cecb92-fc6b-4faf-9986-a0dfdbd0ea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e459a9b-53eb-4dd0-9017-1e37275fcc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935f976e-e2bd-43a7-b648-7ffe2bc5790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db442eff-950a-4f53-ac57-711cf91b6e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00f6bc4-f7f3-4f8e-9c3a-99617197c445",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45becb49-f0fd-493f-8b5d-a726fdeecc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d460af-0af0-4c4e-97e7-6e7d118abb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40902bb4-dd67-447f-858e-865b8eb2e04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29e3418-47d0-46ee-971a-97251406a3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1752c322-5ce5-4a14-aca3-2d132a4a460c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cf2cfe-f723-42f8-bf2a-063b5237266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef34c5cb-8d40-462a-b5af-1a8b3b9d81e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5687e09d-0be6-4438-b997-92bc3b6d3b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc8923f-8795-4f60-8fd6-c19e6f542489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed06774-726a-4cf6-bf0c-700928770799",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed37a83-8211-48d5-9fee-ae16181fa720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d618ed-da4f-40a5-9662-4d19fb69c95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695ab99e-c999-4485-9df5-9e64535bb319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e130c2a9-97ba-4867-98e2-775eb0955bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c47ae38-1c92-480b-96a6-96cbaccc13ec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2747c44b-a494-4764-9b34-9caa5c63bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0098f1b6-0701-4233-aeeb-6e13d1168e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3d38d1-8ac9-4270-b2a4-d0d968e73b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ccff0f-b56d-4e62-bbc0-92beb250c455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf51c0d3-8241-49fd-9664-81f29b351586",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6458c-dabd-479a-8fd3-11580ae6dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abae4b01-23d1-4303-9693-4ba15c448ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a486f-d503-4f1e-9309-031b69964f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f33295e-7eca-4621-aa4b-7165ad14742b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a2621a-c3b5-4201-a2cc-0dc91e999a52",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f332799e-196c-4537-b946-435503f80fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d595b7a9-0b73-4ba1-948d-f07d7fbb7f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5fae4d-7c39-489c-9835-36184ee82164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87ac40f-fe5b-4962-ad11-d1c104febb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20020239-58f2-407e-8a96-470ca68a1ac2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e339f4a1-9e7e-4bf0-ae56-aabae76a5906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f69417-487c-42f2-87ff-3932e5ceda70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f704d4-f432-44e1-b94e-4067d6275b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ba4862-d8c0-42dc-964e-b33c2e5bf2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701f185-62e8-4f15-a961-75ff073afd2b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a65f30a-8185-460f-889a-32b4ed106557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56de4e57-7b03-40d6-9203-99af28f7c680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b2b73f-2bf3-47cd-9db3-fc473a59077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78b0a20-b3da-4223-abf4-72682ee035f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afac730-d724-42ff-a238-ca821ac2e732",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba56d6ca-72e6-4252-895d-1ddcdd520fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9781fb9b-3c23-4a26-93aa-d8246bbe5e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759bddcf-de72-48bf-8d23-607581842ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "308f009b-3b12-4474-ac70-f1e0dd2aff5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76fdc3e-4ba2-46a9-9050-804c245682d1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9270a1a7-ac96-4ebb-8a74-3137e5f06246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecfa7cd-986a-417c-896c-ed8605456215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bbb21a-50ff-4c7d-ad98-eccbb6dfb242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5a0577-23b2-4122-8831-0d7c1e4ca474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42fd254-3694-4379-b3d5-5a348929fc56",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940fae6d-2b21-4d6b-979c-3a292838c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9294ecc0-aa74-445e-b620-e63acfc44536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707ffb5a-8628-40dc-ba8b-b0a81f4d96a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0851b5-9697-4e7a-b35f-5a325cf02240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6651b3b-f1c3-4258-b9db-d69bfb9e6f45",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4f8bf6-a41a-4f96-9704-6c62c09e68c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bca70d5-edb4-49b4-8cea-59973f8a2e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df37401-e8f4-468d-8309-3d2660ed15cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a43a6600-1c3e-4ef3-a692-b2ca34c8da91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14707bd1-afcc-4881-bdc9-9aabda081662",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdbd04f-f5de-4a81-b601-21d41d3a4368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23075041-af2d-4255-98ba-6735cfd588d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c0245c-200a-42a4-b931-58797fede328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "153221d0-52a8-4079-a451-2961a9a8bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786d3397-63bb-410c-80aa-451d78ede0be",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e32144e-e4dc-4c85-b77f-943bbce873ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840d3ea6-e097-467c-bb1c-203e0be4ec03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef28f5f-45f9-4aa7-9e1e-fbe88c3c0b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0619793-0836-4432-87bf-fafc9877f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3932a387-2ac0-4e9e-829e-78298e5908e5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f331ce-257d-411b-b99b-54517fc119f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb33598f-004d-409f-8dfd-f7fc4b937f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db75cb-5677-42a3-a452-a3b92bd929d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "869dd27f-683e-47cc-8171-71532b2b0cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3fa78e-6c89-4982-ae77-1e0a256808ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c3232f-67b9-41ea-975b-d0bcef56d8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d7f66-cd26-48a5-a62e-90d3fbadec05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b7e6d-a1e7-4b53-9375-9928cd7b291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13d524c4-81d6-472c-8956-d8588a298fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de54ed9-650a-42f0-aafa-e6d799d9b434",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacdd76d-6bed-4d9a-b0d3-f6606a0bbd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2930084-9b27-47ae-bdd4-69a031a790b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fdee27-80e4-48e2-ae4f-4ed6323c4e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c088532e-6d95-470f-b84d-d0ded32eb007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f202d601-ac58-4386-aa5b-fce91c8a6a03",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490cef96-da19-4272-b182-036544655d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf40db6-a31c-44bb-9c5b-08978effb599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3c913a-af6f-4792-b542-398ef3681fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48888c2d-0392-4815-9162-2d25f14bfe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5540c97a-5b3b-45a5-87d1-12f36d7edc8f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f499849-97df-43ce-8e98-28b9939b4500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dacadb-4ec3-4c7e-8232-4a0cce772fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacf3775-005d-4438-ba55-2c98e884b09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "954bca3a-48ec-4909-bcb7-8355e0413066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b89550-554e-410b-882a-9ce02a2971e4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f782257-15f6-4c28-b05c-448346ac6ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d7d241-aa2e-4eb7-9066-b9db7ff35a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e13d47-6ef5-4a31-8af1-9e88fffce0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaa316b-5048-4e21-8608-605ef4c6f25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb4d513-0f31-46bb-90f8-55915e29880b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccffdd1b-87a5-4afd-bbeb-82267b4e8e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d5df7a-65dd-44d8-95cd-56ddb26f48d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e5389a-01c7-4638-98e7-4a22b461e66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea40515b-56ee-4fd9-9939-d4da5df1436b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081edafe-4446-4be7-850c-0c8e25084e1e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fcb0c0-0fef-4461-a3a8-eb8b87bf91bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca75c0c0-cf48-4e98-8127-7602e711c5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d27e9b0-5e66-4b15-9508-2328dc2f45e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03f1fc29-6e60-4c36-bbb7-d169093f94cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7891d-a979-4ada-827e-21ce76fd92cd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e90cdc-2af3-4c8a-b122-4f524d283b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e551ca3-dea0-4627-8306-de2b32abdf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0957e840-abd6-4892-b2b1-698d09062d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac033e2a-5c58-4872-bd86-43bc7d99f155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c74df2-a028-4146-9ce8-c91a7c9903b5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca28a299-7c5e-4326-8131-cbf806eb611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bb635d-0d48-4f3b-9f94-7908b5e65bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d206dd-643a-4608-b14b-608f9efe9c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1ffe5b-64af-40cc-9915-6c45004954b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b9477b-cbb0-45ea-82ca-93e6c1f7adca",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15411d7-bbfe-4edc-bd07-af22d61ca4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a201f43-7bb4-4b2c-8375-a2481a4309cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aabc90-b1f4-4fdb-ba71-6263bb930b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08cc9810-736d-470b-842c-b1c38a0c3666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55db804a-57ae-4d42-bb6d-44e7fb15494c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05380b45-f2cb-4ae1-a09d-9d7d8ad391a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f6b87d-e845-47ac-b058-8d59bf499fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0562a078-2fdf-40d2-8969-8913975a9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d60f7f-c844-46a0-bb53-4492796d0409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9807c237-0944-4e12-b72f-834472d9c288",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bf34bc-a20c-4c1e-828e-7fd52b0728b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518fe2bd-5ca2-47f2-8832-b17ccc1c0094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6de2fd2-729e-4738-8e7f-8e5471e46eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5437bf4d-ff5e-4c5d-9d1c-c6ad22b4d435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a13ff-1fde-40e6-add3-1384bba8e24a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da339cc-ab82-4e30-8729-57a29388941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f050fb26-6648-46ca-8c19-85d3e550ece5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd09ddf6-fa37-4332-9468-f2508bc0d6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdd99d1-ad14-4617-bb15-06c11563735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26935e88-b69d-468f-89e7-2f2a3bb509c6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b1b8ac-4425-4ca5-8225-b9d430b64a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b5bff7-0e8f-4843-aa9c-1cba77d2314c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a34b74d-567e-404c-8f07-a08823554a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abaef63e-358b-4535-ad4e-adcce4a271f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daa2397-5ccb-4524-b397-19eec3306f1f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e211b0-aa69-4ec3-89e5-456d402d3b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1c7c68-3b20-4515-bd4f-a0b39e9b984d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf07aec-72c2-4384-abf6-ea4fe6739309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd35d91e-b2ec-44a3-898e-c73b59e5934e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668213ca-aa6f-4800-9315-15f91cab3bef",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d607d-7f12-4ebe-b832-2d33da952683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53c591f-f707-4237-8995-b350f897ca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9a6605-0625-454f-8075-8875a614ba6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ca7439-eebb-4a94-a99e-9896ac016780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712f4e6f-b561-41b6-8ca8-ede5cdd3d436",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71a2294-549b-4bda-a36e-0a2669610ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf264d5-25a2-4e69-acd5-38fef16440fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6089719e-1408-4679-b08c-b285ecd31cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1921b183-e9f3-4eb0-ad4f-9ad647e6726a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ac57a-7295-4a5b-b0b1-ea52f689c513",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3b98a6-d53b-46af-892c-3984f42b5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59558f54-11a2-4db7-9f4b-cdf54b461036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d91c123-bd97-418c-a9c5-c1e538a5e323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d7bba9-9db8-47fc-af10-241c39bc00ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3fbbeb-9d02-4029-b302-667f69d3dc45",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da903789-eb39-4000-8049-162e47772ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "785a3272-62ba-4344-a290-ec59c51e7c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b0dafc-5bf7-41ed-824e-cd7bae99f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8aa366-7a3c-4e49-838e-49a8a4985266"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d908249c-4bad-4f05-bc51-64fb21bd7ebc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23107a98-3ab3-48f6-b520-441ecc5764c9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457f0e0-20b2-44af-beab-b00e99e9ce84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e9d8f76-71a7-4de5-a2c7-8b2657494c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f7fd74-1600-4b55-899f-44de5869a843",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efd21800-5b48-43df-96c5-7e1a6168431a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e89c065-3769-46de-8af0-097ee6bb55dd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0690e7a-7261-4721-bfac-cb66ac680a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "167beeb1-e7bd-4118-95f3-c3e3858a9560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3861026e-a06c-4b73-a11a-481314fc0b32",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9da1aedb-00be-4c52-8fae-d9a94e88b60f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "865c1ccf-9030-4f53-a1ef-9deb2a82d1a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35fb9a9b-3e0c-4871-b9e8-07e35d7c92d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea3be567-32a2-4ac5-8f86-a40cc6f4094f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7ee70ea-6302-4789-ac5a-c2168a9a4e71"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b5fa2ac-1225-4b3d-9cfd-5c519573fb3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16456ca7-8d7d-4f8c-bac9-7264d256cd9e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f676f61b-dfd2-4289-b307-c6265012bacd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7abb8f6d-7224-46d5-8cad-a9f94863f0df"
                }
              }
            ]
          },
          {
            "id": "3c5de3a1-d50d-4675-8bb9-d4e96739217c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60b2c635-e196-47d4-8aa4-6f1beb4db3e9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf7f74e5-987f-40a0-8cab-a7b1070775af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36de89a5-f174-454a-ba05-8efef3e0687d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "505a122c-f06c-4c25-b6e9-e7692c9a0d7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82643dab-460b-4eec-88d2-2565740473a3"
                    }
                  }
                ]
              },
              {
                "id": "b02dd0ee-dcab-4971-a5b2-4bb1e6405740",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30591e6a-50a4-42ee-b812-b638abdefd9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4a88b43-d5ca-4986-b1d8-7efc941318bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2825e9c-af53-4e1b-ace4-8d968af55371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afd835b4-7129-42af-af39-74c2e1c70307"
                    }
                  }
                ]
              },
              {
                "id": "92c3c8b3-2888-42dd-9041-e954ccbc76b5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b8d4035-02ca-4068-9284-fc8f76eb8ecb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73467e99-abc2-44fc-9b51-aa3100aad442"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29e9729f-95fb-4ad4-97f4-29e8588f0552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f828bc62-e680-4737-9b69-63bd316911c9"
                    }
                  }
                ]
              },
              {
                "id": "b986f912-6e89-48d3-8afd-b73e86d85bed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e6057ce-9b10-4cdf-9e39-635401e58792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "686a9fd5-4c24-4b01-8c08-6e92efb5a3e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcce1c09-559d-4d51-b3d9-7875cde59ef8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "143691ff-6442-4c42-801d-d74afe53f5dd"
                    }
                  }
                ]
              },
              {
                "id": "c6a86bda-7626-4364-a85f-59fc9a131396",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24949516-ace9-4113-a65f-d92358c703d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afd63142-e88f-44ba-8231-7345b0812f6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66f4c90e-4707-42d7-b4e2-801def597150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4cca6135-94bd-499f-b358-ca8496896753"
                    }
                  }
                ]
              },
              {
                "id": "feadf9bf-4ef7-4bb7-9a6b-62a139e1757a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ca2508f-3e27-4d62-9bbb-2b12dbd20cc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd7f3d50-c570-4cf0-90c3-65f34d5167cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dc7d10a-6dcb-438c-af28-6e9b91a194e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c690307-0184-4829-b097-14d46a610be3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75490a44-1196-4f0f-adda-e23713bf6de9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a677369d-5c04-4a37-ad4e-cde96513f9e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1e2c9eb-c307-4636-a524-3fda738a277c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e263246-9c28-4690-bd4c-e3248cd7ea13"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd0ba146-1aa3-48e2-8fac-1e287ef69a08",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eff4e30a-759c-4369-bfef-70f7c8dd5a75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81537d21-a239-400a-bb69-cd35b60890cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "795e53c2-7e26-4642-9311-a8c09c2dd791"
            }
          }
        ]
      },
      {
        "id": "b68be921-aebb-42e4-bec0-1c743b9628f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5d9943d6-3484-4df9-af64-eaf5fe32b504",
            "name": "Negative Testing",
            "item": [
              {
                "id": "170401a1-e7d3-4b54-8476-5927ff48d6a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca5b5241-34fe-44bc-929f-378225317710",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c2fe1d-c905-4943-bc64-71cca70d4112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2842309b-8cd3-4636-bc5f-ec555af65c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9163d719-a0bc-4488-9a6b-c0321eb459c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53659bc-80b0-4b43-9a78-71af3e4eb625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbdfc8b-b2c3-4d6e-911d-a4b9011372b5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750f62d6-ac3c-4a46-ad64-dd73fcd35bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f0b904-b269-4ae8-833c-3d2d504fd34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea9693c-ebda-419e-91c2-52eda0f28144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4dd8a7-5768-4bd6-8988-5520c4df6993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe5e3e8-975c-414a-b75e-8f93d203f8e5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc92a916-8637-4eb3-b2d2-469917df4f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11afc1c8-c007-400c-a0b4-dc9bd5859865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc2472d-347e-4c75-8eca-f4eee9af23da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff6ac70-edfb-4409-a274-3074e097603a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd48144-c845-4a1e-8575-4ed10d5fbb0d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17711c11-55a8-48b7-bf19-c32561291e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ca53a3-f4dd-4ab9-a5dc-8a9f8dfc9995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d62075d-85ca-4715-83e6-df9b05c69b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba31d89f-2054-4736-a488-4248c569b2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd3d9eb-07ac-44ba-92f2-6e083d235399",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c1e1cb-509d-418e-882d-d3df414c0036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5575e45-bdf4-4669-bea3-56572887080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ee145d-ef55-4fed-98ae-5eaf23d5d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb7957b-bd9c-4bbe-a9a1-6eb002c1670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b43e06d-c6c6-4ace-88f8-5acb1835dfbf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3eed0e0-fcd0-45e8-a226-5f65f848315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b17343-04d4-4628-bbe8-bdd2fee9e3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e406becb-9988-4329-9c0b-92e4b24e3c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "354c75c7-74e8-472f-8460-e64943d16274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096fcc4f-cfc3-45f4-a2c7-8f58f7750d4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b676dcd-edee-4af6-9faa-5b199e69f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39e5c98-bb02-4bd0-b2cb-58d4f0b5b59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5044ff2a-51c9-4428-8244-abd4dca31058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3677f22c-ff96-4c7c-9976-9ee93f78bab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9570477f-3a01-459d-aae4-3e4c64d3e299",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9fce3f-2fd0-4860-ba84-3d346b38ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d40736-c0ee-494a-a737-83a1335981e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2689d1-4da1-411e-b00c-4bf5b234f43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "164b42f2-f47d-447c-8da7-d4164a53aef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d331cc-6c31-4c9c-9b5a-41ff8bc8d349",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d5903c-8426-4a3f-9869-e1a386c63a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109728a2-0b51-4c87-890f-4e29ebcabf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e3c6f5-33d2-4ff6-bec7-9076c8db63de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbaf215-1b87-42ff-9e1b-7ed56840e482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebd117c-df3b-4d8d-9663-5b44823af151",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2451b16c-3258-426a-8f36-ad6670746b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723d4e50-261e-45b8-810b-12bb77318226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6b565-bfbd-43a5-8a2a-924ea34071d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "346eed7d-0245-4f60-a3a4-4e09640b6f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c326e6-9b1a-4c56-9f02-cc8cd643e615",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b8efe2-87e9-40ce-8988-efceb2c2af9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea17944-163e-4c16-a332-3ace13c275a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45abdd8-a471-49c6-9ba0-7cb98927566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "804be417-0fbc-47f6-bdb0-b05412484c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d8e09d-1b6b-4ea7-b66c-0702f8c4d24d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9936674d-c7ed-4e26-b887-dfcd75cb5110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4b53d9-d8fb-4af0-8f6a-61051cba0dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb89947-38c2-4843-9a31-773c1e1a9510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59d9e3c7-df5e-4354-a33a-634e34bebb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64861e9d-caf3-4581-b073-e3e753bd3586",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78d7ee0-0249-4164-95b9-8b0a56e5bbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26a3b8c-ffb0-49c5-b35b-b936f0e8ac60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28521d8e-6960-4add-b21e-c9795904b72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89ed5a6c-b460-46ca-b175-d583cebc1fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc536a69-4f24-4918-93dc-f2044b5f3a36",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6531a6-8ef7-430a-abbd-c9bf4e1a91f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a3839f-ab2b-45d7-b8e6-440a4997109e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb45daa8-7154-4949-9870-5d012575902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "039b75ed-9691-45ee-9a68-27254fd36e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e9c37e-86e7-4ab7-bef6-1cf680a58aed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab63740-cb0e-417f-8be6-5f26636022b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d86ded-b71e-494a-853d-1167777cde95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ca2852-21c7-4663-bd42-d14c783bc38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a042a71-5333-4cc0-9d5b-646b26697855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cebd7b-9fc7-4dfe-8c4b-32f7d32c2b7c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66041fb8-2961-4401-a685-b1e168afb4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ece496-0848-4984-8597-e51559f8f6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb89c7e-453b-4c02-9690-95ab364bb0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfb0c4f-b2c3-4d30-b8a2-8588a2a31e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f37241-3683-4a7c-b59d-0950dfa6f6ae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa7290-62af-4490-8365-701376fccc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962b3198-564b-41e9-a417-c35ddb85ffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f4077b-60e9-48e3-9752-0535ca096106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1570c9-fb9d-4758-ae47-699b455a3e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2656d0ad-e382-4000-9919-4b597b2acb77",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc951e18-3dfc-44a2-b0d7-ebd87fc410e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c056888d-bf57-42cc-a911-d2fd4796b076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f3ca45-ce76-4a51-aea8-528aeb8aa648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0599989d-2694-41d8-9e48-f6d576c5c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5c0548-d663-43c9-a738-369e519e77df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd7302-d17d-4a9b-a061-d394d03f719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d466407-e1d4-46c2-a26e-ed38943c18b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a015f4-2737-44fc-a0bc-09d68c740311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee8edaa-78e3-46e6-b8b6-9c4886b74b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56da9f3-dd0d-4ffc-9eb3-04be2f687121",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ad97bc-2feb-4d7d-959c-9ce759fd609f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d669ac-188d-44f7-8cdd-ebf4d9962870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767b768f-beaf-471d-a118-11c14cbc5c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff286480-bf92-4995-92d8-5d11718d5c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b092885-72db-40dc-83b2-f60a9959c16e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c130375-b5ac-4931-8651-2229c8c9304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83169fff-bf7f-4af6-af8d-c08f97a852f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6023b8ba-7e64-45b5-bd29-e851da64c819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34866692-3bd8-4010-aad8-1560767237ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb6a44a-092a-4e5b-9baa-445160d21e2d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfbf45b-b77e-4796-b080-1f0665c46dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2709d8d-6835-4f11-afa1-49adf7a864d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acfe36b-446f-4607-81a7-1c72913201ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ef3c17-d25e-4ecb-afa2-e895afad5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034876da-41f4-46fe-bf92-d10a66666d22",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f71ab2-c0e3-4c13-888a-0e122cb18b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae2c32c-b383-4d5e-97c4-4eac15b383b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caf8042-af12-4569-a491-6d922e9233df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7b22c1-2233-421f-8861-ac38d3b80d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77864dc9-791e-4f25-81fe-a63342d52994",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f8dc2-9fc9-4e9e-b092-51dd4d3a456c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89812dbb-f915-4b6f-bd63-da555e1245f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157525e3-2896-4ce2-aa19-355653d41c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "663f8e41-8e49-4df0-8258-7595b1e54068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edc1eae-be30-436d-b209-2f7229ca2b94",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecfa04a-59a6-4ba6-bb30-72f5f0c0fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c305c55f-bafe-4c4a-a8b4-e46698d0048f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2ebbf0-247c-417f-ae0d-deed6bd3d623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5822e28c-652b-4c17-9a44-1246dab27fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b80578-463f-482f-9f80-b5b41f018056",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a92658f-a152-4a66-a4f6-e6d780016909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6feab5e6-4fc3-426b-a315-318a24da4a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9024a1d-93b6-4e74-9e64-a019a0ac13b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0f951b-4146-417f-9393-4dae794d6d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94aa500-1a2f-4b5e-bbfa-838c1d8ebc6f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee34fa-c34b-4a29-944c-b3f811272d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a370e852-883e-48bf-b28d-7d1b1f143f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c98f10c-2d50-4b3d-8de0-aa008f74be6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06952035-0354-448b-847b-e1b86758a7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea3e7a5-74f8-4dd0-a9a5-fa3e12fd217d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095b107a-71aa-4800-a57f-bc0465a88c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05107f20-e699-48c9-852f-c4cfebc341fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51792cdb-9450-45e4-95a0-031a400d56b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f60f20-0986-4f18-906b-9ff9ccfe7005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9700797-fbc4-4c74-b213-2084728e936c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48a140-3bed-492b-b7be-f2ec67eca720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee83742-9802-40dc-8416-8b4fdc419155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f48de30-2615-44b4-b62d-f24799b26e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b61391d-4d5c-48de-9a50-4dcb8f439c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcdb730-e92e-40f6-9785-30b40f9bf38f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe1196b-bc9a-4740-9431-4bfb2a4b3dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a322878e-cf68-468f-9db8-388980fdfbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaec490-7e6f-4bf2-a8fd-68b362dcecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "139024fb-0cd1-450f-9495-e54b26fb6eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800fab17-aa15-4b32-bfe1-762607bf3921",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18f41e6-3ed0-478e-8d9a-68f19f0e73c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a7139d-871f-4203-a2af-03b91715d0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf5479b-f6a0-4140-812b-52b748957750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2827707-0424-4bef-8b08-ebfe7e2b1335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de823e51-5dda-4eaf-9477-5a3df249a202",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bdb730-90f7-4901-ad15-35e296d33f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2559b3-98b4-413b-8914-9a2e26b7ff86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c27eb6-abf3-4af7-97ea-fe10ded971fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75262c07-2578-48ce-9373-7c949376f1f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5c09177-24bc-4758-bede-87ddeaba6ce9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05c98514-52dc-4eac-865e-41f867e39cd4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97cbf1c-1f89-4699-8799-06946ca55992",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "39ab84fe-3113-4a0f-af0e-433e1dbeae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8985d90c-6621-48b9-bd9e-4d2182bc6028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa66b094-9f7c-42ec-81b0-b4b6353c8c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2cd299-e2e3-4634-b82c-154abfb3e7b5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2042e811-ccec-489c-b2c1-9db79240f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5aacb6-872e-401f-8762-29ab03dfbde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53927d6-fdac-436f-bb90-5670396b199f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce457f2a-b4cb-4b44-a5cd-4e0a6e4f52ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df2564b2-6429-476c-a1f2-b3d6aced78af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea6c8210-74d2-4145-a403-d1f8bdbd64cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f64c6874-2257-4762-aa4d-cd9415427309",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b85a4648-74fb-429e-9662-4d7498da5675"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1734a2e-6a1b-4841-aca1-b277e917308e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab231135-90d2-4878-a39d-a6db7c5f052c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98d6bd1f-639b-4b59-8950-59a43fb13b5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99b6482d-20f3-41e3-854c-a06e0173467a"
            }
          }
        ]
      },
      {
        "id": "39ba0139-958b-416d-88c6-19d54097c6cc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "54396a7b-9097-4386-a731-01306aaa9c93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3dd54bee-745e-48e5-b4b9-23263f26d1a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "228274d5-a77f-474c-9692-b0e8f9b01783",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd866a08-1d35-4e98-9976-cd19f3010e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516b9ca5-a2b6-41e0-84ee-8f7839e7f996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78249fc8-029d-4bc3-a257-44a165cd5bf3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f4434b-f6dd-4c7a-8a91-2ce058ebab2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90eae18c-39ad-4f94-b057-4690ca042843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b5fa7f-74ce-4e72-8997-5d6cf3ba0fee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb003529-b6cc-4c48-91ee-76a3c2453c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adaa845-07ac-4767-8f92-0b2cb5d06121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6171bc-ada6-4f01-827d-2c995be6b6c3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b1d053-e732-4178-984f-e09520376be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428fd472-faff-4de2-a68e-ee2728b78b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d60812-2a7f-4d45-82f0-6f29eed0d5d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951f4da5-b94a-4893-9d32-48f707fa6ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85b584e-2229-462a-9c9f-0caa004fad2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5f9c11-37bb-4d30-8166-ac918dfeb147",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4a5c5e-e4fe-4831-ba3d-f67e2fbea9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62baa997-ba82-40b0-9036-7da494d968a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8434e2c7-daf7-4b68-bb2f-5c624e165dd4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0976f35f-2a62-4ba9-8d8c-bcf01e5928fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4182a08-d099-4602-a2ae-f49f0d5675f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaaed34-b0e6-48ce-8541-43bec4851d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0bc31e-d266-4bcb-b553-2418335b4830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc866c3-73f4-4275-b531-ac2ecc31d501",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73afdf97-6355-4392-8939-6ac8ce5b5a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ebe5eb0-4bda-4e06-a9c1-7786f9373b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3415b4db-beb7-482d-886a-f1a70242236a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc10c0a-1e2e-4628-aa57-e36d064499c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30db3ca-a929-43b7-b1cf-1efc7543b852",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027e9cdf-fa8c-410a-8e3b-ec36ab565ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772fce6b-d011-4889-a2b6-65893f7696a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb9bdfe-918b-4305-9d8e-c67f0a33c22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f845f3-6ea9-4713-97a3-71e8ada2a63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408c6bd2-814f-4421-a626-6d58a3c51b8e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c26fd8-e1fc-4555-a0ff-513a041ae898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d1b471-bf49-4b0d-8700-4757f9b67f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88676fd7-21a4-42f4-9c78-5d1e3b1d2d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f8bf2c-e819-4c3a-9791-f9f5415d2500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ad4183-593b-445f-9934-2860bd001cda",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5467540d-8512-41c0-9fb9-12dfa858b47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd8c500-9fd1-4416-8b04-56f75a7e28a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16ec46c-2627-4e63-ab0b-76ad597d78fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcac8c0-76ae-4e11-a001-ec348de85849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2223444c-47e6-43a4-a695-19f8129d55fe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b187c8-7789-41ec-94fc-3632f552524e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec1d578-59f6-41cb-a376-96c5fcf1346c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9307c6ff-d0eb-4117-9506-9ecad4dda8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d581ff3b-dff9-4715-80a7-f92a9886babf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ba6ed9-4b67-4c52-bc30-49449c60005c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05c7327-6bf5-4288-9f9f-0533c80ae70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac7940ed-8214-42de-a525-3a8e061b31c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fecd40c-c777-4335-98ff-c764cee3bcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61feb5a-7f59-43b6-9d8a-43347377e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a7fb2e-4262-4f43-9578-ee34b1dd84ed",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f908a2e1-88d6-49c1-9c59-c3e4cfafcb30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e840dc-7aeb-4af2-b975-056b59f27dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b98e0f-ddab-4cf5-92ad-e9f321464f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076140ac-06b4-478c-8859-d6059cae2385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a14d6e1-0b13-4dd0-b4ce-6b52d1e4ae78",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd0f26c-1239-4961-9e54-55d498b1cb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a7809e-b330-47cc-a0e0-45c5052e56b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f5468b-5d72-48c0-8834-287ade9651cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87affd45-c5c8-4559-a80b-e30f01fa13ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9433084c-2096-4a41-9b89-f5142ed84c66",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89d1f7f-3c9d-422a-8d59-0d24da1900a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf98637-fa23-48a6-9032-91e7fcbda37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e8feb0-d75f-4b5f-834c-72771d9a6103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8588c5-f89c-4491-a692-457d1e5158c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93306a7b-e4ac-411d-a8ee-d7e7790a11d6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc8824a-308c-4140-8f94-a8d79f9202a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cc89c5-b799-4fc4-9d13-bdc1c4270c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19b476d-834d-4bc1-88a0-72f447ec1691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdb4091-1ff8-4417-8310-2b35ea840975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ab6227-b5f4-485a-8606-bb1c816092eb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a929ab-8625-451d-b5d4-325dab258414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d209b36-588b-43a8-b00c-88a43d21f64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45af8cc4-db6c-4c62-a25d-c8d35f31a36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad048ff-d020-4921-a168-ba6fa4d69770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d27eef-918b-45ce-b830-8209b27e4cea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d82582-e1d0-4d3d-aa7c-b6cf18b0e98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b809d2-4c53-4b01-ba79-120466d940a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27192f03-5a32-4db8-9463-e73a4dd9328c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6c5684-6d35-4f5c-9b0e-7982be5fb786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c2d211-d719-46d0-9bdd-be257f06f5d4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607fa66a-028f-441c-b1f4-6a1237a6af16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28b15ee-3561-4b13-a571-1a1e55a6e026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2e28e-0935-4c75-86bd-938735908fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a9a7b9-72d2-4b6f-a764-6970a66d605f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ae44c9-1779-4cad-af19-8c290cd0a09e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca93bcf-1a56-4791-93d2-5ac31716c8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8df4aa-4868-4b8c-ad74-587aa64162c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ac2d40-98bd-4653-a4dd-eacbd77ac668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9243686c-b824-483c-8382-4b008543b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8900402-02de-4206-bdf3-0300afb723f4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4ca826-0203-4e2a-ab3b-909fd605f7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622ea1bf-bc84-4321-b41c-a4bb931c8c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96c74e4-79b1-435f-b60c-07448bc16ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277d8eac-069e-477a-a0f9-5e6d792b996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8a1165-4115-4c42-b1f2-9b35e36b0cae",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa60d69-80c1-4d7d-9a61-73545e24a0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dab67e-8c9c-414e-be0b-94fd6684cd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acc2372-076a-40ec-bf1a-bb588d3d03fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd95eec5-3719-4024-af64-430a9e185ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe9804-a6db-4a41-a9af-4385939dd1e1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b098c998-2f8b-4f8c-91a1-146a49ac9ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0593b0-1f76-42d7-9e44-350e7f37298e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f182cd5a-87c8-440d-93b2-02161aaf2aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456cd6bf-db59-4b63-b98d-473001f98475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d4ee95-168c-4065-9c72-37fff489c3ab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533a3396-0162-4ed5-bee2-026c27a5fdb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f213205-7fb7-40d3-bfcf-68ff79a30076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827fb055-a101-4bf7-8e59-7d79c8131328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026d390d-b15d-455a-95a1-9ca8343d9fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815c1dbc-22a6-4c2d-b16d-f258da235888",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0504de-d625-4e66-b327-f75525380444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d93b5e6-1fbc-4f80-b0eb-70800c23b06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3940a359-4555-48c5-9c17-6df3b6134942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1867b37-a883-434c-9335-593f72391a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95284f11-dde6-46d2-9d57-a8bb2cebc19e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d39bc-9cb6-4621-8f21-7679b0095b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4225c42-713a-44ca-9f49-c3ea3bf1e32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a9fd3-a68e-47a2-abe8-d354174e389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91932f2b-e19f-43ea-b013-f64ef24744bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32683efe-9f80-4519-8bfa-080c49ecf497",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb31480-9ccc-46a9-91e3-4730a55b93e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5025fc-9161-4dbc-80c5-b99e457856aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e501cecc-c56c-4a19-913c-c0d12b4e6dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e1347-8981-453d-a420-740b4452ee5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae66299-63db-4b7f-a5fc-39781e56a58f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96333e66-1fc5-4522-b8d3-9fd2d5963b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016814c3-3c81-485b-82ba-dfc665596bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f428a5-5245-42c3-abe4-94f434001736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaa661e-cc77-4ec0-b121-03d5b74690e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed9ed00-dab8-4d54-a6b6-7414b2fee138",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cb256e-f7dc-4f71-aa9b-4ee21d95a274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e022e7-e1da-4d37-b0d2-8724e490742f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c460a290-213a-4951-a60c-f0140981ba9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1937aa-80f9-4139-a8af-7257020d25cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bdc857-0d7d-42ec-8dec-419256060775",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cc4c6b-c0b5-4f7c-b3ca-3c6dd9fb2d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d9b4a9-5e71-4369-83d8-4da3fb324015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dadc4f-3a5f-4a79-84e4-f2024a29c020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aab6753-f5b6-4b2e-91b9-ee772365e25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b1272c-a8c6-42b0-bd3f-76a3d0424f35",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322bccd1-69aa-44b5-88dc-7b43ffa609f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d185bd-9c14-4580-93bf-e32d7046cae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a363d8-d2c7-4559-afba-b813d9df6f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff9547c-361f-4b1f-9ac0-97a7d9284385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff4059-3bd9-484b-8219-eb2ff1d1b461",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ed3234-eb79-450f-8efb-4a8e4b02b297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38cc3e4c-1543-4073-be77-3f55fa3b55e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57c6b78-058c-45c0-891b-99f9b0202090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0905d83-fbc6-4d45-a941-3487bbbaf54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e9f6e4-e731-457e-9483-5d282ce142a1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f02662-1c6c-4c01-8303-57f4bfe353ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb68da12-7c39-4320-ba75-eec0e3dc6be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7340e9-afbd-4042-8cf8-a77bc1f2f6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ae799f-e6c8-4ff9-bd2e-16b2ebbc64a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cb5668-b26b-4f31-8682-9597d0684280",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6d3ae5-dca9-4de3-9afe-d0bced81c10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c22527c-ae5f-4ac2-affb-0e97fecbaead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84322ad1-b8ef-48e0-a890-118c2e562d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c9ba40-42b8-45d5-9010-6754fc421638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd788e95-7f9e-44ef-b8ff-afb9269008a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a282ed43-9771-4c95-9b1d-eb89dfc813b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c471891-1e66-4ee4-843e-115508b5e41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a6d65b-35ef-49fa-a522-28e696fa5858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d712e75b-0702-4152-aa6e-58d0e1b955ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0a3227-9b09-41bb-be3a-f156c54f8b8d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005e5852-1d9e-4739-a5ba-f794a5ec0a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fde750-8d43-4cce-ac37-504b6c138358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f94298-29a8-4874-87f2-7316c5182d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a605f1-90c5-4313-bb68-aa17c685be0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd2884-6653-4185-a283-a46b321de9d5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8fae26-3fd8-455c-aecd-fddd8c53fe79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdee5a6-cad4-4277-976c-67cc4fcbbe83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5b284b-42a0-43a3-a8b6-9e80dddd04cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696be973-8955-4b30-b986-687f5f12fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b6b0c5-8b06-4709-9c0b-89bccd131da7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25254025-0b55-4cca-9dfa-754b2ec95e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec60b52-050e-460e-87a3-c17204eb199b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb940cc6-9ff4-4edf-b97d-d9a741e1e80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e857184-24a3-4e9a-ac52-1c09c8362f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ade6337-3683-47a2-92c5-43fb5846b624",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6388aea-6b2e-480b-9553-907ac02f1217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eba7cd-0f36-4b3b-9a1f-731088cc1fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dee1177-2b0b-4468-a772-eb6f06ae6d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3a1328-32ae-49a4-8a91-100c42fd814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937db9f9-7e75-4f6f-8d36-2a6710f576cd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90bba31-16f3-46a1-94b2-6b22d1797000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245930ea-f1aa-4d09-96dc-be23aa4b84de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83ea7c7-d788-4397-9f7c-6e7cf0b43d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c0fbdd-73e3-431b-8017-485347b2b2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c3d11d-96d6-4f0c-84e9-9bab053d94d1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbb9945-3ae6-4f96-8afd-5d65bb554977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514bd122-a11f-4793-a626-ee4178dd2040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46cdd38-5875-461f-b91d-16760d514c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6604b04c-a588-4485-bdff-8649f2ff874c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90256da-37fa-4bdc-b787-fa28dc121a95",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc817efb-7663-43bf-97a7-8c3d7ad2a99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d121f2c-afb0-454d-9f6a-24a1358cb329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8894f95e-0043-48ab-9abf-73d37a3c9453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c17bb1c-c337-4187-a0e7-a0bd3d9425a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d26f082-c113-40ad-8168-a1ef96727838",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923135ff-ea44-4b83-b1a8-32fa663aefa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cce80b-2221-4c20-9eef-925aea784a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d11f6f-303c-4474-b247-b0877f2c068b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4077578-c78b-4069-bba0-25708afcf853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffbc48a-1a9e-45dd-90f8-562aac1062ff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7541d247-060a-4d5d-aeb3-d0164051ab58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708dcb8e-45d8-4d8e-88d5-4785100cf7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a83e018-ec87-4a2b-bd55-cc493db7a64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba465e8-2dd8-4b82-9589-a00a385c05e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ea33a5-0e30-4dd8-9dad-8e49fe32b391",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bead084-f1ec-4707-a943-60dae84ccae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6871e0-5f05-465a-a5ef-a5a04d994c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b54d73e-1390-4759-a705-8a8e2e7b37d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f0d9ea-e469-41a5-8e61-505c07474079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc07c2c-ced9-466d-bc20-81956214d32b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be77bb54-38bd-4a97-8a72-2e8ee9502466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd6b5b5-d457-4de2-9009-629c9ae74667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0135fb76-b3bd-4742-bcb5-6732c0daf661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cfe926-43fb-4afb-9a72-4c36b90c4242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304a6c66-3a08-4698-b08f-13bd68ff494f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eea871d-d808-419d-b80e-254ef910ce61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbe7dea-9202-4238-a87e-781c96da5264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae095341-0ba5-412b-9e33-d0b4c3fda647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc55c532-927f-4f0c-8033-be2ab2e51115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c766d2a-de04-4b5d-ac18-b4d473f0f116",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b13b535-f655-4885-ba19-85b946b3d4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106aa1a1-ec06-4d3f-b4d9-a26ace954ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c132e757-0636-4fc8-80cf-564f8cc34a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb9074f-0b78-48bc-8394-ecdac14308cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd81ccb4-abc1-4330-b0fb-fad7b1ccf7c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07efa26-c0b0-4347-8f3a-bb15da011b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36391fcb-6e34-4af7-af30-634f25de3891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab311c7-3348-4992-87a9-7e488c9d9e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70a2eb2-1698-402b-9e1c-71a3ad2e05ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3275ba-9d51-4839-8809-31b4bc703124",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14791cc8-d875-46e4-b44c-06fd79b3bc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5e652c-de4e-4f34-b3cb-b51c910089a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816decc1-6506-4e1f-8819-0f44a0505af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6443c63-3a28-44f6-9265-4b9c8e969a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb8d1b-1020-453e-bc97-d11cac4b3c8b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fbc41e-5e42-421a-97cb-8bbb19d35f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b593d95-58d0-4589-999f-a3c8bd632f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8678a3-1877-4d02-92bc-22dd5e573433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd8fb4f-a2f0-440d-9907-2f0ed7d7ec99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d542e5e8-6c5a-4292-8231-b3d80340b8c4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51a0dbd-3aab-4cbc-85ff-126d39e5cc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de45163e-5955-4a90-ae44-f8a309f79349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaccfcfc-2a1c-4f47-be0a-d650407662c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8434a96-851f-4a67-a895-ef89fc51ab6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edbaf68-e98c-4d32-afab-78b705cd9177",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28d55e5-19e3-4aae-ab94-33acfa260b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6115839e-2106-4c28-933c-6b83d0bb1ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01015bc7-8fc7-4169-a83d-b1bd7f67de7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333dda6c-792f-4046-a3d3-9fb65f1d691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45532ee-585f-4391-8e49-08a59c58dfa3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb1ac40-6500-45e5-b8b1-cacf622e6a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cedef21-ac59-4d46-bb3f-e8b82dbb6139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f3f896-d560-4860-9fd4-d3e4a7f31e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04075402-c280-44ac-a296-dbfee313196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118a15b7-dc3c-4cf8-93df-428e50be1740",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98c7e0-5baa-4a2c-a91e-194a765a18d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471a1781-6843-4728-b1da-61df678d5f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28ed774-35d3-4b73-b984-881299b08b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89b2c5b-8b36-493e-93a4-a3ad77994041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adbe8f1-c465-4038-ae10-f01b57c74810",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92b0f3f-d01e-4f66-ba99-8f84da098e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f618c829-1950-47bf-95a6-f669a0e5d210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62148c84-e124-47e3-8b98-8af4293fbe23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a45971-fee2-4164-8bf1-4aecc4fd8da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979abf12-e260-4514-8760-02096daa3ddf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834327e1-a8dc-4383-99ab-c5c6b873d093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd113ed-dee3-4c7e-ba89-829c2c56ecb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecae99b8-bc98-4470-84b0-c3ef250bc87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864c8722-d82c-4d52-8973-5b4a5d5e7ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460bee33-9c70-4a71-a7ce-85b9320e7c8a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c992bc3-ae98-4d9d-a5d2-8eb14c4c6301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36938961-8835-4ffa-8da2-fd170c351f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d761d01a-0815-469f-8cbe-33a7e1ae705b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ad1cc9-3f00-45e7-acf4-5941755d11c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e0712e-428d-4beb-9824-8f96f1a9d27f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e239445c-8434-4a63-bf63-c4c4767c0555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65c32cf-f661-4d5a-8eba-60dcd648b953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce0be0-a4d4-4ff5-9329-55fe2a631672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc3eccf-9a84-4571-be99-2071ba051cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f27e4a9-f00b-46fa-a71a-416064dbb455",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610a2391-1475-4f71-92e7-22360f027d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54995356-877c-4114-900d-a1a6722fa8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9134eb6b-75ef-4371-95a3-2328cd248a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ea3da1-9188-4735-a817-1df1f2b7a7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97297fd5-d8a9-4d38-b1ac-983313535640",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b500773-8a6e-49aa-bc6d-8a95c9226336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a341bc9-2e30-43fb-94b3-7668970b17fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9982261c-1ac5-4909-b07d-7016d8bad538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd80d91-e72e-446c-94a8-1ece4664cc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b15260-56e9-460b-a697-38d3a06e261b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c12b38d-5949-4407-9d2d-0ad4a796c303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2165b621-4f26-4cb1-ac2e-43815787c4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6687182e-298a-48b8-b5de-b42052db0eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9bb6ca-b284-4fa8-9cc9-395ef060eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b1a76f-0845-4ff7-9aef-f389670aae83",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f626a36-14ed-4104-b3a1-656fa7e51753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9aa3b90-c8d6-4c77-95e2-e388811e19aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f91dd-deef-4546-91f3-a4187f31b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff44d23e-52a9-4d76-b6ae-4d217f8026b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc43abe3-97e4-49ed-988e-3f7156748812",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda934bc-326d-4573-a4b0-7e0ca498f4f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f0d987-8ef4-43d5-a54d-b0aab3e59792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b6139-6181-4ca3-8f9a-eac1d7459f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d018e4-a85c-4c27-b368-849112dc76de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21e3301-cb43-40a8-a928-b161f55d601d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f961b6a-952d-4c0d-9efe-7a360aebbaad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9621823-bdbb-4acd-be70-c63e09110267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8b55d-e849-4d64-a877-44822191597a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e000a70-3c68-45b2-8ebc-63c2d4436b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b313424b-94c8-4eae-9c9a-0b76150c5c45",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7967699e-369b-4c74-aac2-b5faf2da9f55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99274b60-9498-475f-97bb-3617a82968c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96ff13f-ae86-4d0a-a2e1-91eaac82c51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb88ff3e-742b-41b1-84a0-8dd2df6a9c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd9c5d2-27d3-4b86-80a3-632a155c3af0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027e0787-1c6f-4125-bf1e-ced29e269fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c94b4f-ee54-4e99-928a-2e7f7432a08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4c2764-0a65-4645-9c74-8b219e093873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0753759-9867-43ba-8c7c-1075102d6e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c28b1c3-b725-4952-91c8-47ae9fc7d708",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd5b809-2c06-4a6e-bb3c-8e418f383156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c0bee8-27cd-4efd-a9a5-058811659dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a86e8a9-0ef1-47bf-aad6-4dd153a8f09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2424498-f2e3-4eb0-b2e0-937612292180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baaf89d-58a2-4b4b-9b85-e07599bfb763",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d32fef3-ff68-4f10-8455-8ab7205b455a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae68f7bc-2657-47fd-9301-fa30c2ce15f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40cc562-f60f-4564-ba3d-3e7916355745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3470cc6a-6026-4ec6-8a5c-f3781c3a3ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7047099-acbe-4dfe-bd3d-eb223b2e7abb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4348ec7c-235a-4235-8f23-9814f913e8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc5c683-033a-497f-a7c5-7afdaf9eef88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c6d1c4-b357-4140-a860-7c0464b82ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4b96df-cd05-49f5-b670-face25b6c168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5293620f-de10-4f7d-bb55-e996e7b7d93d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759e591-e01d-4bb4-ba03-c6d44066e9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f210d4-1116-46ba-9874-c04c3a9eaeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79317c60-ce98-41bb-b0e4-ac76e370fd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6cf617-293b-40e4-bb4d-1b0dc699ad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b775f83-6585-4e47-a488-d3edf889abac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5edeaa-1dce-4e41-8ddc-0e36142970e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d87b7d8-aa17-4825-97d2-433be6849a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec2636d-740e-4bfb-8b0b-3918b19391ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58505a9f-c231-405d-8800-f479d411c7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea5c615-24e4-42fe-ab62-9fdab3ba49bd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709bd960-60d1-42f4-93da-5a0623b550c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97acc2ec-3a36-4642-8de5-5239d6bf41c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dba6e93-6143-4def-b6eb-60e1dd0cfc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf30f8f-0917-4897-af7f-10616968289e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee36316-e9f8-43a2-954e-107e2e61c1fb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baa6237-aada-4b0b-b3cd-e750e5f67857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec41f04-96ac-4a5a-93de-42fcdb5aca93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d732e6-1c80-4737-97ec-7d056b7e6a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8507faf-336f-4e79-9798-1c31c6d949cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca30b9ff-1a22-4fc7-afa7-71edb4e0db8f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ce872a-f1b2-4aeb-b073-e6d1409e126a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893d2957-4562-4589-9acc-e29f3875aea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576e07b3-d0cb-424f-88f0-5b60705aa33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f29e639-d5f4-4e76-97a8-534b2ecd4118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9347c7fb-ab3c-457e-bacc-b17060a254ff",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ea1876-0c22-4d40-b462-77824802c99e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd95dd7-3e84-48f0-a536-48eaef249350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d165493c-3365-4dfa-9085-b5f7d3171a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cede87-9226-427c-bdd4-d2754483f549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cc668b-f73b-41c9-a169-2e28a0739a15",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e4a35a-e41a-4a38-b21d-2224cc147cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd12f17-5257-441a-9ef1-47d4cb325057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff36fdb1-5923-4bc0-bd99-b1a3f2379ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9648809b-fcfe-460a-9d8d-52c59f633ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943b8bc1-54ff-4fe6-8ef9-8f907be91a44",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7d369d-42fe-4d15-882e-d7e86c1223b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0183c39e-1a0c-473c-9ccc-8d8078fd8ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c4711b-2cf6-4b89-bdd2-019f98663936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4dc91a-0391-4667-a3a6-e86835e83836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b999dc97-9146-46a3-925b-0320c48cc0a5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640e8af8-35b4-417b-9f25-c57996f7d695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c8deb2-64f0-4dd6-81ba-a8f18e09188e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6322a61e-1f09-433d-80de-3e4b01cb2dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d427cff-cba3-4fa9-a446-a660c5b5b163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff15589-5e51-46a1-b876-b6726f89c3b3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803edc85-3e3d-42a0-9d99-5935a9893f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bd0685-01ce-4cf0-8387-3c07a971bb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50fd3ba-1454-4be3-a542-d176a0a6b5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667de29b-cbe7-4638-91c8-19310e8a402a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1a4b38-d5c5-4032-932e-c36fd85b8f71",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050cefb2-5002-4331-8645-1a467f0d3c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46cf5e4-4cbb-465d-bd70-3a6bc9ab0ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce849e0-1573-4ad1-b4f0-3684c714198c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ba7da8-bf2f-4c58-98a4-2fc1a482123e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05561295-f834-41fe-bbe9-5d7a948e4c86",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96e0725-5947-40b2-bb6b-2241b9b8af51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d9e288-5c0e-4df6-be3d-ecbe98b90e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb8191b-9f17-4397-bbf1-b1396348ff08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6146bb8d-5e95-48ab-9e64-bf7fee72baa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0e5e67-0013-46be-8938-5026ca224644",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7272fe0e-da63-48c2-ae1c-bd7aa00b6847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecaf9788-843d-41b2-9fc1-feb042d48f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc43dd4-070c-4656-a50f-ae1cc1e2c813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd86390-c845-4ede-bbca-17bd2ea38660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf651b-3e70-4f72-b8b7-fc21d49d66eb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43db32d9-b374-4f7b-b056-286d82827523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3200cb1c-4131-4cd1-88ed-7bc3aeddb30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3b589d-7820-4464-abd8-a2960972fad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5e7200-1f85-4ea8-9b73-f7410d5466df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2821402-0ecd-472c-8913-88865a51d5ba",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b715c7e-a9b1-4abd-ace7-827820eaa164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fdfc08f-588e-4dfc-b63b-26b18fb19fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615cfb1f-2556-449b-b391-53a38fa580f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be991604-fc3f-4113-add0-b7ec9d4c3310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69e56ac-ab40-42b0-8c79-f4923cfc6422",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e623a1a-1545-4319-9351-7d53de6ebe54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1e3839-77e3-4621-9c76-90a4ddeb6622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1ebfc8-862c-46d7-ad24-f104950480ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfdee3c-928d-4b02-8a07-27c17320a444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9ae130-eb7b-4e9b-950a-b9837317867f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c882c788-0646-4920-952d-107a73989d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893a8724-05e3-4afb-948d-2f7cec0ab4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c670fa8-ae76-4060-b7e4-0678c73bf4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23404f4-5bd2-41da-b08a-90963cf5fa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ad879c-93fb-45a9-a4c0-c04f33d44d09",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be54a22-50b1-44b9-ad28-898058231c31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0070cb95-a266-4af0-9734-396ff07b58df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b70439f-7b4e-4f7b-b87c-4e97907e9072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8620182-effc-4913-a999-34a1a11b7c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f939e2a6-7397-4893-b4a7-c16f6b198a7c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434fc218-5d38-4608-a582-056ac9cdd8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff762471-f0d0-4147-8eb6-b7948878ea6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f85e9a-3197-4480-b0e8-2bbb51e37405",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32806593-b14f-4262-87ee-f1b0c3b7decf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407539e0-8158-4475-b025-15e8f7a2eded",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299b2f95-1a8e-4b6c-acbf-aa37f8bf3b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65a2fa2-5a15-44e3-badd-f22708171490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3138b10d-8031-473f-84b3-0df7920e0e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ff6ae3-ac1d-44cf-b213-f6aa957efd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb28ddb9-00df-4982-82e3-d7693cb89b57",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a506b45-99d5-4dbb-bb9b-e1ca310c3505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22be8b1-c612-40bf-8fb0-0ca04d726be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b8e112-81d5-48b9-9bb3-84eee6bbe06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c8e184-7eaf-4b50-95d1-293ac48582fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af5871b-dcaf-4f64-96a4-f742242999c7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a79438-7f77-4e4c-8754-30e5c7f83fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f18f0b-3c75-4d26-aa09-4cc1c17fe504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e581b532-30e5-4fd8-be3a-e88bdfc8fdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb212f7c-e67b-46a1-8c6c-48dcb49432ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2241133-dfae-4372-ac32-859c0a2d5b02",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb303d4-38d7-456d-83cd-b9d1a5525b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d06ef0-7db5-407d-85c5-85def2c293ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737436c8-fb68-4cd5-a17d-b8e35c8ba315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490ecabc-6174-41c2-986e-46a1027d92ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c15d802-3b55-437c-81bd-9a44a5a0e9dd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b230fbb3-3e88-4afd-ba03-fda9c17f3b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c82ce0-2975-4bd8-984f-0f0bd26b6eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51517d7d-2846-4411-b419-fd33e697e736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c014e15-187f-4963-a902-f5b25bf004e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89a4ceb-1b2c-4dd3-85fb-88a7b6de3789",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3834b2-46f9-47d9-b674-a27420d16341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2977aaf0-e539-4269-a4db-59774af7efbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52ba1df-ccd6-48f9-986d-1cedb6534f51",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f767d6f2-5fb7-456c-9f67-53f8a76d1c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7c4ae2-e7fe-4372-9188-53a2ac19d054",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1a492f-5879-42ce-a4b2-2abb266ba747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b235f0-6b05-4b54-96f2-c80ac7fe5add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1d89c5-5ef8-45c7-b073-ae885ccf5f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dffdd35-be00-40a8-aea0-67c4b3b3ef45"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "307a7158-3237-4a72-8ba1-b8b2fc9b455a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6c067d1-e0a0-4fb9-a640-500199a86d04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e403a90-9eb0-4126-967e-ae4be7ec75b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f38e2441-0b88-4fe5-80ae-bbcaf38b4d97"
                    }
                  }
                ]
              },
              {
                "id": "3f19edda-3ba4-45c3-82f8-cfcee5f1323e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e87b0fe-ae99-4383-8ad8-7be9dcefaa29",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5621f036-2e0f-4592-bca2-6152298a556a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5217aab9-c3dd-4364-b459-28832c7e018d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c7d10-e1ca-46be-abc6-45f3c4437c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa7bcb12-7fac-4bfa-9b27-322cf89f9d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc04c122-837f-4017-a321-b947343a7f02",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc78a6e7-96de-4e86-a8f7-996f4b48f1e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18dac801-744c-4999-8ac2-726ed12fa352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1861a5a5-c248-4b66-bc45-450fe153f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3c4398d-559c-471c-a120-af323896a1fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dc8b690-6435-4183-b860-cecccb7a5085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53371efa-4edb-4ab9-80de-40f0791b2aba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a06fc9a5-d4ef-4dfa-9979-f97d9d85cdc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f50d10fc-1240-4c90-ae7e-e262bc819947"
                    }
                  }
                ]
              },
              {
                "id": "96800a2e-a8d7-4f73-9c11-3d7b9e633ea8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b1860825-eaeb-42f5-af84-2d03e1acc48a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e250b8ad-993f-4bac-b41b-78e1723dd187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2db3ee44-f40c-4349-83cc-beda053031e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaf5f57-c4a6-4ae5-aa32-64161e09f7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3144c82e-52b1-4d1a-9c7a-52d851347050"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c16c83a8-1282-404b-9e8c-8f36dab56727",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fecefafd-e150-49dc-84e0-6374c7785b30",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3b8d865-d7f6-4c96-832a-44552c0b2845",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ab7d45b-a5b1-483c-8a12-b54feec3ed58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd1e9bce-2e7d-4ae8-8875-d0643a90b683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "333bbbd5-b568-46a1-8531-520c70a92921"
                    }
                  }
                ]
              },
              {
                "id": "a5cf7b0d-0a3b-46d8-bd13-3796cc45883a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33301ad0-10a2-49e5-b504-14beaea73275",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf8b505e-15bf-4859-a166-baf257574f9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cc9a23b-548a-492d-b776-a0e8bb91a235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7652b33e-fea0-48ee-a96d-dc9c23c219fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61bd20bb-905f-4ecd-8b21-4633b92f84ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "17a6f857-4784-4227-95ea-75452dcec1c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b20c3b1c-5c5d-42d8-b8a2-f78d9bf18261",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43488c13-58e4-4e7f-9421-a272e840a3ad"
            }
          }
        ]
      },
      {
        "id": "03ebac43-7b02-4f9a-a587-53cf80931a53",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dc2bbb9e-4aef-45e3-998c-066577c97545",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28f4512e-77a7-49db-8243-cf209c8786cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f28300b-02b3-4854-b814-bc35c44a4c1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c4cb15e0-67a6-482c-ab25-5a9fd16c7f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638fdcbd-e0c4-45a5-9ee7-34ba04466c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2506379-ce98-43d1-9e85-b3a6276bfb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6234b866-b818-4e7d-97f2-3aecdd26f090",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e748c17e-420d-4062-a6d3-fcf02e13670e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4cb782ba-b10b-49ba-a8e6-c3da861e71d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f080da-3e10-4f5b-91c2-9049fb37188d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c00942b-abf7-43b6-bc20-4f69991b2c01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "586da9e8-d9de-43a2-9352-5f6b24f7bf22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d88124dd-3642-44a7-a4cd-001b5504fbdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0078823-3ece-41f1-a912-dd0eb0f135b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b397610b-ce55-4b7f-8cdc-26ddb3d64ac0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c88cfc9-a588-45db-bcd8-743726e5a4e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cd2232c4-39b3-460f-b3a0-36940af63fa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7687f108-a179-4751-ae05-04c7b14bbfba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56fa6486-9d34-4b63-aa96-c72f4be5aed0"
            }
          }
        ]
      },
      {
        "id": "b1a4aedc-d30e-414d-97e0-fb7711a27897",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ed0865a6-64a3-402f-879a-2a5fd1810ee3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7d06e21-d771-4b18-83b9-76e9ee0ebcf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c103c9c3-af15-43f6-aef3-bf95b7b977a6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceb1601-8abd-4958-b9ec-509adc1e0fa9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be582cca-d87a-41f1-844a-9a2ddbcc1bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257b6a07-f651-4acd-95ab-e72f9668d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea1b8e6c-110f-45a4-a0e2-9f8f6c330a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f93774-d9c7-4f61-b565-73fe3a7f925b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc3d737-e3dc-477e-a1dd-9c1bc728f585",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b543ae25-d5fd-4680-9f34-91ebb3626e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69283135-ef24-488b-8863-8cf50d94ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "427673c3-991d-482a-a4ba-bd1d51a0bfac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "228f7e0d-6511-4627-a3e9-e05b46e2d22b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bcdb426-914a-4e13-a366-8ae9d1926740"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb8f848f-702e-46d9-8818-e4d83347bfd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e5cb624-4166-40e6-99bf-27a27ae7508c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cec4c4f-36a4-485a-b363-687eb1685343",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfa1713f-9f9c-42d9-8b38-568e1607dfc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "284d82a3-777b-4b8c-8678-31afec0e73a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa509748-8adb-49de-a92b-a896c2081e3c"
            }
          }
        ]
      },
      {
        "id": "ab530b23-12bf-4e4c-ae5e-4a00124bf56e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "78bcf00a-e1cd-4575-b00a-25aa45b76745",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f76e3ec-9a61-4984-aec4-7d442a2e8c21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3972586d-ec25-41ec-9cc0-7dec835ba553",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7f0672-9156-4b73-a24d-784f3a35a268",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be89dea-bc15-4e43-811c-ebe052749e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a658613e-fb35-463d-ad99-385e27ed42d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ecd8195-5137-46e1-a0cc-6ab47e38b100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e425a5-5abd-4f35-8612-4cb5910ed4ec",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfe930e-e188-4942-9007-9dbcc78e5a21",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "80d8a0db-baac-433b-ade2-1890bd681e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9871099c-7ca8-413e-b65b-4ad61b1e5584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30807c65-8372-4934-9aa3-81891511309c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f536bc6-6a10-4469-9cf7-c2965657f579",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d51674ab-3a4a-4a57-9b3f-7c5ff23e12eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1383520-462b-4d86-ad5b-0c7cbd26213c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d44f1d7d-4718-4dbf-9884-ec238c797920"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "131f6e01-9849-4e28-b012-f18010e77e76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3136a6e-21f5-4895-abb9-d0f65cfd2450"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca74e129-467b-4e14-bd6f-4aaf0187661d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24a1b015-7d3e-4472-b5b1-5494548f0c96"
            }
          }
        ]
      },
      {
        "id": "8bb0320c-1717-4049-913e-d536fcbcabdb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa799b37-afe5-4b35-b3b1-8a1f5ea97feb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4b9cbe7-817d-4332-8ed7-2bd3d917bd96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c56ba1d1-4d37-4f56-982a-8c6573c0d8e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e968506-1b63-421a-b426-2fb2cf30439e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed4393b5-470a-416c-91d4-002a616def0a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.0384615384615,
      "responseMin": 11,
      "responseMax": 272,
      "responseSd": 25.75995814800522,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680827582499,
      "completed": 1680827613228
    },
    "executions": [
      {
        "id": "a812fb85-86f0-475e-9fb6-fbe120ea247e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0dff4570-a52c-4b9f-908d-aaa91078d64d",
          "httpRequestId": "22ec4877-9bb5-4db2-8cbf-e58cd69c9cb9"
        },
        "item": {
          "id": "a812fb85-86f0-475e-9fb6-fbe120ea247e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09d11358-6428-4827-955d-bc00cf2119af",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "8c8c0808-3fae-4715-b627-2c901bf5212c",
        "cursor": {
          "ref": "628dd958-1a76-43a6-bebb-b95683543389",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "96e370b3-5643-4b08-9cc6-8e2821af419b"
        },
        "item": {
          "id": "8c8c0808-3fae-4715-b627-2c901bf5212c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a4770c6e-a9a8-4765-bafa-86f52276e4d4",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "22946d38-8ab9-4999-967c-900d32e86b00",
        "cursor": {
          "ref": "67e8733d-7b00-416f-b123-1c5ce54b5201",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "32f07e81-37f2-4ceb-a757-5476abc144f6"
        },
        "item": {
          "id": "22946d38-8ab9-4999-967c-900d32e86b00",
          "name": "did_json"
        },
        "response": {
          "id": "b2f284fe-70cf-455e-84ff-6e14a4f47b83",
          "status": "OK",
          "code": 200,
          "responseTime": 223,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a062473e-1762-4894-a1d7-981adba78be9",
        "cursor": {
          "ref": "13f97226-d000-48da-9216-514c13d6c7df",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4518e1a8-a83f-4332-a3ac-53533405816c"
        },
        "item": {
          "id": "a062473e-1762-4894-a1d7-981adba78be9",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9015f9c-c5c9-45f5-80c6-322faed25699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a062473e-1762-4894-a1d7-981adba78be9",
        "cursor": {
          "ref": "13f97226-d000-48da-9216-514c13d6c7df",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4518e1a8-a83f-4332-a3ac-53533405816c"
        },
        "item": {
          "id": "a062473e-1762-4894-a1d7-981adba78be9",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9015f9c-c5c9-45f5-80c6-322faed25699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a63a8f3-9acc-4c29-bd79-fdcc2549581b",
        "cursor": {
          "ref": "d50a9126-d260-4010-9c99-101ed3a6e74a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4a12e356-41a8-4863-8d71-d2a5b663e7fd"
        },
        "item": {
          "id": "9a63a8f3-9acc-4c29-bd79-fdcc2549581b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e95034a9-b0ae-4019-898b-845a7685af23",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe4e0a0-aa89-403b-80fb-c3df5181e0b1",
        "cursor": {
          "ref": "4dcf5c35-dffa-4ca8-b407-6eccd4075b44",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "269c4c76-9df9-4bf5-9bed-f7e3c4362cff"
        },
        "item": {
          "id": "1fe4e0a0-aa89-403b-80fb-c3df5181e0b1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc554831-cd77-46c8-80e5-f39274bb60e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf28b8c-a2a6-41c7-aa4b-28c40fed20f9",
        "cursor": {
          "ref": "9f3492d3-9f5f-4b2b-b014-2d3e847d62ad",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "675bd811-79c0-4318-a512-e2f72f648c38"
        },
        "item": {
          "id": "adf28b8c-a2a6-41c7-aa4b-28c40fed20f9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "533fac1b-b190-4a87-b315-7aca47cca35a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4974e8c4-5862-402a-93b2-b6e6580fa83d",
        "cursor": {
          "ref": "b567c16e-8b80-4bcf-b970-4a74221dc107",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cf9c345d-d6f6-432a-9c95-534af6cd988f"
        },
        "item": {
          "id": "4974e8c4-5862-402a-93b2-b6e6580fa83d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5fc01249-31b3-4a67-a2c5-441e0492d924",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4974e8c4-5862-402a-93b2-b6e6580fa83d",
        "cursor": {
          "ref": "b567c16e-8b80-4bcf-b970-4a74221dc107",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cf9c345d-d6f6-432a-9c95-534af6cd988f"
        },
        "item": {
          "id": "4974e8c4-5862-402a-93b2-b6e6580fa83d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5fc01249-31b3-4a67-a2c5-441e0492d924",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8f2e7d-8d78-4e5c-b5f5-d881695a8ba4",
        "cursor": {
          "ref": "997963c4-0a59-4ec7-bd0a-a83f446ad09d",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d27f8398-efbd-40ca-ba15-9ee686575caa"
        },
        "item": {
          "id": "ba8f2e7d-8d78-4e5c-b5f5-d881695a8ba4",
          "name": "identifiers"
        },
        "response": {
          "id": "310948c4-7671-4093-869e-1f4f7c59c84b",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12ff90-0330-4d3c-844b-7ec839bae18c",
        "cursor": {
          "ref": "41697f4c-aba4-45a7-b8c4-a11ddb581cb0",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba7ca124-f66b-4501-b3df-508a5f41be20"
        },
        "item": {
          "id": "bc12ff90-0330-4d3c-844b-7ec839bae18c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9452bed0-db3a-4362-b088-2279f8b2ba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12ff90-0330-4d3c-844b-7ec839bae18c",
        "cursor": {
          "ref": "41697f4c-aba4-45a7-b8c4-a11ddb581cb0",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba7ca124-f66b-4501-b3df-508a5f41be20"
        },
        "item": {
          "id": "bc12ff90-0330-4d3c-844b-7ec839bae18c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9452bed0-db3a-4362-b088-2279f8b2ba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143380a3-8b98-44bc-a015-ded4b913db3c",
        "cursor": {
          "ref": "cb0202f9-a00c-4906-a9b6-88aaa703da74",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "717c1a30-fa2a-4a52-a774-ad446d0b2d2d"
        },
        "item": {
          "id": "143380a3-8b98-44bc-a015-ded4b913db3c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c5ba2f3-061f-451c-a4c3-50ed20722fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46750069-1a22-4f69-be6b-9484aa75e574",
        "cursor": {
          "ref": "1a535cf7-40d4-4e67-9ff1-fa3b30ce2484",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "80a0d7c2-f3a9-4077-98f2-e3100cd7d051"
        },
        "item": {
          "id": "46750069-1a22-4f69-be6b-9484aa75e574",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "071154fa-b446-4faa-9b04-916872484056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d464f58d-f743-4471-a6c0-6e93ddad4660",
        "cursor": {
          "ref": "eb81a094-b29d-4e72-a5e7-1e7c811709dd",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e2c384d2-3301-4984-b1ad-dcc4b3b4d737"
        },
        "item": {
          "id": "d464f58d-f743-4471-a6c0-6e93ddad4660",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7d2a9f8-23ce-4c75-889f-d8e6b48ff2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ff0902-de9d-4ad4-9a2b-98ef41c8f533",
        "cursor": {
          "ref": "e6abf869-50bd-42ce-a265-75c795c23d9a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "791c3dd3-6381-4c9c-adc4-6fc7c16759d8"
        },
        "item": {
          "id": "75ff0902-de9d-4ad4-9a2b-98ef41c8f533",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "021718f3-333a-4b53-aade-b1988835a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8fb247-33a6-4356-84ce-b5542e9f7736",
        "cursor": {
          "ref": "33e08f8d-cc9c-485b-8319-a366d3fd5138",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "819b2cf9-7ea9-48d9-9c2f-a40b6fa39ffb"
        },
        "item": {
          "id": "dd8fb247-33a6-4356-84ce-b5542e9f7736",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9e3f6e36-8fee-4473-9316-8fe5805a34e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc38286-9715-4ed2-b656-4b2d839dec10",
        "cursor": {
          "ref": "a010ad87-3e9d-4af7-8344-014f46e2d760",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d387462-5fa6-482c-a1ac-c2e8f07cd1f5"
        },
        "item": {
          "id": "5bc38286-9715-4ed2-b656-4b2d839dec10",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fb7c5f55-2f90-45df-8008-b73ab28e4d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa43c7a-f3e8-45ba-9200-46e481037db7",
        "cursor": {
          "ref": "3f5f684d-9d43-4d77-a57a-ce58ab434b31",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "152f0ce1-dfe0-40ea-8bcf-a554c4b413d8"
        },
        "item": {
          "id": "7fa43c7a-f3e8-45ba-9200-46e481037db7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ef8b8072-8e21-4a9d-a4e1-139e8152ee2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffd853c-a6b6-47bb-a5cf-c79012418d98",
        "cursor": {
          "ref": "14c6c18f-c9e6-486c-82ab-6c4e3cf1aa87",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bd422e95-4739-495e-938f-bbfdd43cd1af"
        },
        "item": {
          "id": "1ffd853c-a6b6-47bb-a5cf-c79012418d98",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9af35a3f-e60a-4e98-b052-c7f0e5f5c7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240db41f-3f9d-43c6-a751-002fe3159408",
        "cursor": {
          "ref": "25d56637-70bf-4bc6-9319-f60464e5fd9f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33ebffb2-230f-4aa4-a21f-1552d13b0f7e"
        },
        "item": {
          "id": "240db41f-3f9d-43c6-a751-002fe3159408",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ab5d7097-0463-422b-a75b-12c3ee190633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0b0aa7-b862-416c-be18-2938c6a500a4",
        "cursor": {
          "ref": "2111177f-83e3-440f-a5eb-ad38948d740b",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9db563e8-c9bf-4be0-8ad7-0e69e6ab6370"
        },
        "item": {
          "id": "ee0b0aa7-b862-416c-be18-2938c6a500a4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0223178d-da89-42b9-8a50-c5db5b969061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bdc7a3-4b47-485b-acec-2360929a5948",
        "cursor": {
          "ref": "aa38097b-40a5-4875-95f6-dea9fb6b73d5",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5d94849a-f25f-4817-9e2d-5671bbe2ba14"
        },
        "item": {
          "id": "37bdc7a3-4b47-485b-acec-2360929a5948",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4f2e9c32-e7af-46c6-8c12-c7df2741e970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccf5599-8bc0-445b-8df5-15838bb16e74",
        "cursor": {
          "ref": "f55b5f61-e39c-4600-afa1-5940f7f84e2d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "33b9e543-b8c2-4738-8c69-0fa708fb3a2f"
        },
        "item": {
          "id": "1ccf5599-8bc0-445b-8df5-15838bb16e74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff78b427-63bd-4852-8960-34ed0335297c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5364b450-9753-4613-be36-f369a92a6160",
        "cursor": {
          "ref": "1405f789-e1ac-42ef-b8a7-e71eb2f2ddeb",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "08630acb-a0ee-40e4-9c76-432e2b0a5cc1"
        },
        "item": {
          "id": "5364b450-9753-4613-be36-f369a92a6160",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3c5173cb-502e-40a3-8e6c-376e75c6260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c818118-e617-4373-bf30-3ec936aec3f2",
        "cursor": {
          "ref": "83c8387b-c1e5-48f0-ab4e-af3ca0e532ac",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "813303c5-a011-404f-8793-39311b621c72"
        },
        "item": {
          "id": "3c818118-e617-4373-bf30-3ec936aec3f2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fc6a1b8f-6b0f-4051-909e-ff78c100632a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2311658-369b-4aea-9905-c11d898d6979",
        "cursor": {
          "ref": "10e1fbe7-cea2-448c-b354-07fdcdeb7b4d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1d265407-c7af-4b91-8be4-dc187ff1b552"
        },
        "item": {
          "id": "d2311658-369b-4aea-9905-c11d898d6979",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4a000c65-2f6b-4b96-80c9-cc47ef021d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fe8b61-4443-4624-b461-5b898f21a82c",
        "cursor": {
          "ref": "19f939e4-a9d2-4466-b424-568326ed19f1",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "40ed3b19-da46-42ed-9815-e339d06add50"
        },
        "item": {
          "id": "59fe8b61-4443-4624-b461-5b898f21a82c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4568ec6d-4c2b-417c-91e3-a1a517004781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ab6fa5-eb5a-4df1-8dbc-9cd4c74cc544",
        "cursor": {
          "ref": "a4e118a1-0bc5-4343-b5b8-5cdbdcccf6a1",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9ce90865-40f7-47c5-b0d3-bf0976c6dba4"
        },
        "item": {
          "id": "21ab6fa5-eb5a-4df1-8dbc-9cd4c74cc544",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "eaabce8a-cb8e-4f2a-9d36-683159eeeb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8bc3d0-90c4-4653-9259-d7533283c5e6",
        "cursor": {
          "ref": "5b4ba69c-67b7-4b6c-8697-99b59d61666d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9431c7b-74fb-4921-995c-1c9fdcf48aff"
        },
        "item": {
          "id": "4c8bc3d0-90c4-4653-9259-d7533283c5e6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8f4b90d2-65fe-474d-88ea-9c369c646ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e33094-3f6b-49bf-9e52-ef8be88af907",
        "cursor": {
          "ref": "99be5364-188f-4c9f-afc4-c5152183e7cd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b251ecac-a4d9-44f8-9459-e606ed51dfe9"
        },
        "item": {
          "id": "e4e33094-3f6b-49bf-9e52-ef8be88af907",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ea963af2-eb0e-4590-bab9-b5d764298075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a41373-a3d6-48ff-b9d7-d2e63617a1ff",
        "cursor": {
          "ref": "82b29ba3-86a0-449c-b328-1110c3e07b21",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9c761fce-4473-4ad6-9a30-d61121c0545c"
        },
        "item": {
          "id": "35a41373-a3d6-48ff-b9d7-d2e63617a1ff",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "82ab2110-0169-4941-a9fb-0992fb4cea23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6b31f7-0b9a-4647-9948-34c05237e716",
        "cursor": {
          "ref": "5c480529-4ba7-4c40-ab15-ed76567d767f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b04e74f-5dfc-421c-8ba3-0824741618ad"
        },
        "item": {
          "id": "de6b31f7-0b9a-4647-9948-34c05237e716",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7db50585-11db-4ccc-9df1-4c014a690812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f534df20-3f7e-4fdf-941c-0c6728097735",
        "cursor": {
          "ref": "51ce41c9-053a-472b-aa5a-aaa2b15afe2b",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "70b92bef-2e74-42fa-8aa6-782cf90c1cd4"
        },
        "item": {
          "id": "f534df20-3f7e-4fdf-941c-0c6728097735",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cda88690-ca2b-4f07-92ff-0f449a7c7b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4728aa7b-c8bc-44b5-b150-377cb092e126",
        "cursor": {
          "ref": "dd2f63a8-2d85-4a47-ba8c-94054f622084",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c3e968d9-8945-4f3a-a781-52346bd71518"
        },
        "item": {
          "id": "4728aa7b-c8bc-44b5-b150-377cb092e126",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "df2493b6-b9e1-430a-8008-2a7b2e5a247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91057fb8-1e4e-4b73-aa80-00ea8b859e62",
        "cursor": {
          "ref": "6157ab9e-3537-48d2-996a-deea1ed111dd",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "454b4373-0ab2-48b3-8fd7-5f75a31d62ec"
        },
        "item": {
          "id": "91057fb8-1e4e-4b73-aa80-00ea8b859e62",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7345066d-0573-4f5a-a83d-5f4dd7841a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b77de6-faf6-4422-ba97-138d17921465",
        "cursor": {
          "ref": "64ba0de4-2927-4f86-b561-94bce02cdb3d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dd72631c-0354-4e7d-b332-3f9608167a9d"
        },
        "item": {
          "id": "d3b77de6-faf6-4422-ba97-138d17921465",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "534d545b-77e6-4910-af26-6951e9de81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9e3c40-6a05-46f1-8ff7-216733a6575d",
        "cursor": {
          "ref": "ee8735d1-fe39-4941-89b1-f41fca6dac5e",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c814a296-8ed8-4b5c-80f6-06ca73e82861"
        },
        "item": {
          "id": "ad9e3c40-6a05-46f1-8ff7-216733a6575d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6ee0eab8-6be8-4d57-a1b1-7b1815361329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba205f8-9aa3-4325-9286-4abe2c905e4d",
        "cursor": {
          "ref": "b34e4240-83b8-44b8-80c6-35dbb4101da1",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f779d0c7-974e-46a3-9d76-1ac4415b2f9f"
        },
        "item": {
          "id": "cba205f8-9aa3-4325-9286-4abe2c905e4d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "141196a0-4f4b-4c76-bbf2-7f50a8bacbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca205e28-ea50-42cb-aa6f-417978a41f7c",
        "cursor": {
          "ref": "4a45223a-3dc5-4178-9d4f-952cc9161f1d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9d4940b2-4a99-4bec-a251-2d21a9d525d6"
        },
        "item": {
          "id": "ca205e28-ea50-42cb-aa6f-417978a41f7c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "463d61d0-8c65-4f6c-a20b-9134c9114aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5273458-8614-4273-a7af-1d28ee2384de",
        "cursor": {
          "ref": "b3a08de4-8c8b-43d3-9d8e-9e2d28620184",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "95f5bb99-7c0c-46be-b84e-08cee9122a9d"
        },
        "item": {
          "id": "c5273458-8614-4273-a7af-1d28ee2384de",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3075ec0-e65d-4ef0-83c2-f2042780986c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250a69fc-a7fd-4b45-8426-c495af3b1451",
        "cursor": {
          "ref": "4f2ac3a9-f3af-4a08-9b0e-8fecef0c140d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "11484af4-bb2e-4606-b3cf-fa22912b49ee"
        },
        "item": {
          "id": "250a69fc-a7fd-4b45-8426-c495af3b1451",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9ee1ac64-20c1-4da4-9afd-3a45ec31efcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812f8677-2783-4e0d-9f71-b7d0c639868a",
        "cursor": {
          "ref": "c3adff11-70bd-4c01-9af9-81d309110fde",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bc69537c-3d51-448a-a434-a07159fbd82c"
        },
        "item": {
          "id": "812f8677-2783-4e0d-9f71-b7d0c639868a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e1d87f0c-a5bc-4de7-9444-ca2ced87b6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a283c9-885b-4d77-ad91-0f432abf4261",
        "cursor": {
          "ref": "6dbdb36f-9e86-40af-91d3-a16f8d437bfb",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "329e333d-5a3e-4f86-aa01-fc73782afe0c"
        },
        "item": {
          "id": "36a283c9-885b-4d77-ad91-0f432abf4261",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8bfddc32-74f7-4b77-8962-323663ee3872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103ec82-1348-47d1-b402-d531ebf82ae0",
        "cursor": {
          "ref": "17b1df3a-a5f5-4d88-8ae3-0721490751f1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a894473-d2ca-410d-af9f-ad55ee527116"
        },
        "item": {
          "id": "1103ec82-1348-47d1-b402-d531ebf82ae0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "04901ba0-9e04-436a-a9bb-c755d680c42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e35b4ca-66ef-44b6-ace5-c6681587937a",
        "cursor": {
          "ref": "c078ac01-b621-46a6-b17a-80590a47122b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f260bcc-dd5d-4afa-a68e-a32915f8522b"
        },
        "item": {
          "id": "4e35b4ca-66ef-44b6-ace5-c6681587937a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2cc9cf99-1893-4c0a-a8ca-807ab4fa8e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cae4c62-aba0-4d98-8a53-485191db5533",
        "cursor": {
          "ref": "c53b2aa9-9f0c-4479-a771-d72797e629f6",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b246dc6e-7ed6-4631-aa61-10341709a804"
        },
        "item": {
          "id": "8cae4c62-aba0-4d98-8a53-485191db5533",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "78eb85f2-a0a3-45c8-bf85-e51960bf3f2c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573e43cc-4de9-4413-b01e-221ab23d9cfe",
        "cursor": {
          "ref": "f3e3acbc-ff6d-44c8-aeb9-93448b81dddc",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ee495092-75b7-4500-bce8-39f46710560e"
        },
        "item": {
          "id": "573e43cc-4de9-4413-b01e-221ab23d9cfe",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "077d00ae-be77-4d75-b642-71119a382908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2c10b3-a3ea-4353-946d-b52afe037b33",
        "cursor": {
          "ref": "f7510154-28e3-44bd-aa52-495f9dcb6a61",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "81b38801-be9a-44fd-8747-1ca28d6f51fd"
        },
        "item": {
          "id": "4c2c10b3-a3ea-4353-946d-b52afe037b33",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "89db461d-5b6e-47e4-beeb-bb7082774817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30450f4-726c-42a3-b020-62614315187f",
        "cursor": {
          "ref": "e0863e4e-3c23-4074-8c15-c1bf264b5d2c",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ac0ecc64-a3f4-49af-91ce-78ac034f2b73"
        },
        "item": {
          "id": "f30450f4-726c-42a3-b020-62614315187f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c3d3807c-8bf2-4ec0-882c-66d1568bbbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22624b4d-2baf-494e-8eb6-becd6fe6f81e",
        "cursor": {
          "ref": "86d5a751-3818-4360-86b7-a1c4071af12e",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d9d0a03c-6cbf-4603-a164-6b5062e1e000"
        },
        "item": {
          "id": "22624b4d-2baf-494e-8eb6-becd6fe6f81e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "471a129e-0607-4fcd-bd9e-d477744a6b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0897b57-4274-4440-bdd3-10ae0dfe5067",
        "cursor": {
          "ref": "a47e30bc-3d65-416a-8f6e-e08f66ea9d0e",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b63085df-e2ca-423e-9765-5fcd18d864b5"
        },
        "item": {
          "id": "e0897b57-4274-4440-bdd3-10ae0dfe5067",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "930ffc7b-1476-4964-9f0c-fa7f1bf07bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575e1293-c15a-40fb-8451-fb58733f1e34",
        "cursor": {
          "ref": "045d1992-6665-404c-86cd-5e94e25e6374",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db6714c8-9520-42ac-896c-59d2d3ec28bf"
        },
        "item": {
          "id": "575e1293-c15a-40fb-8451-fb58733f1e34",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c6d98c6e-bf0e-429d-bab3-3f2875f98e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f4c072-13d4-4414-ab5b-e5698580149a",
        "cursor": {
          "ref": "ce837dff-4256-4218-bcbf-722067980a44",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "97ee8722-a1f4-4395-8437-05fc38d49eef"
        },
        "item": {
          "id": "f4f4c072-13d4-4414-ab5b-e5698580149a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6379246c-e32b-40d4-a3f5-2af210cafb05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598dc8f4-7059-49fe-a413-b29f023026d1",
        "cursor": {
          "ref": "808a3702-cf0f-46b8-bc41-992b251e3932",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ee3f6d04-9dbf-48bc-a0cb-b4970b58343e"
        },
        "item": {
          "id": "598dc8f4-7059-49fe-a413-b29f023026d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0fe034fd-bd84-4548-81ac-46d2a29fd8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b388369f-ba6d-43ad-9278-48b89dfd55ec",
        "cursor": {
          "ref": "50bee2bc-ec31-4371-944d-e5de36b22163",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "57896142-6ed3-42c6-8c89-6b5a4067ddcf"
        },
        "item": {
          "id": "b388369f-ba6d-43ad-9278-48b89dfd55ec",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6377847f-6156-47e6-aa3b-8e18a948a127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2761f2d4-0173-4381-b7d8-71314cc14b1f",
        "cursor": {
          "ref": "17d6d983-79be-426f-a657-a9b88fb4e59d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ed53e000-6f12-4943-83e5-0a30d3be1c60"
        },
        "item": {
          "id": "2761f2d4-0173-4381-b7d8-71314cc14b1f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ccddc2b-4b3c-420b-8956-0c300f79636a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b350f35b-32ef-4cdd-bd57-10cd5ba46cbd",
        "cursor": {
          "ref": "97def687-b0b6-4de1-aaa8-cf5f20dc76ea",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c11d454-2599-4af6-98e2-bc7121d244b4"
        },
        "item": {
          "id": "b350f35b-32ef-4cdd-bd57-10cd5ba46cbd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "77082466-141c-4422-8eb2-be22411a5ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3c18e9-7832-4788-a9bb-3ce662327754",
        "cursor": {
          "ref": "f53e17bb-295f-466e-bf80-03d7140cb56b",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e480063a-0789-4c23-87b6-b9756ce7f3a4"
        },
        "item": {
          "id": "8b3c18e9-7832-4788-a9bb-3ce662327754",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b8d706bf-1625-43cb-b51c-78bd121f177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0815a40-3a06-420a-bd55-37e8e9691ad3",
        "cursor": {
          "ref": "2620d20e-afa3-4fa9-b27d-c19808589c33",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5a673e8e-2438-4a34-b38e-9e8400d7b936"
        },
        "item": {
          "id": "f0815a40-3a06-420a-bd55-37e8e9691ad3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "422de143-e514-4dc8-9578-791ebba7f5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d4e63e-51ad-4bef-b43f-3c1908f2c007",
        "cursor": {
          "ref": "56983e7f-1220-41e6-99f9-e5df6f240c4a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b88b68dd-15a0-48c7-8dff-4cb8eab9df70"
        },
        "item": {
          "id": "14d4e63e-51ad-4bef-b43f-3c1908f2c007",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2fbb6cf2-72fe-49fd-b7ba-15d9552ad113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c87af23-8f9e-4c4e-89f6-240998f6fc0a",
        "cursor": {
          "ref": "fcb8565b-f0d3-40a8-b6b1-b9732f65de1a",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "53be7d67-9964-43f9-83b3-d472ae610ec0"
        },
        "item": {
          "id": "4c87af23-8f9e-4c4e-89f6-240998f6fc0a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d45ffe14-54ac-4bc9-a86b-5ef9e20af63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57af098-d9dd-43b2-9478-85bff3d73b3d",
        "cursor": {
          "ref": "008a3213-0ce2-4042-9c69-e355c5af66f9",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f4623c78-3f65-440a-afd9-ff30f053ef9a"
        },
        "item": {
          "id": "e57af098-d9dd-43b2-9478-85bff3d73b3d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bcef887c-b3bf-41ee-8b6a-a0142f7c1fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a8a47d-1fe4-4ebb-8cb4-170e9c5a8728",
        "cursor": {
          "ref": "fc29fea5-2bd6-404b-b4b7-3e9649852c9d",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e325966-b612-4106-b2e1-58bb68e20e05"
        },
        "item": {
          "id": "82a8a47d-1fe4-4ebb-8cb4-170e9c5a8728",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5f7834e0-33a3-40f6-a56a-e1c85ee6ddf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4407ec2a-fef0-42a3-9017-b76b36818964",
        "cursor": {
          "ref": "5a25ece9-bf0a-4f86-8a7a-cbd34823648e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "946bd898-4a99-4f46-88a2-1861f42be438"
        },
        "item": {
          "id": "4407ec2a-fef0-42a3-9017-b76b36818964",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ec543a51-9892-478e-b05c-0da5ec0ed17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769f4404-83fb-4e59-b1c8-ddb759619100",
        "cursor": {
          "ref": "cab38d27-f47a-4e16-b126-a8bbbcdd9ccf",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f0369626-2f91-4e6f-ab5f-c8056989e970"
        },
        "item": {
          "id": "769f4404-83fb-4e59-b1c8-ddb759619100",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9ae903c8-b869-44b4-94c0-87aaeb54c3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceaa8bc-cea2-4a8a-b5ed-7aca179f7585",
        "cursor": {
          "ref": "31938a87-5ce5-46aa-a05e-329493c24e26",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3a05b308-79e1-407d-8a66-d0fd1a537abb"
        },
        "item": {
          "id": "bceaa8bc-cea2-4a8a-b5ed-7aca179f7585",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fc2478bc-46be-450f-ab61-f1e89c44dbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b005164-11f7-4449-a357-7e2515fb0128",
        "cursor": {
          "ref": "1b3e30e4-1bab-40c3-a610-9dfad7989f8f",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3441c555-17aa-44a5-8784-178a65a7915f"
        },
        "item": {
          "id": "1b005164-11f7-4449-a357-7e2515fb0128",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24727192-bbd4-490f-a9d4-3d2b5d8f60c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c32687-70cd-40ef-849a-eb452670b963",
        "cursor": {
          "ref": "d859f3ff-5de0-4e6e-b76d-f8491b0a6b8d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "785ec464-9e9e-40ae-9713-cd9f1c2d95eb"
        },
        "item": {
          "id": "41c32687-70cd-40ef-849a-eb452670b963",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "10730df0-2e07-48a0-9758-c761775861e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f6bc4-f7f3-4f8e-9c3a-99617197c445",
        "cursor": {
          "ref": "58c22e3f-511b-4575-b08b-aaded5d5944b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "71337064-e5d8-488e-8116-f5901ae64c6a"
        },
        "item": {
          "id": "b00f6bc4-f7f3-4f8e-9c3a-99617197c445",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f7e44ae7-3c85-4484-9bae-a2a483a0776e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1752c322-5ce5-4a14-aca3-2d132a4a460c",
        "cursor": {
          "ref": "f8ecb8c4-863c-448f-a9a1-b3e8856c42a2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "380e6279-7f12-4b3e-81c5-6ae7331e4e65"
        },
        "item": {
          "id": "1752c322-5ce5-4a14-aca3-2d132a4a460c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "65afb441-126f-42b5-ba7d-16fcbb25053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed06774-726a-4cf6-bf0c-700928770799",
        "cursor": {
          "ref": "067234db-3fd5-4a5c-991e-1c8b35aa140b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6e5f33ff-5b4a-43ce-94b4-5327fcbc843a"
        },
        "item": {
          "id": "0ed06774-726a-4cf6-bf0c-700928770799",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6ac145ce-c4b9-48cb-8719-30620f40790b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c47ae38-1c92-480b-96a6-96cbaccc13ec",
        "cursor": {
          "ref": "b7c225b2-0fff-4d43-8aae-296be0b469cf",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8874b5f7-9b86-4449-ad71-3918631a459d"
        },
        "item": {
          "id": "2c47ae38-1c92-480b-96a6-96cbaccc13ec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7d7b96ae-5bcd-4bd2-b4e4-abe905339ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf51c0d3-8241-49fd-9664-81f29b351586",
        "cursor": {
          "ref": "b4017bcc-216f-4637-8dd0-2ed41e63733d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "66a4fed4-3906-4862-a5f2-71090d178ed4"
        },
        "item": {
          "id": "cf51c0d3-8241-49fd-9664-81f29b351586",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "75de7ab6-b6ae-4e37-861a-d1604ded2f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a2621a-c3b5-4201-a2cc-0dc91e999a52",
        "cursor": {
          "ref": "2639bf5f-d07e-462d-92de-abf1a2762421",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d23249b7-d771-44f2-8842-644a296e0184"
        },
        "item": {
          "id": "86a2621a-c3b5-4201-a2cc-0dc91e999a52",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1509890a-b313-4256-9d5c-6590e2e8f436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20020239-58f2-407e-8a96-470ca68a1ac2",
        "cursor": {
          "ref": "c8c7bf4e-77b1-4cdc-90b0-2586bdfd39cf",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "de00043f-aec1-4ed0-8888-3a8a713ad023"
        },
        "item": {
          "id": "20020239-58f2-407e-8a96-470ca68a1ac2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4b422ebb-ab8f-40b9-bcff-e6ac1036b14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701f185-62e8-4f15-a961-75ff073afd2b",
        "cursor": {
          "ref": "39ebf049-7f8d-4091-8ee2-46d5043d004e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "62062cab-07bc-448f-b33f-2621a3413dc2"
        },
        "item": {
          "id": "0701f185-62e8-4f15-a961-75ff073afd2b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2251814c-d160-4cc6-a480-6beaa0ef8a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afac730-d724-42ff-a238-ca821ac2e732",
        "cursor": {
          "ref": "a49820e4-c722-4046-977d-fc75ffbb00cd",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "48380249-417f-497b-9241-c64e3b8a48a9"
        },
        "item": {
          "id": "4afac730-d724-42ff-a238-ca821ac2e732",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "df9a6002-9aa7-458f-af46-eac0f1946f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76fdc3e-4ba2-46a9-9050-804c245682d1",
        "cursor": {
          "ref": "09c313cf-641c-4433-92d4-33ff96122045",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9e4172b8-5d67-4f09-984e-5a2f4e9e69d0"
        },
        "item": {
          "id": "b76fdc3e-4ba2-46a9-9050-804c245682d1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "10351a95-d794-4bf9-ad78-ff7e9dbda9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42fd254-3694-4379-b3d5-5a348929fc56",
        "cursor": {
          "ref": "fa1677eb-005c-487c-ab6d-575450bb03bf",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "39da68c2-18af-4165-b627-aa764903c7dd"
        },
        "item": {
          "id": "f42fd254-3694-4379-b3d5-5a348929fc56",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cd7accb6-f2bc-4410-9959-860b3c5460c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6651b3b-f1c3-4258-b9db-d69bfb9e6f45",
        "cursor": {
          "ref": "4b67c7a7-b908-4857-87c8-54ebc3c122fc",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "32ac4a82-3b1a-4819-84b3-e60e38e88a36"
        },
        "item": {
          "id": "b6651b3b-f1c3-4258-b9db-d69bfb9e6f45",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c68b8780-ebdd-46d5-ac9f-3c003c068a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14707bd1-afcc-4881-bdc9-9aabda081662",
        "cursor": {
          "ref": "3adc1124-b091-47b4-96cb-0a2689199686",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "944dfec3-7dc6-47e4-a24e-fcb42458ea94"
        },
        "item": {
          "id": "14707bd1-afcc-4881-bdc9-9aabda081662",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "40989000-57ec-42c9-b57a-bc314246d609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786d3397-63bb-410c-80aa-451d78ede0be",
        "cursor": {
          "ref": "d8283ff6-e7d5-4f7e-a38e-dfb7e669bea0",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6c331c57-53d6-407d-94d5-c9bae98dc7fd"
        },
        "item": {
          "id": "786d3397-63bb-410c-80aa-451d78ede0be",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b57c8447-f167-41b5-8da9-7d4ae030193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3932a387-2ac0-4e9e-829e-78298e5908e5",
        "cursor": {
          "ref": "5c04dd52-1c7a-4566-993d-71c8b593e2bf",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0fe88ed9-ed9e-4185-8279-23edcefda882"
        },
        "item": {
          "id": "3932a387-2ac0-4e9e-829e-78298e5908e5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "925b5aac-826b-43d8-8ee2-4810f7dbb794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3fa78e-6c89-4982-ae77-1e0a256808ab",
        "cursor": {
          "ref": "ccc357ac-bdfa-4926-b198-0cd0b09922ba",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "778e22fb-3b5e-4f2a-a402-c4fbdff74a4c"
        },
        "item": {
          "id": "db3fa78e-6c89-4982-ae77-1e0a256808ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b757cb4c-5fb6-4d68-b400-d7cfc2c06816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de54ed9-650a-42f0-aafa-e6d799d9b434",
        "cursor": {
          "ref": "eb1199ad-d223-4a7f-8217-0028ae0f3ed9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e11384c2-7540-43b7-a897-c2a5a958720a"
        },
        "item": {
          "id": "0de54ed9-650a-42f0-aafa-e6d799d9b434",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "db9d7563-cecb-4fb0-b6d4-50a239f23aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f202d601-ac58-4386-aa5b-fce91c8a6a03",
        "cursor": {
          "ref": "45f46a44-96e3-4921-950f-96f30a10ceb0",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "94557d63-28e7-4bf2-93a3-f9bf7af2aaa1"
        },
        "item": {
          "id": "f202d601-ac58-4386-aa5b-fce91c8a6a03",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b1b7f906-4c37-4275-aa72-f3b17b374e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5540c97a-5b3b-45a5-87d1-12f36d7edc8f",
        "cursor": {
          "ref": "117a1985-b614-4dd9-a54f-d59577db4594",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eba3ae85-e555-4b3f-ac8d-a106d1b30724"
        },
        "item": {
          "id": "5540c97a-5b3b-45a5-87d1-12f36d7edc8f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a0c8ca65-107b-4be3-b97b-ae85147a2f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b89550-554e-410b-882a-9ce02a2971e4",
        "cursor": {
          "ref": "ce6a5436-4fc0-47d2-9cc0-8027ba537ace",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da50ffeb-fceb-4242-ac04-ab149ba49bb5"
        },
        "item": {
          "id": "62b89550-554e-410b-882a-9ce02a2971e4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "05a1586e-89ce-480d-af6c-db9da777eac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb4d513-0f31-46bb-90f8-55915e29880b",
        "cursor": {
          "ref": "7866b714-9e96-43f7-95a1-24314e10af11",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7dd65ac3-bfd8-4c96-a696-952637c15f86"
        },
        "item": {
          "id": "ecb4d513-0f31-46bb-90f8-55915e29880b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "81167d61-b8d3-472e-852a-d05e35646f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081edafe-4446-4be7-850c-0c8e25084e1e",
        "cursor": {
          "ref": "2ebf687f-e5aa-4333-bf6e-831381528074",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "323cc5e2-1cd5-4931-a831-d24164351f9e"
        },
        "item": {
          "id": "081edafe-4446-4be7-850c-0c8e25084e1e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f2f5092b-cb1a-499e-b5bf-5aa7f46f6e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7891d-a979-4ada-827e-21ce76fd92cd",
        "cursor": {
          "ref": "2af5d5c3-c90b-4d34-b1db-69958a9a843b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3500655-980a-4ec7-9669-f35106cee2a5"
        },
        "item": {
          "id": "e9e7891d-a979-4ada-827e-21ce76fd92cd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7b401161-9134-4a7a-b633-c706d7ff144f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c74df2-a028-4146-9ce8-c91a7c9903b5",
        "cursor": {
          "ref": "93b9c0e9-1934-4040-9342-0a602445fc6c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1f7c6725-5336-4fe7-a97b-988811525876"
        },
        "item": {
          "id": "b2c74df2-a028-4146-9ce8-c91a7c9903b5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6a79af3b-b76f-42e1-be27-e8f77dab2ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b9477b-cbb0-45ea-82ca-93e6c1f7adca",
        "cursor": {
          "ref": "8d070e45-e0fb-4968-8881-856e81d4d8ec",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9a1ad7f0-d880-4126-aab8-cbb04b19b58c"
        },
        "item": {
          "id": "58b9477b-cbb0-45ea-82ca-93e6c1f7adca",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "63246926-1276-48af-8aa8-25d19b1a9617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55db804a-57ae-4d42-bb6d-44e7fb15494c",
        "cursor": {
          "ref": "fc54c0a6-d698-4806-943d-84b6419845bf",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d04bb16-2a3f-4610-be31-f07e85fa1d17"
        },
        "item": {
          "id": "55db804a-57ae-4d42-bb6d-44e7fb15494c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94031f46-619c-4575-ac9a-aacf5cedd28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9807c237-0944-4e12-b72f-834472d9c288",
        "cursor": {
          "ref": "6d27625f-0145-47c4-a1e9-e282fde238db",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aa68c0ea-adcd-4039-bc37-0f0f3a5b905e"
        },
        "item": {
          "id": "9807c237-0944-4e12-b72f-834472d9c288",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c3459c0-11e6-4ad7-8348-79acccb6198f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a13ff-1fde-40e6-add3-1384bba8e24a",
        "cursor": {
          "ref": "e1f55239-55f8-4287-98cd-4f9485f0200e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "744a0e42-6802-447a-b95e-1dc5db14f2b8"
        },
        "item": {
          "id": "f35a13ff-1fde-40e6-add3-1384bba8e24a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6c87367e-ae97-4bef-a69c-ef67459fd1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26935e88-b69d-468f-89e7-2f2a3bb509c6",
        "cursor": {
          "ref": "5776b1b5-2d85-49a1-928c-74c1b486e9b8",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dd35545a-be43-4963-af83-c90ac1890860"
        },
        "item": {
          "id": "26935e88-b69d-468f-89e7-2f2a3bb509c6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c1056281-7cd9-48a2-bd6f-4ce6cc248fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daa2397-5ccb-4524-b397-19eec3306f1f",
        "cursor": {
          "ref": "5e3b3881-b820-4968-8faf-ba37f95f5791",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2271a99c-b69e-4d08-818c-14d4988b14ed"
        },
        "item": {
          "id": "5daa2397-5ccb-4524-b397-19eec3306f1f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7afcbe3c-2bef-4c42-babe-b58a607b25a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668213ca-aa6f-4800-9315-15f91cab3bef",
        "cursor": {
          "ref": "4033d5f8-a8f2-495f-9b78-70a2ba4e7073",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "08a441ed-ac46-4a58-8eae-9fa6eb05d308"
        },
        "item": {
          "id": "668213ca-aa6f-4800-9315-15f91cab3bef",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0a406df9-44d4-4102-a010-b36f89d90799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712f4e6f-b561-41b6-8ca8-ede5cdd3d436",
        "cursor": {
          "ref": "dab18d1f-77dd-4b39-b69c-352835e47274",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "85881842-f17d-49cf-a09c-aa6536b8ec67"
        },
        "item": {
          "id": "712f4e6f-b561-41b6-8ca8-ede5cdd3d436",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e20ebdfd-79da-4479-a843-3f8a7dd2265c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ac57a-7295-4a5b-b0b1-ea52f689c513",
        "cursor": {
          "ref": "9452bb32-8c1d-47bd-8198-71465f056ba7",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0e79b37a-c1dc-4e83-acec-6a99834a56e2"
        },
        "item": {
          "id": "de8ac57a-7295-4a5b-b0b1-ea52f689c513",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f8efd8e9-628e-4b55-b77a-0472bf5cc14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3fbbeb-9d02-4029-b302-667f69d3dc45",
        "cursor": {
          "ref": "1e2cf0b0-17b4-41b2-bfa1-9f1157485428",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6eb2ccd0-4cc8-403d-ad5a-c5df96eb199f"
        },
        "item": {
          "id": "4c3fbbeb-9d02-4029-b302-667f69d3dc45",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "89c14092-506b-4f0f-aad4-66d5712a45b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23107a98-3ab3-48f6-b520-441ecc5764c9",
        "cursor": {
          "ref": "a91b6499-7290-4922-8e84-df7c83d9c098",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "49c3c237-0498-40c7-99af-c05e609f525a"
        },
        "item": {
          "id": "23107a98-3ab3-48f6-b520-441ecc5764c9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e3664e6-608b-4867-b3e5-c2ca82253e86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e89c065-3769-46de-8af0-097ee6bb55dd",
        "cursor": {
          "ref": "030f87bd-4a5d-4383-8753-7f4c72d222d9",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "acdd4e82-8e72-405d-aefa-33fe623ff3fd"
        },
        "item": {
          "id": "4e89c065-3769-46de-8af0-097ee6bb55dd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e761daac-a3e5-47b4-b238-a84afd5aab48",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 215,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2c635-e196-47d4-8aa4-6f1beb4db3e9",
        "cursor": {
          "ref": "42b93aea-aea2-4351-af1d-05d92cad3af8",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6a20563b-2506-421f-b21b-b77e3c5c1a44"
        },
        "item": {
          "id": "60b2c635-e196-47d4-8aa4-6f1beb4db3e9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "acb9760e-13ff-4b67-9032-664b5775eeb0",
          "status": "Created",
          "code": 201,
          "responseTime": 110,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02dd0ee-dcab-4971-a5b2-4bb1e6405740",
        "cursor": {
          "ref": "c9b9efb0-e397-4986-85e8-e3235125630f",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "982e3d7c-c38c-4188-84da-18ee5dd5e3a9"
        },
        "item": {
          "id": "b02dd0ee-dcab-4971-a5b2-4bb1e6405740",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a769fc75-7571-499c-8fef-05520d60a664",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c3c8b3-2888-42dd-9041-e954ccbc76b5",
        "cursor": {
          "ref": "380548d6-b145-4c75-a6b2-07fae403a37c",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "868a34e9-1647-4758-9357-9fe16b02adc2"
        },
        "item": {
          "id": "92c3c8b3-2888-42dd-9041-e954ccbc76b5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cefb5d50-329d-4c70-8838-1cf19e37d852",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b986f912-6e89-48d3-8afd-b73e86d85bed",
        "cursor": {
          "ref": "7dc0a575-ec81-4988-a63c-bd8c384047dc",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9554431b-02b9-451e-a0fb-750a4038159d"
        },
        "item": {
          "id": "b986f912-6e89-48d3-8afd-b73e86d85bed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "278d71bd-913f-4225-929c-e37ce2a9d29a",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a86bda-7626-4364-a85f-59fc9a131396",
        "cursor": {
          "ref": "bbfa9211-093d-4a76-9cd5-a33d8da88a92",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2b22487d-39ef-4111-b234-3d3bc4a10f22"
        },
        "item": {
          "id": "c6a86bda-7626-4364-a85f-59fc9a131396",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd0b5408-6383-42e0-aed2-94e88c1ad0ed",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "feadf9bf-4ef7-4bb7-9a6b-62a139e1757a",
        "cursor": {
          "ref": "df454654-8a40-4da9-adf7-5f2bc4bf7d6e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ed5176fe-9c37-4762-8631-4d34358e5890"
        },
        "item": {
          "id": "feadf9bf-4ef7-4bb7-9a6b-62a139e1757a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c4912147-5f8a-42a8-a428-5cf55b32948b",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5b5241-34fe-44bc-929f-378225317710",
        "cursor": {
          "ref": "f494bbc8-214c-4906-8651-c3215fff6205",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f7409534-ade1-417a-a3d0-9782b4f57415"
        },
        "item": {
          "id": "ca5b5241-34fe-44bc-929f-378225317710",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c639f82-4b4e-42f2-a8c9-aa8e68e34fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5b5241-34fe-44bc-929f-378225317710",
        "cursor": {
          "ref": "f494bbc8-214c-4906-8651-c3215fff6205",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f7409534-ade1-417a-a3d0-9782b4f57415"
        },
        "item": {
          "id": "ca5b5241-34fe-44bc-929f-378225317710",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c639f82-4b4e-42f2-a8c9-aa8e68e34fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbdfc8b-b2c3-4d6e-911d-a4b9011372b5",
        "cursor": {
          "ref": "7f53804c-2c9c-4df6-9569-533888441230",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9b57e917-71b9-4eed-b5cc-a398c6b47835"
        },
        "item": {
          "id": "2bbdfc8b-b2c3-4d6e-911d-a4b9011372b5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "818aa8f1-f93f-44a1-949d-12c76a5654c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe5e3e8-975c-414a-b75e-8f93d203f8e5",
        "cursor": {
          "ref": "2f4dc8da-05b8-4a46-aaee-73a998127301",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f3c1ab2f-0018-4715-b9da-19525b447198"
        },
        "item": {
          "id": "6fe5e3e8-975c-414a-b75e-8f93d203f8e5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "058f262e-3022-482c-8856-b90877976d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd48144-c845-4a1e-8575-4ed10d5fbb0d",
        "cursor": {
          "ref": "a16922e3-e98c-4d39-9d1f-a40ada9d307f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a9ea61fb-88ce-4d5e-95d6-4aaaac6664a4"
        },
        "item": {
          "id": "2cd48144-c845-4a1e-8575-4ed10d5fbb0d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fbd6c2e5-7497-43f8-a4ad-e27cfd58ae5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd3d9eb-07ac-44ba-92f2-6e083d235399",
        "cursor": {
          "ref": "82e58892-7ecc-44e8-af65-26b176ca61e7",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a41270c0-3399-4489-98bf-88150283fad6"
        },
        "item": {
          "id": "fbd3d9eb-07ac-44ba-92f2-6e083d235399",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fe2d4f68-2eb0-451b-beb4-05c1a12c57d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b43e06d-c6c6-4ace-88f8-5acb1835dfbf",
        "cursor": {
          "ref": "b6fcd25e-45dd-48e5-b59f-99b683ad7ee2",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9c573e53-3beb-43e4-aa8f-8c1393a9cb22"
        },
        "item": {
          "id": "7b43e06d-c6c6-4ace-88f8-5acb1835dfbf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3dafcb2b-0153-4740-8e5a-9e1d4abeb80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096fcc4f-cfc3-45f4-a2c7-8f58f7750d4b",
        "cursor": {
          "ref": "b6ae3b97-207c-47d5-b7aa-0ba313f319b3",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5f88ee93-c695-43cf-83e9-63cd63d03a61"
        },
        "item": {
          "id": "096fcc4f-cfc3-45f4-a2c7-8f58f7750d4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "78faf9e0-cfee-46bd-bb30-234f29c9c372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9570477f-3a01-459d-aae4-3e4c64d3e299",
        "cursor": {
          "ref": "c3845b10-d47f-4694-bbda-7b333247fea0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "20f3e5f2-df0a-4b13-be77-5c76f5679f91"
        },
        "item": {
          "id": "9570477f-3a01-459d-aae4-3e4c64d3e299",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cd1493c7-bbc2-410b-9124-b84933fa959d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d331cc-6c31-4c9c-9b5a-41ff8bc8d349",
        "cursor": {
          "ref": "7583ca6a-e469-46b3-a688-62b0b4a31e55",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e6dfaa43-31be-44f4-862a-2dc6b3d8cc7e"
        },
        "item": {
          "id": "97d331cc-6c31-4c9c-9b5a-41ff8bc8d349",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d8ac1729-4490-4d51-90e2-4db1777c6838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebd117c-df3b-4d8d-9663-5b44823af151",
        "cursor": {
          "ref": "31753000-9205-4ed0-bfaa-a93b68385c6a",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "23f7054e-6399-4de0-9234-9906ad3ccd3c"
        },
        "item": {
          "id": "6ebd117c-df3b-4d8d-9663-5b44823af151",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1abcbfbe-2980-4c47-ad18-2167ef3ec643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c326e6-9b1a-4c56-9f02-cc8cd643e615",
        "cursor": {
          "ref": "4e162976-1e69-4746-9588-eef6329c00e8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0412ea53-8076-40bc-97fa-8d538f8dc609"
        },
        "item": {
          "id": "08c326e6-9b1a-4c56-9f02-cc8cd643e615",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "48660dff-c243-4bbd-9d5c-9811dfb4268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d8e09d-1b6b-4ea7-b66c-0702f8c4d24d",
        "cursor": {
          "ref": "1183fbaf-1f8e-436e-8093-5eb83dc06275",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "883a8db9-3ef9-4afa-b313-81d763269ebb"
        },
        "item": {
          "id": "71d8e09d-1b6b-4ea7-b66c-0702f8c4d24d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "539575bd-f57a-4ff2-ad88-5b079c21cee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64861e9d-caf3-4581-b073-e3e753bd3586",
        "cursor": {
          "ref": "6853e057-370f-4c5f-8acc-730a46e9d4c5",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "812da12d-b9b1-4af0-ad1b-eb2d710c1be7"
        },
        "item": {
          "id": "64861e9d-caf3-4581-b073-e3e753bd3586",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "979cd441-3547-47c1-9e25-f0f02652f2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc536a69-4f24-4918-93dc-f2044b5f3a36",
        "cursor": {
          "ref": "eca7d56e-8919-4749-9ad6-f70ad457e79c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf5cb328-81c5-4ea8-99dc-e2fa18daf20e"
        },
        "item": {
          "id": "bc536a69-4f24-4918-93dc-f2044b5f3a36",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb9e5998-8e29-4700-9ef6-0dd6f1345b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e9c37e-86e7-4ab7-bef6-1cf680a58aed",
        "cursor": {
          "ref": "56010e5a-b592-4349-b8ce-d1431d4bb4f0",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3050ede5-bea5-4daf-8910-306dee12e0ea"
        },
        "item": {
          "id": "e2e9c37e-86e7-4ab7-bef6-1cf680a58aed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "26b984a0-2e2b-44b2-8ef1-f0885c205289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cebd7b-9fc7-4dfe-8c4b-32f7d32c2b7c",
        "cursor": {
          "ref": "977d25ec-bf41-4bec-8d46-a3da14be3aca",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74e741ed-6c3a-4d3c-be02-0ed0144f822b"
        },
        "item": {
          "id": "33cebd7b-9fc7-4dfe-8c4b-32f7d32c2b7c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2ea75ad0-c5af-42c0-ba33-6fa5f1486d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f37241-3683-4a7c-b59d-0950dfa6f6ae",
        "cursor": {
          "ref": "a48e7222-c4a5-4925-a737-dc41e9ad04c9",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c66856fe-4a88-4ac2-9496-a6eba6308f5a"
        },
        "item": {
          "id": "40f37241-3683-4a7c-b59d-0950dfa6f6ae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20943aaf-ba3a-47a2-9923-d1c899f478dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2656d0ad-e382-4000-9919-4b597b2acb77",
        "cursor": {
          "ref": "cf16e14e-5fa8-4844-ac40-3ef6c92a1f88",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8c27fadd-bf62-4595-8316-bb4048b6c46e"
        },
        "item": {
          "id": "2656d0ad-e382-4000-9919-4b597b2acb77",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dea97761-4b95-4270-a4c5-1c842c846a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5c0548-d663-43c9-a738-369e519e77df",
        "cursor": {
          "ref": "8574178e-f83c-4945-b4a8-3c8b02374967",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2967d2b3-a4e5-4f9b-b67f-09150449473b"
        },
        "item": {
          "id": "ae5c0548-d663-43c9-a738-369e519e77df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9d660033-a60c-4896-a7a0-0f551a26f576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56da9f3-dd0d-4ffc-9eb3-04be2f687121",
        "cursor": {
          "ref": "e57f4c30-7a9c-4a68-8211-b8234c25e6d0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "490841d4-2355-49fe-a4c1-f75a2048ce5b"
        },
        "item": {
          "id": "c56da9f3-dd0d-4ffc-9eb3-04be2f687121",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5c6320ea-1851-42f6-9d3c-83b4361a207c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b092885-72db-40dc-83b2-f60a9959c16e",
        "cursor": {
          "ref": "73b75be0-4be8-471c-a97a-148be3001e70",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1bdcfc26-0942-476f-9763-5e4ba0f1745a"
        },
        "item": {
          "id": "8b092885-72db-40dc-83b2-f60a9959c16e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "73ed18fe-6e89-4709-9026-4b35f8e9499a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb6a44a-092a-4e5b-9baa-445160d21e2d",
        "cursor": {
          "ref": "a65c64fb-8f09-43a4-a25b-ee149899ec15",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "486f2a32-f2ef-4e29-9485-5eba0642e4ed"
        },
        "item": {
          "id": "bbb6a44a-092a-4e5b-9baa-445160d21e2d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5999578-6eed-4cdc-8466-8331907f9708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034876da-41f4-46fe-bf92-d10a66666d22",
        "cursor": {
          "ref": "fd5b0549-fc97-45b9-8d27-a5a26453b309",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d1897b67-fbd3-40e1-bf1d-73f56859efcd"
        },
        "item": {
          "id": "034876da-41f4-46fe-bf92-d10a66666d22",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "790bdca2-e41c-4dd4-b7ae-fac0e637b01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77864dc9-791e-4f25-81fe-a63342d52994",
        "cursor": {
          "ref": "a9b7306a-c281-4ffd-8b69-df7c30955311",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0b382a31-9426-491c-a37c-a0a1c23f46a1"
        },
        "item": {
          "id": "77864dc9-791e-4f25-81fe-a63342d52994",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "555ee4b7-d74a-4a08-9bce-d2e13f9713d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edc1eae-be30-436d-b209-2f7229ca2b94",
        "cursor": {
          "ref": "36fa3d95-b675-4be2-8a47-4800c8f633dd",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6d66bcb1-e4c8-4279-9c99-4c76b12d8d79"
        },
        "item": {
          "id": "4edc1eae-be30-436d-b209-2f7229ca2b94",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c947503-fc0d-4711-942a-4cc6c781b981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b80578-463f-482f-9f80-b5b41f018056",
        "cursor": {
          "ref": "2945fb48-06ca-499e-be3f-92f8305ccdad",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bac776f4-5151-404a-857c-491963618029"
        },
        "item": {
          "id": "c2b80578-463f-482f-9f80-b5b41f018056",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "97a8ed19-77fd-4f1a-8458-dc5664bc4cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94aa500-1a2f-4b5e-bbfa-838c1d8ebc6f",
        "cursor": {
          "ref": "ea82f6d4-29a1-4280-aeaa-ddb303caf007",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cc5c581c-0b55-4630-a955-7c83aa0952a9"
        },
        "item": {
          "id": "a94aa500-1a2f-4b5e-bbfa-838c1d8ebc6f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "684439d3-1819-498c-b618-7a73edacf61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3e7a5-74f8-4dd0-a9a5-fa3e12fd217d",
        "cursor": {
          "ref": "32ec82d7-685b-4cc8-a369-21915613370c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cd4336aa-b711-49f8-800a-fb4cfee234b8"
        },
        "item": {
          "id": "bea3e7a5-74f8-4dd0-a9a5-fa3e12fd217d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c9bac29c-f9db-47b0-8be4-d8cade354458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9700797-fbc4-4c74-b213-2084728e936c",
        "cursor": {
          "ref": "199f53d8-2582-4477-a608-a38a7673c5a0",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "134345b9-3800-48b7-9f2f-177fe17743b4"
        },
        "item": {
          "id": "a9700797-fbc4-4c74-b213-2084728e936c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "92f0411d-7d95-4eac-a90a-e4255b444f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcdb730-e92e-40f6-9785-30b40f9bf38f",
        "cursor": {
          "ref": "6ae60d2b-0bb7-4ef1-881f-d7040278573b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d1ca6f56-dac5-4b65-afac-54dc4743805c"
        },
        "item": {
          "id": "1dcdb730-e92e-40f6-9785-30b40f9bf38f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f410240b-be7b-4903-8915-05769cd0907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800fab17-aa15-4b32-bfe1-762607bf3921",
        "cursor": {
          "ref": "d7ed0d0b-9661-4e0a-b5a9-032143317f9b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "846a1fd3-cd0a-4f48-8868-737fa94bfca8"
        },
        "item": {
          "id": "800fab17-aa15-4b32-bfe1-762607bf3921",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c10a444d-b5a3-4b76-9391-31aefa0416e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de823e51-5dda-4eaf-9477-5a3df249a202",
        "cursor": {
          "ref": "37fcfda1-7369-4361-aadc-b846d2420ec5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "205ac6c0-4a2f-497f-8cfb-7fd5a759414c"
        },
        "item": {
          "id": "de823e51-5dda-4eaf-9477-5a3df249a202",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ffbb0399-22f0-434e-b574-3fe9e5ec511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c98514-52dc-4eac-865e-41f867e39cd4",
        "cursor": {
          "ref": "5791bf57-1eff-448d-abd3-8553716506e6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cefee25d-2ca1-4d56-bfa0-14a1d3ac2f16"
        },
        "item": {
          "id": "05c98514-52dc-4eac-865e-41f867e39cd4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "90776502-7124-49ca-b175-b1099100c214",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2cd299-e2e3-4634-b82c-154abfb3e7b5",
        "cursor": {
          "ref": "7df359e0-c36a-446a-99e1-c3666140949e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bfeca045-eda2-48f6-b75c-c7a1eb999df9"
        },
        "item": {
          "id": "7c2cd299-e2e3-4634-b82c-154abfb3e7b5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0b6a018f-58ac-4e36-bac9-3ff40de96b99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228274d5-a77f-474c-9692-b0e8f9b01783",
        "cursor": {
          "ref": "7f2f2158-f1c4-4f9b-91d6-5f7d2b76d862",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "57d8f4a7-768b-4425-909f-38748465c156"
        },
        "item": {
          "id": "228274d5-a77f-474c-9692-b0e8f9b01783",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91c6c130-9d78-4f89-970c-c6bf0f61e962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228274d5-a77f-474c-9692-b0e8f9b01783",
        "cursor": {
          "ref": "7f2f2158-f1c4-4f9b-91d6-5f7d2b76d862",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "57d8f4a7-768b-4425-909f-38748465c156"
        },
        "item": {
          "id": "228274d5-a77f-474c-9692-b0e8f9b01783",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91c6c130-9d78-4f89-970c-c6bf0f61e962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78249fc8-029d-4bc3-a257-44a165cd5bf3",
        "cursor": {
          "ref": "63e3e861-7fa2-42c2-9e77-44e75b179166",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66a29d87-48fb-4065-acbb-1600250009bb"
        },
        "item": {
          "id": "78249fc8-029d-4bc3-a257-44a165cd5bf3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e73bf0ae-c27c-4c0d-9464-9eee98e7dbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b5fa7f-74ce-4e72-8997-5d6cf3ba0fee",
        "cursor": {
          "ref": "1dc1254e-631e-418d-af2c-4bafe5efd3e1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f659ebaf-9ae5-40ae-9dd5-073944fbc732"
        },
        "item": {
          "id": "59b5fa7f-74ce-4e72-8997-5d6cf3ba0fee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "17ccac7e-7aed-4271-9725-4d2157f03fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6171bc-ada6-4f01-827d-2c995be6b6c3",
        "cursor": {
          "ref": "3a98f266-74d3-49dc-92ae-44f64648f7b3",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7049f00c-500a-4f63-9d7c-c24e1529cc96"
        },
        "item": {
          "id": "1a6171bc-ada6-4f01-827d-2c995be6b6c3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "62bd49a2-adda-425a-8376-c42f7c7d07c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d60812-2a7f-4d45-82f0-6f29eed0d5d6",
        "cursor": {
          "ref": "224ebba9-6668-49c1-a49e-b0717009d76a",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "515fc944-68bb-4937-9653-c4f55f269963"
        },
        "item": {
          "id": "47d60812-2a7f-4d45-82f0-6f29eed0d5d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "88686592-73cb-49b0-8e00-5a6377ef9bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5f9c11-37bb-4d30-8166-ac918dfeb147",
        "cursor": {
          "ref": "5691543f-c280-4fb9-9d20-65fe6ddbaae6",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5da361f9-b2c3-4f76-a35b-d4ae9830026d"
        },
        "item": {
          "id": "5a5f9c11-37bb-4d30-8166-ac918dfeb147",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f21305fa-f652-4fa0-9269-4eae716120a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8434e2c7-daf7-4b68-bb2f-5c624e165dd4",
        "cursor": {
          "ref": "e31d1476-e488-4229-a38e-281e403179a8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0db522db-27ad-4c0d-8b22-b4cbd279bec1"
        },
        "item": {
          "id": "8434e2c7-daf7-4b68-bb2f-5c624e165dd4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "18da23ca-c2a4-4ee3-8a83-956fd45927a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc866c3-73f4-4275-b531-ac2ecc31d501",
        "cursor": {
          "ref": "262062e3-b9f4-48ca-b414-d97d47af98e1",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "76384bfe-b5bf-4809-98eb-c850cb48882f"
        },
        "item": {
          "id": "3bc866c3-73f4-4275-b531-ac2ecc31d501",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f5c0e7e2-6320-44fd-bcbf-6a01cb21f876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30db3ca-a929-43b7-b1cf-1efc7543b852",
        "cursor": {
          "ref": "70593784-80bc-4d1c-81b9-b28fa081b6cc",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aa0e625c-dd08-4fdd-abc7-88e0a9ad83da"
        },
        "item": {
          "id": "f30db3ca-a929-43b7-b1cf-1efc7543b852",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dd4143bd-f4ad-4290-a42c-ed9c182b42f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408c6bd2-814f-4421-a626-6d58a3c51b8e",
        "cursor": {
          "ref": "e6d1e306-0c84-4fcf-b538-6cebb956c1a9",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9ff85a8c-a137-4f4e-82f9-c63d55a7df36"
        },
        "item": {
          "id": "408c6bd2-814f-4421-a626-6d58a3c51b8e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d41e7344-814c-49f5-8700-6d964d3b7e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ad4183-593b-445f-9934-2860bd001cda",
        "cursor": {
          "ref": "891ede2b-2324-49ea-bf09-1a4ce3f477dd",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4a8801e4-811b-4118-8a0d-85c1e768badc"
        },
        "item": {
          "id": "c9ad4183-593b-445f-9934-2860bd001cda",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "656d7854-3fb4-4352-83a7-0a83f52f8c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2223444c-47e6-43a4-a695-19f8129d55fe",
        "cursor": {
          "ref": "27b04d6d-bb26-4837-8a88-3b6589e3a88d",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2113482b-a333-426e-847e-6120ad602e1f"
        },
        "item": {
          "id": "2223444c-47e6-43a4-a695-19f8129d55fe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4e0d5faf-1ae0-4d71-8fa6-4719b95b65e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ba6ed9-4b67-4c52-bc30-49449c60005c",
        "cursor": {
          "ref": "70022828-d8fd-466d-b824-39af247e1194",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "26e8b8a1-a6ec-4204-a7af-f0dcdb81b1a1"
        },
        "item": {
          "id": "b5ba6ed9-4b67-4c52-bc30-49449c60005c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e49651f6-4f2f-464a-a420-d44fac3bb812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a7fb2e-4262-4f43-9578-ee34b1dd84ed",
        "cursor": {
          "ref": "bd5941b2-e141-4bb3-91ea-e71b7ddc9563",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d4ff5ede-ddd7-490d-bdb3-426d1b6d1a5e"
        },
        "item": {
          "id": "45a7fb2e-4262-4f43-9578-ee34b1dd84ed",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "62602b8a-8e44-4f22-8603-a5a331ab7a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a14d6e1-0b13-4dd0-b4ce-6b52d1e4ae78",
        "cursor": {
          "ref": "b84c1a11-1f2f-4b2f-9b3f-e7e1ecfee96f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "004d2433-c1ef-4765-a960-bcb84fa483ca"
        },
        "item": {
          "id": "7a14d6e1-0b13-4dd0-b4ce-6b52d1e4ae78",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d199db61-f367-4b18-93be-237202fdf3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9433084c-2096-4a41-9b89-f5142ed84c66",
        "cursor": {
          "ref": "89d5f51c-7475-42cb-afee-46652f504e48",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ef83fb2c-e773-495f-b28b-9e54ea449d3a"
        },
        "item": {
          "id": "9433084c-2096-4a41-9b89-f5142ed84c66",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b41a19fe-c252-466c-94d5-e0d61de4c1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93306a7b-e4ac-411d-a8ee-d7e7790a11d6",
        "cursor": {
          "ref": "8c7461e3-c64e-41b8-85b9-cff1c826d91c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6f87f406-1528-4c7e-8dc3-4b02162107b2"
        },
        "item": {
          "id": "93306a7b-e4ac-411d-a8ee-d7e7790a11d6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "76fa25d4-8eb5-4241-b07e-f84517104ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab6227-b5f4-485a-8606-bb1c816092eb",
        "cursor": {
          "ref": "a12ff066-c706-49dc-b25c-4503ec80dddb",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2b770958-8aab-4456-a535-704bf4774bc6"
        },
        "item": {
          "id": "69ab6227-b5f4-485a-8606-bb1c816092eb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3e29acd8-ae20-4144-86cb-a39651245434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d27eef-918b-45ce-b830-8209b27e4cea",
        "cursor": {
          "ref": "b2641459-b7f7-4af7-8d56-019d2ec24978",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "39ea7b32-b696-4158-bc95-f2005e3ada7f"
        },
        "item": {
          "id": "d3d27eef-918b-45ce-b830-8209b27e4cea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd5d66a2-e2d2-46d3-b85c-1b98df4d4bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c2d211-d719-46d0-9bdd-be257f06f5d4",
        "cursor": {
          "ref": "122ed4e2-c6cd-4182-aae3-eab660c384cf",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "35142db1-8456-4e79-beed-93957746d456"
        },
        "item": {
          "id": "e4c2d211-d719-46d0-9bdd-be257f06f5d4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d7ef7f37-56b4-44bc-8619-6b6961ce9d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ae44c9-1779-4cad-af19-8c290cd0a09e",
        "cursor": {
          "ref": "b4134075-47ef-44ee-8b8d-1f460b261e6c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2478450a-20f5-4d28-bf32-c924f1c3edce"
        },
        "item": {
          "id": "f5ae44c9-1779-4cad-af19-8c290cd0a09e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c73a246-2cba-49b0-9f46-d45180cb8cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8900402-02de-4206-bdf3-0300afb723f4",
        "cursor": {
          "ref": "f7f53d1b-22c6-4f7b-af54-933ee106461f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ea8ae438-abdb-4f55-9fc8-422abdc3f76f"
        },
        "item": {
          "id": "d8900402-02de-4206-bdf3-0300afb723f4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e83f8627-732c-405d-a986-e863ed6ea164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8a1165-4115-4c42-b1f2-9b35e36b0cae",
        "cursor": {
          "ref": "898d4fa0-6b17-4ea4-81e2-bc78f0a4dbbc",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "30a3f7cf-7a60-4198-b922-4be23d4e515f"
        },
        "item": {
          "id": "2b8a1165-4115-4c42-b1f2-9b35e36b0cae",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5acf7718-ca60-4ccb-aa37-011913656734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe9804-a6db-4a41-a9af-4385939dd1e1",
        "cursor": {
          "ref": "d9f85d31-971f-4617-abcd-abd070337ef4",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f68ae92f-b04f-42c0-b086-c86bb8d00952"
        },
        "item": {
          "id": "e1fe9804-a6db-4a41-a9af-4385939dd1e1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "47d8fbd1-9eab-4b55-b44c-0ad2cdc4020f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d4ee95-168c-4065-9c72-37fff489c3ab",
        "cursor": {
          "ref": "c0d37c1f-0b64-4a95-bd1e-806ac55e13da",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6218ef7b-6eda-4838-968d-0e7dadc90c42"
        },
        "item": {
          "id": "60d4ee95-168c-4065-9c72-37fff489c3ab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "695c9aa3-9177-4372-9427-db76ab2c7121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815c1dbc-22a6-4c2d-b16d-f258da235888",
        "cursor": {
          "ref": "7452c9db-9700-4c59-b8b8-7b2f90a734b5",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ddcd14ec-c2f0-4ab0-be1d-68d73d459df4"
        },
        "item": {
          "id": "815c1dbc-22a6-4c2d-b16d-f258da235888",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9f7046e1-544c-450a-ae74-358e91e81a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95284f11-dde6-46d2-9d57-a8bb2cebc19e",
        "cursor": {
          "ref": "b527c139-113f-4946-b1e5-d910f76650f5",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d26cb17b-8e86-4df7-9540-27585a09e582"
        },
        "item": {
          "id": "95284f11-dde6-46d2-9d57-a8bb2cebc19e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e9bed836-fd10-4a1f-b952-2593e4c45e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32683efe-9f80-4519-8bfa-080c49ecf497",
        "cursor": {
          "ref": "ee8f6f55-9d5c-4007-a538-03e788230ad4",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1da84e92-23ba-4ec8-9ac5-d19714901dbb"
        },
        "item": {
          "id": "32683efe-9f80-4519-8bfa-080c49ecf497",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f4d62fce-3a3e-476f-9a9e-b25e63559bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae66299-63db-4b7f-a5fc-39781e56a58f",
        "cursor": {
          "ref": "c4410d37-cf1c-4c50-ac55-a35c005f65a4",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "db5f3789-2bde-49e3-8e6d-4478c16f6386"
        },
        "item": {
          "id": "dae66299-63db-4b7f-a5fc-39781e56a58f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c50264b5-31f6-4610-8daa-266bb7ee000b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed9ed00-dab8-4d54-a6b6-7414b2fee138",
        "cursor": {
          "ref": "e8cc8f26-2fcd-4a0c-a51b-d36b1dc4ce40",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "187c0e0d-2b9d-4c78-a32f-ef0459b2b6b0"
        },
        "item": {
          "id": "2ed9ed00-dab8-4d54-a6b6-7414b2fee138",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8e7cb5eb-56be-4d72-9320-c76d770b801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bdc857-0d7d-42ec-8dec-419256060775",
        "cursor": {
          "ref": "e07762db-c641-4cbc-8873-78405571bbc2",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "15b6b56e-3411-4724-bab1-626d025c4943"
        },
        "item": {
          "id": "15bdc857-0d7d-42ec-8dec-419256060775",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ea693b73-69bc-4b77-87e1-ae7cf378358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b1272c-a8c6-42b0-bd3f-76a3d0424f35",
        "cursor": {
          "ref": "29e70ddb-173b-47f1-89e6-9f393234f64e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "44a83b86-f4ec-4804-b4ce-6ec13d70af12"
        },
        "item": {
          "id": "18b1272c-a8c6-42b0-bd3f-76a3d0424f35",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "763e3f13-ca26-4c0b-bd1b-06481d47a620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff4059-3bd9-484b-8219-eb2ff1d1b461",
        "cursor": {
          "ref": "83a398f7-5908-4557-81f5-aac5ca60420a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07762a22-bc29-4b92-9ccc-70935b7bd702"
        },
        "item": {
          "id": "92ff4059-3bd9-484b-8219-eb2ff1d1b461",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a4e8251a-9c5f-45db-9d2b-03657d8b79c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e9f6e4-e731-457e-9483-5d282ce142a1",
        "cursor": {
          "ref": "55778814-d2e4-4b9f-9a96-b8a42c3e90e2",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "583f8c31-b029-4eb6-986a-12f8b87c7504"
        },
        "item": {
          "id": "21e9f6e4-e731-457e-9483-5d282ce142a1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf123f71-f5e9-42ac-8454-23b037902b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb5668-b26b-4f31-8682-9597d0684280",
        "cursor": {
          "ref": "c81b9f0a-bd3d-4b70-8ec6-2e5f14625a9c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "baf1d1e0-bf22-4ab9-8528-fb42f7c317d0"
        },
        "item": {
          "id": "a8cb5668-b26b-4f31-8682-9597d0684280",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c4efb0e5-291b-440b-a589-4729386db06e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd788e95-7f9e-44ef-b8ff-afb9269008a2",
        "cursor": {
          "ref": "434c2de7-4464-43e1-bfe1-f62163ac38eb",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c633cf2a-5355-41f7-b0f7-399334a83158"
        },
        "item": {
          "id": "fd788e95-7f9e-44ef-b8ff-afb9269008a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "505050a2-8cb1-4f18-9b8f-87a6f007af13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0a3227-9b09-41bb-be3a-f156c54f8b8d",
        "cursor": {
          "ref": "08881df6-6506-4480-b7e2-e8f0432bc4fb",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "19ef1179-ccfb-43c3-8c8a-666ca0e85577"
        },
        "item": {
          "id": "8e0a3227-9b09-41bb-be3a-f156c54f8b8d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "14b281e1-75a6-4837-900e-8950a040cd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd2884-6653-4185-a283-a46b321de9d5",
        "cursor": {
          "ref": "de128597-839e-40c8-a139-9312ea98eaa6",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1f8d1c80-be46-4251-917a-aa88154f3c6c"
        },
        "item": {
          "id": "98dd2884-6653-4185-a283-a46b321de9d5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7b365860-f66a-4cf4-98dd-9eeb62762e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b6b0c5-8b06-4709-9c0b-89bccd131da7",
        "cursor": {
          "ref": "663ec2a0-d185-4adc-bcc0-8d2be469e23b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "51286d28-15b2-42d9-a4d2-f449c61da37e"
        },
        "item": {
          "id": "11b6b0c5-8b06-4709-9c0b-89bccd131da7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "db47b2fd-4a15-4639-acc8-e7360cb1be75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ade6337-3683-47a2-92c5-43fb5846b624",
        "cursor": {
          "ref": "de4da074-55c1-4bd9-9f08-871aaa304b23",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c37b3dfb-8f0e-4218-9c25-cae7d6dae484"
        },
        "item": {
          "id": "9ade6337-3683-47a2-92c5-43fb5846b624",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "83ae2181-dd5c-426d-a7dc-476be7de4da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937db9f9-7e75-4f6f-8d36-2a6710f576cd",
        "cursor": {
          "ref": "731acee9-c9a8-4621-9cd1-7bb6e8d79935",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "08db9149-58fc-4b5d-83d4-84d8a0e2f736"
        },
        "item": {
          "id": "937db9f9-7e75-4f6f-8d36-2a6710f576cd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f1871a59-4c8b-4972-b313-c268e64456c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c3d11d-96d6-4f0c-84e9-9bab053d94d1",
        "cursor": {
          "ref": "edc4291e-05fc-499e-9898-9d13cef79e1a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e929e258-a826-4cba-8a18-23da8e8b0cad"
        },
        "item": {
          "id": "98c3d11d-96d6-4f0c-84e9-9bab053d94d1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b40ddc28-8d4c-4c2d-8241-4da760411195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90256da-37fa-4bdc-b787-fa28dc121a95",
        "cursor": {
          "ref": "6713060c-628c-419f-a162-efcae2c3fb18",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ded137a-6b16-4bdc-a630-654487d75887"
        },
        "item": {
          "id": "a90256da-37fa-4bdc-b787-fa28dc121a95",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b886548a-1bf8-4c03-b9dd-2c17e5cd7b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d26f082-c113-40ad-8168-a1ef96727838",
        "cursor": {
          "ref": "6b7a1a8a-a946-4d48-9cdd-963fc0c005ad",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "68909a6a-551a-451f-a092-0f7f77f3f1b4"
        },
        "item": {
          "id": "0d26f082-c113-40ad-8168-a1ef96727838",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e1a6ffb8-823d-4309-981c-39cf6b113ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffbc48a-1a9e-45dd-90f8-562aac1062ff",
        "cursor": {
          "ref": "0db5bfe7-adec-4071-9bd0-21c63faf0828",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "93536f23-8a4a-415a-83c6-7063c3a9c80a"
        },
        "item": {
          "id": "4ffbc48a-1a9e-45dd-90f8-562aac1062ff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "834d8945-525e-42b2-850d-5e0c642dfdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ea33a5-0e30-4dd8-9dad-8e49fe32b391",
        "cursor": {
          "ref": "7c6f648e-1991-4f77-a09d-47cd51db5a42",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e588cd2-d118-4ca9-89d4-dc676bb723fb"
        },
        "item": {
          "id": "56ea33a5-0e30-4dd8-9dad-8e49fe32b391",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e75ddcc4-9cd4-400b-8fd7-f223a5dc949a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc07c2c-ced9-466d-bc20-81956214d32b",
        "cursor": {
          "ref": "85a0e24f-6d8b-4281-809f-d7aeb3359353",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bdc4d44e-5e92-40a7-ab63-2ca8d9e27f1c"
        },
        "item": {
          "id": "2bc07c2c-ced9-466d-bc20-81956214d32b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e2b287dd-04a8-41b7-8973-6191c96cdd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304a6c66-3a08-4698-b08f-13bd68ff494f",
        "cursor": {
          "ref": "b0458914-71a5-4486-8ca5-a8ffd908f13a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c7745a5b-c1b2-4037-8ab6-c240cf26f6fe"
        },
        "item": {
          "id": "304a6c66-3a08-4698-b08f-13bd68ff494f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3ce17ca0-c269-4768-a462-0e520a83ca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c766d2a-de04-4b5d-ac18-b4d473f0f116",
        "cursor": {
          "ref": "27dd95df-9ad5-4a8f-817b-4c3c82276e58",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f19fc9e4-eb9a-4d5d-828f-1fe2f13af355"
        },
        "item": {
          "id": "3c766d2a-de04-4b5d-ac18-b4d473f0f116",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7ca70f31-0838-4c4e-b6e0-f30b6db8e8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd81ccb4-abc1-4330-b0fb-fad7b1ccf7c0",
        "cursor": {
          "ref": "81ffd70f-cbea-496e-b3ad-8b445ecbf486",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f4b768e1-5740-4186-ace0-ead801b9e97f"
        },
        "item": {
          "id": "bd81ccb4-abc1-4330-b0fb-fad7b1ccf7c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0a4f8e13-d493-4c2d-b3db-84a7fd389778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3275ba-9d51-4839-8809-31b4bc703124",
        "cursor": {
          "ref": "44755913-1773-4ccb-9f92-16ab327dbe41",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb2708b3-bab3-4775-81de-d322b1e1bce7"
        },
        "item": {
          "id": "ad3275ba-9d51-4839-8809-31b4bc703124",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dc4307c0-013f-4e5e-9e97-0820621b89a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb8d1b-1020-453e-bc97-d11cac4b3c8b",
        "cursor": {
          "ref": "17c128bc-4bc1-45aa-8d58-21f2e01eea7f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e9df7676-a867-425c-b157-22c8e8a3129a"
        },
        "item": {
          "id": "6adb8d1b-1020-453e-bc97-d11cac4b3c8b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "951d5963-dcfb-494d-aaac-7397aa05f8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d542e5e8-6c5a-4292-8231-b3d80340b8c4",
        "cursor": {
          "ref": "03c41956-8ae6-4610-a517-18c801a4562d",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7af26219-7c6f-486c-a7bc-9b1ac2b99552"
        },
        "item": {
          "id": "d542e5e8-6c5a-4292-8231-b3d80340b8c4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50c9084d-543b-477c-8a75-c66136e13a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edbaf68-e98c-4d32-afab-78b705cd9177",
        "cursor": {
          "ref": "e4fa3fb1-05ce-4678-bdd3-81d28d7295ff",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d6a4618d-707b-4005-a932-3b4e4c2640f2"
        },
        "item": {
          "id": "0edbaf68-e98c-4d32-afab-78b705cd9177",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "045d3590-0a16-4646-934a-190124bec8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45532ee-585f-4391-8e49-08a59c58dfa3",
        "cursor": {
          "ref": "ac4d2a5d-a51b-49c3-9ca2-31acba3826fb",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3968a7aa-0f97-4ead-8550-5b7f15b9bd75"
        },
        "item": {
          "id": "b45532ee-585f-4391-8e49-08a59c58dfa3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f73c8c4c-079e-4507-a7e5-82dd151e0b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118a15b7-dc3c-4cf8-93df-428e50be1740",
        "cursor": {
          "ref": "a3a23fb1-ad6b-47dd-8700-60e89dca685f",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eb313687-7fd0-4199-a553-c36d4f65e66e"
        },
        "item": {
          "id": "118a15b7-dc3c-4cf8-93df-428e50be1740",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ea27c24c-acfc-44a5-892c-40cff07bde3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adbe8f1-c465-4038-ae10-f01b57c74810",
        "cursor": {
          "ref": "472ae0a3-61dd-4c45-869d-1e690475071b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e42bc306-dca4-483b-a3bd-a98d69085781"
        },
        "item": {
          "id": "4adbe8f1-c465-4038-ae10-f01b57c74810",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "55404ce9-85c7-4224-9526-69abc4eb032d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979abf12-e260-4514-8760-02096daa3ddf",
        "cursor": {
          "ref": "3ee94974-0f98-49ce-adcb-4da6d1d2db21",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cd353771-6386-457a-872e-424eb209ec50"
        },
        "item": {
          "id": "979abf12-e260-4514-8760-02096daa3ddf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5fe424a7-93c8-4045-9ec6-2f5c7beb21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460bee33-9c70-4a71-a7ce-85b9320e7c8a",
        "cursor": {
          "ref": "6cff58de-7f8a-4ac3-ad1a-c7e581d7cb7d",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1dcc2e36-020b-4fd6-9d4c-5c57462435f6"
        },
        "item": {
          "id": "460bee33-9c70-4a71-a7ce-85b9320e7c8a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac8fc2ea-ceae-4916-afb5-9d513dfa79c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e0712e-428d-4beb-9824-8f96f1a9d27f",
        "cursor": {
          "ref": "5cd71116-cea0-43fe-ae3f-fc8595190916",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a0e89b4e-a2a1-4238-9513-eec76d319334"
        },
        "item": {
          "id": "33e0712e-428d-4beb-9824-8f96f1a9d27f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ecc6670b-9e09-41da-9210-5dfdc0d697f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f27e4a9-f00b-46fa-a71a-416064dbb455",
        "cursor": {
          "ref": "b891074c-4334-4a26-a93f-b6b0faf47217",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e3e4864c-ba66-45f0-ac87-a14615e55929"
        },
        "item": {
          "id": "6f27e4a9-f00b-46fa-a71a-416064dbb455",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d7b84e1-abc4-4252-97ba-ca4a0d312999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97297fd5-d8a9-4d38-b1ac-983313535640",
        "cursor": {
          "ref": "b95afcc2-6848-4ecb-a6da-817375c8eb12",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f71c4eeb-2cf4-43db-8c87-3a5a2817396d"
        },
        "item": {
          "id": "97297fd5-d8a9-4d38-b1ac-983313535640",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "44048556-721a-4c4e-8b90-e4237f71dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b15260-56e9-460b-a697-38d3a06e261b",
        "cursor": {
          "ref": "4b442655-c097-4154-b610-7b8f57df5c51",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a147eea-b547-4cb7-8ec1-4a83b762fbe6"
        },
        "item": {
          "id": "99b15260-56e9-460b-a697-38d3a06e261b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7c7a827e-2eed-4ad2-b48f-d0cffde04610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b1a76f-0845-4ff7-9aef-f389670aae83",
        "cursor": {
          "ref": "eae09f71-0fb3-4680-a94e-b3d4d332f1ed",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "37f53cf8-c3c4-47e9-a352-0c01c217672b"
        },
        "item": {
          "id": "11b1a76f-0845-4ff7-9aef-f389670aae83",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e8ab1c2-29ed-491d-808e-97ddc03f0c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc43abe3-97e4-49ed-988e-3f7156748812",
        "cursor": {
          "ref": "a937fa92-0988-487c-8f19-a93bb7adaecb",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9ad5645d-c58f-4ba0-9dd8-e3dc8fa1e70a"
        },
        "item": {
          "id": "dc43abe3-97e4-49ed-988e-3f7156748812",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e5e7bf15-0575-49d9-b25a-b13e271c58de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21e3301-cb43-40a8-a928-b161f55d601d",
        "cursor": {
          "ref": "15bc8038-432b-4e59-929e-0ff3f4173363",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "751fb30c-65c5-4a0c-9546-5525d1a2cacf"
        },
        "item": {
          "id": "a21e3301-cb43-40a8-a928-b161f55d601d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "38c40620-fe63-45b6-b292-4e1a5e95d8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b313424b-94c8-4eae-9c9a-0b76150c5c45",
        "cursor": {
          "ref": "b19d644d-0966-41eb-9762-7776a5729ce0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4dd6d010-64d8-4d5d-901f-41e31e770bdd"
        },
        "item": {
          "id": "b313424b-94c8-4eae-9c9a-0b76150c5c45",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fc3f31a2-2eb7-42ba-b094-85bc8dfbadac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd9c5d2-27d3-4b86-80a3-632a155c3af0",
        "cursor": {
          "ref": "10cd4e6f-b9a2-4b58-8f05-eafd50045be7",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "de83010b-a10b-420e-9b51-a139b0e6996d"
        },
        "item": {
          "id": "1cd9c5d2-27d3-4b86-80a3-632a155c3af0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9e59a326-12f2-482e-8990-5acce1eeff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c28b1c3-b725-4952-91c8-47ae9fc7d708",
        "cursor": {
          "ref": "5648a2e8-0db9-4b2d-b3a8-7319d801c6f7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eeffad11-71e6-45df-bf43-90ab3e0fd689"
        },
        "item": {
          "id": "4c28b1c3-b725-4952-91c8-47ae9fc7d708",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eaf494b6-dfbd-48fe-aa7d-5b74dd66e741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baaf89d-58a2-4b4b-9b85-e07599bfb763",
        "cursor": {
          "ref": "bf145cfe-e3fa-4a7d-af1e-57edbe9a70e5",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4da3c079-cbdc-42aa-bfc1-994da8eec48d"
        },
        "item": {
          "id": "2baaf89d-58a2-4b4b-9b85-e07599bfb763",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f3d165f9-a356-4b89-9cf8-8e7ac992eed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7047099-acbe-4dfe-bd3d-eb223b2e7abb",
        "cursor": {
          "ref": "d4fee16c-80e9-4afe-b7dd-02715b09dc5c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "662f9584-aae4-4865-8d3a-512e9e3f08ac"
        },
        "item": {
          "id": "e7047099-acbe-4dfe-bd3d-eb223b2e7abb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "31e07276-90f2-43ad-adbc-dd59691b34cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5293620f-de10-4f7d-bb55-e996e7b7d93d",
        "cursor": {
          "ref": "e8b16ddd-ca14-4e80-9d3c-42edd8d3185c",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ea9406d2-1f99-4d7f-9b42-d63b00de4d12"
        },
        "item": {
          "id": "5293620f-de10-4f7d-bb55-e996e7b7d93d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1cdbc144-8e64-4a33-8e2c-1f21988f4326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b775f83-6585-4e47-a488-d3edf889abac",
        "cursor": {
          "ref": "5172dd75-163b-412f-a459-b75218494899",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "994c090b-868e-4132-9439-faa5155a1067"
        },
        "item": {
          "id": "1b775f83-6585-4e47-a488-d3edf889abac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ce4ccebb-a6eb-4a0d-98cb-a8053442be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea5c615-24e4-42fe-ab62-9fdab3ba49bd",
        "cursor": {
          "ref": "5291e171-35c0-40ff-8d2e-135552ad4539",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "64b3518b-46f0-4429-98ab-f82bc94bfea3"
        },
        "item": {
          "id": "3ea5c615-24e4-42fe-ab62-9fdab3ba49bd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "00a5f30c-c74b-480c-814c-2ed9b0df74eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee36316-e9f8-43a2-954e-107e2e61c1fb",
        "cursor": {
          "ref": "c74a494e-b43b-430e-ad97-a02d89ea741f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b04b6a1d-1021-483b-afcb-6a7cfb64ea22"
        },
        "item": {
          "id": "7ee36316-e9f8-43a2-954e-107e2e61c1fb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "91b33017-9ff2-4ab6-b81e-644736a3b876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca30b9ff-1a22-4fc7-afa7-71edb4e0db8f",
        "cursor": {
          "ref": "be86b576-3496-4d14-ae43-af0035344565",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fda40718-dbc8-44ca-8e92-1b2b607b2c1f"
        },
        "item": {
          "id": "ca30b9ff-1a22-4fc7-afa7-71edb4e0db8f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "115f05d0-dfe8-4fc7-a3b0-e5fbd2add420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9347c7fb-ab3c-457e-bacc-b17060a254ff",
        "cursor": {
          "ref": "cfb65070-78ee-4a8e-9cc1-4deeaadd9e8f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "56b6f980-2895-4609-9a53-c2141a7a23d3"
        },
        "item": {
          "id": "9347c7fb-ab3c-457e-bacc-b17060a254ff",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "362b5201-089b-4176-99ec-7bea4376ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cc668b-f73b-41c9-a169-2e28a0739a15",
        "cursor": {
          "ref": "d5566bd4-f397-467d-bbda-9ae4df5e01de",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b609ffeb-cafc-48df-82b3-7341826bffbc"
        },
        "item": {
          "id": "81cc668b-f73b-41c9-a169-2e28a0739a15",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c35d77b9-de93-4dc1-a025-383db7746651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943b8bc1-54ff-4fe6-8ef9-8f907be91a44",
        "cursor": {
          "ref": "690c967d-2241-4667-8d39-29d286a4387c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f37fd088-76f6-4a1e-89b2-d90699db5bea"
        },
        "item": {
          "id": "943b8bc1-54ff-4fe6-8ef9-8f907be91a44",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "10f8dbf4-afe5-442b-a4bb-188a7eaa1e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b999dc97-9146-46a3-925b-0320c48cc0a5",
        "cursor": {
          "ref": "51f40200-387d-4541-a8a7-dbbdefacced8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "610d921b-1841-4bdd-ba90-048de9ecb97f"
        },
        "item": {
          "id": "b999dc97-9146-46a3-925b-0320c48cc0a5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f35a0112-428f-433f-ab10-3c79f7b593b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff15589-5e51-46a1-b876-b6726f89c3b3",
        "cursor": {
          "ref": "4526a399-9a52-4b5f-84a4-7b96cb8bfba4",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aec4478b-8a42-430f-bd7c-03df3511580e"
        },
        "item": {
          "id": "0ff15589-5e51-46a1-b876-b6726f89c3b3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "40cc22c6-a6e9-4a20-9080-0bce8d26d1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1a4b38-d5c5-4032-932e-c36fd85b8f71",
        "cursor": {
          "ref": "68f5e838-aeb3-4835-b685-2305cf07002e",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ac2b3d0a-69ff-45c7-adbe-5594b05475aa"
        },
        "item": {
          "id": "4d1a4b38-d5c5-4032-932e-c36fd85b8f71",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc79e2d2-4d01-47d1-853c-6debb190a94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05561295-f834-41fe-bbe9-5d7a948e4c86",
        "cursor": {
          "ref": "b9ed9e91-6ef1-4b6f-8a88-2441554ba58a",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "217ee8d9-dda7-4e3f-808f-8a872932febb"
        },
        "item": {
          "id": "05561295-f834-41fe-bbe9-5d7a948e4c86",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1143aef8-7fdc-43a6-a3ba-7fa85ca261b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0e5e67-0013-46be-8938-5026ca224644",
        "cursor": {
          "ref": "79a028a5-b004-4ded-9200-a20938669669",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ee99eb8e-2b18-4af5-be91-4e1b093bc5dc"
        },
        "item": {
          "id": "cc0e5e67-0013-46be-8938-5026ca224644",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7206be2e-f94f-417f-b41d-f23f078366e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf651b-3e70-4f72-b8b7-fc21d49d66eb",
        "cursor": {
          "ref": "91ee8e08-8777-4c3d-9c22-21dd5821eb69",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d504c0be-e3e7-493b-9702-87eb9bca7320"
        },
        "item": {
          "id": "62cf651b-3e70-4f72-b8b7-fc21d49d66eb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "16d2f529-39f7-4181-8195-a42d2cf16fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2821402-0ecd-472c-8913-88865a51d5ba",
        "cursor": {
          "ref": "ba920a2f-4dc0-4b9a-8f42-9874a489ab29",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "71a31831-8b01-498d-a343-9f4e3b4b8b87"
        },
        "item": {
          "id": "d2821402-0ecd-472c-8913-88865a51d5ba",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c86a8c4b-54b5-40d9-9b72-3ca590ed8883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69e56ac-ab40-42b0-8c79-f4923cfc6422",
        "cursor": {
          "ref": "f9601d7f-edee-4b7b-9b7a-a5e8258baeff",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "20535250-0190-43d8-8798-dc3918665cca"
        },
        "item": {
          "id": "f69e56ac-ab40-42b0-8c79-f4923cfc6422",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e8d2f5ac-e6d4-46c1-8b55-3b93d9d1d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ae130-eb7b-4e9b-950a-b9837317867f",
        "cursor": {
          "ref": "1b206a4b-8e33-4021-95e1-7756ebfb3d47",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "58c4546e-6acc-4355-a29f-698506a8e381"
        },
        "item": {
          "id": "fc9ae130-eb7b-4e9b-950a-b9837317867f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d9780526-4c61-47b9-b92b-26b0b3290376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ad879c-93fb-45a9-a4c0-c04f33d44d09",
        "cursor": {
          "ref": "5a121d41-75d3-4e81-96c9-50d6b4f4892c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5147e0bf-c2bc-4a08-b5b9-dcda744219dc"
        },
        "item": {
          "id": "86ad879c-93fb-45a9-a4c0-c04f33d44d09",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5749eaf8-2d04-4900-82b2-f38b0fc57fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f939e2a6-7397-4893-b4a7-c16f6b198a7c",
        "cursor": {
          "ref": "e8a903b0-da14-450b-a218-1302a2d3f8a3",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "af9f0cfc-56c6-49ce-89ce-36abaca29138"
        },
        "item": {
          "id": "f939e2a6-7397-4893-b4a7-c16f6b198a7c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "95576035-f023-4eb1-b66b-33d0144d8972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407539e0-8158-4475-b025-15e8f7a2eded",
        "cursor": {
          "ref": "e1da57c1-37cc-43d0-a4e9-157d83b306ef",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a942ee9d-93ea-4409-ad37-13bc6521c410"
        },
        "item": {
          "id": "407539e0-8158-4475-b025-15e8f7a2eded",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9af79715-1559-4efc-9d1c-96e93bbb140f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28ddb9-00df-4982-82e3-d7693cb89b57",
        "cursor": {
          "ref": "05b0f58d-7ce1-4938-bb2b-e1c24945cf3c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "94c87fe7-b05a-431f-9dbc-fd8674b9a3d5"
        },
        "item": {
          "id": "fb28ddb9-00df-4982-82e3-d7693cb89b57",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1ed51f43-7b7c-4053-b1d4-05ec07dbf0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af5871b-dcaf-4f64-96a4-f742242999c7",
        "cursor": {
          "ref": "131bfbd7-2a38-482d-8765-4c6cf85cb324",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9f6bfe09-7cfb-4a01-9f91-b96ed4263330"
        },
        "item": {
          "id": "4af5871b-dcaf-4f64-96a4-f742242999c7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07d420e5-09f0-4d0b-9397-b32a1777447d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2241133-dfae-4372-ac32-859c0a2d5b02",
        "cursor": {
          "ref": "6681930b-7885-44ab-b903-7a0410d8c1ad",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57faa986-c539-4dc9-aa8b-ea7f6b976c26"
        },
        "item": {
          "id": "e2241133-dfae-4372-ac32-859c0a2d5b02",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "64e09faf-124b-42bc-8a24-f94f7d6b3194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c15d802-3b55-437c-81bd-9a44a5a0e9dd",
        "cursor": {
          "ref": "0dd63241-4e34-4a24-93e5-610e159a21a3",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4012c90e-2aa7-4d16-bdb2-5579dea60b80"
        },
        "item": {
          "id": "3c15d802-3b55-437c-81bd-9a44a5a0e9dd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "39a7504e-0555-4468-923a-4b2350d87138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89a4ceb-1b2c-4dd3-85fb-88a7b6de3789",
        "cursor": {
          "ref": "cb59299e-6a2e-4239-9143-0d14c100db02",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3f9ead0f-8498-4f12-a1c1-6babc2a591b4"
        },
        "item": {
          "id": "e89a4ceb-1b2c-4dd3-85fb-88a7b6de3789",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "94524a42-feae-4856-bb29-ada9f3706c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7c4ae2-e7fe-4372-9188-53a2ac19d054",
        "cursor": {
          "ref": "fa273487-f125-40a8-903e-b98826f05171",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e2ed0f4f-f6d6-4482-8a29-6a7d17c15a60"
        },
        "item": {
          "id": "fa7c4ae2-e7fe-4372-9188-53a2ac19d054",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b4cbecfd-b298-443d-a3fd-8c80f7d1d5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e87b0fe-ae99-4383-8ad8-7be9dcefaa29",
        "cursor": {
          "ref": "81d5eaa7-052b-44d9-91b5-9db5e08d641d",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "31440903-c2c8-4728-8253-bc344af4a98e"
        },
        "item": {
          "id": "5e87b0fe-ae99-4383-8ad8-7be9dcefaa29",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2563f52d-6b38-4ea8-804c-48dc17ef7616",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc04c122-837f-4017-a321-b947343a7f02",
        "cursor": {
          "ref": "defacb67-01f5-43a1-9de0-7767fb60f47a",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b927bd33-7cf6-4ae2-ba87-1783f07b7828"
        },
        "item": {
          "id": "dc04c122-837f-4017-a321-b947343a7f02",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "6ead56b0-71ad-46b5-afa4-d37da2d4ce0e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1860825-eaeb-42f5-af84-2d03e1acc48a",
        "cursor": {
          "ref": "9db669b9-d473-41d1-bbbf-2f176e0c8d94",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7a33736f-1e40-4840-926f-ee8ef5d4a9a1"
        },
        "item": {
          "id": "b1860825-eaeb-42f5-af84-2d03e1acc48a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a377331-0bc3-479d-acd7-254d4b3ac262",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecefafd-e150-49dc-84e0-6374c7785b30",
        "cursor": {
          "ref": "e78b6a8e-e00d-4156-874f-365071924d6f",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1fe68d5b-8f65-4e5b-ad16-aa08c5b90557"
        },
        "item": {
          "id": "fecefafd-e150-49dc-84e0-6374c7785b30",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fca01637-d126-469c-8130-fbe680772458",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cf7b0d-0a3b-46d8-bd13-3796cc45883a",
        "cursor": {
          "ref": "81dcf6bb-6c27-444a-90bb-b6e98fbb11a7",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d0f1e4dc-d14c-4634-8ac5-0482729d50f5"
        },
        "item": {
          "id": "a5cf7b0d-0a3b-46d8-bd13-3796cc45883a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "80dc462d-72f7-437a-9af4-fa20f80ff505",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
        "cursor": {
          "ref": "3386da51-498f-4ba8-8da9-ab73a5ac29a2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "05d48f00-970b-4c43-b966-223f4d23650f"
        },
        "item": {
          "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa097f0c-9841-403b-aeee-aaa7d2bcab42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
        "cursor": {
          "ref": "3386da51-498f-4ba8-8da9-ab73a5ac29a2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "05d48f00-970b-4c43-b966-223f4d23650f"
        },
        "item": {
          "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa097f0c-9841-403b-aeee-aaa7d2bcab42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
        "cursor": {
          "ref": "3386da51-498f-4ba8-8da9-ab73a5ac29a2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "05d48f00-970b-4c43-b966-223f4d23650f"
        },
        "item": {
          "id": "7d90113f-9133-4d9d-96dc-e86743332cf6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa097f0c-9841-403b-aeee-aaa7d2bcab42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234b866-b818-4e7d-97f2-3aecdd26f090",
        "cursor": {
          "ref": "943bb4df-647c-4b43-a3d5-4af6a738f67f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "93a3c389-abbb-4073-94f8-fa5976822851"
        },
        "item": {
          "id": "6234b866-b818-4e7d-97f2-3aecdd26f090",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5bcbd79e-8328-47b8-b81c-e18725eb7ce8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c103c9c3-af15-43f6-aef3-bf95b7b977a6",
        "cursor": {
          "ref": "58c9220a-9447-4157-8b8a-5c15b924a32c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4159eb2-970d-48c4-8323-3f33bf7e60b5"
        },
        "item": {
          "id": "c103c9c3-af15-43f6-aef3-bf95b7b977a6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "93152ac9-a476-494f-990d-a0bfe2b12c37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c103c9c3-af15-43f6-aef3-bf95b7b977a6",
        "cursor": {
          "ref": "58c9220a-9447-4157-8b8a-5c15b924a32c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4159eb2-970d-48c4-8323-3f33bf7e60b5"
        },
        "item": {
          "id": "c103c9c3-af15-43f6-aef3-bf95b7b977a6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "93152ac9-a476-494f-990d-a0bfe2b12c37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f93774-d9c7-4f61-b565-73fe3a7f925b",
        "cursor": {
          "ref": "2ecb7fad-b6f2-44b0-b6dc-158bc6cb7b53",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc1bb2f8-fb0a-422b-827c-037068e8b878"
        },
        "item": {
          "id": "58f93774-d9c7-4f61-b565-73fe3a7f925b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a3f0a96f-cc48-4830-86f2-a76548f6b1f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3972586d-ec25-41ec-9cc0-7dec835ba553",
        "cursor": {
          "ref": "1f054907-fb68-4bd6-9820-0f12ff7aede5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e42f3e61-daa2-4284-ae92-8fbb0b9d9947"
        },
        "item": {
          "id": "3972586d-ec25-41ec-9cc0-7dec835ba553",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0f1ed4fd-1e8d-45d4-918b-c7a124ddbc1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3972586d-ec25-41ec-9cc0-7dec835ba553",
        "cursor": {
          "ref": "1f054907-fb68-4bd6-9820-0f12ff7aede5",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e42f3e61-daa2-4284-ae92-8fbb0b9d9947"
        },
        "item": {
          "id": "3972586d-ec25-41ec-9cc0-7dec835ba553",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0f1ed4fd-1e8d-45d4-918b-c7a124ddbc1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e425a5-5abd-4f35-8612-4cb5910ed4ec",
        "cursor": {
          "ref": "0f590549-30e9-4e29-81f4-53fb5edf8dc8",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "dac1bd00-bece-41b0-b523-c79723f51d1a"
        },
        "item": {
          "id": "c9e425a5-5abd-4f35-8612-4cb5910ed4ec",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "89b7aeca-ad02-4dea-a3bd-51084c081a07",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}