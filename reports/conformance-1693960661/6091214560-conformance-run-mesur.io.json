{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cd87c208-15a4-4253-9a8c-0988fea111b3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9bf66fa4-02a6-4b5d-b70b-b57b65ef4927",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df40365b-6f47-42cf-a334-459e5c2afd5c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "221ea774-b37c-4860-b36b-de33fd3157fe"
                }
              }
            ]
          },
          {
            "id": "09ab6d0f-d9bf-421f-a110-a0beed542dce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "193be9b9-9f80-4157-aafd-7d9cde6baa41",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a7afa935-ebc7-441d-95bd-8d3e256044b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dd239870-a60c-4ad2-837d-51fe028a4e3b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2e37812a-7b22-4f7b-8311-683f9c30e9d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64bae6d1-d2c0-4d13-afb4-36f0e53e64d3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "977c4bb7-8d89-4997-86a4-18686acfba84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a3e5e5f-0d04-48a7-8ea4-f12939b772bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8690b6fa-c79d-4d60-8905-2445d8342e1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8de2821-0032-4ef2-bee2-9a822532999e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d763d161-fd32-45ed-ac30-b27ba6d9ff92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f027b6f-a31e-4826-bc50-73889ad5b5ca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee2d3d19-461d-4af8-8c9a-2fbc57f86d3d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d169640b-96d1-4a8f-bed5-22df0b997b09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87c977b0-2d8b-4c52-bf02-4b2ec1b34f57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99136c1b-1144-4a0c-ac05-29e0c2c0c170"
            }
          }
        ]
      },
      {
        "id": "f294a99f-f0a2-41e2-bab2-760d8f9c9796",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d7307200-3b70-4c69-a50d-7aa388fdc61a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0bb2de0-ca8c-4e1f-a272-e6fdc2d3e726",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68f366a7-afc7-4c57-a2ef-e67ee930ed7f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23d435d-c9c6-4fac-b926-d37b14b804c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a66572fd-d9d3-48ae-9d2b-214a0f201e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7891d-a955-4b51-8f1e-1a8fac85b9a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c992e5fd-74aa-442a-b38d-e954dd89465f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a17c408-8190-467f-a81f-6aed5536dd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cf2d4b-c63e-448d-aca8-c1a79b523a3b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9c00cd-98e2-46a4-839d-993d48460f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2328cc6f-bff3-44de-abc8-8df50eeac52c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "445d339c-b25e-423e-977b-aa3745106494",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b752cae2-56aa-469a-8be0-e099e4e5c6e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ea9809-abc9-4557-93d8-57a01550697b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def5c88a-c528-4487-8606-c623ea410fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8c049d-ffaf-4327-bd9d-31b2def05b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5680d0a-98ef-4b0c-a590-db1c9b27b654"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42fc2243-5558-4c2d-bb40-b2ae0bd600f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b3795f8-2b5f-41d4-b7df-388b7cab0bb8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a2f6540-1706-42af-ba9f-0cfe28b12422",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1681dc77-f779-4396-8fb1-9909a2736a10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d7a92cc-c791-4c45-97df-2783099b7075",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f3b20fd2-7b3a-48d3-8af1-a009539ab259"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43489ab5-f0ee-46a4-a510-543fc4a730b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "950624bf-762d-41f5-8c1c-db29eb9e1d39"
            }
          }
        ]
      },
      {
        "id": "034347ff-7cb7-48e7-98fb-d945ea5da008",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c2daa223-e0df-4882-ba55-dfe68d60bfff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae8bcd13-bf0f-455b-b30d-cd8f88232715",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e90d971f-db40-441f-8f2a-f86c4b42d1d9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a7c1ec-cf3b-48ae-a547-250c7c969abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205f3110-8a82-4daf-8778-a3c1ec88c579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdfb86c-69f9-4b10-8e3d-930169a5d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b145fb7b-9348-4e0d-9178-0d23e3abe8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60886e56-af31-4dc0-905c-30a819f4e15a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d442c85-3717-4992-a4b9-924432c322fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97d6274-2be0-4fd9-b66a-922988a75a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3543470-b5a6-4d5b-8eb2-856aa1195e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b93e89b-3a09-498d-94e1-b2717475e496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20898f2d-4f9a-48c9-b6e5-be0929a09432",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59d2055-d37c-48e5-8a4c-db8860bcfba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4fa15d-880a-4a2e-aa0c-d064b896f00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0746e445-6c1d-47aa-a613-d014819f4227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f03ed3e-56df-400f-b5f0-de116b889f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1712bcf-0304-4da2-b344-acbcb68eadcf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee15042-ef5f-41d9-bbae-7ea71c6856af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d633fb14-635e-4410-a30e-5e93ffce497f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55045a5e-b8ac-4e1e-ab90-7885343eae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e48789-e979-43c1-8b2c-e38af584be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536caf58-5331-4850-bc88-198d2e92f795",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df71127d-d737-4b10-bab7-80aaa9c091ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4655e6ca-c59c-4382-94a9-d0e52adb8a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8266b91b-af66-43c6-b7c2-2cd8ef24f1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ed4db8-47af-4fd6-9eb7-234711feda6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5db7c4-e138-4acd-b2b9-7ab83f1098c8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69afe6da-0801-483f-8224-612041d5d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2ec9d2-3a98-4379-be86-0afc89c4a0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3af0038-0c85-485f-813f-6c1651aa0dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acf2e50c-6f1a-4c82-8d95-687ef30c73fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89504d7-6852-4e73-9967-04033d15e177",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7dbcbf-29d2-4955-85d9-556347e47db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a9383b-9429-42ce-97de-dc0d1bbcce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2a5cab-e081-490d-8ea0-69e9666112f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "033dbf4d-7f77-4e1f-9043-ca0e1f085b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2eb05b-3ec1-446b-902d-f558b2ce0cb3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5892c98d-06a6-44a5-998d-55a73e8c9ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0a3027-0cf5-4db3-a3d1-2f49d5652907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557c737-7ed6-41bf-927c-0b14732f943b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47a3dec4-a267-4f70-958e-a4c1e7ead64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9798be50-926a-4cc5-8eea-dc4cef713ee2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67343a22-7b5e-4c00-9d47-7b4941f4a099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed10d103-72e4-479f-b9d9-95d986ebf876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114b5556-81d0-4e6c-bfa0-3fd42ad1aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e447b413-e8fc-4d02-aada-03eeae460f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bb384f-0546-4fc3-b630-d1c4b8c54cff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda6c444-0b0e-4b04-8a9c-8ae3a4306e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e72440-1991-4681-9fe0-79f4cb4a9e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cedc05-e09c-498c-a5d1-54b74faec89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9cba0e8-ce1b-4ab5-99bf-d4d75973331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd89e04-1728-44dd-9200-f2eec0599ddd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a8cd38-b1b4-4e0c-bcc3-c2fb73ab9a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53eb8c9-9116-40ef-82ef-44c3a071bf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ed0acf-3541-4c33-8b60-a8538e404adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f138e68-b1b3-49ff-a526-b0eea17bd4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f6d5d5-a3ee-4dd0-b03a-df876429e95f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286b2289-dece-4518-96a0-854a2734f3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15e774d-e550-4adf-9dad-0fb9bd0f931e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382f3322-ff13-4a1c-9a40-484243671c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56b36e16-9abc-4da9-a09c-c2ae5fb06442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66e7475-28af-4369-af13-804359f921df",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2162838b-a37d-4aac-a20c-9cd9c4b10d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b07f63-f87a-4107-b614-a041d9ef68fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0805e4a2-5301-400d-98ed-21b0726d6e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fff431fa-324d-4cb7-bddd-9e5c6984785d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449c46d7-f41a-42cd-9475-58123143733d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1d1e2d-823b-4c08-a790-4b6a8c45be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567de9b8-7351-4170-871f-1cf100941d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c43c28-ada9-40f0-933a-cf5e7bc19a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58e69b1c-7dee-45ef-9101-fa31ae237c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24dd8da-e3ca-4d99-a71b-bd11aebe2c20",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585133aa-87c4-4234-8ec4-fade5f36c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1491fc-d6bb-4d8b-87bd-dd9fb3c7ba13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9f7444-c706-4773-bc08-7f75c8b3daa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51e2c66d-75f5-4251-8102-dbf1ca3d7775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14c4797-daac-4d42-b5b1-3bf76e83782d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eea0f1-2102-4087-9b21-8f6ae985be29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c297e849-f7c0-4ca3-820d-b125520d4a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7242bd37-b38d-48a5-819b-ec6a00fc654c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bb0458c-aaba-4a8d-8d0f-12bed0e71113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af44861-6239-4bdd-a42e-997059839051",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc339e6f-bf09-4fd6-b203-e63b2a77d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba504a-4015-4cfd-a660-47a1e1b3e4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd83acb5-2061-425f-ade9-6a4f84334835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf27dfa-3c71-4536-8923-fc9461007cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f88a1cb-4d68-414c-8a70-ccade13187d3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1908b9a7-7cc1-4366-aa96-d5f3ba422da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9611303-bbfb-4a5f-a5f5-4928b6e7c894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5588d000-3019-4c4a-b621-31558b005012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "21711dde-6d46-4411-8f9f-37c2e7544a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc8b72e-81a9-485f-9180-ad64e108b213",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bf459d-cd42-404a-8a1d-6418405c17dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35442e8-8a72-47cf-bd82-4b565f781959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb7b5df-e520-44dc-b895-3543c50457d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d068a4f-50fa-4744-b558-333a1dcdc9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbea3a3e-f310-4d50-8913-e7cfa2927745",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87aa5f6b-bce0-46d9-8345-87a10e51d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7501db77-b952-4cd4-91ac-4bd6349fefaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eee91f-d371-4347-8669-3b3d039a560a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93da237-a646-4e83-97f7-064bfdfe88df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3cdbec-d578-4faa-bf37-7e016b0ca3c8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02076f54-6d20-44c9-b5f0-ca7b5a062e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3dc09c-3270-4c50-9ca3-243bbe9b5c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8bb641-1ccb-438c-85b6-99c6316425a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4517ce23-3562-4227-8845-243aa1d00e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cedca1e-62ad-4144-815a-bb35ea3a9b04",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23144873-3bb6-497e-a9de-59c2fb9a724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394f162-f815-4d69-80b8-7c4ad488786c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0211e25c-a69b-4914-9f4f-267576053b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "776d39ce-162c-43e7-b1aa-0389d1e3da1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f11767-1c5a-43ae-8c97-52610f8d813b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e20060-aa48-4cd8-8256-3ad28604af6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111838d6-5383-47bb-925c-16ef6d85cbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13133ea7-b151-4ab1-9c2e-a4d0f4e3188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d15643b7-ac08-4122-9c87-3d2148a84057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c96959-6408-42a5-b8a3-e078bd058d3d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61201b60-5a6e-4985-8bcb-580442f59b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105065ce-5d21-4db0-ae82-ba764c8c50e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19be432-9b73-441c-b315-f28479d00a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be7dc6e-b1d7-4627-9e6e-4ebebe1be96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f49f36-7e53-4d80-b33e-7d0606e8c8a7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2f5ec3-3d34-479e-a947-c33505b21167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367943ee-4fa8-4212-ba63-abccab934229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb00998-7995-46ce-b783-0d28321e17f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06522fe1-2c25-40f7-ab1e-44de9c237c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636ccd42-71b6-416e-bbc3-cadfefe763a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4368a569-4853-4007-b8a0-1c04b2aa87fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3cab3f-062e-4b4f-b48e-76ec41a4c128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0379db52-785b-48e9-8bdb-fc8021c4ea95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5138e5ab-a781-404c-b48e-a79051923259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e564577-9f6e-430c-8fc3-39548323bf0e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e92811-5b3c-4e36-9793-cd07c9e7efbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa78a11d-9876-42cd-9df9-d20fd750ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeff012-0dd4-4138-af5a-347f8d2ad464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb85c3e1-114c-4c52-b5eb-28fae16daf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74266177-5ed4-441b-a8fd-d28a61943bc9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3d614b-3830-4700-b9c7-78ef498308f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6c7d59-0dd8-493f-af62-0dd2c98debfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81192b5b-5e6a-4d5e-aa48-818d263dde23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5803cbb5-85b0-4751-9bfe-8152677fa58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebc4bcd-8e94-48cb-8379-7a59d7cee769",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4377a8-eb53-474a-8318-1d3f58a074df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38355a94-4b4b-4d80-95e4-9fda08a7a6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469e1c9f-ac48-480b-bea6-9aacfeaf84c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdcb6094-3676-48f0-a279-663579e9b892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353c86aa-b2b4-45a5-aec6-9c8a644be346",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c663125-ecdf-4f5f-a85d-9d160df9a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e20636-8f38-4cd2-b51a-3b34acc32aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271e686d-f755-4275-ad7a-f570a1b77b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb15639c-944b-41e9-81dd-5a871518eb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c272a5-cbb5-4795-bf2f-d2139b4dfad5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01786522-2b94-4ffa-9ac0-760c11078610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931b1f63-9128-4619-b15f-5caeb585a413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999c29af-b295-40f1-9c67-df39025fcdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9335e46-4562-40e6-b3d0-cf05015f0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04a6acc-56cf-4e91-bcb5-cfe710283ec4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d83d41f-6b7b-49b7-a2ee-ff3cb3122f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1808f9-9da2-4734-8899-ddc806a14422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a619165-8097-449e-9307-4c57ff8734a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "376160aa-b4be-4ab4-8d13-4d4d1c2cd267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c766dee-7463-4102-a373-2b97ee77636c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfacdee8-b25a-497f-886c-0405e31461fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f865790-4355-4227-a27c-598d9ec0e76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7bf22f-762f-4b1e-9a01-a64335a710b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "252e34a7-a49b-4774-91cb-ccc7677d24f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cefd14c-d6fb-461e-a408-fc755675acf1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2650ac-2225-46c5-b42d-49c7f9d99aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126dc089-14a0-4e7c-a2f6-bbf6158a6fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b2315a-6979-4423-919e-bf66c84444b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc75481-d74c-4a53-b9ab-c3be8b4540c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b176d89e-600e-4851-b87c-2460fda9f9b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c735350-47b9-4f65-8ff0-574fef087ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e80b0d-b2ce-406a-94e9-3dfaa6be6bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3521e1f-2da3-4faa-bc5b-ea036f023aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "71655b58-7de4-450f-9e9f-b6ed7b5bdc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fcff2d-71d4-4e43-a00e-908c07adc0e6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c10f61-4911-43d3-91ae-16d22551dd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edc68f90-1793-4b3f-a1a1-f6696edefc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d71a50f-0e6f-46ef-8699-82a289337a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63e5f242-cd3e-4e4d-9ce3-c70469040f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a3d85-5830-44f7-9eab-6c5ffc1f1645",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab7de91-0aad-4d85-b697-302d8b1eb207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a642554-a745-47da-b646-be6db20ef7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06f0ebc-482a-406a-8fb8-cf5cec732128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ef3036-eb42-4e8d-9972-d1558ec98957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4f7ade-fc33-4b8c-a8a9-3dedebc2faa9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d2c14e-efff-4101-86ed-e84372dcf8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16378b7-cf08-4fa4-a1c7-58d6d479495a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282c43c7-ae1c-4314-8993-64eba3e3c3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2efa087e-5858-415b-b450-659003a5f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff530089-6df6-4b10-ab50-b773aa6ee9f6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d2af11-a79d-47d3-b240-e6525c2cacf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eae441-b182-4a8e-9028-1f517623cc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131d8ef0-627f-44e7-bed2-56942f41562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0890d195-721c-4b47-9c51-cf741e8dab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb39d8c-79d2-433a-a484-32250bc1f6e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3d8776-a4dd-408f-bb0b-a390b4f8237c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa45e535-adeb-4ab4-ac90-fca12a4dd71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d07f0ce-d5ea-48bb-8cfe-e66b8f1ece27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "386f7a2d-2c3f-4395-a21a-82216637b6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91016ba-d3eb-40f0-a553-ca564cc7a687",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8480ce63-552a-4a23-a238-29fe2abd84e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01891df1-1780-4e73-a50b-de5d09d9a7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e26671-6397-403f-8f90-091fa822db49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeda2916-e102-4e11-bfaf-5f4e891f6a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a948cf7a-cc26-4196-96f5-57d7c4723b1c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b570ca-3ed1-442a-b0dc-a7c6431888cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1418c3b5-6eb6-4bd3-86a1-89592483878f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9afb2c-85e4-4035-81ae-b1c5da804a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "93245483-cd91-4dfd-9594-2e93233e7c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607c653f-83e7-4da2-823f-37c914d93d72",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c9d72f-c476-4319-869a-4f6123a799be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb5d40e-a5b7-416e-9d7b-6462b0221258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45e20d4-ea64-4c08-bf9c-f0020d0fa96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ad4624-a9e8-4ea6-951c-f19489d6ddf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae64eb3-80d5-46f6-ad6b-62cab33c3c02",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebd8bdb-b497-4acf-af20-462f438ada9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc801ee-fe2f-4185-b99c-722884f373ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580d5cc3-cc16-49c3-9aa1-bb21449a7ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d74c7285-5bca-47c5-9bd7-73c2ef41f812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb66714-73a2-4fbe-bca6-347809f445ff",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03105840-b744-4d3e-b642-5e0086a79df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45814ef1-613f-4327-ba8d-a248a15b0801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0ddb86-f8ff-482c-ae24-3e695a431a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06fdf1ba-fad3-4d89-9a4b-8845ffe9f4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad54923-cc3b-47d0-a7dc-91eae96ba51c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1e61ac-fde7-441d-a50d-4912f685c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715302a6-a899-484c-ab39-3b7c72345d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6becb8-d560-4fb1-a257-0793cc17c982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a84b3d-67ff-46f1-b802-ed583d46a51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fe42c2-3c68-49c2-9204-17536a07a5dd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d220bfa6-d4fb-44d8-9161-2e49a0007423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2180e5b0-0c8a-4291-9ead-d09f9227c063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15177f07-07d9-4cfd-9738-237ba11516f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09909925-6faf-46bc-bb23-5f89611251da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d236a193-0784-4f9d-8313-57f2ca2699b1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234c0a9f-6ca3-458e-b7de-d54fbcc0f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686bb904-6d11-4251-9ce3-a588740b7a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269ad1f5-2f72-44c8-984e-5f2805a7bbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabba971-bbe6-47f7-bf79-069db47c277d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cdacc1-7ad9-45c0-8d96-bc024b0dd6dd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380b4f47-8201-4398-aea5-0ffc8001e1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64519bc-c014-479c-b49e-3b8b64a68a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179334e7-dc31-41cc-b359-db556c513f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39723e21-82f1-4b32-b151-e9e47e2504e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df1b828-e9d4-4ec0-9fd8-52269271134b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c469bb5a-736e-4001-9f0d-9ab6d3e89efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0003bb-0f92-4291-87bc-643f41e24a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c03c90d-6cfd-47e1-83ee-4b43a298db63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "954047db-735f-4e1f-926a-308c498fcfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8654a63d-2924-49a8-9f6e-8ce2457acf3d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c3d3a7-980b-47df-a1fe-05bfb7977eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae602a6-7eb3-4bbd-86b0-9711a4d16c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a5a37-cc21-4999-aa22-06d77f232536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e6cca9-58eb-4d07-814c-35a74c346541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891da5f9-734e-40c0-84e2-53aca740ac0d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd75442-234a-4988-ad17-b3f03be5a524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fbda87-2981-4589-8813-975e9f2005c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335e2133-cf02-4685-a3de-3cd1013415a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1055da-5b8e-497e-b247-665dd5526eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6574d1-56e9-4984-9863-982107ff6919",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6093037b-a1a1-4fc5-806e-da8583f61e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a223556c-0cdb-48e9-807d-012e0ea94cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a3cf3d-4112-4bf1-8df1-7dadbc203960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67ec83d-59c5-4a5a-8e5a-96e3c2f91f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f10ad-4ea4-4d30-ad72-e1c4ba5b1a68",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0262f1-c47e-4b01-babf-610a63d9022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0128d2-6504-4548-a635-61376e6ff254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b635ca95-cafc-455c-8721-d28c7b54055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd1ea0b-9b16-457e-a034-3e96738a005f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4578b6-6268-40e0-a706-f6e9da8752d4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4203d0-62e9-4fbc-8e8d-71a7f9489ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef77dc2-712b-4eb4-8fed-e3ff5a086f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84703f0-b59f-46e7-a7e7-82346aa03b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e9e399-3f44-44bd-b004-2e1b619780cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a1b998-1b45-4b21-8e0e-865b5ebdcbae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafd4e5d-5dca-42d6-8ed9-793a16ddc76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a6e4a2-f727-4202-bce2-d72a68d3d0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4794cf8f-1d48-4b6a-b912-f936cc904c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e707e12f-d5af-4e99-a8fc-bac724c0756b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf67a9-a610-4366-a7b4-502c714905ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98adafa0-893a-4156-8d13-46a7a74c1c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1457943a-1a67-4ee1-a189-c34af02a56c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55234c2-72b9-4471-a0b9-38747e8c146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "499820c0-067c-4efa-9fd1-eceae28972c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4dce75-0b6e-4469-8e97-8b3b04a0afc6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae20ca9-f153-46ab-a5e9-4ced44605fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e599ddb-244d-4757-a3e5-628fef1d70e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661e8573-616f-483d-83a9-9b446785d9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17043001-7b9a-4c58-9c4e-02098296af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999dc3c-7559-4495-adf5-f258bec01990",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae36eb5-30a4-4311-835e-d2bce1b81d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884157f2-89f4-42dd-9809-ad762f2b0b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d834a059-cfee-4939-9c4e-79ad92476b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7926b130-fca2-470d-a808-77b29e422df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce74b24-cfde-4111-910f-dab27ceba7a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da8e540-dec8-4de1-9506-a97b55533c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e31d0c2-b886-4a1d-a670-799eecd78703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e5cb40-56a0-47f4-9598-5ce0d844d633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "563cb5b3-2f5e-4dd8-b39f-392a01ebf35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d264c857-320e-4271-8b75-a2543d70eb3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6ea980-9ca2-4f71-b9ba-f6f07139e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283843be-c2fc-4b7e-9976-b6c82af85b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdf7276-4c2c-4ab2-a323-558736f7318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2113171-3658-431d-83d5-99ac6164f829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45bf99d-4337-4c68-9eb9-d8442d2289fa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8555b3-e268-4495-9cda-5b6a725b509d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80746dba-16d1-4e53-81d1-e88b6f83565d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c1f67-fa62-4e4e-b3bc-6312985cc128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63dbaab-3d30-4fdc-846c-5f8003dc024c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08f91b3-b174-4b07-bbe6-c80a73755e72",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db60dba-1ca8-4cb1-ad03-e5b77efa4c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48605246-9525-4ba4-893f-6dca92e4a2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd13d3b5-5da8-4c0a-827c-9e4613f6a1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1cba1d-1c36-4c41-9a43-6b2d885d6f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d38ad7-6fce-4485-90c7-d302bc5927cb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9c6df2-473b-40e8-9910-c91c9304817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edf2b80-5cc2-49d8-9173-430c7662864c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdfa2f8-b714-44ee-a99b-c51437faa0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78618e59-36fb-4d8c-8080-c862bcb224a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc937d97-c1c4-4257-a89e-fede63b043a6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad6b24b-ba9f-4885-82a5-ebf0803180bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71b3eca-7de9-49a5-b183-11f23a5b52e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ea7e56-83eb-4305-8c79-c05b8dbe9219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3613ebd-bfc4-4264-ac71-f0801513d58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d599c1-7c87-4d76-8cda-b5f9b408a485",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b62f28c-376c-48b5-a2dd-2e078ecf2ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868c3c05-b13e-4c98-a153-9c6cb8af8110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4599508-8a3e-4d82-b955-6770bb69e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7af6d8-3b0a-4e61-a3b7-fdeb3a2464ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb05f05-353b-4acf-92e2-36d8691c1a41",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af24f3-45b4-4fed-8e8e-f0da3fffc037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8056d72a-7bab-4001-aa81-0c58a0cdc377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfb0f90-f85e-4bb4-bcd7-29f1ce997f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2634c39f-96d5-4d4d-b3bb-bcb1b9b3c55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94d4e7d-9736-44d2-bfd4-950cfacdc6cc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feda7a4a-f21f-497b-8e21-857baf461540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf6c302-efd5-4932-ac95-c45abc03b0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b238ec9-235e-4a84-87f4-a764715894d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfb570a-bea0-4ea9-9f07-2d18fb3b1214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68bc0a6-b8dc-4b2a-9fd2-041c57fd50cd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e49ddd1-8aae-485e-a19a-c4c21c8ad99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224058a8-ca33-4066-91ae-fe7d7f9a8452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ecbc01-779c-4e10-bf94-a358ab720f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5a0161-9c1e-48d4-9c42-ad5572eece87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18515712-3428-469b-b39d-f93a0f1a1547",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa91dc7-47b0-4ec9-9d48-b115988367ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43248cc1-0917-4403-bc89-d5c84e6faf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48824b6e-21b3-4fa9-a6ae-8f7ad9e463e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cce0014-68cf-4a03-9d40-f349bf26318e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83038151-0992-4c09-8174-6ebc80d71671",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b65f8e-abd6-4b94-9ad2-10dcfdaddab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edbfc90-7518-457c-965c-7a6d0f653d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4945211-b9e9-4934-bebb-4c5a08c61856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dcefb6-83ff-4ceb-b646-beba3fbe7e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8c8a1b-41db-4949-a014-1031e6387c1f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabb0786-1d7a-43b0-80a4-7ba20552138c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf2cb54-eac9-481f-b04f-887243fd0319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edd389a-f3b5-465e-85e1-4b707db016a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e60e09-6d99-44ce-a48d-0d41462079ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54fcb39-e7ad-482f-b9a0-942d3680d8ab",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f8a7f-1908-430c-a9ab-19076da64ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60df1400-3a88-4ffd-b2fc-6bd9482b0e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b79222c-a093-49ab-8756-0ce01a795ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c890c500-53dd-4934-b95d-ad95194857a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610acbdf-9c7a-4cd7-ad66-f93bbb42640c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fad67b7-df7c-4cd4-bb0d-bb703f66a325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb11d39b-786e-4a9e-a4bf-64e2224d7b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12348965-309a-4ad8-85f9-096ba14a6d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e271f56d-b976-441d-aeb4-594bfa3330cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe86fb4-5cae-414d-aeb9-cb48b8dae209",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c0f122-7841-4312-856f-49b97cd52d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa765f3-7ed2-4916-8cd9-c6926780a67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fee4cb-44c3-45dd-b4e4-4d388396513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47883baf-3988-4f56-861a-0a34aa61b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99633b68-a60a-4930-b46f-4b5a4215166d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e64e00-53a1-45d2-8296-16875b9bf324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5b74f5-e7de-45f1-aca8-c9f5797b3e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33446a31-c967-4f9b-8d6f-e2a97548139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba00d40d-f735-4a7b-8c64-405dcd4e620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596a5bdc-b9c0-4b3a-a189-2e8982fef9fb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b57ee5f-1136-4bdb-943e-049764e98a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a7acce-8e0a-49c0-a5d8-18fea3d86ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347261a2-bbaf-4981-a976-3d8343d96c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7279a6eb-0417-41a0-adcf-ff00d6ea7fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687bd987-691e-474f-b235-aae19ce2b096",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe42279-02b7-4cde-b532-51d99881b290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1d7daa-af0f-489c-85bc-7de47aa00e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03120125-59f3-403e-8667-d304ead0bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f47559-788c-4dd6-85eb-8acfb04f8943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c144fa-6c67-4afe-b945-b2744cbd25cb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb0afe-bcb5-4a82-8dac-84d14c33a596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d95615-abf1-42d1-abca-da44364574f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4add7f-5946-457c-8e76-abc20e94a015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8dae85-cbb1-4c16-9bd7-dc1a80cedaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1eaa71-2ed6-4df4-b814-2aab0d4b22a2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c053ed08-d3c6-4f59-8cce-fbbca6ad8f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cb3b2a-5a54-460b-b036-b800a56e1c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559221e3-10cc-44e5-aa27-204b85819993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0940e43e-5641-42f9-9542-776cc2d601cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1595d420-4dac-499c-bb08-7a9e2104f1fd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614b861d-280c-4aa9-a573-e4b0b956db0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb487d2-9fea-487a-9f1d-1eb6535dfd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c77b17-7518-4d68-8a17-5ba55fc35df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1634a031-3caf-4ec1-b119-3185f64a38df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc2dad8-f83a-42ef-894d-b1bd52e6d6e9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58715d23-ee36-4df9-9be7-6df92f173627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0c3d70-489d-4e29-a4ac-b4ff0189cd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479d0e85-6b9c-4e03-8f36-8014e31c5198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73cdb1f2-321a-46c0-b6f3-8b31d2ffd8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a3c42e-355e-4a83-9a00-3c6aa62f8022",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73ec135-d6d9-4ffe-9b7c-b68ff3613e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c20ac2-8a53-443a-b309-dce7efdd9f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d8d90-71f2-4422-9eea-1e3b3daa4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb3750d-99f6-4078-9d65-59d5f7009860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5abc18-4fce-473a-8d0d-5bd1e0629e6e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d484b1d-261f-4a6f-872f-34cef15770fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e5570a-7fe0-4c12-9689-0125cc1023d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29309929-3a66-417f-9fc0-80668f78a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df3efa9-3cf4-4e3b-9be3-23f8833bee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e87a4a-385f-4adf-8def-17fb99fb69d3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30b739f-13df-4407-82c7-3216eb7ae48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49464ee0-be8d-4217-9cbf-2d544f0a7f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add138d6-993d-4903-9d68-1f1c81a7763e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12222387-d92e-48f8-a6ac-9a72c71426ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc335d6b-638e-4925-aab8-4cb0ba34c417",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40c8612-4704-4d21-8b38-21ddfbff5631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a9532a-cf45-4415-850c-3a464d49ef8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cf35f3-a0e1-403b-a57f-70decad9071a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46c45a1b-0288-41c6-bbfc-9b1f6763d134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1017b322-7b3a-4d31-9afc-e2fdfd04f445",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586b0797-5475-4427-b32b-302a0ddfdec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21705e73-048c-4a11-9f95-281960c6d43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1581a0b-4e75-4e73-a102-990ac6edf7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7122d7e6-6841-44f6-aed4-db74f141a905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff1ff6d-d133-41d1-9cbd-3c33f3d0fd33",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b377b6dd-e479-4621-b0c5-00eea3f52fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c34e6f0-6e3d-47a2-8568-16078f27fa3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8be09dc-77f5-4b25-bd31-f798d8a780b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "486a82ba-5ac7-432e-87a5-24e28aa51647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60da42c4-151f-4683-8935-e0adb2ae06a2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954f1024-472a-4868-9cd2-ca5251643d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a5301c-649e-42f9-a711-d3e721d3c379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25bdadb-6b86-4d33-8fb7-a22740f4608d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11f9eb97-36c6-4503-b3f3-5a9ba2d6c441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717cda2d-ce4d-41ee-9c04-5a832f0c0223",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c74d90-1810-4a18-a2d4-4660e1ee0c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a468c95-5601-4e66-84b5-ad5b599a97f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aba543a-f652-4679-b9d7-d410586d1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "492a542b-1b40-40f4-96b0-342ce61d710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d120dbb-9dc5-4a8f-a98d-6a4fe6cd4237",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af8ea2b-59b6-4d38-86a2-df6799a4aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611b535a-5ccd-4aa4-ab99-c33156747338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0027a987-e414-4bbb-8eae-cd691f9d6816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea67016-345c-4c1f-abd8-3a3cd4b5868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c951e1-9818-4df3-a453-aa002c56f775",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979893fb-4c19-4384-b25d-a434ad28b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "642963b8-b7b9-4b42-a377-ad3151a7bfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9201838-5f9e-4428-9e92-098cb16954ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "adfbcb6f-e249-4010-aed5-a13ba38b8196"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1502379-5604-4399-8d9a-c14c01317856",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4deb6136-5ed5-4043-8cf4-2187f8184c07",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9a7094-392d-4c53-acc5-d4cf8b166aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "075b4e25-7709-4c14-8eae-13062e495623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754ec903-6aa8-4415-80fe-876b5c1eaed0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21236693-0e1a-41d9-89eb-b262d1ebf374"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dac5a5ff-aa71-41df-b0e3-6556584cf1d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf42142-b576-4261-8a11-000a80b090a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41acd7a5-2c37-4113-b512-088af29d7209",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b45a6d-1fda-44b0-a277-753b65ca7f98"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a7d2989-6b02-440c-8c3c-e998efdf98f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7311155b-950c-45ad-be4c-b2d6cc7c8a54"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a1bcedf-eceb-4777-8860-ca512d40e3c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1179606e-006a-4779-9507-1bfcf6b184ad"
                }
              }
            ]
          },
          {
            "id": "3d2e8759-24ec-4c03-bf8e-9f04fcfe4cad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec56a184-04e0-4dae-b6da-7f3281bb6c3a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c9dac55-b425-4b9a-811b-9c20f9501e41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cafbc845-2dd3-434b-a530-b0be34997d05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "032011ec-3272-45cc-876a-8b60c6390ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d482afc3-e7ea-4e55-839f-7836ecbe2167"
                    }
                  }
                ]
              },
              {
                "id": "878760ce-adaf-4ee6-9309-c3c8c6d58ce1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ecdafa-ea2a-471f-a323-88a9ed4abcdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e693c7b-60a1-4e17-8583-637652c21b4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14ff0833-ba91-40cb-8435-aa116aa9df93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95cb760d-520a-486d-9409-d82268aeea8b"
                    }
                  }
                ]
              },
              {
                "id": "6c7e6013-a3b1-4308-adf8-fcd6545e6b1d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ca533b0-e249-4a1c-848d-70e6b411edbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f42a6f6f-fc37-4812-8a0d-5b038a8bf377"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d42247a4-c577-4cb7-af37-0065ba863d4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03fb733d-9a82-4497-9c26-0da5e9d2fb62"
                    }
                  }
                ]
              },
              {
                "id": "860d4384-c581-43e3-9f1e-fd3950118975",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61923d0f-fc3e-499d-aed1-91f9efa61596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9989d447-7af7-473f-8ef0-971569664ae2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e6db54e-1b32-4dee-a7b6-f687501dbd70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a8e37927-8f11-476e-865a-6be493fade27"
                    }
                  }
                ]
              },
              {
                "id": "44a70243-ad83-40af-a6fd-bfb2b09ee3d5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f09fd12-baf7-47f5-b704-ecd2ae2004da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8f344a2-6f0e-4335-a5c7-694e84bc7baa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f03e54a-92c7-43f2-acc4-cf8451094d7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ea7f0e7f-dc3b-412e-ad35-cae7837dac65"
                    }
                  }
                ]
              },
              {
                "id": "81903afd-160b-4e0d-905a-a084ed2fd691",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c33589b-1b5f-4525-950e-87b72ec07bef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30773e8a-f2d3-49b3-b6b3-a65c6218240e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dc726f2-6241-4176-8c69-9b66f57fc3d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7665ad2-bb67-4ca1-b17b-990cc63ba185"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5350208b-cd44-4964-afe4-204774eae805",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1a374959-7d41-4f7a-8c11-4b501cf9b578"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "181bf9be-5aa0-4856-9a61-3718920bd057",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e2df47a-5f4c-4166-bd68-f6c992429edb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91fd70c3-d5bf-43f8-84d1-ab61e9d11544",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "288bc9e9-44eb-422f-97f2-8902d858f5e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7538c1d-bbf0-4764-bc64-9d2d06b24031",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8f37e1d-447c-47bb-b84b-72d1a4835e5e"
            }
          }
        ]
      },
      {
        "id": "1a6f7871-fceb-49a8-b37f-1dba0afb8410",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6f95d0bc-983e-4080-b566-834a005e0ea9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6426ce10-ca3d-4368-a72e-24a378ff1d36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc6bb4a0-168d-4ccd-ba27-38f1c68dfdc8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e70e3fe-8936-4275-b356-04537d5ac6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f37f25f-165e-4001-b819-bdc16da77e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e7e89f-82e4-4dae-b72e-7aa30769d6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9593f09-a1cf-4658-9f7e-9231c15eff19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08db2dea-44dd-47b3-be42-7c12b44d5d6e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b28206c-24d8-4fe2-9dd8-98b2bfa82f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b7020a-b71f-4a99-a087-e262804ec029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee96b6d-36cc-4db4-bd8c-2f3297024135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d83a21ee-45fd-4a9f-bdeb-8f955a62c241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ae9970-00eb-4546-b076-9eea136997e8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ae8988-2e9d-4e33-9c72-318ad77c8ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f06125-812f-44b0-a06d-d9068151e6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f8a78f-7f37-432e-9bf4-2d26cb57a537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9be17d4-3f61-4a5b-b596-ca2c00463050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483235f3-9cad-4d57-af1b-65f2513cae89",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc245db8-e664-4cc5-b3a0-2ecdca5f3af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e9c13a-99b9-4fba-8d45-0e510645f4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38cd7ea-1786-497b-9a04-9ec2d675a81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ce8615-9a21-41bf-bfa4-a976b5cb4bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b63db4-635d-467e-a541-c6943d45f188",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0043a561-8a14-4a11-8c2d-8bdeb9abd9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a136b3a-46e7-4419-b8d6-326faca8f613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3297870-cc3e-426c-bcb5-2c7a65ecad21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "832827ee-dece-4937-8aa0-3686ee2f6c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa81dba5-8f47-475e-b256-5184cb504cdf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24039147-7563-42e5-9661-ab768ce1fc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dcd2f9-369d-42fe-be11-299668d3be86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242367b2-b65c-4374-91a7-6d1b46066471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a88006f5-4fcc-4866-ac40-1a50573b4a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d639c34-f143-4306-8398-ae110c9ecc7d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d17e647-1bed-4bd6-9b9c-8b1272769bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7e8257-ce8e-49db-9b82-b9ce32de997e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482f8ce8-db76-4426-98e5-30473fc9fe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6a1a02-0250-4982-89f5-1277e03cf85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74151238-8442-4a2e-93d1-aa869e2a53b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ac3c73-f3a0-4fba-b478-854d7b6ce00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f823ddd1-2a0a-4a20-9a5d-7dd342b98435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2055b91b-93fa-40a3-9ce2-b5d1d690ff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5beb0a-53e8-4d76-8c6c-bd773e22a000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056d972b-9910-4e65-99a2-28f821a395e9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f20d79-0516-4171-b435-826f3fc103b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2801502e-6497-459a-9cac-c97f66099474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c9371d-66a2-4d9a-9ea5-c200585fab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "825ef770-58b6-48a3-a463-7a0651adbfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff647b5-9ce6-45b3-9c32-08bacb604395",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09d6063-770b-464e-9c42-ec992111d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8017aff8-f07b-46a8-a1d9-d975e6f6019d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764622bf-1838-41ec-9227-7ee768469bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf2f79f-e7d7-44d1-bd27-59aaa6a1254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aa4ffe-e3b5-4738-9ab2-d577e0eb62cb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8e1cd8-71d7-41a3-99d8-f6a5bf9d904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085ad887-6182-4382-a30c-80b10785405e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f955d2cc-144a-46f8-8aa3-150ee7882f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "53f9bdcd-1346-4b75-b781-1f36c167b922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677f0543-2a38-4685-8a5a-68aa869c3e31",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e845d8-9ff7-4b9e-9860-16b09c0391b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e84539-69de-4799-99af-48d3532a36a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f66dfde-1ce7-47a9-bc91-9d4bec0d14b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07939056-1f16-448f-b620-e1fae4bbb45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38fd442-7161-4992-9211-226bd3badd5f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3573da-820b-4440-bbe4-465ae39eaf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b90b93-9e0a-4be0-ba8a-8c28cf56270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24435e87-371e-456d-988d-039d85f2f674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0120c203-6585-48ad-8415-52d99092bc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac41a94f-8b8c-471c-a99f-aab56dfc06af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6f09d2-7ac4-454e-ada2-75f67700d294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba7256b-5833-4c11-9818-6c7adb952b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7466b580-4901-4c46-bc90-c63956628d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f893666f-64f0-4a00-a3f9-48bda37e86ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89086dfe-604b-41b5-9beb-feeba000e8b0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678751c7-21e0-4613-8bfa-e9121d03ad7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ee3d02-8e49-4369-a943-2ab045cf031a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed23c6f-f795-41db-a2d7-0eba0cd1cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "490af0f9-29e9-4e1d-8cd0-4f99c2519c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695edd7b-54c9-437b-b032-4142dee42235",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbac1a7-ef89-428f-b0b0-6114794a5b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2196c00-3316-4f57-943a-7003575b7106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41ddf91-64a5-4581-8c3e-96dbbcedcbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae55ae4c-be77-49b0-bf0d-3b880fc355aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91436081-6ef4-4d64-9574-0e2afb6ae773",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d605865-f3fc-49bf-ae33-6d54325cf858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a73420c-875f-44a1-885c-d4fd0667df0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c65935b-37cb-4fb0-a121-cb613df83811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4a62cd-52c9-4e58-aeeb-2133c37d3e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a733fa-b45d-4761-8702-b9d0790420be",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475ee371-bb5b-486b-9f93-ea51193db9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293880c5-dc73-403b-9915-45f10d038e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4f029-eb01-4a7e-89e9-a13c20df82c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a2cad8-2a95-4bb1-adfd-37ba31b95fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba85ec95-1c51-4f81-badc-2dc65f5df32d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c377f484-4f87-4363-9358-38d0ed29f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e099c6d9-ba95-4b6f-ad3c-8879304c2a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7adf461-6956-4513-90a8-10d0f397b0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c542c5fe-dfac-4e84-80b8-6d45760872a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84383bbb-9091-4bd5-9575-f20b5b02edb2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917f0980-1911-43f9-9c2b-ef20f782bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328b010a-5005-4492-a163-b8c1ae6d99b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ad80cb-c4df-46f1-9064-a4e9c18b5a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b89b8c15-418a-4d61-b240-4a95417bd488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc5ee23-f08b-44d4-9396-96ca8005da10",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eea88de-5dd6-47d5-aa8b-e78713b8c270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e58004-49e1-42b2-891e-a371cf6c54ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c11e7f-32fd-4717-9bac-9fa46907a850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5347a6ee-bb74-4894-b1e6-0bea5ac685ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f2a991-f2ca-486c-968a-183e8ece3fe1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53bce7b-8f32-4a19-8e9c-72cac96acd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07794c0-015f-42ee-82e1-2201824c4095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e76f67-d9a9-44ed-81ca-bdd68fe2c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb7e1ac-8e92-460f-a06e-ca9522b95ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81dea86-6d6e-48f6-a92a-5095939ec6ec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001a331e-7aeb-4e87-8abd-f20d1e958888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf11356b-3838-4374-9956-ff70f664f23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3068a0d5-cfa2-4db4-a983-fe58dc9ec60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c116e9f-9140-403f-8623-98ad0b3dd62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8aa66d-f5d0-475c-97ba-edaee596f43e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe4a9ea-bc58-45b3-b4ec-0c3b3e938257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9357ae79-227e-4929-ae7f-fd052c5c1197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76741c-fce4-475d-8e64-7362e5976bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2abe494-e4bc-4ace-8a40-9bccb6da163c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e982b89-b27d-4fe8-bbf2-abefef367fc1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf272583-f8ec-40fe-87b1-f47676fc9529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ebf7fe-cbf7-48ef-aba8-daf985c35057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ef2f3a-a814-4a13-a664-41638bebd892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17514a9b-9e49-4a42-9ba6-1b99d3fadcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ec7b75-b319-48c0-b424-6d6b5326d07d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77965bc1-9d2a-4ca1-900f-7df551c1bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91779d02-30dc-4bc1-8a9f-d7425cae8b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607ce32c-c4f2-4252-aba1-a2754a117954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd34da5-a554-4eae-9e75-4ad264572472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b956e9-194a-4c62-ab95-bb7b434d79ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995b6e7f-fa08-4241-9435-37a829e45ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6056a1-a23f-449c-ad54-b8100112578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a100d5-1d58-41fd-90d4-c157549194c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930bcd70-eb66-468b-8c94-e1f41ea7297c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a838610-90f4-4c9c-82ad-69dcf359dd20",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fd800c-9b8f-45d6-a3e7-8a5dfbcc8dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc8bf42-444a-48cf-9d10-b3614899e712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2979d3ef-1cac-486b-8288-2ba49ac35a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1135f42-e608-49b4-bd1a-ed74bc3bffba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883ef094-efe0-46e2-9339-15775f0167e1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688891ab-f58b-4060-a797-85ece6d7cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feda2916-f58a-4579-bc5c-da719931b046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f209cdfd-4345-43bc-b372-d559f2c368b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f99788-7279-45a5-8d5f-a1c65bd2007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f94f0-3314-45f7-85d3-da67984efb58",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f36b26b-6824-454a-b2b8-aaf46b42372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce194df-d7bb-4488-9aa4-e78a464dcdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c92aadd-ad1a-4f0c-a129-183c8a0d5023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d126f3-ad78-48dd-b85a-c49678258219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3391c770-161e-4ce8-acce-f1b651e56003",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8c205f-1275-41af-b414-2ca75d2c7a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38597a89-f645-4afe-bd43-cc920d4ac0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a2d082-62b0-4afb-94fe-90a902d7bca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5087a656-f781-41d5-b62c-b0c978ab57e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daad28c-947b-458b-82a0-4c8134b417d6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce21e093-10d7-4791-844f-44293262eab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eea059-c5a1-4eb3-960a-623a97ec453f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a38a297-ffba-48b7-bc82-76378c53448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa88e35-a81f-4fc5-bca0-8275f93dd73a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa2c116e-adb7-4dba-ab22-637ba83b38f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59b65d93-a26c-47b6-be1f-ea7f633093d3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11930c4c-9a40-4ab1-91b2-7e628d5b10e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a03c67-2693-40d0-b692-385aa15a02b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab565a1d-a3c0-4e12-8803-20fada092a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b10e7f89-953b-4669-a672-9c2f71cd785b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c3f452a-b6c0-41a0-89fa-23522fd5376f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b2794fa-008e-4fe4-a42c-71275a35f0e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f194f07-f397-4fa1-9995-ea81ecbf4c2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfb55ef9-15fb-4d53-92f9-d9026b1bef52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e316812-cd71-4c29-8f5b-190b4e24143e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0419d5f4-0ce8-418f-a1ff-4f692d978504"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "beae8305-6bb8-4f40-aa35-a92107a80d50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "752d7693-092c-4bb7-9880-42d6ed1ac5b3"
            }
          }
        ]
      },
      {
        "id": "db31a8c6-8a8d-44ca-ba6e-afbcf35b1d84",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "11edfa26-82c8-4371-a57c-fabe9acb7997",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8cb678b-d861-4406-b3c4-ee1ad2e0fa23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59a3884c-10ba-4fb8-945a-bdbe10064033",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5c266-5f8f-4ec2-820b-20a39e3f1a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e952c98-c857-428b-88bb-cd7accbaf884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66da2191-c4a9-4c19-9d34-831d5a0ce11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b11f833-d390-4d75-94af-e322d9e6292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9333338b-b800-4ed0-acb1-d3d5310c55a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f89535-52cc-4696-9cb9-aeec11c7a4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0a157d-3342-4e8b-a134-500c022a4ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f00343-fb71-4438-a186-2aeef64327ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9a1996-b8f7-46db-ad37-75c29495a04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e827e5-8c04-492c-829b-0614e3360f3d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d295fd-f655-40be-90d8-a7e29fd7465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a6d2df-86c2-47e4-8c4a-3b0bf7fbfc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cc6860-df2f-4f7d-a16e-8788ed2bfaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be02d5d3-5ee8-4933-a4ec-08284541019d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dfba26-ad34-4e8c-80d1-224e65858522",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54a5865-2c23-4b74-a819-5a4fc5c16f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9816efa-6b13-488c-9f48-23a63e22cca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca36956-7db7-40bd-8c12-5b9f0845b107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b22a34d-30f7-46cc-a1f5-9678e3141bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce52d4fc-661d-4246-91fb-1414183900ff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e8f24b-01fe-4c21-8d3e-8eb61536fdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0bae44-7698-4766-b9dc-eac86be9e4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dbccde-9965-4eaa-a5eb-f7958c94b4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c1e153-913b-4008-b27c-66a7c61e9f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a266adb-9d33-42ab-8667-7f9bf7d760b5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f90fd-484a-461c-9479-e404da64fb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0b9d14-fa5d-4b8c-9f4b-e937be93a900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c9ebce-3dc6-4402-9b6e-8e61a1a93a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf865872-d6b0-4558-98b3-96c8f80b2be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9de6e0e-adf8-4740-97a0-c020f93935b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c025bfc0-3f41-4153-99fd-769aa1834b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e046b922-d3f5-41f7-9a61-c917643650b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09b74bb-e4dd-4b1d-8068-f2f00bfe9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "afbe4b81-057b-4375-8785-a40c1628851d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acbfd6c-075e-4977-a79a-44b49dfd4579",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c88230-6bbe-4a4e-88d0-c0db1a60c202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a833c0d-a62e-4090-b257-be2db8dde14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8594268-6b95-4e9f-8989-e70a0526e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ac2ffe-01c6-4f9e-9215-24db863cd16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9225d0b8-fd62-4747-8bd5-5a9414efb306",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc603ba3-f7a4-48eb-8523-8cd820907bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33669f7-df76-40b0-9146-fc68e5abcbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5179722-6e3f-45d0-98cd-c0a14d994ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3c77ff-e723-40d5-9fe9-83c8397e551d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dace243f-0d03-41a0-86f8-f424be15e5e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e142bd3-84a0-4441-af56-15b4092980bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50af6d91-4b83-4d41-bef6-8b11b0cfc224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006aed41-3789-48cd-887a-dbd4b50028b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "674f018e-94ab-4b9b-bda0-fec890419527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f8ff4-6a53-4111-a96c-6342903ce831",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8fe04e-e003-4eaf-8bd6-049072e208ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc2c856-558b-4bfa-8dfb-0c4e48691bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26409e2a-aec2-4052-9401-84c57a966b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "857358da-58c4-44cc-8e01-7c5ab1d98dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9e49e1-38ec-49de-ae10-3c6d57b4c726",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e9e248-5c4f-4253-aeb8-b004badfaacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee53882-7e3f-4ff6-b6e7-137bedd0599c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c347773-5214-466d-a14a-3f8b2980f41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0c4ed8-610c-4058-b699-a2f8bc69411d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbf2eee-5294-463e-9c1d-2522b7343991",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1804b5e3-5a86-41ad-8718-c6bea1a5165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2cc3b6-583d-4522-9eeb-ec8d330723c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3a1102-06d9-40dc-b91e-8fdac0e9d21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "482f71f9-3aa9-481d-832c-0b1afb0dcdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbdb274-03f5-4559-b96b-bdef9b9964ae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a784a5c3-c875-4a19-bdba-fa6b3c23fea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5192f1d6-f0e3-4f04-b6f7-af0e902bc37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e28550-2f64-430a-944c-e76a6c64aa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb3c4eb-e64e-4af4-9d21-3136ba6a8582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ebac1e-f38d-432f-b8dc-b80c8c1fcf00",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be5147-1e32-4634-8ae7-c54cedaa8ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89eaa95b-8e1a-45c1-8e44-8ae95616a200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f17341d-729b-49af-9902-055f5eab8fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0a3954-6b63-413d-8f14-d1fa471305ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb3cc1d-684a-4f04-b2a7-918217095ca9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb07ac73-5374-4fdd-b04d-288fffdd4c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d2c9b9-6ea2-4faf-9880-fbdbf767d659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d23f3b-5147-4d3a-b3d8-86c5546540db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3946ac-83a0-478b-8cd3-c0280e6b66ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5596194f-32a1-4635-844f-8375dba5abc0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d02186-d27c-45e3-aef0-638a6606cca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc61577d-6727-4c94-86d3-10d7f0bf5e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fb38a3-9322-48c9-a307-280bd2a0cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "02af1512-830e-4680-be73-05a91e66917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65586b5-b9a0-4ac6-9379-b943f296d149",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323771fb-a0ad-46da-b000-82ce3bc80961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eab2ac5-cd2b-4043-9fa9-be1976ff13b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492c0918-b703-4331-b586-ec56c5e71884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e988f9e-f14b-45c9-90c8-e708c6d7e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2937add6-bbeb-4132-84ae-116989fcae08",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3469c161-9cf5-4d1b-8d56-46c52204326a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2276b3-f6c4-4f91-9653-933c5de350e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043b019c-f868-44e7-a93b-7e31c7fabdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4fbaa3-d30f-4efa-b7e2-903a41ab4bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0b0186-9489-4bdc-8c39-f6953b80740a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e4f9c6-5976-41f3-94df-fece553caf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c2f05a-08cc-49bf-a962-4e4e1ea87dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6180827b-27fe-4d88-8c92-852f0f385ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58511dd7-db2c-41e5-9b24-40dfd7590e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad95f8ee-1014-4a95-848d-e73340506fac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c88b8e0-ceea-4693-b5e9-426da24358c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6405adb9-ec51-4737-8b71-25797c6deb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5a238b-7b1f-47cc-9805-f402d43c0da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f1ca3c-394b-4654-a6e5-2f8dd8cea1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d807f4f-b92f-4e29-9dbc-86c0658342d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce43be9-69dd-4ee6-b6c0-229f3c3bcf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24399b67-c030-4cd5-9968-49f13a6f4bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32445af8-72dd-45f9-adbe-7a0d535ad02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31eda277-9a47-44b8-a027-3a218ef69d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c2cfb1-ba9b-4982-af08-517080ec1e2e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee741144-7061-4393-b3ee-74672d132f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5136013d-18ad-4f7b-bb14-f6f7417482f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd98b44-ce4c-4a27-bb2d-bb1fdee90d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e28a6b-f1e4-4492-a64a-5d068b285a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0d8466-3511-43be-a863-37e678e55233",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1821b1b-f98a-4fd1-9292-2d15fce42180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ffa5c7-07ed-4a00-b403-8ceba7306bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411b778e-07a4-48f9-83ac-c829281ccee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df6ee9a-ebe6-485e-a5ff-3219cc85b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bae9ccc-7fd6-4451-b280-a7d34a067d97",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9137711-269b-4337-90f4-4687b2cbadb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4f56c0-0ae1-47a5-a85b-0c47394c559a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97801d7-147f-4e47-a3b0-702aebd080bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "534240e4-b820-4962-aa5e-c7140197c4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a40a1f-4ff7-47c3-b11e-4db29fc8c91d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b819066-17c5-41ad-b18a-250defcced97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7512cff2-535f-4fd9-9597-c3aa3d4b67ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e3b7cb-ddc3-4ade-a5cc-a2bbcdbebf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a83e39-897d-4888-84d5-d83629f6ecca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73397bd5-f057-4764-a9d9-5faaf5b395ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b0e824-37f4-409b-84aa-95407cc1834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe0a993-0a02-43d5-aa7f-57116fcf74ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da26a9-1eaa-45e7-8269-4a63af41174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf8afae-0c69-4748-863a-3512eab013ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe8ee08-829b-4987-ae43-9ddc8f7cd95b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f34c289-8802-416e-ba74-d1a2e96713d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fb79aa-1244-4e72-9d27-3d9788b759d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa10532-02ac-441c-b778-bfb71d2aa70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "947f0a79-8cab-41b2-840b-31eaf64b08b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7f5c33-d66e-4dc7-962a-6b924967433c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd48884-92ef-48dd-b647-c3e0b0f1a75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d153c3b0-a498-4daf-8b59-c93083d080d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4380f88c-b658-43ab-a79f-dc16eaddc5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9433ed06-5f2f-4a71-b55b-d318f812b0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d203d2a-389e-4982-a397-a3cac0e7b132",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dfece8-c946-4ace-8437-7339dc67023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fd18d3-eece-438a-be4c-c704fead30b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f7259e-9525-48bd-a66b-c4c88553a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06e9890-00a8-48ec-8c5a-ac2895d85963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ccd923-84cb-4d50-b816-09968f7efe1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf8a9fc-57a6-4733-919d-3eb1fbfa1868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead09cfc-9300-48f4-8585-71a191dfb431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0280548a-796f-4e3f-ac8d-28dec657ac78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0de7a26-8d4a-4e7a-952a-b509cfa7cb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b4e312-f7d3-48e0-8c58-db82b98f4844",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f971eaa2-a191-4f4b-a682-13df09c5426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c394362-368f-4bde-8042-87abd2778a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fd2dfc-c496-4fd2-9073-3dbb49b1df98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1342b3-1e5a-47dc-9516-38a48b0bb18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e85cbc-18a8-45a4-bb39-16c2a1f60e82",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5926da19-c090-45b1-b9ff-d7ef14fc2264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199dc643-b852-4dfa-bc8e-5a9cbcb8692e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9aa5bc-5258-41a1-9c1c-e2bb1d765872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9d6125-f97c-4de2-8cff-4a54d422e06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba52682-b7a9-4823-8a33-5654049caa82",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a64eb-4a6a-418b-b10d-44466607c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8998ef58-87f1-47d4-bf58-4f5c77b33529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767aff77-96d0-4e93-a5a5-ce0167093e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b0ca5d-9d9c-4276-a453-b4c7111c204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44fd54a-1b00-4be2-96c5-24dc3d9bb7e5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23513289-b634-4815-9c31-6968af8dce5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ae8073-5d5c-4b59-ac5f-803df5e46063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76b332d-3939-4e5e-9c70-4e488e8f08f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191bd460-f264-4e2f-9fdf-9631ca59a241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce7e746-7aa0-4dfe-9594-0c7ada0c4ba8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb91cae-f0b6-47a5-b068-8a84aeb1dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1188e9a1-47a4-46bf-8c25-e53758684a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24151d9-0546-4bf5-99a0-7fc6d91082f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d556735-ec9a-442a-8984-10286fbc7786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c7a5bf-a9eb-4e4e-9ba1-1fcf8cd41c4a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3357c4ed-e441-4787-b785-e8711c68470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47575c60-1655-4a48-9c19-c1f9811cb3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c63e7b-a6f1-4da4-821f-42e91fad78fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25eeacb-a08e-40ff-b404-9d1cf07149d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75acf73d-c671-49eb-b23d-1545e2771ff1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a73618d-aca7-4d77-8b32-832b8c63c312",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f093ee89-cc26-4959-a1ac-6980ada868ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d424a9-c628-483f-a0ed-d97a67578c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd17430e-ad2b-4476-9012-9fac42239f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4003071-c81f-41fc-b8f3-34d1f054ccd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5871846-deee-4785-a8d3-55c3125678e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "970b36bf-2e66-4b36-a679-1747929ac879"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cec58c8f-a8a4-4395-ae33-d0abe950c53d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88f80414-c313-4df2-8826-70db65fb8d90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e73e52f5-132b-497e-8cbf-fa98e2ae6cf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "756e22a7-9e46-40ca-8f71-e4c6377ec871"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e91438e-5ebd-49b9-87e6-e4b3c9425631",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3de0325f-d746-41a5-a2cf-1a01575fe0de"
            }
          }
        ]
      },
      {
        "id": "f31b3e16-4bea-422d-9e10-8dbeee37470e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4827e8b4-3921-4145-af6f-c0552331ee03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c959c4d4-b547-439d-b621-48d3c558ae58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfa6a9a3-a36e-4937-ab98-3632d555f5fc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fbef02-54d1-4389-badc-6c40ce1d9b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf30d2f-ad9a-441c-83b9-c51b004cb4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1cd130-fcbe-469c-96ca-0a8561b99eda",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6434080b-11fe-4f70-8d77-7d3a79244cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce6041f-1c5f-44d5-b9ce-a883ed565092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4edd38-9c31-4901-b172-b019f4e8ffef",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab1d514-d9c2-4322-9589-f377ef23298a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffef2430-d417-4b99-be19-f82a439d0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dffa93-94af-4535-bf8d-e1899d6f4512",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa3bdbd-e6fc-4f23-9050-5fa92ba29744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7b1c9c-d196-4747-b47b-62235a11a15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fbaa78-1789-47fd-bab5-0785ec1857c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684e903e-c6c4-42d6-852f-4701bc981731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08118803-eba5-437d-af05-5250337797e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91355a4c-b90d-4dca-ab43-f7f321c2d392",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25445077-9629-40e5-bef9-3a35f7bc7752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24a5c03-458a-42ef-b00e-a581dfa46127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d6eef0-8873-4895-bb3b-2e6c7963a093",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17734811-1de5-4312-a971-f32070a2a01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e6e231-7f9d-4137-a7c9-6816db11127f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726925a9-a069-4d4a-8ab1-6565a6ab7852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb822767-ed31-4ec7-9d91-c3bf3ed41167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9900f96-18b2-4bb1-b3b1-ce4ffcb89786",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b50c19a-fd5b-4d84-b1c3-e40b660c1095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8785b0-ad49-4197-bba8-81e4b67b20cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e277419-f0d9-40bc-8d50-5072e509028d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab0b201-6346-4be4-8e57-08f440da9feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a9fd68-cb38-44c6-9a6a-60b4a15ee73f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dfbd39-eeb5-4340-ab1e-8dc9ad5373ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8fc0f8c-71b3-42ea-98bd-c36bf37ac970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a02280-2867-4686-80f3-42231a2981b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39b3401-2735-42a3-8b51-4f66ad1f2cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f32752-c9d3-4efd-8603-3204cefd6d1f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605b573e-a425-4887-9a28-7d3c4c304e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a74381-89f6-4c77-9051-8e539c92e5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c458531-9c18-4716-926b-cde415701a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928b72c1-8134-4731-8f5a-a089d78386d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce25129-84f2-48fa-9bc4-bb84a69b8c0f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6422f5-22c9-4ad9-984a-757625449ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd76a18-9efd-4509-bfd4-7e53dc08f62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e896c42b-dd72-4ad7-a508-ae813de6de78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea1c385-385b-4091-a23f-b8afc85142fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3966c-b717-4d81-95a2-71b83fc98149",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49d802-aa4e-438f-bb86-3af7f8b79f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b92ad73-c204-47fb-a12e-afeab2c2e901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dbb8dd-7559-4d50-8712-1595715bf9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c2ac46-a299-4d7c-9ce1-3b753d0c2945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe07c768-d80c-4d7c-85ff-8391929515f6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c9bfdf-3ff1-4a94-ae82-3c5822cdadbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37564e23-90ed-4d38-855b-f05494566614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad4c4b8-8a3b-404c-8c71-8e84e2d42592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44699d6e-6bc4-47b6-947f-75532271e75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360dcd36-bc87-45c5-8572-63903cb70317",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b2afc2-c8cb-4b1f-9f5b-a549c4c2f3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "909819b4-68a6-4209-adcc-a14ace709c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb64bcab-e7b4-4a7a-8c47-3fcb1b3544a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53d499f-be52-4117-991d-37f3ff120d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ccc026-f4bb-4037-bd6d-b92651686c41",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c09c615-7c01-4b37-83d7-5bea4659438c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40662735-b5e3-45dc-bd35-f44812561e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172c5c47-f086-477f-8391-af618ed9ab69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccd1d15-aea6-4a9c-9b11-7de9d1ac09d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad072d59-e732-45a5-b9ad-7ad16cd7962e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a568e084-1f63-4b4a-b095-ee0c0577eb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b71fb8-0a3f-44d6-938b-dadaef155150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7868de-bbe8-4ef9-918b-ae361534d368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984778d3-7f4b-406b-9614-4d70d57674a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53de7c41-e24d-4c23-9619-aac6b980cec7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b457cc3-7d30-4d45-9fba-b3b9918de331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91049802-8e7f-430b-8843-89dc53f1234c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f059b7-e9c3-4d52-bfcb-ce22b7c2f5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba55f586-d817-43bb-985f-3020c435fcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9ee71c-eef9-427c-9fdf-1e9e0828f93b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3e0bd-2883-4fe1-a827-628bdcb652cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc9f2ef-80b0-482c-ba20-2b2b0f6b0e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6f13b-1271-4495-966d-9f1c8869cda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8c1aab-16d4-43ca-8b0d-a521c1d466f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb613006-528f-47ed-a832-84add994356a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d87062-696d-4873-a0ba-d1f2df0b3bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844df193-7a6e-4079-816b-27beb0c875bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddfda38-a543-4af2-84e1-b8b8e579ec9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae923c8c-4450-4031-a7dc-4a936ee59736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61e13cd-b70a-432f-ad82-4b1903141fc8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7faa2710-cb52-4aaa-8ea3-e45f23c4607b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec16fd07-1338-4458-b7f6-900dc1c4cb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bbf540-c05f-435f-9c57-9dfa8e48d36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf9c13c-01a4-4868-94f7-bb51e777daaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa5e750-a936-4423-935d-b569da349469",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adecac5e-f35d-4fd0-8983-11d5f209e65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ac82d9-c13f-4de9-8fce-71697a03f0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495fb7e0-0cb1-4c91-bd7f-4d925cb88c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ab0335-e4d2-421f-9a6f-1c8b42b20a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79417c35-f212-4bdb-b458-ec1119237882",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b08bcd8-c06b-4170-921b-0510fcc2fab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca77fa5-fa03-43f4-a682-0390ccdf1430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182858b3-6618-4bfd-badd-eca3715e3bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c4f142-fe51-4107-9bdf-dfe633efd107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9f3233-dc81-4673-ae95-61347d582575",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a246add5-b05a-43a6-88dd-7bb7502b538b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8efcdd8-1c5f-4e4d-8fa7-309203f1d05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d1f922-e776-41c1-a3ca-6e83c3f1ec97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c97cb0-0dd2-4dd6-bbd8-4099fd104f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de94543-298a-4c7e-a16f-85b201c0fd16",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eb8aa6-50d9-4b10-abf5-7678a016c735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e614afb6-88a9-48b5-bab3-06af133182f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0006f2-6b6e-48d4-a91c-3986ac2ccae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356f62cc-a2f1-4995-8a5a-83690ab53752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644d26aa-d533-46fc-8e71-ab51c3b0d766",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57bee1d-6f90-4f29-ba43-42743586559d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01816e2c-2938-4bd8-a0ea-ddef0f04a747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cea41e-8f7b-4bfd-8c94-cae82b7f200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301d5c8d-37c2-4445-83bc-19acb1c7c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733928e3-fbb0-488d-a37c-85dec8b160a6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050d4cd0-f192-4c8e-a6fb-85cedbcb87d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0110fa-86f7-4de1-9303-2ea512eccc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb77bc6-56cb-4c73-99b6-738432dfe9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44f9f9e-a40b-413f-a637-3f3a830f8a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae1aefd-5f79-47a6-a212-2d0a5107484d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b01be-828a-47df-9b4c-b3168ce419b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f8c6ef-a8d0-4a59-9eb2-95df1acb570c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa46f7b-e8bd-49dc-8802-1926ac360205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9271f2c-386e-4d8c-bb38-614a0a4c6161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773d743c-2377-4166-b865-b3f873eac98c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd851fb-2578-4d5b-94d6-f44e7dee20f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd8b8aa-6d49-4208-9c0b-5cabfa664be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a95f2a-fa57-4f09-a657-223b86fc6d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b67306-89f3-4bb8-9bdb-4988ce85b3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219523ba-a72a-4edc-aa82-1f5522a1f972",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80655566-9f3c-4eed-b546-5e72694d2b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844e88ae-f70e-4712-8a4a-5f2db10e395a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6002d9-3ca2-44ba-af36-c93406bfc7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a107b40a-ecd9-4968-86d1-5a55af9502fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7e0e72-5f65-4206-bb55-b1624647910c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5079223-b06c-4714-8585-e5a3060dd390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee977604-70d0-4a88-90df-0aa49a150c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a210facc-362a-4dc1-ab2d-8bdb827fd4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3345f196-bfeb-4d71-9364-fc145a0252c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3668b434-76dc-4c5e-8533-f55b2ae87fd9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c598c8fd-9b57-48f6-a664-3602c0689415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81abe825-99ed-44e6-99fe-58831d6b5f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7b53b4-c93e-45f3-af28-399cd9683571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5045247-e543-4fec-b859-db56059c6697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdf533-1efe-4ced-84cd-f621f2025830",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9356e6-a358-4c0d-8e8c-93130587a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568413d7-63ea-4aa7-b0cf-afbf4282051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28831d05-1613-4d4c-9696-024c819e9c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898245a3-e333-46f1-b32e-c2d2f2a57821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a43f9f-5fb9-468b-9876-913d443df6b6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad7f3bd-5668-4018-884f-d87d14593d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845f53b1-12ec-4a2d-8f82-939f088b071f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba1f662-d2de-4884-9f51-fbe22588c9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3303a1-6cf7-42a1-bd36-7cb284a5e980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cb3aea-26de-4a23-8c8a-ed04bcde45e9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc617c1b-1fc7-4b72-acdb-343bf6cc3319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ec6646-fad9-4e37-95fe-fd813702bc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de254df2-0c26-4f53-a877-aaa9bd38853f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2286c2-472e-45a0-ba79-fade19c83fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82f490d-a1ce-4b29-8f89-b0a1b8d6da11",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f3804b-91a2-4cb9-bacc-bcf1505a38b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ab6a65-0d4f-4f2f-9479-3aace90c3736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3405cb19-510b-4804-b287-0a96e7d3d297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5bdb1e-f487-4e52-bbf8-0820d55efb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4948ae5a-9a80-4119-a876-1aab9df917c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4012eb3f-deb5-463f-af8e-c0d92bc89edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7acb646-32b5-4914-86ad-f6b934673560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e75a070-6a64-4e0e-86ee-375d69c4b0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896433f9-3372-4b2f-b1aa-52d5f73ab0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e7d75f-ec6d-43ff-8e20-0a13abf0c56e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090819a0-4452-418d-befb-97298585096e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653eef32-7682-4691-a465-304d910dbe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0095a677-5c07-4f0f-a317-d81f3aa48c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e766f0-5636-40e0-abec-f9bb6f4b2085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78ec113-19df-4f61-82ae-2df602fe244e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca44c15-197f-4781-a8d5-c6fd17c6953e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90029f9-98ef-4a0c-9f2f-7abe7e9b9e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c82d243-b0ee-454d-a28d-cc1225976710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e6bbb5-7cca-425e-b695-86020d8d8c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98f3c5-d5e7-4bf7-b8cb-d654a8851228",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991c0273-423d-494a-aef4-0b4bfb98c906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbb7403-a65b-4d6b-8eff-94a22ddd826f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df73b89-3781-45c9-92af-28eea1921533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc79506e-e76b-4c3a-97b0-474379abdcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b1eed2-d9c0-4dec-8bb9-3ce7a654bdfd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262a78e8-01f8-4bef-a9d8-6532ab9bb433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f65b21d-823e-4632-abbd-8e330181e394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc085206-0acf-46cd-95b2-58946f73da69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf3e2e3-c431-4f79-82d4-edee3459835c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4029b1-8605-4b81-8fd7-f168c0b8ae8d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ae3a26-2a0f-4fa1-b88a-0ba5b6c1db59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9422c49-2009-4c31-b640-d88be05d1975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5114703-8b75-4802-8a1f-b0bb0bfe0884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edabab4f-1810-4911-855f-2c01af136786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d578bca-ca89-4b20-ae60-2b7147a9a3ec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4142b011-9827-489f-995c-63f6831dea0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820b8144-a3c4-477e-8e66-01838fc09440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7172cd73-3727-4072-acdc-ca86501192a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e26324-98f1-488a-9fa0-a4e79ba4c88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1986a934-6f21-45f9-90e7-dd806a9d9b88",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30f3bc5-3467-4f7a-8494-4a713b2d6916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75e4d0d-12c2-4a54-9dfb-965842430af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29958140-19d3-4f77-9e9e-21723a02d3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c1f88f-bfd2-443f-af63-6bba92dc3db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d5d18f-9e20-4da5-8fa3-4ff058ae0079",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339e12d6-e45c-4d5a-a2ff-fc09f4c0d429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f67ccba-4863-4f09-9917-4c104cb868c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec475e9d-b91a-4e76-bcdc-4e55116246ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffac1b1c-0d70-420a-b884-d39c8da17766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bdeaf3-5eb1-448e-a748-7141ca2dce7b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d38d8cb-f2b3-460b-815a-cf04df8c57aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896c03b2-125e-41d5-b570-bed3db0f31b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2795fc43-a743-4dfb-838c-8748c2f79eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501c93c3-1125-47db-b833-3189df0ceecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4d391-a042-4058-b554-4e1f28719c4e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ba8797-6efa-4b02-8aeb-b0f4820fcc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe28821a-1744-458f-8897-f6edfb3a6685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01091b5b-7535-4b61-a56d-83ba47a2546f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54a4b6f-a29c-4166-a576-fd8df24e2894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2a0c52-e2ea-47b8-b42b-2b475b12300d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6186c1b4-439b-4370-877c-ff63149bf940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dcaac5-3a8c-4e6c-b9e7-ea31e97d3666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06982e41-e221-4636-aef0-65bcd974b396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6644093-17e8-454b-91da-2f142b18b972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b8a7c-55e8-469d-95a7-c11991b41371",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d845e532-8235-4c8b-bc64-048c93ccc26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee9acf6-f21f-44f7-8a22-206a74c223ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d4b821-2e2e-42f1-9866-b486cfe334b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea030fb-4f72-4a41-a9ad-8b24f74735db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e490264-fdf4-4f49-8a82-fb978e188a0a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eeb30b-e267-4ec6-9a4f-585e1411958d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2026b21e-14f1-40f5-bfe9-4fe3167107b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592738f9-9cf7-4105-b26e-be5d82413d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24666056-8ac2-408a-a2e6-29484ca79a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22fa00e-c852-4344-80eb-c9717ffebd5c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320580ea-e6fd-417e-9875-39900fbbb3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c63cff-8060-469c-b74e-d86eecf48c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b143b4-3490-49e4-b06a-94c43cdaba25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46c0241-15ad-4e14-92f4-1ba7cd652566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9659732d-2011-4db8-a6ad-5adef99e0353",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ba690a-e206-4501-baeb-01d57813f65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63df2b21-d163-4373-9f91-338c2cb3f4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1e5ba3-534d-4809-ab72-2ea0bce2f67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5938b95a-7eb2-4b9b-af99-0ce040ffa9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dffde8-d074-492f-b7ba-6ccd6c98d638",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef421d5-0737-44b5-9ba3-993817b4f5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3978471a-9bf8-4348-9828-d6095836e790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c9a619-d3ef-47c7-b5ff-9a8362d4728f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8afca3-8d20-4cfa-a3fe-68e425a90973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab38ddc9-ca7a-4f73-b1cc-9704a360427c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd739161-93bc-4c60-b75a-a9f0c6ec2690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be291e8a-f5e6-45fc-b67b-f1b41003cae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dbc95d-7229-408a-a95e-898b977c9fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ea18ec-d7fc-4f8c-95ed-832ee00d6a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da57686-df39-46df-bf82-a82a7f07721b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b073d27-24d0-4834-a03b-9a9655833887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639a940b-1950-4bb8-a405-6949887a7785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e61c67f-1501-4fb6-bc5d-d31e61a963bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0186d44-9f84-4073-9b6e-59100bb43fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a367ed05-539b-4eca-95c9-484e8d7d131f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef71e58f-0f34-4045-9516-9e6652c8a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0d3907-71cc-49ae-976e-b35a4224335d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f230fbef-95bc-423c-98ae-8faf6aea436e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c13551d-b2cd-4e96-b143-de4c5fa24657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f4c1b2-47ef-4400-ad08-7c16898baf58",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfae303-9f6c-4884-9eef-194700c85e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a371b322-7e23-4e15-8062-29acbf12a8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d37800-2a36-43de-9b36-f60c9cde6385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162923c3-4100-4f0a-be1d-236357f459b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb148d5-15df-46c1-b458-4f643ccaebfa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ba80ca-f132-491d-b9f0-826df26aeec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec1323a-e07b-4c33-b05c-ae97282fde0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e563e47-c330-4574-824c-ef45fac112c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9647b11d-0329-40fe-8d33-b77475d94ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b22baa-3ea0-4f33-bb62-1cb037baf7e9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca19b27-c736-4fda-889d-8f8ec8a0ca10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38c2155-8ad8-4d2f-ae4c-a8261479fd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810e9430-0007-47f0-88e9-11de12f347ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f30b3c8-1494-4a93-a0b5-3186052a6d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b98562c-ea4a-4195-b123-3c72723cda17",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d5fb7-10ff-48c1-a6db-cd473203f9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8692219f-1ab9-43b7-84df-11d8666a394e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea577f7e-36fb-4685-8c3e-89aada8caf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be86f313-da8a-4ffa-9f45-6c3b523cd05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7681feb7-10c7-44c9-a3e4-84303e3f159d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a237d9-db92-4e3e-a317-87a1c324d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94c1b50-5463-46ea-96b2-fba6c80e7456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37404161-4e36-4d69-8f18-bbeab490ff03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b89680-de00-49af-b0fd-6b49ac00b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771d3556-36d1-4cc0-a74b-1ac7dc26003b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf622fb7-5170-45af-b43a-62e8c94f6113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4efb60a-9ea9-4e04-b635-5ccc867f6f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeb459e-964d-4b74-86a9-eafc9731601d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc471b5-761a-47c7-991d-27766e63a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faeac28-57bf-4655-aecf-c68f937a78f6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f6cee2-8e8f-4b6b-84bf-a4bc4aa189e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4121167-48b0-4af7-a5e7-1464f4615377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b46558-51d0-4d30-b6dc-c651cb323b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be37b6e-05ed-4174-8eff-9cdea91994ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706eb4d1-299a-4757-b8b3-c6a11dea86de",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daf1a90-4969-40e2-a9c0-0d7b47810659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803b7076-452f-46cf-bf06-3efa3051ff6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a677e5dc-72c7-490f-9e10-d8923e572aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f1f4ef-e8b6-43ff-80b3-2e8d1755cfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e71392-1b8e-457d-9ed9-7ed1902a9429",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f24bfa-bf16-4c81-9bfb-d12869b94da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547aa85b-c5e0-474e-a55f-8d7d1ea2c6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ef67f5-aa7a-431c-9235-7a499970badb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca412f2-8722-49a1-8f3e-de0accbcced7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97999c3-c710-4f82-98be-3cfb93a0ae76",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f87d16-ab64-4220-ba2a-8f7ca3b5c2b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a9a2ec-0710-4299-af07-878284bc252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c00fa57-ae8e-4fed-9ed4-8dd5b0daab00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fef3e7-50de-469d-abf8-acb017589dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c29a54-b7b2-48f0-a255-656c29a381b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d94d014-e210-4348-94fb-a212345e782c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b1edce-cdfb-41c7-af03-d0af59184608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa99258d-c50c-4dec-9e1b-9d2b6beaf77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1acd5aa-06d3-49db-b5c6-75cd8ebc388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab003797-ebb4-41b3-ab23-6463cf876083",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1877a6-a932-428c-a7de-eed17b7a42f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6002ce6-3562-419f-9c8e-aaca41a7e193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e8ecda-6534-47da-aaa7-cdc14fef7cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ee4e28-9298-417b-98a9-14574b44dcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4c0093-3307-471d-bf95-c1cbdb755d9d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02edcc08-0851-40a2-b8bd-fe64e95e0734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09868f77-5b16-4ad2-b5b9-e23924c5361f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879c0d1b-55d9-47b2-9e57-cca8447fbafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9092110-ef26-4126-b8c9-01471d5592c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4449273-aa84-4709-b3aa-bfa97d9a9ba6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79c569b-4bfd-4e1c-b043-c30c2a960eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee2d44f-2d4b-4498-8298-c00d295bc1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b86534-d579-4d62-8bf1-aeea86fd8f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557c4c1a-0c7f-4230-8e63-280eea071cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d52ac3-64af-49ec-8a18-081d33f74f24",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a470b800-e14c-4260-96e0-0ea3c7b38506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0c73bf-1209-4c8f-aa97-31c41c1041ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d324a441-c420-40d4-8c9b-acf1745ca158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86946b3-b0d9-47c0-9a36-430a9b0e4c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29a9808-54ec-42f2-a90e-3c828eeca19c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa77c9c-4600-4a9d-8fdc-fe24233e5890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e3f80c-348b-4251-9ac4-b5840c291839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b0951b-d0f2-4c72-b48f-b2eb56790797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53963674-257d-420b-90c5-b27f3ff22979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d9a8ea-05be-4ce8-9fa1-fb2b0e7db8e0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655218fb-844d-4c6a-a740-ff05f5442ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5801ac8f-ec8d-405b-9d57-c43a02c8ccf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4ceb2a-4355-4fd8-8a2c-ae6ebcaff957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a524d57d-f8cb-4d29-bdf5-e986c1d5455b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05550f9b-000d-49a1-aa7e-4b2e0dffc106",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8199149-8e40-4049-b099-7e739930505a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce6a65f-6d1a-42a4-9cc7-1c7959a39cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b090e218-8340-452c-ab4b-99165c9d8dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ee598b-e27b-48cf-aa04-19c6755f1341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa772086-ecc2-4329-8617-9af0dddc8666",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b5df94-8e10-43c0-b544-794189de05e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0db82f0-954d-4fb8-be8a-e5e71906f309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d085f62-fca6-4fc5-9775-8df5739e4621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7e3997-364b-4112-976c-0eb05ec3c9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b734d9-3e34-4507-ac65-2308b7cc21ce",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4e24dd-a6ba-4b69-bb51-c155d3e87311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebce03ef-5800-4a61-b49f-c4813cf70d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e99ce4b-dc90-4baa-b577-0683170e6cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e046c0b0-49f8-4646-9232-30d347634b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0de05a3-6f90-4c84-a45b-a033f747c528",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa857cc2-5860-45ef-a064-02677cd5a19f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc1c995-5c8e-4b9c-907b-8bcf74bd4480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cd65f4-c51e-45ba-8193-6931c26a8e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c370a82-e51e-4ec5-90e0-cb92fdc94067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1401bb-9639-40f7-9117-c8328075c15a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b906143-1cfb-46b6-97dd-d4fb6027a39f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24220d2f-b121-4c14-bafe-ef136b130f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab65a37-cb01-4bfd-a69b-55b1ef453753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a21a07-5d27-4ed6-89dd-aa48e7b880c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea2ae49-9759-4759-bac9-17f54a93ff2a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4eabb6-6f39-4a36-8289-3dbd97803c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf14c601-262a-428a-b5b6-a0cb985c96ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb11ffbd-506c-4d92-91e7-b9dbe5cfd4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec05d64-c6a5-4ce1-b52e-d73b37046b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9a954c-25fe-4c3b-b161-165cf93d67bf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da67e8d-0c4e-4f73-8ac4-ab6a6e44bb0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d9ab2d7-6d45-4980-b4bb-9bda0393a622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b341988f-331b-4961-86e0-71ec88cb4902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3268569f-04de-44fe-b857-6010f9bdf151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c0350c-8e14-41e8-93fd-d66f40561f70",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f8117a-bbf3-4a2f-a503-b5d58102ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c67da9e-1bb4-4eac-ad17-039fde5b0ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1197d35a-55a3-4a8b-9311-a791306f7bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f114d8e9-b490-4d82-9ccc-9f9a806be570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e280bd9-492e-49f9-b4ce-3f5d5e8f8d77",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d4e6b-f536-4c0c-9a2a-76e70c542950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1724dc52-67f9-4969-bf46-c370698f0898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6347d0b-ec22-4ef1-a52c-ff5084fee062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6476c59d-f5f9-4f0e-b20b-201970c4b179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f771cc34-d762-4250-a181-6270514f1579",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cf01bb-92fd-4043-a80e-0fa2ae68383c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cebdc6e-832c-443a-ac60-abb9379d0c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c70c34-de23-4578-8787-95cd86dd9532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d33fb3-19f3-4ba2-b35e-fb38d7fa5ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccb0c84-de18-49d4-a81f-03d9648b59ef",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce58047-7691-4de6-9f95-4edff14c7cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e4a746-f4c8-4254-afca-d32a58525e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb7157d-fda4-48d6-8f63-f0e674e27706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec405aa-e3db-4174-9706-d18827aa0f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708b739f-40d8-47b0-b0e1-07fbc44d06bc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b960470f-764c-4e14-99e6-f4072abe165b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7ba43d-04c6-452a-b951-8551a73f2b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4155b9a-9abe-4486-a975-1a492a43526a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf191c9-b52d-4feb-8acf-47f4b9be528d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96617f5f-6b3c-48bd-9d86-7d5d6ab446b2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ac2643-2fa8-4370-a0c5-3795e1d45852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daaf4ca7-b2e0-41c9-9b08-ccc1d56fe6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2023b50-54cc-4c19-8eea-f22caf428b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c604468-eb6a-456a-96dc-fab38f312666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206b9bf7-9f7e-4709-8bbb-f9335f12d7da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a126d6-e4d6-4364-8357-d2d16ff816ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6594d1-e17b-4a78-bd84-4511fdc5b313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d21892-e77b-4648-842c-b1d08d6aa6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4320f886-8e71-4cbd-9330-9f6fcdd1f2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5371152d-f99f-4486-be70-39a60b370fb4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72a51be-e70d-4c7a-b8ca-08f21b2b5e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8d334a-ec96-4b88-97d5-deabd8209f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7300cb06-7fd8-4209-b415-97aeade9416b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b65258f-3e51-4aad-ae2e-ff769a84f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc25c7e4-9f3c-437d-90da-6ed72403679a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900b8027-1304-42be-bd03-bae32a32fc08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57194073-49b4-4189-a054-49797809773e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555b6408-f210-4f98-8849-82ec4f4f862f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0befe989-8a9a-454e-b5ca-0b71812fbb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d3858-ec7f-4380-9cce-dfc0d54ee540",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bd7f3c-1fd6-4370-b677-ad861b0dffb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bda4a30-8af9-4442-8751-1cd14734c4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed492f00-0cc1-4707-93cf-a2c8fa55456c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64892ad-a8a4-4e6a-900c-df345964849d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1527d6b2-8195-46c7-8fba-224e4d4d9219",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53399abe-3973-4d77-9175-0e3d8c50edad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cc4422-f599-4001-9d5e-e2fecfea5a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5c8364-a3da-4f4d-898f-6f6f17dab727",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc569e1a-6ef1-42f1-91c0-bd41d115171e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14727824-f1c4-4331-9fba-77e9e6b64889",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce62086-6e2a-4435-938b-2914406a7135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bead3e37-8ae1-4db7-9c19-efe3447c9b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aaa25b-60c7-4a16-a142-4371e4979520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edc21b3-c4f6-4072-b508-5787fa82c814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab8656-7177-4ceb-98c2-b6b3b0ad55df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1137e0-7d12-42c5-b288-2ef25746b3cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e058355e-9129-4c89-b179-9898bc075715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af847cc3-d84e-4bf9-a22e-23a6c4648ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1d87fc-7db0-4a0f-9eb4-7ba68efec98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05190149-f922-431f-aa83-6c9f2c324c29",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f727d30-e5c2-4469-b35d-19056fd9acb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385d1671-08a5-4967-a359-14a0f3584b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9d30cd-1527-43d6-887f-a906077c297e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baaf3dd-ddd2-4601-9695-b6f21e2274ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3df331-f88d-434a-87bd-1c66b99dcaad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea353cb4-70f4-406a-a09b-1031144491ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad002d1-09c0-4aa8-b1ed-1807c4c88ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d1414b-edd3-4536-84f6-d3288d21cdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb0314e-2051-40c9-9098-1dfb319789ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c670afc1-8eb3-46a0-8e49-8c25361352fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c093dfa5-72c3-48e5-b130-8d0b6a6e07c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31dbc6aa-e310-4116-a09c-f7b2cae1f0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e280e23f-700d-49cd-90d6-eaaced97b82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683eb46a-f183-4205-8521-270b73c91082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b53d2-96d4-4d9e-9e0c-8d596734bc65",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc69ab82-7f66-4790-8efe-2d391bb0344b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412aea43-56ae-46a5-942a-23070a2c59ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36ec057-4474-4c90-a6ea-683089c5aae7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc86cadf-7107-4f5d-93d4-4691a8057147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b0c93c-9451-409e-a43c-f2718b91976b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6626829-0bb5-4f2b-b377-bbf7d3d0ae9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715dacef-3eef-4f1b-8dca-ac65f4618c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde46d17-f71e-4d4c-a997-5ea26784aea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec5f3ce-dced-43e5-87f3-8a8ba2fe4d28"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ec56a9c-95f9-4658-a703-3b87ff0c0653",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8d361f5-1007-461b-9b99-e1f81b67ba65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d984f12a-3411-4596-9d2b-964a53aed6bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ab04360-1d7c-439b-bda4-6c8163ee30e3"
                    }
                  }
                ]
              },
              {
                "id": "9e537865-8c4a-45c9-a59f-2a441f8d97ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9a4f206-590c-4497-b2aa-443aa190e6d4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499aa488-feef-467e-9a8d-b9c513bb5bd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5b7d2461-d69d-4775-9021-f0aab3eff3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27709432-ed9f-4954-a8d5-36f5fc62a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d3304ae-9e07-4da3-862a-e3d7ce08b314"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0658db26-d020-4ba7-ad04-5b6e2b78b5b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef8fef3-ddb6-4168-87aa-109919223374"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb131719-5e73-4e8f-9653-96b871ae8793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecae5f76-0daf-4413-aaed-d9a661e456aa"
                    }
                  }
                ]
              },
              {
                "id": "3b84919f-f2ab-46ed-a847-8fd612d98dad",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3c35bfd9-5ae0-490c-bbf4-2e9f9e6ccaf4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88abd0a-6fc8-41b2-869f-b08364426b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "47737330-13bc-4a80-8434-0bc3623beaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc505c2-aa6f-472e-a758-ce39a4771fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954fc7f7-4d63-4a06-b677-b3607c32da28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a59e1e13-bd23-414d-97cd-9966bbc261f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0913889d-c2dc-4ed3-bcfd-9e78b452f435",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "809abe28-138c-4932-8f2f-6fc69fd14ad9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8ff41eed-1ab4-48af-89b9-2faeb0207480"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "793c8ca9-086e-4f5d-97eb-0a1f11ff78ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bee2653-3ee3-4a7e-b9bb-dd608909991f"
                    }
                  }
                ]
              },
              {
                "id": "84869336-0bb7-4ffc-9888-ad72842f364a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4de60fd-06e1-4465-850e-f17e0a7fe41d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e27e3aa-68af-4fd4-9333-a9c3a847e7c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5fafec6-f6a3-4cd6-a399-116897eefaee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caaf3943-01e2-42ce-90cc-e943e3315f62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3acfb9b-fbad-4601-8acd-4faac4349d83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a78c2cc7-cd19-4a50-84a5-68ae8238b2f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8868b091-4e84-439e-8c8d-e661645a894e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c9e8ff7-40b4-4f29-ab8f-1858369a9462"
            }
          }
        ]
      },
      {
        "id": "7f912623-895c-47d2-9bb5-0364efe3c8a2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c2c7dc24-2fff-4604-80f6-7667d01fb522",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46ab8b88-c790-422b-9ed2-6288500e1df8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a02af6e-a127-40f4-9b14-1a972c39240e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15448e8f-e51e-4fa2-84b6-148d14d01eda",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fc8320f5-46e7-4283-89c2-4cd733bc9261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4609396a-03ca-49b6-9691-343985f26d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cd824b2-7fdc-46b4-ac42-ee79eb77516c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83283293-9738-4dc7-b034-fd06431bf41f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0bb256a-7173-4517-a757-d3c6791a3d40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c2208ee-15b7-4dcb-9c0f-e6c7da864620",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2129d5bb-4a7b-4060-a482-d2fad51e767f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0009dc32-3354-4657-9ae9-2e2bfe0a9eb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8f78e6d5-8248-44dd-9d8a-b9fffe5b3286"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2430f284-97bb-42bc-806f-fb3f67414264",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6de84a2-427b-462c-b1b9-f681f772f211"
            }
          }
        ]
      },
      {
        "id": "2a9f486b-c760-444a-b371-aaa6212f1f97",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b5004a90-2cf9-46d0-9909-fa2280cea098",
            "name": "Negative Testing",
            "item": [
              {
                "id": "215e24c1-c95e-44e1-9048-25051c8ac123",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d17db5d0-7966-478f-b95e-6e24f18eda7e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf72a9e8-c54d-4635-91e8-ce60064f347e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4874240-e704-4534-8c43-d3234f7bdc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85de0207-8fe1-4891-972a-84e1a5f1ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f50441ad-aa5e-4010-bbca-f7aee82513f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5106a4de-af7b-43de-bd6b-f3a597ad7ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36ba0b28-349d-4939-8c0a-aa931ecdd115"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab42931d-0717-4a48-bf0e-0420603504ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc187196-48f4-49ee-953c-7bb006e996ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "840f065d-4447-4fbd-bb8a-226f1137d72d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d0422b9-300c-4c17-afb1-cd34e91941ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "754cb650-8e89-41e8-bf52-92db42efd530",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8eb9e03a-301d-4fa5-b089-b3858cf0bd6b"
            }
          }
        ]
      },
      {
        "id": "bccdcfa2-7c04-4b0c-a6f0-81fe3084acbf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "836b0d8a-5781-4c90-95d6-c8a9578becf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca2ad878-8147-4a28-959d-a9e4d2f65a37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89440910-3bc6-495c-9d24-e473af5feac0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1444fd57-7c94-417e-bcaf-3108789de315",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f07f89ef-6c37-447e-8ea1-d58853d115ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ab75a3-61a8-4399-adbc-97cdb02ea4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd178c1e-b33b-44be-8714-c48e87fef5a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8db4593-a4b9-455e-8371-56daac7c9923",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c022ce2-b51d-4b37-8a0a-df6b8d643624"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d34dd41-5398-4322-953d-b98bc0e67e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc602502-df01-41f6-b5d1-5972cd8aeecd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e833a771-fada-430b-bc3e-120b79854f09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "257ecc76-bdb0-4d13-addf-37ed347136f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03348f28-15a4-4bc4-a007-1513f0117dbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31a19f6f-5697-4449-b799-92fe37476b6c"
            }
          }
        ]
      },
      {
        "id": "e62db24a-00bc-425e-a45b-95b4b79d0333",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "450676f0-c8ce-4ee8-a257-0362fe30066b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "269f6dde-7c10-4bd7-a7da-a89f8824be0b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "27dc1550-4a70-4bd8-8a40-641e61a22978",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dcbeee4-bdc8-433e-ba47-221d4de4674d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91eb0e45-be26-4149-be6c-5f28c8a9237b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.894366197183096,
      "responseMin": 3,
      "responseMax": 449,
      "responseSd": 35.52398668832224,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693960348958,
      "completed": 1693960362906
    },
    "executions": [
      {
        "id": "9bf66fa4-02a6-4b5d-b70b-b57b65ef4927",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81cc9a8a-41c6-44e5-8c0a-5f2155b791a9",
          "httpRequestId": "9f13f573-9439-4bea-a669-67d1597fc147"
        },
        "item": {
          "id": "9bf66fa4-02a6-4b5d-b70b-b57b65ef4927",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0d633190-3809-4e6b-aedc-d559e789a028",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "09ab6d0f-d9bf-421f-a110-a0beed542dce",
        "cursor": {
          "ref": "70b2937d-754c-4887-ac7d-ab850723415d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dfcca05e-c465-4cfe-adb1-2866de00550b"
        },
        "item": {
          "id": "09ab6d0f-d9bf-421f-a110-a0beed542dce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bffa281e-0aa9-47f6-8895-a364e362be0b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "64bae6d1-d2c0-4d13-afb4-36f0e53e64d3",
        "cursor": {
          "ref": "af5e9e4e-9f78-44ea-a881-6f6e03508b76",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b623c41c-28bb-4cbe-ac57-21d2697e5bc3"
        },
        "item": {
          "id": "64bae6d1-d2c0-4d13-afb4-36f0e53e64d3",
          "name": "did_json"
        },
        "response": {
          "id": "782297f6-004a-403a-8b93-de1999b365b3",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f366a7-afc7-4c57-a2ef-e67ee930ed7f",
        "cursor": {
          "ref": "317b9132-44c4-405e-bd69-93da08e9dd52",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fa49210-3cea-4345-811c-76eba27c567f"
        },
        "item": {
          "id": "68f366a7-afc7-4c57-a2ef-e67ee930ed7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "18a0f19d-7638-4728-95e7-f33f5b6804a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f366a7-afc7-4c57-a2ef-e67ee930ed7f",
        "cursor": {
          "ref": "317b9132-44c4-405e-bd69-93da08e9dd52",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fa49210-3cea-4345-811c-76eba27c567f"
        },
        "item": {
          "id": "68f366a7-afc7-4c57-a2ef-e67ee930ed7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "18a0f19d-7638-4728-95e7-f33f5b6804a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7891d-a955-4b51-8f1e-1a8fac85b9a2",
        "cursor": {
          "ref": "75e97464-896f-4b27-b503-574ca94e5310",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bb21f967-d497-4e2b-8c6d-702f8608a0a7"
        },
        "item": {
          "id": "17c7891d-a955-4b51-8f1e-1a8fac85b9a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "704e4af2-dc1c-4718-9aa1-14593c72501b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cf2d4b-c63e-448d-aca8-c1a79b523a3b",
        "cursor": {
          "ref": "bb57d1ba-bd33-497c-a97e-019dbd6203af",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e707506c-1a86-418e-9340-cf405e31b232"
        },
        "item": {
          "id": "c7cf2d4b-c63e-448d-aca8-c1a79b523a3b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e8ab3b3c-299a-4898-ae0f-053049228a26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b752cae2-56aa-469a-8be0-e099e4e5c6e0",
        "cursor": {
          "ref": "78f0f3db-041f-4d58-974d-563e90b1fa44",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a8f5b6c-5aa2-4a14-bf49-07d62d8eeb5c"
        },
        "item": {
          "id": "b752cae2-56aa-469a-8be0-e099e4e5c6e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0ae0eb41-f01e-46b9-97f7-9c42b4c21629",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3795f8-2b5f-41d4-b7df-388b7cab0bb8",
        "cursor": {
          "ref": "785ca05e-60d5-44f8-90a3-fc2316ea01e3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "40a48f27-3558-43d9-b93c-2c6882aa5aac"
        },
        "item": {
          "id": "0b3795f8-2b5f-41d4-b7df-388b7cab0bb8",
          "name": "identifiers"
        },
        "response": {
          "id": "53a37e9c-0eee-4a24-a8a9-ee4d0a1aa1da",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90d971f-db40-441f-8f2a-f86c4b42d1d9",
        "cursor": {
          "ref": "7f6cfc23-8638-42cf-9a13-13e5b67371cc",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "57c1bc1b-bb8b-4f04-9892-c84757ea2ee4"
        },
        "item": {
          "id": "e90d971f-db40-441f-8f2a-f86c4b42d1d9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "82394c96-a5c0-4477-99a5-e52d283f58dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60886e56-af31-4dc0-905c-30a819f4e15a",
        "cursor": {
          "ref": "2d29c6be-ccda-469f-996f-2138cb319e47",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e1ee343f-fcc8-43ce-9b3f-bb7a7c2ae19a"
        },
        "item": {
          "id": "60886e56-af31-4dc0-905c-30a819f4e15a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f33a72e5-cafd-42b1-993c-ee3c9be88667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20898f2d-4f9a-48c9-b6e5-be0929a09432",
        "cursor": {
          "ref": "428a8e62-9727-4bf7-af64-d38e93f20eb2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6b90af3e-b188-4646-ad1e-ebd871590a69"
        },
        "item": {
          "id": "20898f2d-4f9a-48c9-b6e5-be0929a09432",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "46872188-9d24-4a39-b1a6-2af134cb7f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1712bcf-0304-4da2-b344-acbcb68eadcf",
        "cursor": {
          "ref": "91096288-f64b-4d73-865b-ea231e4f94b8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9808a5c2-f997-42c4-8136-07efc8281151"
        },
        "item": {
          "id": "c1712bcf-0304-4da2-b344-acbcb68eadcf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9d4c49bd-37c0-4740-9097-7f1dd5217fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536caf58-5331-4850-bc88-198d2e92f795",
        "cursor": {
          "ref": "f1fc8e38-7f98-415f-aed4-1293420eb7ce",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "540dafa4-f17a-4f18-99a4-457defc31fca"
        },
        "item": {
          "id": "536caf58-5331-4850-bc88-198d2e92f795",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eba85961-0a95-4d64-a1d9-22b97692943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5db7c4-e138-4acd-b2b9-7ab83f1098c8",
        "cursor": {
          "ref": "e1ccc5f0-3b87-4845-92f0-03b1ccab99b4",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aeae91d6-acfe-4102-9a84-12f72979896a"
        },
        "item": {
          "id": "1d5db7c4-e138-4acd-b2b9-7ab83f1098c8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9286c92e-53b3-4a21-8b82-b9ec4a40ae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89504d7-6852-4e73-9967-04033d15e177",
        "cursor": {
          "ref": "9c001f57-7837-40e2-98b5-0e26fe8cc083",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "09b5939e-4b14-4a94-b66f-4c349e99c709"
        },
        "item": {
          "id": "f89504d7-6852-4e73-9967-04033d15e177",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4797f531-5dcf-4c1c-bef2-34c4eca83850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2eb05b-3ec1-446b-902d-f558b2ce0cb3",
        "cursor": {
          "ref": "20b511f2-c444-410b-92a6-e71090986c0c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "38e77e3a-83e2-4fcd-9a50-59b3e229605e"
        },
        "item": {
          "id": "9d2eb05b-3ec1-446b-902d-f558b2ce0cb3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "809621b3-21a8-42ec-a2ba-b9302d6671df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9798be50-926a-4cc5-8eea-dc4cef713ee2",
        "cursor": {
          "ref": "cf31e2d3-7a7b-4569-8338-3a3ed0774621",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "78811690-05bb-4427-ad6f-4f9f2f71caec"
        },
        "item": {
          "id": "9798be50-926a-4cc5-8eea-dc4cef713ee2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9db223c0-80d2-4c21-a9dd-b904158ebf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bb384f-0546-4fc3-b630-d1c4b8c54cff",
        "cursor": {
          "ref": "604e7100-0718-435c-8cd9-a61a4635fae1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "978db29b-17b0-4eb8-9237-e1d243883499"
        },
        "item": {
          "id": "d3bb384f-0546-4fc3-b630-d1c4b8c54cff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7674ca8b-3f8a-4a44-a3ee-934109bb6b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd89e04-1728-44dd-9200-f2eec0599ddd",
        "cursor": {
          "ref": "d711d1b9-ad44-4d8e-99a1-87fd5a67f5d9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d7792b5e-8531-46a8-971e-bb3ea7daf351"
        },
        "item": {
          "id": "efd89e04-1728-44dd-9200-f2eec0599ddd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "37501a25-4e7c-4a56-b003-c5d6392e2d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f6d5d5-a3ee-4dd0-b03a-df876429e95f",
        "cursor": {
          "ref": "93fc2caf-0d53-4b8b-9442-cbaeec7b3a4e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a21736a2-386c-4a2f-ba73-4efce9dcd88c"
        },
        "item": {
          "id": "31f6d5d5-a3ee-4dd0-b03a-df876429e95f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "420b3dee-0b4d-4805-859a-d09d0d71e918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66e7475-28af-4369-af13-804359f921df",
        "cursor": {
          "ref": "f7970d99-d4a5-48d1-99d4-f8385e5817ab",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "30d588cb-1c1b-4ecb-b0fd-6e84d1ecefb9"
        },
        "item": {
          "id": "e66e7475-28af-4369-af13-804359f921df",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "92e2354a-88fd-489d-8d1a-c0fe1dce6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449c46d7-f41a-42cd-9475-58123143733d",
        "cursor": {
          "ref": "545d2dad-60aa-4513-92f0-07793cc46140",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea793e32-0c30-4adb-82e9-1f41e78cb2a8"
        },
        "item": {
          "id": "449c46d7-f41a-42cd-9475-58123143733d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "074e4a3b-7bbb-441f-8948-053ecc6e984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24dd8da-e3ca-4d99-a71b-bd11aebe2c20",
        "cursor": {
          "ref": "353b183c-c859-49b3-b583-a20ad59dabea",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f728e90f-0623-4eca-b029-dfec2ee95947"
        },
        "item": {
          "id": "b24dd8da-e3ca-4d99-a71b-bd11aebe2c20",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d2139ea7-8bd5-4db6-ac36-15fcc8518abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14c4797-daac-4d42-b5b1-3bf76e83782d",
        "cursor": {
          "ref": "9f29d88c-cd75-4586-aefc-1416a9805fd6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f4989e0e-7548-42ef-8823-887313cb2eff"
        },
        "item": {
          "id": "a14c4797-daac-4d42-b5b1-3bf76e83782d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "60e94592-77a1-419c-bb00-5c4483766c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af44861-6239-4bdd-a42e-997059839051",
        "cursor": {
          "ref": "0089dfd8-1f74-4eb7-861b-612d247fe029",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18c1df71-5542-4823-b091-5e071a7ca72d"
        },
        "item": {
          "id": "6af44861-6239-4bdd-a42e-997059839051",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d13e1562-d6a4-4bab-8286-f56264862b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f88a1cb-4d68-414c-8a70-ccade13187d3",
        "cursor": {
          "ref": "8778d2e6-5b5b-430a-a279-e6e0c6929ed1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a111aa84-446f-482f-90bf-95fa48c60268"
        },
        "item": {
          "id": "5f88a1cb-4d68-414c-8a70-ccade13187d3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a31666a4-7190-4c73-a890-31f27fba933f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc8b72e-81a9-485f-9180-ad64e108b213",
        "cursor": {
          "ref": "77288610-5b1e-4a12-b73f-8d9fa0b77dd5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2c394013-bef7-4fba-a07a-837641ff7c49"
        },
        "item": {
          "id": "5fc8b72e-81a9-485f-9180-ad64e108b213",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "617dabe0-e051-44df-b223-48bc975195f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbea3a3e-f310-4d50-8913-e7cfa2927745",
        "cursor": {
          "ref": "6a5e544a-8d31-4f0a-9ded-3a0f564ee7be",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "27351e7a-a0dc-4899-816d-8f4979195d61"
        },
        "item": {
          "id": "cbea3a3e-f310-4d50-8913-e7cfa2927745",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d7924fed-2928-4fe6-872d-fd83f3edff27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3cdbec-d578-4faa-bf37-7e016b0ca3c8",
        "cursor": {
          "ref": "625cca60-61cb-4d50-8c12-6def9bb4cacc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0bb6435f-fb36-4125-8f06-340feff3d0e8"
        },
        "item": {
          "id": "1f3cdbec-d578-4faa-bf37-7e016b0ca3c8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b1d45ad7-0f00-46fc-9fd0-a6f8c2cc2eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cedca1e-62ad-4144-815a-bb35ea3a9b04",
        "cursor": {
          "ref": "9149191c-1fe0-4013-923f-41df2fd4dc9a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fc2cd0e2-0ed9-4efa-b84a-7f11fe031fb2"
        },
        "item": {
          "id": "6cedca1e-62ad-4144-815a-bb35ea3a9b04",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "94efe36a-c794-4b4e-9657-3a12e2bf991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f11767-1c5a-43ae-8c97-52610f8d813b",
        "cursor": {
          "ref": "97442230-b90b-4c8e-bc9c-c317c370156c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "46ff9b3e-1ea7-4999-a651-0a2b3a674163"
        },
        "item": {
          "id": "42f11767-1c5a-43ae-8c97-52610f8d813b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8e09898a-766f-4731-8ae4-4c41ace8f071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c96959-6408-42a5-b8a3-e078bd058d3d",
        "cursor": {
          "ref": "9c1670f3-2c89-4ed6-b3ff-50813009b28a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6eea041a-38e3-4827-9197-5ecd50fc9e61"
        },
        "item": {
          "id": "15c96959-6408-42a5-b8a3-e078bd058d3d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "92844b63-1ef0-4d32-b908-cd752042ed82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f49f36-7e53-4d80-b33e-7d0606e8c8a7",
        "cursor": {
          "ref": "62796377-ba24-4b0c-aaf7-d3c2cfcc38d2",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29d6fe3f-0fd8-44c3-abaa-2d495df38dcb"
        },
        "item": {
          "id": "d6f49f36-7e53-4d80-b33e-7d0606e8c8a7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d945b14a-e233-4d3e-8b99-448555a75073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636ccd42-71b6-416e-bbc3-cadfefe763a5",
        "cursor": {
          "ref": "a46237c6-ef24-446c-b2e8-f289df42c7f0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3ed3e150-ff73-41ec-882f-468546ebdf2a"
        },
        "item": {
          "id": "636ccd42-71b6-416e-bbc3-cadfefe763a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26d6565b-d3e8-4d01-bd99-dd638c8fe8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e564577-9f6e-430c-8fc3-39548323bf0e",
        "cursor": {
          "ref": "58eae027-18f9-4d4f-b711-6f243c75bb49",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7b2a38ce-9c79-4190-a801-824bbe922077"
        },
        "item": {
          "id": "0e564577-9f6e-430c-8fc3-39548323bf0e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e021f8ea-19d9-4389-b0ec-9fca01cabed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74266177-5ed4-441b-a8fd-d28a61943bc9",
        "cursor": {
          "ref": "a656ffe4-4808-4cfd-8bb9-97838956d7b8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5d63742b-9181-4b74-8063-5e54f12c9a5f"
        },
        "item": {
          "id": "74266177-5ed4-441b-a8fd-d28a61943bc9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "17dc9c8b-61f3-41c4-b06c-6b1f1be0cc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebc4bcd-8e94-48cb-8379-7a59d7cee769",
        "cursor": {
          "ref": "e6539985-c7c8-4098-adb8-8352b5ad3899",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aa4f7ced-5d90-4542-82d3-1475f8e96586"
        },
        "item": {
          "id": "4ebc4bcd-8e94-48cb-8379-7a59d7cee769",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c75889b7-64ca-4662-ac91-8cc9f7e5deb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353c86aa-b2b4-45a5-aec6-9c8a644be346",
        "cursor": {
          "ref": "a9af995f-2cf2-421c-a6b2-1aed4af9455a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b83ba4a-124a-4db3-aa1a-67d8e7e90fea"
        },
        "item": {
          "id": "353c86aa-b2b4-45a5-aec6-9c8a644be346",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "780c70d0-70b3-4665-b7c4-88e83d0c121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c272a5-cbb5-4795-bf2f-d2139b4dfad5",
        "cursor": {
          "ref": "add4466f-e40b-4dea-a36d-01c8f508bd0c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "99054f63-5b64-4b2b-aa14-b452c50f6028"
        },
        "item": {
          "id": "46c272a5-cbb5-4795-bf2f-d2139b4dfad5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d0f01191-9801-4fc2-ab38-54a11f126e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04a6acc-56cf-4e91-bcb5-cfe710283ec4",
        "cursor": {
          "ref": "a254bec4-58b3-4794-9848-c3af2237bba9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1d6bc8ec-3dd0-48b0-b604-8f70929dd02c"
        },
        "item": {
          "id": "e04a6acc-56cf-4e91-bcb5-cfe710283ec4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7f182f4a-1f69-4dee-b056-1c379aedaa00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c766dee-7463-4102-a373-2b97ee77636c",
        "cursor": {
          "ref": "a6126b5e-9bfc-4117-86c3-5d5b731d5300",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0f25f0f0-2079-4ae1-af0f-6980772ac550"
        },
        "item": {
          "id": "3c766dee-7463-4102-a373-2b97ee77636c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e8661e4c-bd48-469e-bbc4-d6987a0ceae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cefd14c-d6fb-461e-a408-fc755675acf1",
        "cursor": {
          "ref": "5ca54ab5-c95e-482a-8c10-9fac3d111308",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c29547cf-a385-46fb-ba02-2d63e6d79f4f"
        },
        "item": {
          "id": "9cefd14c-d6fb-461e-a408-fc755675acf1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bd001fcb-81d7-418d-b479-f295d71c04f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b176d89e-600e-4851-b87c-2460fda9f9b0",
        "cursor": {
          "ref": "86123e2f-49ad-4d95-8f3c-f98eb70f9a54",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e3099474-3d72-4f50-a616-6301b299018d"
        },
        "item": {
          "id": "b176d89e-600e-4851-b87c-2460fda9f9b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "649f57e8-5592-4b80-a8a0-3f345e773101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fcff2d-71d4-4e43-a00e-908c07adc0e6",
        "cursor": {
          "ref": "29ab1a43-81e1-4df0-86d6-5bb696a2cad3",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "294afc96-1f43-4e74-9c7e-e0c4b609fc37"
        },
        "item": {
          "id": "26fcff2d-71d4-4e43-a00e-908c07adc0e6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "04b73a3f-16d0-40ab-907b-9355bd91a7f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a3d85-5830-44f7-9eab-6c5ffc1f1645",
        "cursor": {
          "ref": "138dcbd5-f0fe-4abf-9766-e565b96bdca8",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7209bf1a-4ccc-437f-9eec-385f45abf20f"
        },
        "item": {
          "id": "129a3d85-5830-44f7-9eab-6c5ffc1f1645",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ea8b2c98-1b3b-4571-bdfa-eed5fac47242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4f7ade-fc33-4b8c-a8a9-3dedebc2faa9",
        "cursor": {
          "ref": "6f2ef8cf-81c4-4f3d-a3ef-e85a4dd09e35",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ab1cf434-f162-4db2-9245-0cc74ac1bdd0"
        },
        "item": {
          "id": "2c4f7ade-fc33-4b8c-a8a9-3dedebc2faa9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "36cb35bf-8f43-4184-8409-2cc81bfdc826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff530089-6df6-4b10-ab50-b773aa6ee9f6",
        "cursor": {
          "ref": "a0228c55-faee-4720-9462-3ddc0242dbfa",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ddbcdeaf-91fb-4f94-bd46-6c4a0abcc9bf"
        },
        "item": {
          "id": "ff530089-6df6-4b10-ab50-b773aa6ee9f6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5dacd95f-61ea-4a89-b4bb-f26ceca4f948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb39d8c-79d2-433a-a484-32250bc1f6e0",
        "cursor": {
          "ref": "5e33a4a0-37a2-4996-b0d6-94674b8d6088",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "345146bc-98a3-46c3-9eb9-ca83a43316c9"
        },
        "item": {
          "id": "ffb39d8c-79d2-433a-a484-32250bc1f6e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3020e00a-06fc-4772-8570-9c9fe7309fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91016ba-d3eb-40f0-a553-ca564cc7a687",
        "cursor": {
          "ref": "e57008e0-7658-4876-8591-a63236308a00",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b16f1422-a2fb-41b8-91d2-556b12cd7399"
        },
        "item": {
          "id": "f91016ba-d3eb-40f0-a553-ca564cc7a687",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f999a176-fa39-4e79-a999-da365ef77aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a948cf7a-cc26-4196-96f5-57d7c4723b1c",
        "cursor": {
          "ref": "a3ee6b6e-320e-4663-8cc3-849f23c2aac5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0ed56634-866f-41c4-b65e-ae98f46a4777"
        },
        "item": {
          "id": "a948cf7a-cc26-4196-96f5-57d7c4723b1c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7aa967c2-8d3c-4762-8125-4424753095ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607c653f-83e7-4da2-823f-37c914d93d72",
        "cursor": {
          "ref": "52999665-e16e-45e4-a05c-c59fb62a4fd7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d850d5e5-94c9-422e-99c7-dbb07ac61209"
        },
        "item": {
          "id": "607c653f-83e7-4da2-823f-37c914d93d72",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f1109435-e60e-45de-b01b-037d20a7ebd8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae64eb3-80d5-46f6-ad6b-62cab33c3c02",
        "cursor": {
          "ref": "5e9e49e4-5580-467f-89d1-97c13eed9fff",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "628cf38b-c607-43cb-a8e5-604db9da63b9"
        },
        "item": {
          "id": "0ae64eb3-80d5-46f6-ad6b-62cab33c3c02",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2c9edf48-7f3c-4ffa-bbb9-18dabcb672ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb66714-73a2-4fbe-bca6-347809f445ff",
        "cursor": {
          "ref": "5af7ca41-4ede-46cb-80bd-6cc46e01a92a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cb1b0554-45c3-4252-9264-7cf61d47ad68"
        },
        "item": {
          "id": "fdb66714-73a2-4fbe-bca6-347809f445ff",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ebaff69-b6e3-4760-8c51-b7a93e9d350d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad54923-cc3b-47d0-a7dc-91eae96ba51c",
        "cursor": {
          "ref": "01a98368-2dba-4f3a-aecb-0503fb575ac9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8e24c5be-62cb-4370-ac0e-33dd112da476"
        },
        "item": {
          "id": "2ad54923-cc3b-47d0-a7dc-91eae96ba51c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eef649dc-1d2d-4d7b-85bf-55242c91956e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fe42c2-3c68-49c2-9204-17536a07a5dd",
        "cursor": {
          "ref": "0f1496d9-e089-4900-a3cb-6fd842e41410",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "063c69c5-d4fb-43cf-b279-d82d2f23118e"
        },
        "item": {
          "id": "63fe42c2-3c68-49c2-9204-17536a07a5dd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2e7003c0-ce5d-441d-86de-090ce857210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d236a193-0784-4f9d-8313-57f2ca2699b1",
        "cursor": {
          "ref": "524357f8-1778-44f4-805d-4efd9318866b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8888da4b-8c89-4882-b876-38a3d9a5f957"
        },
        "item": {
          "id": "d236a193-0784-4f9d-8313-57f2ca2699b1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36000956-3b40-4891-b795-18330db39399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cdacc1-7ad9-45c0-8d96-bc024b0dd6dd",
        "cursor": {
          "ref": "a1136b8f-5826-4acd-b188-7c9f4b1ebb26",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7af8a51b-2677-438e-970d-ef7e9fda1eb4"
        },
        "item": {
          "id": "c9cdacc1-7ad9-45c0-8d96-bc024b0dd6dd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2cd3381b-a8dc-4b18-a045-49b562e0526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df1b828-e9d4-4ec0-9fd8-52269271134b",
        "cursor": {
          "ref": "92d58364-705f-4738-bcc7-11aae5bcf8af",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "711701c5-845f-444f-930b-d73cdd504b77"
        },
        "item": {
          "id": "7df1b828-e9d4-4ec0-9fd8-52269271134b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "957601d9-e731-40e1-91e3-4ff26bb9d201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8654a63d-2924-49a8-9f6e-8ce2457acf3d",
        "cursor": {
          "ref": "4ef2c07e-6363-4b50-9b22-5276d1c1ef42",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d34f9c42-b365-482c-8d52-dddcc323e06b"
        },
        "item": {
          "id": "8654a63d-2924-49a8-9f6e-8ce2457acf3d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8744b8e4-654e-4ac5-b0eb-71cfe30370c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891da5f9-734e-40c0-84e2-53aca740ac0d",
        "cursor": {
          "ref": "3adc8142-728c-484b-9a96-e8d3acfffd5d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "801699b4-ca79-43b9-9a13-0145118c94e7"
        },
        "item": {
          "id": "891da5f9-734e-40c0-84e2-53aca740ac0d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "683e1ae8-6b6e-47f2-b32d-3adfc4a01e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6574d1-56e9-4984-9863-982107ff6919",
        "cursor": {
          "ref": "c61740c5-a7e0-4d49-91e4-a2d8d648935e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a9bef88f-0da4-4f18-a214-01150aa33a40"
        },
        "item": {
          "id": "dc6574d1-56e9-4984-9863-982107ff6919",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1cadb79e-b32e-4c09-990a-62042b72c7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f10ad-4ea4-4d30-ad72-e1c4ba5b1a68",
        "cursor": {
          "ref": "dee666ac-145e-4be5-980c-b80cad7b5994",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aae71350-9700-4ad7-b96d-f3c095f1099a"
        },
        "item": {
          "id": "5f9f10ad-4ea4-4d30-ad72-e1c4ba5b1a68",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "acdd5ffe-23a5-4e9c-9b6a-bd314493aa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4578b6-6268-40e0-a706-f6e9da8752d4",
        "cursor": {
          "ref": "b83cb7d6-0537-4410-9941-12d0fb567626",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cf85d6e6-51f6-455b-9281-c7816bbc4796"
        },
        "item": {
          "id": "4b4578b6-6268-40e0-a706-f6e9da8752d4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0d7e3f91-fcfd-4c8c-8651-b1fef9d2acc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a1b998-1b45-4b21-8e0e-865b5ebdcbae",
        "cursor": {
          "ref": "5b70b7b5-b312-4826-9fd0-53786d47e1bf",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "54f4aa00-9557-4436-a302-4317f79ffd01"
        },
        "item": {
          "id": "40a1b998-1b45-4b21-8e0e-865b5ebdcbae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "406a5c9f-e333-4494-a6cd-a2da98748747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf67a9-a610-4366-a7b4-502c714905ed",
        "cursor": {
          "ref": "c6eff278-40eb-45f0-b523-3986161444ea",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "682e47f7-da9e-4c4d-8af3-52b336805259"
        },
        "item": {
          "id": "91bf67a9-a610-4366-a7b4-502c714905ed",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a087a9bf-6f4e-469f-b0c0-c6ec68b80116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4dce75-0b6e-4469-8e97-8b3b04a0afc6",
        "cursor": {
          "ref": "18a99a68-ec77-4834-8314-83114d2a28ac",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f789edf7-1f69-4949-bee5-4791f5cf6b0e"
        },
        "item": {
          "id": "cb4dce75-0b6e-4469-8e97-8b3b04a0afc6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f7c04ef9-ccdc-4650-976d-24e3dadf12b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f999dc3c-7559-4495-adf5-f258bec01990",
        "cursor": {
          "ref": "9d52b8f9-17d7-4662-8738-4404caf5ffa4",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6a124719-ba8c-4698-806e-57dc9775d626"
        },
        "item": {
          "id": "f999dc3c-7559-4495-adf5-f258bec01990",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7fc060cf-3d3b-4fa8-9002-6d28bafcb6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce74b24-cfde-4111-910f-dab27ceba7a1",
        "cursor": {
          "ref": "cb3ca6cf-f675-4564-b5f4-b0a213d7eeaf",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6a4c6750-9311-4d71-a711-2e7a46b2b305"
        },
        "item": {
          "id": "5ce74b24-cfde-4111-910f-dab27ceba7a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a15a334e-201b-465f-8d11-fb39ffc19063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d264c857-320e-4271-8b75-a2543d70eb3d",
        "cursor": {
          "ref": "8460ff9f-7b08-486d-9c30-e1f912504871",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0b934047-6fa3-4664-a29d-9812d71485e7"
        },
        "item": {
          "id": "d264c857-320e-4271-8b75-a2543d70eb3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "49aabfeb-dd36-4687-b132-ef5f01c87a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45bf99d-4337-4c68-9eb9-d8442d2289fa",
        "cursor": {
          "ref": "4fe66119-396f-4c5a-b62a-b67bce51738b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7170d382-168f-4219-b069-d8c6caf4a1e0"
        },
        "item": {
          "id": "a45bf99d-4337-4c68-9eb9-d8442d2289fa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ca7ce995-a8cf-4da1-aff4-eff80e599fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08f91b3-b174-4b07-bbe6-c80a73755e72",
        "cursor": {
          "ref": "cf0f31c9-613b-4e2d-9667-c6a875f3e386",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7989b7b4-9703-4067-933b-58c0e9a127ef"
        },
        "item": {
          "id": "c08f91b3-b174-4b07-bbe6-c80a73755e72",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "84310272-aaec-4e83-8631-00a3629156bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d38ad7-6fce-4485-90c7-d302bc5927cb",
        "cursor": {
          "ref": "2d651cb7-0c67-4bf4-b819-14c58f65b061",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cb4fe1b0-c5d7-4f1b-8a10-9abda0ef00b4"
        },
        "item": {
          "id": "a8d38ad7-6fce-4485-90c7-d302bc5927cb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "13e30363-5e60-47ac-b645-aa7f84521463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc937d97-c1c4-4257-a89e-fede63b043a6",
        "cursor": {
          "ref": "fab384d8-dbcf-4c01-b725-f842169c9fff",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0875f773-9e9d-4b53-8e5e-71ed102c656d"
        },
        "item": {
          "id": "cc937d97-c1c4-4257-a89e-fede63b043a6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c1ea2dd-f10f-4425-84b5-4e120fa7a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d599c1-7c87-4d76-8cda-b5f9b408a485",
        "cursor": {
          "ref": "6e1639ed-ca62-4a6f-a183-bbd82f435fb4",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "616611d2-e2ab-4b8a-97df-e2e2885a98d7"
        },
        "item": {
          "id": "33d599c1-7c87-4d76-8cda-b5f9b408a485",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "96c833dd-fc35-4aa3-afda-81ecb52d820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb05f05-353b-4acf-92e2-36d8691c1a41",
        "cursor": {
          "ref": "958347f3-2de0-46b0-ba8b-4fbc9bc61032",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3dd1cb3d-f35d-43fd-84ab-c3ecc63d06e7"
        },
        "item": {
          "id": "6bb05f05-353b-4acf-92e2-36d8691c1a41",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c9fc0a3f-7fbb-4101-ab55-61635f63d616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94d4e7d-9736-44d2-bfd4-950cfacdc6cc",
        "cursor": {
          "ref": "0f2e559f-6cf7-4bdc-bd31-9a6cb61905d2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "acd8463e-ef1b-42ce-a589-3e5c785e26fc"
        },
        "item": {
          "id": "f94d4e7d-9736-44d2-bfd4-950cfacdc6cc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2f37d5a-722c-4b28-a454-84286ba2c238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68bc0a6-b8dc-4b2a-9fd2-041c57fd50cd",
        "cursor": {
          "ref": "488dcf46-01c5-422e-9992-c261aad4c837",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "68a48e72-f1ef-4f4a-a4b0-fad2e618780c"
        },
        "item": {
          "id": "e68bc0a6-b8dc-4b2a-9fd2-041c57fd50cd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "61f745ea-4a62-464c-ad6c-247f86c6b02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18515712-3428-469b-b39d-f93a0f1a1547",
        "cursor": {
          "ref": "6232f59d-1169-413c-8dc5-82ab2a41e1fd",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f13d9630-0730-4bee-9050-b46d287842bb"
        },
        "item": {
          "id": "18515712-3428-469b-b39d-f93a0f1a1547",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bea909a6-0d9c-4628-87bf-b3495745588b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83038151-0992-4c09-8174-6ebc80d71671",
        "cursor": {
          "ref": "3b18fd36-6f6c-4f20-a6ac-06cb72478203",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f1a511d7-1dac-4cb0-89a8-978be7ae664f"
        },
        "item": {
          "id": "83038151-0992-4c09-8174-6ebc80d71671",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8edbc486-bec0-4778-b167-58ad86bbfaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8c8a1b-41db-4949-a014-1031e6387c1f",
        "cursor": {
          "ref": "50cba4a9-4f69-43b0-8fa0-63ce429dd933",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0fc9dd2d-96ae-4c00-a93d-a518f861bf1d"
        },
        "item": {
          "id": "9b8c8a1b-41db-4949-a014-1031e6387c1f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6251b44e-acc1-42b1-a444-3a4201f51521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54fcb39-e7ad-482f-b9a0-942d3680d8ab",
        "cursor": {
          "ref": "e144242c-4ed5-444b-9be0-9ce546534995",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dfbfb890-02d9-4f13-ada5-5a59ca60aa57"
        },
        "item": {
          "id": "b54fcb39-e7ad-482f-b9a0-942d3680d8ab",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fe8cee30-66f5-4848-b199-ee5467a19cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610acbdf-9c7a-4cd7-ad66-f93bbb42640c",
        "cursor": {
          "ref": "53cb12a2-3353-4e19-8059-034cfa0c3211",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "97b7f1e2-f7ea-4341-83f8-e6e1a8508f7b"
        },
        "item": {
          "id": "610acbdf-9c7a-4cd7-ad66-f93bbb42640c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0fef89a7-69c1-41b8-b521-b41b340a05d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe86fb4-5cae-414d-aeb9-cb48b8dae209",
        "cursor": {
          "ref": "a299be9c-dc46-4c30-98e7-7d3d30d18d38",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b4cca193-b48a-4d61-ab16-2f3e59658f8f"
        },
        "item": {
          "id": "1fe86fb4-5cae-414d-aeb9-cb48b8dae209",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6fce9860-3ebf-44c8-9704-a8d674bb0fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99633b68-a60a-4930-b46f-4b5a4215166d",
        "cursor": {
          "ref": "bdf76bbe-2532-4eed-a56c-f69af2838fa4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9d05df7c-7feb-4f72-9dbb-f26ec876e3fb"
        },
        "item": {
          "id": "99633b68-a60a-4930-b46f-4b5a4215166d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "33978ff5-7e3a-426c-a141-906a01c75d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596a5bdc-b9c0-4b3a-a189-2e8982fef9fb",
        "cursor": {
          "ref": "81608d06-463c-4537-9dd5-f01fa16ea415",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "38b2038a-e4f8-4af6-9acd-f9282397ec1c"
        },
        "item": {
          "id": "596a5bdc-b9c0-4b3a-a189-2e8982fef9fb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d220ff74-2e33-40db-b816-5548da0e085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687bd987-691e-474f-b235-aae19ce2b096",
        "cursor": {
          "ref": "d318eb7d-44e3-478b-b428-38cf9038172e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5e0d1ee0-1202-4e6b-8b3d-0470e67a52c4"
        },
        "item": {
          "id": "687bd987-691e-474f-b235-aae19ce2b096",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a404f0de-6caa-43dc-a91c-f3bbb1befd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c144fa-6c67-4afe-b945-b2744cbd25cb",
        "cursor": {
          "ref": "32e467c0-e4c9-4e49-b807-206cf0518a76",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "93a4d314-a68b-4428-9266-3030944b89d0"
        },
        "item": {
          "id": "47c144fa-6c67-4afe-b945-b2744cbd25cb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "82c41cfc-8779-4df1-b067-f925da288b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1eaa71-2ed6-4df4-b814-2aab0d4b22a2",
        "cursor": {
          "ref": "2d6afcb2-8291-4ab4-96b5-762720370189",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e861654d-5cc2-4939-97a3-13ba79dd2849"
        },
        "item": {
          "id": "3e1eaa71-2ed6-4df4-b814-2aab0d4b22a2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "885fe758-36bd-461c-97f4-334f9e653e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1595d420-4dac-499c-bb08-7a9e2104f1fd",
        "cursor": {
          "ref": "b5d93c4d-82fa-49b6-9b5f-afa57cdfb36f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "203811c7-fc68-4f67-bed5-a04c3810bf7f"
        },
        "item": {
          "id": "1595d420-4dac-499c-bb08-7a9e2104f1fd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "303d3f6a-909e-4065-b383-1ec8ae2cb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc2dad8-f83a-42ef-894d-b1bd52e6d6e9",
        "cursor": {
          "ref": "6380ff7d-03ef-4980-8294-2621fa049a1b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7df9d239-41d3-4fd9-99ba-5f543376e0a1"
        },
        "item": {
          "id": "1bc2dad8-f83a-42ef-894d-b1bd52e6d6e9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8a87c3cc-bca3-425d-9b84-d1db5b8dffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a3c42e-355e-4a83-9a00-3c6aa62f8022",
        "cursor": {
          "ref": "213588ce-d165-4174-8d7f-901c5fa6ac45",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "574a156c-a917-4520-8aee-be4d5f9b14b6"
        },
        "item": {
          "id": "d0a3c42e-355e-4a83-9a00-3c6aa62f8022",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a757a984-0716-4d4a-a9ac-32ed0b8e6d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5abc18-4fce-473a-8d0d-5bd1e0629e6e",
        "cursor": {
          "ref": "252c0041-4951-4f54-ae85-c8bc2b8d38e3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "301a89fd-99a3-47cc-abde-a264f9db39e6"
        },
        "item": {
          "id": "ba5abc18-4fce-473a-8d0d-5bd1e0629e6e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d67b0ddf-befa-4c4f-a28b-de85e697fa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e87a4a-385f-4adf-8def-17fb99fb69d3",
        "cursor": {
          "ref": "c2eacc11-48ab-4199-b81f-6a46f44c2d3f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d0250e10-8034-461c-aac8-14ea87646449"
        },
        "item": {
          "id": "17e87a4a-385f-4adf-8def-17fb99fb69d3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5a7ad233-2c13-43b6-8c96-03041d7eb043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc335d6b-638e-4925-aab8-4cb0ba34c417",
        "cursor": {
          "ref": "f5b2a702-d677-4ff1-a4de-23218db70b5d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e1606c8-c328-456c-aa23-061be4547cd1"
        },
        "item": {
          "id": "fc335d6b-638e-4925-aab8-4cb0ba34c417",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4a6f4b0d-5080-46ec-9696-7bbf110741f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1017b322-7b3a-4d31-9afc-e2fdfd04f445",
        "cursor": {
          "ref": "75c5a724-d8c0-45f6-a2f7-e9670ac71681",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2644e3b4-e5bf-45b7-b5bf-ac73e89dfed1"
        },
        "item": {
          "id": "1017b322-7b3a-4d31-9afc-e2fdfd04f445",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fe77d38d-519e-4fd1-8e80-276546f5f3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff1ff6d-d133-41d1-9cbd-3c33f3d0fd33",
        "cursor": {
          "ref": "7a65108d-096e-492f-92bb-ed2536fd963b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "85d209d1-7aa7-4a97-b1f8-a32a57d810fa"
        },
        "item": {
          "id": "0ff1ff6d-d133-41d1-9cbd-3c33f3d0fd33",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "61330a25-f284-4a41-b0e2-5328f88defe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60da42c4-151f-4683-8935-e0adb2ae06a2",
        "cursor": {
          "ref": "6dbc62ac-d20f-4439-b9b9-6bb6866a23fc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "af088a65-fe90-4235-941c-17d5baa9cb34"
        },
        "item": {
          "id": "60da42c4-151f-4683-8935-e0adb2ae06a2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5f354595-078a-44f1-9b74-7b3c9b20aee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717cda2d-ce4d-41ee-9c04-5a832f0c0223",
        "cursor": {
          "ref": "10960f59-58d9-4ae9-bb01-bc16df18cccb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f361b44e-cb31-46ec-a9ad-cf0ed498ccd4"
        },
        "item": {
          "id": "717cda2d-ce4d-41ee-9c04-5a832f0c0223",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7df29e32-4054-4caa-98ba-cc0e254e9982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d120dbb-9dc5-4a8f-a98d-6a4fe6cd4237",
        "cursor": {
          "ref": "92263d40-1743-4b83-b586-9618cf09fc56",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "602d780d-5a71-4fd5-a073-65e8a9a1df2f"
        },
        "item": {
          "id": "6d120dbb-9dc5-4a8f-a98d-6a4fe6cd4237",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1d3d36bb-97ca-494d-b28e-aec5ee346f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c951e1-9818-4df3-a453-aa002c56f775",
        "cursor": {
          "ref": "13832318-c137-478b-8ce3-2328f7056f82",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a8e4e14c-c7df-4855-8cc2-3d79028d2470"
        },
        "item": {
          "id": "d2c951e1-9818-4df3-a453-aa002c56f775",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9939f5db-6b2e-4d62-a516-7d6047fecdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb6136-5ed5-4043-8cf4-2187f8184c07",
        "cursor": {
          "ref": "88b9e2fa-4dc2-492f-8503-ee356f5a64ec",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8ec2c845-fc6b-4c2f-b921-aa537edc0895"
        },
        "item": {
          "id": "4deb6136-5ed5-4043-8cf4-2187f8184c07",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "beae63c6-20c7-4fd0-a12c-0c540a507a2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec56a184-04e0-4dae-b6da-7f3281bb6c3a",
        "cursor": {
          "ref": "ca39b0b9-7d84-4ee8-880d-869b683bf5a2",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd7f4091-ed5c-4b72-ad4f-36fd0258540e"
        },
        "item": {
          "id": "ec56a184-04e0-4dae-b6da-7f3281bb6c3a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6b6ca0ed-7436-4d9d-afb0-111e42c0849d",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "878760ce-adaf-4ee6-9309-c3c8c6d58ce1",
        "cursor": {
          "ref": "a4ec1445-0f14-4c31-93f7-495ef7c93219",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9bdd43f4-c5eb-49dd-92a8-fea6cba5e339"
        },
        "item": {
          "id": "878760ce-adaf-4ee6-9309-c3c8c6d58ce1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d5f72bc7-7d0c-4dac-a364-10172aafebea",
          "status": "Created",
          "code": 201,
          "responseTime": 240,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7e6013-a3b1-4308-adf8-fcd6545e6b1d",
        "cursor": {
          "ref": "5541227d-2b2a-4cc9-86e2-6e8ed5623569",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1b8de98f-2bea-4a64-a3c8-08b51cb3cc86"
        },
        "item": {
          "id": "6c7e6013-a3b1-4308-adf8-fcd6545e6b1d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "45642871-66f7-49fa-97dd-d063ffa77133",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "860d4384-c581-43e3-9f1e-fd3950118975",
        "cursor": {
          "ref": "cb58cfd9-932c-450d-b8a7-14167f3507a3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e80b5ce1-1143-4f41-80a8-36b77562e5a8"
        },
        "item": {
          "id": "860d4384-c581-43e3-9f1e-fd3950118975",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "caf9423d-8afb-4e43-b190-832aea468cb7",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a70243-ad83-40af-a6fd-bfb2b09ee3d5",
        "cursor": {
          "ref": "39277462-9009-4bcc-994a-30d3c850aea8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7acaae0b-365d-4ee6-9fb7-961340627832"
        },
        "item": {
          "id": "44a70243-ad83-40af-a6fd-bfb2b09ee3d5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0b3c1167-f348-4622-9f6c-f3ba3a9ece20",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "81903afd-160b-4e0d-905a-a084ed2fd691",
        "cursor": {
          "ref": "689fce31-15c5-47a1-9dce-28ad67ae80f1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "caa40009-466d-4b54-960e-8783c181862e"
        },
        "item": {
          "id": "81903afd-160b-4e0d-905a-a084ed2fd691",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f054f5a2-fa12-4da8-b409-2f6350475d13",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6bb4a0-168d-4ccd-ba27-38f1c68dfdc8",
        "cursor": {
          "ref": "6f443ed1-3c02-4b38-a1bb-5eeeca4c23ef",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a280e15d-ba11-4395-8fad-c4b3f93030e2"
        },
        "item": {
          "id": "dc6bb4a0-168d-4ccd-ba27-38f1c68dfdc8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "63fc2372-d145-48ad-9087-c04a9d3a3a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08db2dea-44dd-47b3-be42-7c12b44d5d6e",
        "cursor": {
          "ref": "09198f7b-1174-4679-ae94-6480afe58525",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cb48ea72-aace-4320-82f3-3412c4f60844"
        },
        "item": {
          "id": "08db2dea-44dd-47b3-be42-7c12b44d5d6e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "21cc8345-b961-4ac6-b614-13ae81366500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ae9970-00eb-4546-b076-9eea136997e8",
        "cursor": {
          "ref": "586053e0-f624-4f23-b9b1-1d451eb2a2fd",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f05bbe8d-27fd-49a0-b52c-a8a93c5863a0"
        },
        "item": {
          "id": "51ae9970-00eb-4546-b076-9eea136997e8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0fc65e56-dea8-4849-9b4f-4948075d80b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483235f3-9cad-4d57-af1b-65f2513cae89",
        "cursor": {
          "ref": "71e3464a-fce7-45b8-a90a-1b977fd4cb02",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8eced325-f323-4704-806d-420006092b52"
        },
        "item": {
          "id": "483235f3-9cad-4d57-af1b-65f2513cae89",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fedeb3d6-b5d1-4cd4-9527-551129edda0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b63db4-635d-467e-a541-c6943d45f188",
        "cursor": {
          "ref": "240af0f7-ee29-43d3-ae24-3f2dc5d754aa",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3287f5df-8611-475f-8d8b-78a8c5f091aa"
        },
        "item": {
          "id": "d1b63db4-635d-467e-a541-c6943d45f188",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2ff38752-ba70-4695-8ad2-5a87205cfc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa81dba5-8f47-475e-b256-5184cb504cdf",
        "cursor": {
          "ref": "fb18d4dc-2e05-4dbd-9256-a2d8090fb01d",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ee62a7b2-02ed-4f27-9d6d-78ed2ef1135a"
        },
        "item": {
          "id": "fa81dba5-8f47-475e-b256-5184cb504cdf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8827018f-54f8-477e-826f-63eb7300c46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d639c34-f143-4306-8398-ae110c9ecc7d",
        "cursor": {
          "ref": "875f416b-9713-4750-b3d0-c4db952c70b7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3ec10c68-5585-4780-9903-43e39f33886f"
        },
        "item": {
          "id": "4d639c34-f143-4306-8398-ae110c9ecc7d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1868eb5-003e-4ba2-855c-89b4f72c5fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74151238-8442-4a2e-93d1-aa869e2a53b2",
        "cursor": {
          "ref": "20054c2d-93ac-4836-91d9-d81eacac129e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3706f6f4-c869-4ab7-9afd-8ca4699f8596"
        },
        "item": {
          "id": "74151238-8442-4a2e-93d1-aa869e2a53b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f330bd0b-83b2-413b-8d6c-90d9932a231c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056d972b-9910-4e65-99a2-28f821a395e9",
        "cursor": {
          "ref": "a0f8e468-2ac3-421d-b06b-3a0829f7e846",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5c5dd92c-381e-414f-b0d1-ff26c0e4d82e"
        },
        "item": {
          "id": "056d972b-9910-4e65-99a2-28f821a395e9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "463da2e0-38a1-48ed-90c8-f7d6d6e904ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff647b5-9ce6-45b3-9c32-08bacb604395",
        "cursor": {
          "ref": "35ce287c-518e-43dd-924b-52a9493a28ae",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13bb2391-519d-49d5-92c6-cdab50ec1e75"
        },
        "item": {
          "id": "bff647b5-9ce6-45b3-9c32-08bacb604395",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41de1eb0-e46c-4c5a-8faa-b92f5816b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aa4ffe-e3b5-4738-9ab2-d577e0eb62cb",
        "cursor": {
          "ref": "6dd6fca3-bdd6-4071-8ea8-30dcdef6183c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "50131652-68ac-4118-972c-eef84d5d9b00"
        },
        "item": {
          "id": "e7aa4ffe-e3b5-4738-9ab2-d577e0eb62cb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2b867421-0404-446d-ad86-90585b6bccc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677f0543-2a38-4685-8a5a-68aa869c3e31",
        "cursor": {
          "ref": "5d3eed4d-b223-4f6f-a6a9-c4aae0328426",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "da4b7771-6f39-40f1-823e-da5ddedb6dbc"
        },
        "item": {
          "id": "677f0543-2a38-4685-8a5a-68aa869c3e31",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "031afee8-89ea-4068-b0cd-6e5164bc259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38fd442-7161-4992-9211-226bd3badd5f",
        "cursor": {
          "ref": "100bde00-7033-4aa0-a157-9620b9776587",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1e0562a4-cdae-48af-b9b4-5b06d0ba8943"
        },
        "item": {
          "id": "f38fd442-7161-4992-9211-226bd3badd5f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "43e4271c-8445-40ce-9e09-b2c29d40ebca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac41a94f-8b8c-471c-a99f-aab56dfc06af",
        "cursor": {
          "ref": "5048db85-af0e-4ec7-a8d6-11670cf7c186",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8098eb07-a680-4b03-a4f5-87d532a2ca95"
        },
        "item": {
          "id": "ac41a94f-8b8c-471c-a99f-aab56dfc06af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "589d3e1d-aa3c-40c7-855d-2dd2e42ec6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89086dfe-604b-41b5-9beb-feeba000e8b0",
        "cursor": {
          "ref": "9effe29f-613d-4367-b9cb-f68b22810d1b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fc7d3520-b073-483d-997f-f4b8ec55bfb4"
        },
        "item": {
          "id": "89086dfe-604b-41b5-9beb-feeba000e8b0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1ae6414-3873-43ca-b369-af0208649ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695edd7b-54c9-437b-b032-4142dee42235",
        "cursor": {
          "ref": "b23dbb06-7a50-451b-9373-3fcbaff72cd3",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "acf485e9-e3aa-41e8-a0df-7e253ab51aac"
        },
        "item": {
          "id": "695edd7b-54c9-437b-b032-4142dee42235",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9eef48bf-f185-4be2-a090-ab7f498d947d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91436081-6ef4-4d64-9574-0e2afb6ae773",
        "cursor": {
          "ref": "7e0436b6-f3a4-4f49-9e1c-90c89d06615d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0c6a888c-d1f1-4bf7-a103-e19f66a9f27f"
        },
        "item": {
          "id": "91436081-6ef4-4d64-9574-0e2afb6ae773",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7789384b-8775-44d9-9a25-82c154293fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a733fa-b45d-4761-8702-b9d0790420be",
        "cursor": {
          "ref": "398c61d6-435f-4621-9f59-51c415af6a70",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3636077f-838f-4b9d-92d1-bcb39f87a77b"
        },
        "item": {
          "id": "b3a733fa-b45d-4761-8702-b9d0790420be",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "48dd3145-8bd6-4291-85bc-c8b4bfa28451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba85ec95-1c51-4f81-badc-2dc65f5df32d",
        "cursor": {
          "ref": "19c2bc5e-9b6e-4e50-9827-30d1e5cd7b29",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d0063784-36bd-42a6-a395-3016e3bf6c7e"
        },
        "item": {
          "id": "ba85ec95-1c51-4f81-badc-2dc65f5df32d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a9b8900-d459-44a2-922c-704787d8571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84383bbb-9091-4bd5-9575-f20b5b02edb2",
        "cursor": {
          "ref": "5dfb0281-4d4a-4e75-b867-3bc60c403a4b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bd4a8078-4b63-4211-b155-543e48cff87e"
        },
        "item": {
          "id": "84383bbb-9091-4bd5-9575-f20b5b02edb2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "63c9a7e9-7983-4c32-bbed-7968fb414612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc5ee23-f08b-44d4-9396-96ca8005da10",
        "cursor": {
          "ref": "070ba4d4-0d6c-477c-971d-ac0eaa8610f5",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "48a5737d-9dec-48fc-95a8-52f73b9053f8"
        },
        "item": {
          "id": "9dc5ee23-f08b-44d4-9396-96ca8005da10",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "707aa77a-ef53-48ce-9ebe-0472fca951a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f2a991-f2ca-486c-968a-183e8ece3fe1",
        "cursor": {
          "ref": "b138caa4-efd6-473c-9700-3ce106a381fd",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a51f730-1a45-4aad-9a2f-54909f5f2496"
        },
        "item": {
          "id": "55f2a991-f2ca-486c-968a-183e8ece3fe1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e423e77-3fc2-48a6-8139-cea2d5edc243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81dea86-6d6e-48f6-a92a-5095939ec6ec",
        "cursor": {
          "ref": "a0ec0ab2-83fa-4cd7-9c5e-667463aabed1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "15bc20e8-3a11-4b81-810a-356ea4a9695d"
        },
        "item": {
          "id": "e81dea86-6d6e-48f6-a92a-5095939ec6ec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3e029a40-7199-4613-8046-a93d2ec4491b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8aa66d-f5d0-475c-97ba-edaee596f43e",
        "cursor": {
          "ref": "4d63f459-7c50-4bfa-8671-214c78f1f6f4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4e6f3fa1-3ca7-47b3-b2d1-10687488cfd3"
        },
        "item": {
          "id": "1c8aa66d-f5d0-475c-97ba-edaee596f43e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6727666-19e2-4f5a-bc32-e6e333a7d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e982b89-b27d-4fe8-bbf2-abefef367fc1",
        "cursor": {
          "ref": "533f9f33-fc2d-49a2-8758-5f2804bba14d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2892a6c-a287-479a-a9c1-8ca7c0f2b0d1"
        },
        "item": {
          "id": "5e982b89-b27d-4fe8-bbf2-abefef367fc1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "39c7cb2f-ac8d-49cf-b17b-aaa213eba58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ec7b75-b319-48c0-b424-6d6b5326d07d",
        "cursor": {
          "ref": "d7f482be-ae9d-4b57-812e-e731320f5c17",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bc8baac9-e264-4928-bb5c-27c9244830fe"
        },
        "item": {
          "id": "67ec7b75-b319-48c0-b424-6d6b5326d07d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "33425e20-0a26-4cfd-98e7-12c83576d1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b956e9-194a-4c62-ab95-bb7b434d79ae",
        "cursor": {
          "ref": "fa2dc1f6-a3fe-47cd-a3f5-095f15e24b32",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1e75288e-397b-4073-bdf4-b9d33aec6898"
        },
        "item": {
          "id": "36b956e9-194a-4c62-ab95-bb7b434d79ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6e7368b-2620-4f61-b274-030c293415af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a838610-90f4-4c9c-82ad-69dcf359dd20",
        "cursor": {
          "ref": "faec71f7-b4d0-493e-8e3a-64a03851e129",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "909cb2f7-3d3b-4096-8492-67aab8331f16"
        },
        "item": {
          "id": "5a838610-90f4-4c9c-82ad-69dcf359dd20",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3dc6f649-2a69-4024-9d62-6f85f57b3c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883ef094-efe0-46e2-9339-15775f0167e1",
        "cursor": {
          "ref": "bef41fbb-6a54-4e3d-9793-83736eeee13f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f9e87f6-4aa6-487c-a371-21f9a115288e"
        },
        "item": {
          "id": "883ef094-efe0-46e2-9339-15775f0167e1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1fecf0c8-7225-4d1e-82e9-56849ff0e004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f94f0-3314-45f7-85d3-da67984efb58",
        "cursor": {
          "ref": "7d99b337-a3bc-47de-b9f5-7a6474e98bfc",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bf8eb31e-1eac-48be-90e1-54ba7e9998ec"
        },
        "item": {
          "id": "ae5f94f0-3314-45f7-85d3-da67984efb58",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5d4b2cba-9abd-458b-a8e3-b220e4c7299c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3391c770-161e-4ce8-acce-f1b651e56003",
        "cursor": {
          "ref": "ad7c72a1-34b2-48de-b109-7530d56fdfec",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "62e2579c-2e28-4d08-96f9-f4fbffc52cf5"
        },
        "item": {
          "id": "3391c770-161e-4ce8-acce-f1b651e56003",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "21056bbd-af5a-4451-b541-2db412ee33f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daad28c-947b-458b-82a0-4c8134b417d6",
        "cursor": {
          "ref": "cdf9ee81-4ca8-4fcc-89b8-cf8c691bfda2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6f9f07fd-b475-4ce6-bec7-bf8d299a3583"
        },
        "item": {
          "id": "0daad28c-947b-458b-82a0-4c8134b417d6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0d39ea71-4914-40f6-a5e0-80b902d085dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b65d93-a26c-47b6-be1f-ea7f633093d3",
        "cursor": {
          "ref": "2a5ab72a-fa25-4b43-b6c9-e6880392399c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "617069a9-91fa-4786-9d8d-0dbaee630dcb"
        },
        "item": {
          "id": "59b65d93-a26c-47b6-be1f-ea7f633093d3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d24bd233-9b62-4699-8c32-e467d4935309",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a3884c-10ba-4fb8-945a-bdbe10064033",
        "cursor": {
          "ref": "4ec18394-5cf9-47f6-87db-3a94087cb216",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc8f3fc8-04f6-4998-b1a9-8b7750524bdb"
        },
        "item": {
          "id": "59a3884c-10ba-4fb8-945a-bdbe10064033",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd4de79a-d250-4243-a9ca-83232d3a3e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9333338b-b800-4ed0-acb1-d3d5310c55a6",
        "cursor": {
          "ref": "59995c92-0081-4b9c-9491-40e8dca0e2a0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a3510c80-2399-4777-aa99-aad757d41b84"
        },
        "item": {
          "id": "9333338b-b800-4ed0-acb1-d3d5310c55a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "df5f46aa-d7ff-4d32-a833-baad077a47de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e827e5-8c04-492c-829b-0614e3360f3d",
        "cursor": {
          "ref": "c92d10d2-b7f2-48e0-90c8-997f58622ac7",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3d28f624-6598-49b8-ae35-9d37758fb229"
        },
        "item": {
          "id": "d0e827e5-8c04-492c-829b-0614e3360f3d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5dd9f7e-6769-43e0-a45d-44de016b0cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dfba26-ad34-4e8c-80d1-224e65858522",
        "cursor": {
          "ref": "62cd28b3-3dbe-4a1a-8240-5ecca0109c96",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fff5fde0-60e7-46b2-a31e-2aa8905a57a3"
        },
        "item": {
          "id": "d3dfba26-ad34-4e8c-80d1-224e65858522",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2735a1dd-0df7-4ca5-a51d-e5466a3947d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce52d4fc-661d-4246-91fb-1414183900ff",
        "cursor": {
          "ref": "3caa32fe-dfe3-414b-9a63-108557a86c59",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5ca4a26b-9390-4ee7-b803-b63ceafa2cdc"
        },
        "item": {
          "id": "ce52d4fc-661d-4246-91fb-1414183900ff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "100e16b0-7ca6-409b-a398-90bcbd840794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a266adb-9d33-42ab-8667-7f9bf7d760b5",
        "cursor": {
          "ref": "8fea9eec-b20b-4561-9571-4dc1f3fd3192",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67fd7c7e-2fbe-434c-9c95-43d4e0226fac"
        },
        "item": {
          "id": "3a266adb-9d33-42ab-8667-7f9bf7d760b5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e8f86e5-4d5e-4284-a80b-234aeac1745d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9de6e0e-adf8-4740-97a0-c020f93935b5",
        "cursor": {
          "ref": "6f005889-ba6d-42c4-ba30-8c2e322da4f1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "247e42d2-f3fb-466d-a79d-fb776d36ab1a"
        },
        "item": {
          "id": "d9de6e0e-adf8-4740-97a0-c020f93935b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eca11452-9c28-456e-9220-f3a6a906c881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acbfd6c-075e-4977-a79a-44b49dfd4579",
        "cursor": {
          "ref": "75eeb217-2252-47b3-8c2a-3e76760a4972",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bdb301e6-dd16-4288-a15c-1c451680e6c7"
        },
        "item": {
          "id": "1acbfd6c-075e-4977-a79a-44b49dfd4579",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "797e4edc-001d-43d0-8bcb-cf92c1beca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9225d0b8-fd62-4747-8bd5-5a9414efb306",
        "cursor": {
          "ref": "c1f4ce82-980a-479b-b766-a90d7f28b9d1",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "762f3be5-14c9-43ae-840d-e76e79d09bcb"
        },
        "item": {
          "id": "9225d0b8-fd62-4747-8bd5-5a9414efb306",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5da36945-8af5-485b-b26d-0b523a44301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dace243f-0d03-41a0-86f8-f424be15e5e9",
        "cursor": {
          "ref": "8cf3a6a6-c462-4c07-b9b3-be0f30a50152",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6affe9cb-1fad-4cfd-8865-dd0de8af19bc"
        },
        "item": {
          "id": "dace243f-0d03-41a0-86f8-f424be15e5e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "339da0fc-44e3-4fd7-8584-a23fce21ee06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f8ff4-6a53-4111-a96c-6342903ce831",
        "cursor": {
          "ref": "25bd3013-a44c-42c3-aae7-12c0b9271fd4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4161e4b3-1e6a-4bd3-b7cc-1bcf569f8478"
        },
        "item": {
          "id": "4f0f8ff4-6a53-4111-a96c-6342903ce831",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5d50674e-7bd8-4551-9094-19e7c8661286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9e49e1-38ec-49de-ae10-3c6d57b4c726",
        "cursor": {
          "ref": "17ea2fc1-7bf5-4615-97cb-b19fe6c0a71b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "473ac763-4eac-445a-9cbb-0c61916d24eb"
        },
        "item": {
          "id": "ba9e49e1-38ec-49de-ae10-3c6d57b4c726",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "918c763e-9d6e-4e64-98db-87d505354dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbf2eee-5294-463e-9c1d-2522b7343991",
        "cursor": {
          "ref": "8663889c-c6ed-46cc-aa55-2bd0410b83e7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7cb7ed24-e9f2-416b-999a-d8cb85043efd"
        },
        "item": {
          "id": "afbf2eee-5294-463e-9c1d-2522b7343991",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f474b4a0-780b-418b-ad39-800bf1fa2740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbdb274-03f5-4559-b96b-bdef9b9964ae",
        "cursor": {
          "ref": "8809f580-707a-46e3-9263-998d3652dc18",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "352004e6-ffd1-4e14-8ff8-61c727c3ac15"
        },
        "item": {
          "id": "6fbdb274-03f5-4559-b96b-bdef9b9964ae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4c2312db-7fac-486b-9891-4ae12e63f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ebac1e-f38d-432f-b8dc-b80c8c1fcf00",
        "cursor": {
          "ref": "f1ad07b6-660d-4699-8d91-fd75546e68c1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "15d28734-89e9-46b1-8bea-fe5dad2f0836"
        },
        "item": {
          "id": "93ebac1e-f38d-432f-b8dc-b80c8c1fcf00",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54183332-92d4-44cc-b143-058da7e1603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb3cc1d-684a-4f04-b2a7-918217095ca9",
        "cursor": {
          "ref": "d447fd5f-acb9-41d1-a1fd-21d1d76aa243",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16902984-9a67-4332-8274-20aa1e3e8caf"
        },
        "item": {
          "id": "adb3cc1d-684a-4f04-b2a7-918217095ca9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "32dfae91-e50c-4724-88dc-b4945f7eb897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5596194f-32a1-4635-844f-8375dba5abc0",
        "cursor": {
          "ref": "e02e2ea1-1c0f-450f-95a6-898398699991",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "61236dc1-0b04-40b4-a1a4-26e0d1e6d28c"
        },
        "item": {
          "id": "5596194f-32a1-4635-844f-8375dba5abc0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d26c2ca4-3361-4b83-88a0-7fd68ab8aa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65586b5-b9a0-4ac6-9379-b943f296d149",
        "cursor": {
          "ref": "4c48c273-41e8-4a9c-a5e3-166dd1ecde32",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cc1677c4-0292-4cae-ba85-aa959876c743"
        },
        "item": {
          "id": "a65586b5-b9a0-4ac6-9379-b943f296d149",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e267784-e96b-46d3-b875-145935785785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2937add6-bbeb-4132-84ae-116989fcae08",
        "cursor": {
          "ref": "8ba43a80-c1aa-42cb-b205-bfc990817460",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "32c0ece0-08a8-422e-8a35-f69c3a2d6fed"
        },
        "item": {
          "id": "2937add6-bbeb-4132-84ae-116989fcae08",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f99713a1-2447-4ed3-9ba6-301036d477a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0b0186-9489-4bdc-8c39-f6953b80740a",
        "cursor": {
          "ref": "aacf8670-f410-400a-9960-8a6753672ea5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6a51700c-deac-4285-9244-d2cd4591d776"
        },
        "item": {
          "id": "6a0b0186-9489-4bdc-8c39-f6953b80740a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff8a3b53-6b6e-4bf4-8860-7a5baba3909e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad95f8ee-1014-4a95-848d-e73340506fac",
        "cursor": {
          "ref": "99c02117-ca8a-42cc-be34-97b7e84a796c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "604846b0-d25a-41d5-9881-df0ee87bcf55"
        },
        "item": {
          "id": "ad95f8ee-1014-4a95-848d-e73340506fac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e383a06a-963c-4b98-b1b3-21ac4293676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d807f4f-b92f-4e29-9dbc-86c0658342d2",
        "cursor": {
          "ref": "eb65d634-b4ff-4359-9083-1a0a42f955f2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bd19f470-f8f0-47fe-bf93-80d490033e31"
        },
        "item": {
          "id": "5d807f4f-b92f-4e29-9dbc-86c0658342d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2811c2cc-4169-4eae-8fe5-ebff33238f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c2cfb1-ba9b-4982-af08-517080ec1e2e",
        "cursor": {
          "ref": "a89bb04c-f09a-49e7-97ea-69b04fef436a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "94e13ff6-8dc9-4890-af36-63481fb46a0b"
        },
        "item": {
          "id": "78c2cfb1-ba9b-4982-af08-517080ec1e2e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad1fa2f6-6ffc-41ed-a135-79824c025dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0d8466-3511-43be-a863-37e678e55233",
        "cursor": {
          "ref": "e53638a9-cae6-4eeb-b49b-34252e39b738",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "778dec2d-d27f-42b5-b1a6-f1adb6b3de3b"
        },
        "item": {
          "id": "ea0d8466-3511-43be-a863-37e678e55233",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44a846a4-22a5-48ec-94bc-03ed391e53ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bae9ccc-7fd6-4451-b280-a7d34a067d97",
        "cursor": {
          "ref": "dbf710ef-fe25-4e58-9fb3-b8233948ec4c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "830d9155-9890-45b7-9732-4fbb273b3733"
        },
        "item": {
          "id": "1bae9ccc-7fd6-4451-b280-a7d34a067d97",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2d1c7606-1e0d-4bef-869e-516c7f79ad4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a40a1f-4ff7-47c3-b11e-4db29fc8c91d",
        "cursor": {
          "ref": "1298c3f0-49f6-4670-aa02-75304dbbd790",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5a679df1-d393-4879-987c-da431d89e89d"
        },
        "item": {
          "id": "34a40a1f-4ff7-47c3-b11e-4db29fc8c91d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cb65815d-4c92-46cc-afee-0a94ccd16553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73397bd5-f057-4764-a9d9-5faaf5b395ad",
        "cursor": {
          "ref": "42406bae-4bdb-4c5b-accc-703cee1a95e0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ee05f6b8-91cd-4a6f-bdb4-eb2a6b2aec6e"
        },
        "item": {
          "id": "73397bd5-f057-4764-a9d9-5faaf5b395ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "00e914ee-ed75-43ee-8225-c25b32d0380a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe8ee08-829b-4987-ae43-9ddc8f7cd95b",
        "cursor": {
          "ref": "b5208321-0544-4f2c-b888-96189aeef2fb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4e4a6663-9256-49a8-8873-e256d5415817"
        },
        "item": {
          "id": "efe8ee08-829b-4987-ae43-9ddc8f7cd95b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "66306fb3-1b42-406d-9fc6-1305f04d4152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7f5c33-d66e-4dc7-962a-6b924967433c",
        "cursor": {
          "ref": "66f9cb08-fd3e-41cd-9a16-e1e8c2d0b7d3",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ef8541ea-5e63-4754-be27-d8eebce9736d"
        },
        "item": {
          "id": "cc7f5c33-d66e-4dc7-962a-6b924967433c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af9d508d-b408-4df4-9d51-7e0cdbba6822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d203d2a-389e-4982-a397-a3cac0e7b132",
        "cursor": {
          "ref": "178f2c05-1ea2-411a-a6f2-368bb0a9a79a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "085b9428-ae0a-4a6c-9edc-ff6562909744"
        },
        "item": {
          "id": "1d203d2a-389e-4982-a397-a3cac0e7b132",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "09223914-d1e2-4605-8b68-fc2f04fe42ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ccd923-84cb-4d50-b816-09968f7efe1a",
        "cursor": {
          "ref": "ed91ab61-617e-4e49-93de-b4e05f75e09b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5cd55f56-92ad-4246-8e33-f323e9de4d45"
        },
        "item": {
          "id": "e0ccd923-84cb-4d50-b816-09968f7efe1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5fa440e5-1156-4005-944a-a70caa6d4304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b4e312-f7d3-48e0-8c58-db82b98f4844",
        "cursor": {
          "ref": "c0ca363f-ff3e-4821-9776-6ca659037f9f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a388b9f-7c12-4e23-818e-695a3dccaea8"
        },
        "item": {
          "id": "82b4e312-f7d3-48e0-8c58-db82b98f4844",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4bb73861-05f4-4a23-9b66-f11c7a261717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e85cbc-18a8-45a4-bb39-16c2a1f60e82",
        "cursor": {
          "ref": "2a00888c-1fb9-457d-b754-7d383c8d8adc",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cbd536bf-91ff-49a9-a713-036da3d583a6"
        },
        "item": {
          "id": "b4e85cbc-18a8-45a4-bb39-16c2a1f60e82",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1cb3f1d1-0db9-4834-b17a-72b8da91fa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba52682-b7a9-4823-8a33-5654049caa82",
        "cursor": {
          "ref": "4fdf39b3-d300-43df-8464-bb92183b9640",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9970c654-4d5d-4ffa-afbf-4773cf6dc3d7"
        },
        "item": {
          "id": "fba52682-b7a9-4823-8a33-5654049caa82",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9c808ca2-0d4f-4706-aea8-d15ede074738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44fd54a-1b00-4be2-96c5-24dc3d9bb7e5",
        "cursor": {
          "ref": "f826130e-1211-45b9-ac10-96db8d40e2a5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8931bfc5-b20d-4a3d-a61b-3c7fe8f4d215"
        },
        "item": {
          "id": "e44fd54a-1b00-4be2-96c5-24dc3d9bb7e5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3738ab1e-5843-4b31-9281-1f397042f216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce7e746-7aa0-4dfe-9594-0c7ada0c4ba8",
        "cursor": {
          "ref": "8cc67c3e-3a8f-46a0-b0d5-c54cfc119e0b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "48e07f8f-f8f5-4fb3-b66d-60c2f9adaa7c"
        },
        "item": {
          "id": "8ce7e746-7aa0-4dfe-9594-0c7ada0c4ba8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cc6799a6-e6b5-4738-be4b-e69c9992f948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c7a5bf-a9eb-4e4e-9ba1-1fcf8cd41c4a",
        "cursor": {
          "ref": "b9357358-daa1-4318-837e-09166a2eaf4f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1da78ee8-60c8-4bb8-ae76-778a96489eca"
        },
        "item": {
          "id": "28c7a5bf-a9eb-4e4e-9ba1-1fcf8cd41c4a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b5cc5550-f3ce-4a01-b65a-c58ba49c9891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a73618d-aca7-4d77-8b32-832b8c63c312",
        "cursor": {
          "ref": "93b05375-0549-4f47-abd0-f34de88c3fe2",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "16b66f29-ec94-42e7-bdf9-e1b346f09b8f"
        },
        "item": {
          "id": "8a73618d-aca7-4d77-8b32-832b8c63c312",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "509428da-7a6d-4cbb-9647-0ecba3b28b89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa6a9a3-a36e-4937-ab98-3632d555f5fc",
        "cursor": {
          "ref": "3edf4c18-0ec0-449a-ab3f-16a030f46a14",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "976bfb83-aef9-4fef-b31d-493569c6c9e3"
        },
        "item": {
          "id": "dfa6a9a3-a36e-4937-ab98-3632d555f5fc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "32739d3a-1fe7-4515-8a5d-769844a0954d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1cd130-fcbe-469c-96ca-0a8561b99eda",
        "cursor": {
          "ref": "74c117c2-2179-4ff1-814a-c6b632f17a25",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e18927d5-2f4d-4c6a-be99-b37654dc2be5"
        },
        "item": {
          "id": "dc1cd130-fcbe-469c-96ca-0a8561b99eda",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3f378bbd-046b-4db8-b726-7725b8b3845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4edd38-9c31-4901-b172-b019f4e8ffef",
        "cursor": {
          "ref": "77aa3203-30ae-4618-97fd-cbdaf660b3e4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "392829ff-ab00-4e40-84b5-f48b62a241b0"
        },
        "item": {
          "id": "ce4edd38-9c31-4901-b172-b019f4e8ffef",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1889f15d-5ae9-49f6-be2a-2d1eb594cd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dffa93-94af-4535-bf8d-e1899d6f4512",
        "cursor": {
          "ref": "312f9eef-6bf6-469c-8f7d-cb333e8951d5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2c255e9f-26c5-4aa8-8c1e-38160b9288b0"
        },
        "item": {
          "id": "b3dffa93-94af-4535-bf8d-e1899d6f4512",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d4e21e4b-9dbd-45f9-b2da-ebe2b1de50a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fbaa78-1789-47fd-bab5-0785ec1857c3",
        "cursor": {
          "ref": "fa8c770d-6242-494b-8751-b450f1802023",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aeb67888-6f4d-4efc-92ad-308ee9ae7f50"
        },
        "item": {
          "id": "88fbaa78-1789-47fd-bab5-0785ec1857c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "509e1b7a-3c81-4e6e-8fb6-523b717e28a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91355a4c-b90d-4dca-ab43-f7f321c2d392",
        "cursor": {
          "ref": "e34cce65-2335-4ea2-9ab8-94e63dcb5969",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f8abf463-c5d6-4526-aa0d-21ebed21a8ad"
        },
        "item": {
          "id": "91355a4c-b90d-4dca-ab43-f7f321c2d392",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d5c1213f-3f96-401a-84dc-01e061d4a1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d6eef0-8873-4895-bb3b-2e6c7963a093",
        "cursor": {
          "ref": "32864be0-0600-48b8-a643-32981ad2a97f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c99a9051-373e-40d4-a5ae-1b8be4c0e2c6"
        },
        "item": {
          "id": "a2d6eef0-8873-4895-bb3b-2e6c7963a093",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6b9ac713-9b3e-44c2-b5c7-4002df3afbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9900f96-18b2-4bb1-b3b1-ce4ffcb89786",
        "cursor": {
          "ref": "f45b6c1f-f170-42b1-8f11-4299da6a9e3b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7f23c8dc-4579-4503-aae1-3aae8384389d"
        },
        "item": {
          "id": "f9900f96-18b2-4bb1-b3b1-ce4ffcb89786",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ec37203-0a0f-4204-86cc-74cc79059226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a9fd68-cb38-44c6-9a6a-60b4a15ee73f",
        "cursor": {
          "ref": "2abb3d0a-20c2-463d-801f-25027018bdad",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d067c543-6e28-4621-86d4-c6d53e968a12"
        },
        "item": {
          "id": "e3a9fd68-cb38-44c6-9a6a-60b4a15ee73f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6a4aa037-fa65-43e0-9d35-5833a5f46665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f32752-c9d3-4efd-8603-3204cefd6d1f",
        "cursor": {
          "ref": "fdc9a31d-8094-49b4-a4de-c35d00f1477f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b9b70450-35c3-4e57-9a99-1e24e98d252d"
        },
        "item": {
          "id": "b2f32752-c9d3-4efd-8603-3204cefd6d1f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "313ae14c-766b-4ccc-ab72-fe20f5c3fea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce25129-84f2-48fa-9bc4-bb84a69b8c0f",
        "cursor": {
          "ref": "9dfa8d7f-a8c9-4a5c-b599-68f5603d2c9c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf15ec2a-c1df-40fe-ad90-2f4ac83fbd26"
        },
        "item": {
          "id": "5ce25129-84f2-48fa-9bc4-bb84a69b8c0f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d605f134-1974-4c8c-a2a0-c1aa088df380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3966c-b717-4d81-95a2-71b83fc98149",
        "cursor": {
          "ref": "446b151c-8523-4e79-b3cf-44f1bce14f46",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a4f05d3d-721d-4cd4-85e3-12eddb023086"
        },
        "item": {
          "id": "b1f3966c-b717-4d81-95a2-71b83fc98149",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ba802545-3ce6-4880-a3d6-d2d7304b51d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe07c768-d80c-4d7c-85ff-8391929515f6",
        "cursor": {
          "ref": "b5ba449c-19a3-4375-b6e9-df73eb365097",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7bacab0c-358d-41b4-8ef1-98f7ca45b836"
        },
        "item": {
          "id": "fe07c768-d80c-4d7c-85ff-8391929515f6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3b5c6865-cc51-4a0f-ad8d-43e447535563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360dcd36-bc87-45c5-8572-63903cb70317",
        "cursor": {
          "ref": "475e6a64-de9d-499f-bd5b-12ce5eb01e0b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "83e131ba-8ed4-4c9f-ba6f-0a37bf36b459"
        },
        "item": {
          "id": "360dcd36-bc87-45c5-8572-63903cb70317",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "66b1d90c-6e36-4fc3-8ba5-f389679e1171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ccc026-f4bb-4037-bd6d-b92651686c41",
        "cursor": {
          "ref": "f0ca8fe9-8914-44ca-9810-d19ce1f40977",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7446a1bf-7d58-4d5d-8b14-ecb9818fb871"
        },
        "item": {
          "id": "e0ccc026-f4bb-4037-bd6d-b92651686c41",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5cf3f757-a26d-45b9-bb29-527e092af3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad072d59-e732-45a5-b9ad-7ad16cd7962e",
        "cursor": {
          "ref": "7c211f1a-b49b-4a82-af72-0e50996d548f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "74b259a7-fdab-4668-a56e-8157231d0cdf"
        },
        "item": {
          "id": "ad072d59-e732-45a5-b9ad-7ad16cd7962e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f3a9af7e-c718-4818-b796-d610b00ae94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53de7c41-e24d-4c23-9619-aac6b980cec7",
        "cursor": {
          "ref": "2d7ee2fa-da30-40e3-82a2-f83013e28f54",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb9eb3ad-5c9d-4916-a7f5-f3de8fdfe18c"
        },
        "item": {
          "id": "53de7c41-e24d-4c23-9619-aac6b980cec7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc011b11-74ba-46c1-bd28-a4aca9431c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9ee71c-eef9-427c-9fdf-1e9e0828f93b",
        "cursor": {
          "ref": "ba73d5a3-7df9-448c-a583-7e8c0b0e8305",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4be52ba5-7282-457f-af5c-473ef6ff64a2"
        },
        "item": {
          "id": "dd9ee71c-eef9-427c-9fdf-1e9e0828f93b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3f9e377d-9152-4d32-92d4-82a1775d6156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb613006-528f-47ed-a832-84add994356a",
        "cursor": {
          "ref": "51d04f12-bb5d-41b2-84de-1f68750b0ace",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5df68399-0f12-4b54-9c43-9d071975a58a"
        },
        "item": {
          "id": "bb613006-528f-47ed-a832-84add994356a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0fb23d01-7694-4f3d-896e-5f66f6c286fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61e13cd-b70a-432f-ad82-4b1903141fc8",
        "cursor": {
          "ref": "0ac76fc5-2beb-40fd-9402-509428f24182",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "77ef90ed-18aa-463e-9ec9-b51660e18f21"
        },
        "item": {
          "id": "e61e13cd-b70a-432f-ad82-4b1903141fc8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a000791d-321b-466c-96d3-78a925507c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa5e750-a936-4423-935d-b569da349469",
        "cursor": {
          "ref": "db2a6f32-68f3-4335-bdb3-6c841988548e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "80efca86-e805-48dc-8271-ab12c44de388"
        },
        "item": {
          "id": "cfa5e750-a936-4423-935d-b569da349469",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "887ed8f4-4773-454e-9a22-c2db24f2876e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79417c35-f212-4bdb-b458-ec1119237882",
        "cursor": {
          "ref": "9a83af49-854a-40bd-914e-01ec48cf2f1e",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b8cbc25e-37a6-4fd2-81a2-b9adc2802633"
        },
        "item": {
          "id": "79417c35-f212-4bdb-b458-ec1119237882",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9f496656-a6ba-4a53-981a-5083933b6f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9f3233-dc81-4673-ae95-61347d582575",
        "cursor": {
          "ref": "69347fbf-ea0b-446e-bbed-f13eaec09724",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3293556a-ddcc-4766-8062-70178736836c"
        },
        "item": {
          "id": "df9f3233-dc81-4673-ae95-61347d582575",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "43969925-d861-43d3-8ad9-670bfc4c337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de94543-298a-4c7e-a16f-85b201c0fd16",
        "cursor": {
          "ref": "0d4995c5-a8bc-4f18-b3be-2c0ddd280989",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bcbaaf9c-8114-488e-88d7-a49e1d6a8fcf"
        },
        "item": {
          "id": "8de94543-298a-4c7e-a16f-85b201c0fd16",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b6864574-0bd6-4de5-aecc-a42147e65fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644d26aa-d533-46fc-8e71-ab51c3b0d766",
        "cursor": {
          "ref": "c8a554a4-7c96-48f3-8da5-ff2c803e5107",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7221ebce-ec82-4a2c-a7ab-5c72f0bec87c"
        },
        "item": {
          "id": "644d26aa-d533-46fc-8e71-ab51c3b0d766",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "97df1735-fadd-408d-9a88-dd5189222838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733928e3-fbb0-488d-a37c-85dec8b160a6",
        "cursor": {
          "ref": "892f6404-89de-4295-8857-8e627676841f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "24a18c80-a5ef-462f-921c-7d59d11b1d55"
        },
        "item": {
          "id": "733928e3-fbb0-488d-a37c-85dec8b160a6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d2364de-f262-48d1-a00d-eb7fc0c7182c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae1aefd-5f79-47a6-a212-2d0a5107484d",
        "cursor": {
          "ref": "c11814f5-eb1a-41c3-beeb-4a11f73ada9a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cf1aae9c-b140-487b-a42c-f4227451c424"
        },
        "item": {
          "id": "dae1aefd-5f79-47a6-a212-2d0a5107484d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "140ef4e7-b77c-4ba9-a370-b78e0628e4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773d743c-2377-4166-b865-b3f873eac98c",
        "cursor": {
          "ref": "fccf2abd-c592-4769-9623-ed2aa1888851",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "159e42d2-c4e6-4c83-b966-24e3f1e1bbd5"
        },
        "item": {
          "id": "773d743c-2377-4166-b865-b3f873eac98c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "399bbb2b-53ca-4df8-8a43-ddb23a7664a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219523ba-a72a-4edc-aa82-1f5522a1f972",
        "cursor": {
          "ref": "5c0a26f7-4606-40a2-979b-8825224dd5bc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "59f0fb33-be34-420f-ad39-b521d7e5dccc"
        },
        "item": {
          "id": "219523ba-a72a-4edc-aa82-1f5522a1f972",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "591dc977-c62f-4d67-af66-ebb2f46ab49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7e0e72-5f65-4206-bb55-b1624647910c",
        "cursor": {
          "ref": "0ea6e49d-ed74-41fd-9456-f3d67510c5e1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "59e85e5c-725f-4a55-9dee-098a03c4bbab"
        },
        "item": {
          "id": "7e7e0e72-5f65-4206-bb55-b1624647910c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ec8ae1dd-dd28-4d42-ad8e-e8e51c00978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3668b434-76dc-4c5e-8533-f55b2ae87fd9",
        "cursor": {
          "ref": "03f2fe75-bcf7-46b9-83b3-2a458a286895",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6f5aa2b3-ad7c-4c38-9854-45f10c48ca3e"
        },
        "item": {
          "id": "3668b434-76dc-4c5e-8533-f55b2ae87fd9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b52e47ec-93ac-47a6-a273-ce432cc37249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdf533-1efe-4ced-84cd-f621f2025830",
        "cursor": {
          "ref": "c8872410-105e-45a5-9caa-89472a55cb93",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2faa9898-9ff2-4c31-bfd8-abbf1ba644ea"
        },
        "item": {
          "id": "37cdf533-1efe-4ced-84cd-f621f2025830",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c3f57072-ba50-438e-8ac8-e2994280ad73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a43f9f-5fb9-468b-9876-913d443df6b6",
        "cursor": {
          "ref": "615e7a00-7007-4abe-8049-9916a4f6918b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f724db93-117d-409f-a83f-6bf399a813a7"
        },
        "item": {
          "id": "c3a43f9f-5fb9-468b-9876-913d443df6b6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c20ed99b-3bc8-4613-a339-6a096c90e0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cb3aea-26de-4a23-8c8a-ed04bcde45e9",
        "cursor": {
          "ref": "0eb0bd82-743b-454b-887a-38cd11edd89b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "97c178db-ff45-45a8-987f-43d0312fe0e8"
        },
        "item": {
          "id": "02cb3aea-26de-4a23-8c8a-ed04bcde45e9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "732b9d15-9321-4c90-90aa-cc951e0e4c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82f490d-a1ce-4b29-8f89-b0a1b8d6da11",
        "cursor": {
          "ref": "9ce6ebdc-42d1-4891-ab20-bb965fbfa4b3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ee38a611-8509-4caf-9d2c-38cf2270a885"
        },
        "item": {
          "id": "a82f490d-a1ce-4b29-8f89-b0a1b8d6da11",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8f8a7e0a-0c5d-4605-a0b7-c11e02adeea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4948ae5a-9a80-4119-a876-1aab9df917c4",
        "cursor": {
          "ref": "382fd68c-630c-446a-b9c1-111c2211b448",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5e52332c-f0d8-49bc-acae-d0cdb53c848a"
        },
        "item": {
          "id": "4948ae5a-9a80-4119-a876-1aab9df917c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7916d6f8-24ce-46cc-aab2-08ea2186ff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e7d75f-ec6d-43ff-8e20-0a13abf0c56e",
        "cursor": {
          "ref": "96bf36de-60b5-4f0d-b2d4-c2cd6cbd7852",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1b9324b9-91b1-4db9-a437-3a3ee3b65cd1"
        },
        "item": {
          "id": "f2e7d75f-ec6d-43ff-8e20-0a13abf0c56e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fb70cb8e-ddd1-4970-8859-3cd2629f051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78ec113-19df-4f61-82ae-2df602fe244e",
        "cursor": {
          "ref": "a3fb8e4f-a2ce-4ecd-8b25-c3ab42145955",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4aab3f64-b357-435b-9b2d-da594ddd892a"
        },
        "item": {
          "id": "d78ec113-19df-4f61-82ae-2df602fe244e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "951c0c5e-9f3b-4290-976b-b89f257a8f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98f3c5-d5e7-4bf7-b8cb-d654a8851228",
        "cursor": {
          "ref": "4fb032d7-69e9-4a42-bbdd-4ff19bfb7a9b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1cb7d67-d1a8-43eb-906a-f7623ea697b9"
        },
        "item": {
          "id": "7f98f3c5-d5e7-4bf7-b8cb-d654a8851228",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "79b1366d-76e7-4cd0-b916-233f627dc8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b1eed2-d9c0-4dec-8bb9-3ce7a654bdfd",
        "cursor": {
          "ref": "37c0a2a8-d974-4947-9b77-b29ddb2b647e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bbaf97ca-5cab-4557-9a75-4b88e074bc29"
        },
        "item": {
          "id": "c6b1eed2-d9c0-4dec-8bb9-3ce7a654bdfd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7adf4b7d-003f-4203-85be-d46517594c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4029b1-8605-4b81-8fd7-f168c0b8ae8d",
        "cursor": {
          "ref": "1656ed02-57b9-42f7-ab47-fd9cde56449a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e438e189-599f-42b8-8a22-323733c7dc81"
        },
        "item": {
          "id": "5d4029b1-8605-4b81-8fd7-f168c0b8ae8d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c8709f8d-3157-46e1-9959-3699658a4305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d578bca-ca89-4b20-ae60-2b7147a9a3ec",
        "cursor": {
          "ref": "b45800c3-8adf-4e69-9134-aa567209707e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9ef08861-7828-486f-9d90-0cc8aef08114"
        },
        "item": {
          "id": "5d578bca-ca89-4b20-ae60-2b7147a9a3ec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cae99df0-e277-41da-a7f8-72169326a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1986a934-6f21-45f9-90e7-dd806a9d9b88",
        "cursor": {
          "ref": "d5166c75-bcad-4536-bc7f-6c4267c206aa",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "adb3c823-70fe-48e4-8087-7fbadee0d582"
        },
        "item": {
          "id": "1986a934-6f21-45f9-90e7-dd806a9d9b88",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b770192b-5fdc-4174-abac-9b498c13f290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d5d18f-9e20-4da5-8fa3-4ff058ae0079",
        "cursor": {
          "ref": "6c89eae8-3a0e-4bc7-8a12-c24eb4426d25",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "63b4b4a9-42e7-4e45-9c71-041e2f5a4ae2"
        },
        "item": {
          "id": "62d5d18f-9e20-4da5-8fa3-4ff058ae0079",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "21d78fc5-493a-46f5-8386-88167039aeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bdeaf3-5eb1-448e-a748-7141ca2dce7b",
        "cursor": {
          "ref": "512f5694-b472-41e5-8b0f-be21536d8d7d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f9b5edc-f6db-4f13-8451-b5e5c4fc9e34"
        },
        "item": {
          "id": "d1bdeaf3-5eb1-448e-a748-7141ca2dce7b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "69ed62bc-4b66-46a1-ba76-f1ade5910000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4d391-a042-4058-b554-4e1f28719c4e",
        "cursor": {
          "ref": "e26f2c59-f654-483b-9293-d25c599047ac",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b28e6831-ebc2-4a73-97c7-67aecfa36313"
        },
        "item": {
          "id": "11c4d391-a042-4058-b554-4e1f28719c4e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ef295b9a-43f1-47ce-a634-8bbe20880de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2a0c52-e2ea-47b8-b42b-2b475b12300d",
        "cursor": {
          "ref": "6016237f-3e13-410b-aff9-9e2630c5e69e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "979b6d89-8db7-4fc3-8c17-aa82dfd60d5e"
        },
        "item": {
          "id": "ef2a0c52-e2ea-47b8-b42b-2b475b12300d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a2e4f254-9766-4dc2-bf36-9ae3a9a1d72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b8a7c-55e8-469d-95a7-c11991b41371",
        "cursor": {
          "ref": "d3cc620a-ebca-4e07-8c9b-ea19d901fbb9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "99680a13-ceb4-427c-b9ff-9c8815a3febc"
        },
        "item": {
          "id": "418b8a7c-55e8-469d-95a7-c11991b41371",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "65706365-4206-4457-8d78-fe62539f84b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e490264-fdf4-4f49-8a82-fb978e188a0a",
        "cursor": {
          "ref": "cfd0a86e-cdb5-4eef-9cc5-2cd87400d094",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dc6d3b70-69c8-4660-926c-37b660445dd8"
        },
        "item": {
          "id": "1e490264-fdf4-4f49-8a82-fb978e188a0a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "76d69408-0b7e-44a2-825e-c46f841d4fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22fa00e-c852-4344-80eb-c9717ffebd5c",
        "cursor": {
          "ref": "e15e939c-ed89-4ad2-9e49-966a6496e385",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5fcc0b3f-385b-4bcf-be6e-160d4d34ebc2"
        },
        "item": {
          "id": "c22fa00e-c852-4344-80eb-c9717ffebd5c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb11ad38-369e-46e8-b2eb-b122f6b84f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9659732d-2011-4db8-a6ad-5adef99e0353",
        "cursor": {
          "ref": "e7c4bb1c-eda7-4d41-bbc6-c57e51f4a9fe",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "64652208-29ca-4fb6-b355-4d27321e7e4e"
        },
        "item": {
          "id": "9659732d-2011-4db8-a6ad-5adef99e0353",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "642f5194-bf91-4d23-b1af-3ec3034e63e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dffde8-d074-492f-b7ba-6ccd6c98d638",
        "cursor": {
          "ref": "3cfd8789-c21a-4686-977b-952644de896c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8da6d026-610e-47c4-b211-72134e6d6392"
        },
        "item": {
          "id": "50dffde8-d074-492f-b7ba-6ccd6c98d638",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2215d1a3-4b5d-417c-8124-69a03c6018ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab38ddc9-ca7a-4f73-b1cc-9704a360427c",
        "cursor": {
          "ref": "9de981e0-63e9-4051-a9f3-2cfbdea08c67",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3aea63f-6b51-4145-bcb0-48638ca8feda"
        },
        "item": {
          "id": "ab38ddc9-ca7a-4f73-b1cc-9704a360427c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "de2d400f-176b-4f5c-bbb2-ee3691c8948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da57686-df39-46df-bf82-a82a7f07721b",
        "cursor": {
          "ref": "06d8918e-af31-4df2-a7d4-2282faeb385c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c26dda3e-df53-43fc-9d53-95bc2e43aded"
        },
        "item": {
          "id": "4da57686-df39-46df-bf82-a82a7f07721b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "85a952fe-463c-403d-8e2a-f078c645ae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a367ed05-539b-4eca-95c9-484e8d7d131f",
        "cursor": {
          "ref": "c00ca700-5b3f-4c52-989b-44035ad0b100",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "44220e0e-5629-4d69-8dce-19e795dfe313"
        },
        "item": {
          "id": "a367ed05-539b-4eca-95c9-484e8d7d131f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "beb74e4e-cdfe-440a-84c1-f4afb3e5c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f4c1b2-47ef-4400-ad08-7c16898baf58",
        "cursor": {
          "ref": "bf5e7a1c-3b2b-4501-b71a-4d3f5514662b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "778ecebd-942c-44d0-a8a0-49d8101f8c93"
        },
        "item": {
          "id": "14f4c1b2-47ef-4400-ad08-7c16898baf58",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3693b4b7-fe1e-4e9b-b7f9-a3eac2e1143b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb148d5-15df-46c1-b458-4f643ccaebfa",
        "cursor": {
          "ref": "7d20aeb9-5a38-4d63-a970-9737d135223b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c4b15b3e-cec1-4dcb-b546-bc437bd61c85"
        },
        "item": {
          "id": "4fb148d5-15df-46c1-b458-4f643ccaebfa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "63a906e1-c167-4c0b-a99e-3e129a408ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b22baa-3ea0-4f33-bb62-1cb037baf7e9",
        "cursor": {
          "ref": "633b076d-38d6-4b36-804e-a8729496cc74",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "44608b6b-6dcb-4d6b-a329-1611d72f5114"
        },
        "item": {
          "id": "94b22baa-3ea0-4f33-bb62-1cb037baf7e9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "078bc5f8-93d2-4556-a35e-3ba73b756659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b98562c-ea4a-4195-b123-3c72723cda17",
        "cursor": {
          "ref": "60b63b1b-9bd6-425d-b9cf-486a9e5ab498",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "28352610-0eac-445d-b8e3-2a254cc4c707"
        },
        "item": {
          "id": "0b98562c-ea4a-4195-b123-3c72723cda17",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0e8f5d06-28ea-4d3a-bd95-d97894fa1180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7681feb7-10c7-44c9-a3e4-84303e3f159d",
        "cursor": {
          "ref": "c042534a-a045-465f-a46b-fce3de9363da",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3e70825e-f367-4fe5-a833-cf57834d9ce9"
        },
        "item": {
          "id": "7681feb7-10c7-44c9-a3e4-84303e3f159d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e549031e-79e5-4de5-8283-d527d6a64e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771d3556-36d1-4cc0-a74b-1ac7dc26003b",
        "cursor": {
          "ref": "90530c9c-314e-4826-a75a-a6bb2254c6a2",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be965aec-f315-432d-8928-2283495e584b"
        },
        "item": {
          "id": "771d3556-36d1-4cc0-a74b-1ac7dc26003b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9ed8d7b-dc66-496e-845b-8b6526a6f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faeac28-57bf-4655-aecf-c68f937a78f6",
        "cursor": {
          "ref": "cde46486-747e-491d-87f3-059c9f6031bb",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6b6ab597-4b4d-40a3-b02c-8f05a5d66e0b"
        },
        "item": {
          "id": "2faeac28-57bf-4655-aecf-c68f937a78f6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4f7b301d-c0a8-410c-b8ef-4e945da4a753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706eb4d1-299a-4757-b8b3-c6a11dea86de",
        "cursor": {
          "ref": "681ad3cf-709d-42ac-b56f-497d83176603",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5e5662eb-e4f5-4ef6-bc45-18075938bffb"
        },
        "item": {
          "id": "706eb4d1-299a-4757-b8b3-c6a11dea86de",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "76e2e2e0-8760-491f-96b8-1670ffdaac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e71392-1b8e-457d-9ed9-7ed1902a9429",
        "cursor": {
          "ref": "29d7a0d9-5d33-4740-a106-160f8328e437",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1de7406b-3bb4-416d-8925-7b38f47dc235"
        },
        "item": {
          "id": "83e71392-1b8e-457d-9ed9-7ed1902a9429",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "46b62036-22b6-44fe-94ec-9dbff3513df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97999c3-c710-4f82-98be-3cfb93a0ae76",
        "cursor": {
          "ref": "c264ba63-e04f-414a-a00d-2bb67c455931",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "207046e3-ef73-4676-9d2e-dfa44e14a341"
        },
        "item": {
          "id": "b97999c3-c710-4f82-98be-3cfb93a0ae76",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2b3f0f79-d9a8-4dab-a34e-477338e5bd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c29a54-b7b2-48f0-a255-656c29a381b4",
        "cursor": {
          "ref": "1aa7526d-0e66-48b1-a2ec-bb2535dd1e4f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0a999e1-a380-4d86-8e54-e6433cf1de1c"
        },
        "item": {
          "id": "69c29a54-b7b2-48f0-a255-656c29a381b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a017d0ea-34ef-4224-9b0f-407d65d8becb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab003797-ebb4-41b3-ab23-6463cf876083",
        "cursor": {
          "ref": "dc714938-0351-4a25-9661-5b588fd39275",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "86cd59e4-cb9c-42b3-8547-0aa5d84e2a07"
        },
        "item": {
          "id": "ab003797-ebb4-41b3-ab23-6463cf876083",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1679bcfa-331e-40c8-a84e-102657e8ae9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4c0093-3307-471d-bf95-c1cbdb755d9d",
        "cursor": {
          "ref": "2198c087-6a07-4261-b5e8-de845f20bc6f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "152bb3a3-8384-4d87-a667-1b4ea5c3c8f1"
        },
        "item": {
          "id": "9e4c0093-3307-471d-bf95-c1cbdb755d9d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "815cb4b3-323d-4e55-a39b-0ad2f8f62ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4449273-aa84-4709-b3aa-bfa97d9a9ba6",
        "cursor": {
          "ref": "04c15b0a-fbcb-4524-9ec8-bcc4d60289e4",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b467db04-cc1f-4e3c-8ff5-db519b73c1df"
        },
        "item": {
          "id": "c4449273-aa84-4709-b3aa-bfa97d9a9ba6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "45e5103d-78e0-4634-9ba0-3b62b8d1fd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d52ac3-64af-49ec-8a18-081d33f74f24",
        "cursor": {
          "ref": "6b76fa5d-4cf2-42b6-96e7-7cb62ff94514",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e9131ccd-2a86-4907-a1e6-132427c40584"
        },
        "item": {
          "id": "41d52ac3-64af-49ec-8a18-081d33f74f24",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7b0547dd-fd08-4578-830e-bfe7bbbdb527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29a9808-54ec-42f2-a90e-3c828eeca19c",
        "cursor": {
          "ref": "bc5a6527-cc46-4597-8d6e-7be11b97894d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2463a3dc-0f0d-4106-8dad-8b9f18de0add"
        },
        "item": {
          "id": "f29a9808-54ec-42f2-a90e-3c828eeca19c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2baa0523-052c-401f-9195-1877bc51365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d9a8ea-05be-4ce8-9fa1-fb2b0e7db8e0",
        "cursor": {
          "ref": "4f0794ab-c2dc-41d8-b53e-40cfe5fb1aa2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f169561-c73d-4fc0-9e08-ec02ecf65229"
        },
        "item": {
          "id": "b5d9a8ea-05be-4ce8-9fa1-fb2b0e7db8e0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "890fc54d-326c-494e-9a42-653d1e79ab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05550f9b-000d-49a1-aa7e-4b2e0dffc106",
        "cursor": {
          "ref": "8589a69f-0add-4eb1-8192-b6ed724d697f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a140566a-8fb5-48ea-8273-71932843f281"
        },
        "item": {
          "id": "05550f9b-000d-49a1-aa7e-4b2e0dffc106",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "280ff646-c0bd-40ff-8a7d-08ef2697e47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa772086-ecc2-4329-8617-9af0dddc8666",
        "cursor": {
          "ref": "8d9bc2ae-2e91-477b-8600-cefabdf6ecb0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1bb304d3-368d-495b-82c5-cc889e5a55e9"
        },
        "item": {
          "id": "aa772086-ecc2-4329-8617-9af0dddc8666",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e6070b72-194a-4023-ba6c-c2afc95117fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b734d9-3e34-4507-ac65-2308b7cc21ce",
        "cursor": {
          "ref": "dece0c02-87b4-4038-9988-113a899a6820",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d6b05b77-0419-448e-8365-c6ee8e28ca52"
        },
        "item": {
          "id": "b4b734d9-3e34-4507-ac65-2308b7cc21ce",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "77b15121-a491-4745-9e81-53f0efc95037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0de05a3-6f90-4c84-a45b-a033f747c528",
        "cursor": {
          "ref": "0ff2be39-05d0-42b1-93a0-e788a71b4725",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8194acd1-fb91-4d2e-9003-166e7fd407d7"
        },
        "item": {
          "id": "f0de05a3-6f90-4c84-a45b-a033f747c528",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "67266c1a-f3f9-4526-b8ca-176daec167ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1401bb-9639-40f7-9117-c8328075c15a",
        "cursor": {
          "ref": "dd1827a6-5f81-4b82-84a0-6467ed853775",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "35d91744-85af-4b7e-8288-55de52de2f26"
        },
        "item": {
          "id": "ad1401bb-9639-40f7-9117-c8328075c15a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ca67d7bb-ce6d-4426-929d-97e62b22b8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea2ae49-9759-4759-bac9-17f54a93ff2a",
        "cursor": {
          "ref": "5ecccb8b-ad06-47be-8d4d-38399fd8b356",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "06b6503c-619c-4707-bedc-4830bcad9e77"
        },
        "item": {
          "id": "8ea2ae49-9759-4759-bac9-17f54a93ff2a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "52281de1-573f-46d8-a7e7-c266dbf3b69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9a954c-25fe-4c3b-b161-165cf93d67bf",
        "cursor": {
          "ref": "77a8bdc3-b567-4e62-ad98-9708c0d4bb4c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "40ef44b8-c691-4eda-9c32-6e53dff6e471"
        },
        "item": {
          "id": "6f9a954c-25fe-4c3b-b161-165cf93d67bf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a9add42e-902d-4fe7-8047-3a43c8f00899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c0350c-8e14-41e8-93fd-d66f40561f70",
        "cursor": {
          "ref": "4bda82d7-6b7d-4e21-8e65-6768c423ee24",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d37033fe-d6c1-40e1-afc2-25d70123cecb"
        },
        "item": {
          "id": "21c0350c-8e14-41e8-93fd-d66f40561f70",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "de93bf06-ccea-4e64-9ae9-f1d2ee1c798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e280bd9-492e-49f9-b4ce-3f5d5e8f8d77",
        "cursor": {
          "ref": "2e450310-076e-460e-822f-b7300e739a3b",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "49f20f43-4af4-45ba-af2e-8324749766c1"
        },
        "item": {
          "id": "5e280bd9-492e-49f9-b4ce-3f5d5e8f8d77",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f6486e3e-0056-4c76-abdd-36075b19f278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f771cc34-d762-4250-a181-6270514f1579",
        "cursor": {
          "ref": "a8c45aa8-60ce-4ed8-a3f5-2d4543fdd3fb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "85c74ac8-26a0-4f76-9438-3c79810f7c0d"
        },
        "item": {
          "id": "f771cc34-d762-4250-a181-6270514f1579",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7dbdb32b-1571-4482-abdd-db95ec18f130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccb0c84-de18-49d4-a81f-03d9648b59ef",
        "cursor": {
          "ref": "f01ed168-0451-4dc1-af55-9b19b9801d8f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6bff1c8c-a70c-42a5-998e-8917a79c0b0b"
        },
        "item": {
          "id": "eccb0c84-de18-49d4-a81f-03d9648b59ef",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b6de3026-dc14-4d45-8bed-ca75930faa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708b739f-40d8-47b0-b0e1-07fbc44d06bc",
        "cursor": {
          "ref": "58b85c29-b963-4193-a148-9269aa011d83",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3b58250a-e75f-4898-9c7c-836285128567"
        },
        "item": {
          "id": "708b739f-40d8-47b0-b0e1-07fbc44d06bc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3b60fdab-09a3-4654-941f-54063880da33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96617f5f-6b3c-48bd-9d86-7d5d6ab446b2",
        "cursor": {
          "ref": "5c584af0-62d8-41ab-a670-c34fe27eb6e3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "630752b0-6177-4734-b560-bb5a4f938cca"
        },
        "item": {
          "id": "96617f5f-6b3c-48bd-9d86-7d5d6ab446b2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3ec711fd-952c-4deb-8f38-4ceb7aa1dca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206b9bf7-9f7e-4709-8bbb-f9335f12d7da",
        "cursor": {
          "ref": "a9e20455-1267-4381-96c7-b48f29a53a72",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bc617962-1e6b-468e-a05a-834ef0d32310"
        },
        "item": {
          "id": "206b9bf7-9f7e-4709-8bbb-f9335f12d7da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef98ed3b-4e12-415c-8486-1f43db7498d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5371152d-f99f-4486-be70-39a60b370fb4",
        "cursor": {
          "ref": "e9b697f8-20df-4aae-8531-8e77bdf5f9fc",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d07b4478-ced8-4c6b-949c-ffc63866f6db"
        },
        "item": {
          "id": "5371152d-f99f-4486-be70-39a60b370fb4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1a171907-01d2-4932-81f1-f7fb135291f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc25c7e4-9f3c-437d-90da-6ed72403679a",
        "cursor": {
          "ref": "cff37cb0-0c96-43fe-bc09-2bd49115926b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c63828f0-ede1-475c-82ed-88f2202f76a6"
        },
        "item": {
          "id": "cc25c7e4-9f3c-437d-90da-6ed72403679a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4be6fd88-21cd-44a5-a509-7ec8ba1608e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d3858-ec7f-4380-9cce-dfc0d54ee540",
        "cursor": {
          "ref": "191100dc-78aa-4504-8cea-65879a20689e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "af4703cf-206b-440f-9b3f-030b943fddc4"
        },
        "item": {
          "id": "fa6d3858-ec7f-4380-9cce-dfc0d54ee540",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9fae2247-16db-4a43-87e5-7fcbd85cdb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1527d6b2-8195-46c7-8fba-224e4d4d9219",
        "cursor": {
          "ref": "8d6b7841-72f8-474c-9f36-0728daa08059",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dcdb7105-4360-4d96-90c2-76b62941ed81"
        },
        "item": {
          "id": "1527d6b2-8195-46c7-8fba-224e4d4d9219",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "14462eee-3bfb-4b13-8b9a-0612a648cbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14727824-f1c4-4331-9fba-77e9e6b64889",
        "cursor": {
          "ref": "91c2e795-96b2-488d-b0b7-177bb4385727",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9d7b625c-a053-4c08-b09f-41a507fbdd26"
        },
        "item": {
          "id": "14727824-f1c4-4331-9fba-77e9e6b64889",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "578c3138-8ec3-4794-b72b-8e4abd7e2bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab8656-7177-4ceb-98c2-b6b3b0ad55df",
        "cursor": {
          "ref": "3686101c-8a0b-4134-9de5-9546a0bb7101",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "876c0e8f-ed2d-4a88-a0b1-d66c64398ecc"
        },
        "item": {
          "id": "54ab8656-7177-4ceb-98c2-b6b3b0ad55df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "07bd53a8-572e-40d9-a29d-3f73911427b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05190149-f922-431f-aa83-6c9f2c324c29",
        "cursor": {
          "ref": "215a3b9d-cce1-4b12-a51b-e4f335682f52",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "89f34632-d82e-4004-bd19-0c39c0471f1e"
        },
        "item": {
          "id": "05190149-f922-431f-aa83-6c9f2c324c29",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e24693c6-ffdc-47ac-bf15-c0fd56ba49dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3df331-f88d-434a-87bd-1c66b99dcaad",
        "cursor": {
          "ref": "fb2e8549-bc10-407d-b1a0-012ce1ba29bc",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e9f9965e-f458-4762-a985-a91a9900d335"
        },
        "item": {
          "id": "0a3df331-f88d-434a-87bd-1c66b99dcaad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "caea0af1-9c6a-4d13-829b-81fa06ac615a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c670afc1-8eb3-46a0-8e49-8c25361352fe",
        "cursor": {
          "ref": "469b5fcc-2ae5-40b1-8b71-1e759c8c21ba",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2c044696-baad-4daa-81d3-2d8f569d2aab"
        },
        "item": {
          "id": "c670afc1-8eb3-46a0-8e49-8c25361352fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e413fa64-8579-4c74-baf8-01df3744a3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b53d2-96d4-4d9e-9e0c-8d596734bc65",
        "cursor": {
          "ref": "39d98b88-bc96-47b2-87af-71be342b6612",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0977e867-2aba-45f7-8b97-9d7974f82613"
        },
        "item": {
          "id": "128b53d2-96d4-4d9e-9e0c-8d596734bc65",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d7da9050-160b-429d-acee-b717978711d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b0c93c-9451-409e-a43c-f2718b91976b",
        "cursor": {
          "ref": "be624c21-9b6e-4440-b35e-9dd2072f537e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4532b33b-48f7-4149-b4fc-286629a3cd27"
        },
        "item": {
          "id": "54b0c93c-9451-409e-a43c-f2718b91976b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "294878b9-9bf2-4c2e-8122-f590f590ec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a4f206-590c-4497-b2aa-443aa190e6d4",
        "cursor": {
          "ref": "d94b5fdd-7e02-4a14-ae69-e3bbac1a55f7",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "dc558158-c5ec-42a0-9a55-eab9442a8a12"
        },
        "item": {
          "id": "e9a4f206-590c-4497-b2aa-443aa190e6d4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2b2496ef-d0b6-4158-94b5-b16ab55ca9a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c35bfd9-5ae0-490c-bbf4-2e9f9e6ccaf4",
        "cursor": {
          "ref": "cb3cbceb-f2af-41b0-9267-9e64856b68a1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e9625464-df40-4709-b1f0-f824b7ad67fd"
        },
        "item": {
          "id": "3c35bfd9-5ae0-490c-bbf4-2e9f9e6ccaf4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "89b4d3e6-f7ef-47cc-afb6-9a77eb8483d3",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0913889d-c2dc-4ed3-bcfd-9e78b452f435",
        "cursor": {
          "ref": "f25591c0-71fc-49cd-976e-ab293f8bf4e1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4c5271bf-2105-43bc-a34e-972fa2a65bdd"
        },
        "item": {
          "id": "0913889d-c2dc-4ed3-bcfd-9e78b452f435",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ceba3c6f-4ffa-4f1e-8056-3b0412ab22ed",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84869336-0bb7-4ffc-9888-ad72842f364a",
        "cursor": {
          "ref": "3bf98dd6-8993-4b04-ab41-31fe6cf72b58",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "94908bb6-b43e-4d71-b002-df937ce0f809"
        },
        "item": {
          "id": "84869336-0bb7-4ffc-9888-ad72842f364a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b99fdc5f-c3e6-4c8a-856d-3f88cbc31f41",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02af6e-a127-40f4-9b14-1a972c39240e",
        "cursor": {
          "ref": "2ad16a99-506c-457d-961a-32f5acbfef58",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1aa61937-020a-42c4-a482-e33c1031ba35"
        },
        "item": {
          "id": "1a02af6e-a127-40f4-9b14-1a972c39240e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3c2e7f25-c65e-4368-81e0-156de64bdf1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02af6e-a127-40f4-9b14-1a972c39240e",
        "cursor": {
          "ref": "2ad16a99-506c-457d-961a-32f5acbfef58",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1aa61937-020a-42c4-a482-e33c1031ba35"
        },
        "item": {
          "id": "1a02af6e-a127-40f4-9b14-1a972c39240e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3c2e7f25-c65e-4368-81e0-156de64bdf1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17db5d0-7966-478f-b95e-6e24f18eda7e",
        "cursor": {
          "ref": "20511ef3-97bf-4095-8439-44d045090ebe",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fe7997e3-3db9-47e9-9177-8fb174959011"
        },
        "item": {
          "id": "d17db5d0-7966-478f-b95e-6e24f18eda7e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78fe8c7a-8cd2-4157-a6f2-2a55e75ff877",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89440910-3bc6-495c-9d24-e473af5feac0",
        "cursor": {
          "ref": "b4d1aaa4-597e-4b61-bdeb-181b2eababf7",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dbc2933d-6dff-4ab1-9ac7-69509462edef"
        },
        "item": {
          "id": "89440910-3bc6-495c-9d24-e473af5feac0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bff4ee63-3f0c-4558-9b4a-675db9f0151f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}