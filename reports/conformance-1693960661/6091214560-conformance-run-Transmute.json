{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "af9f961c-65c1-4b6f-9b7d-aff3b4d0762b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "81cf425c-df06-44d2-a228-2a3a3e0a4492",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a1a6b61-5cf4-4ee6-98e5-bcbe429e0165",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c67d9bc4-9f56-4eca-9e7b-f8742fb914a9"
                }
              }
            ]
          },
          {
            "id": "a91b3791-b0e8-4b0d-a663-a14f46ecd317",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43540ba8-d99c-4a87-b525-c314f13fb080",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b00f34de-da7c-4309-a664-7fcb207959db"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b1e229e7-b63b-483d-b42b-36e7344364f7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "94a667c8-08eb-4f6c-b126-eb7e485820db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6eb20556-b011-49e6-83ba-71663c47ef9f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7990c702-0de6-41cd-b49b-2fede104d898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01557326-a861-4c77-9f25-dc64e5c17f51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "335dae36-86dc-42c4-b1d5-3069cedfb3dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ac39b9a-11f4-49a5-a92d-5070eb556aad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "360c1747-63cc-4947-a30a-635a8397ec03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "863664ec-8e0a-49c9-9a46-1944a552f4b5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38f20bc1-97c1-4620-81e0-cc97ad7382fa",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7b95dc8a-664b-4523-b2fe-e2e89f56c907"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b0c3555-dece-49b8-999e-c0ee9f8df3f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "718eab74-34d0-4ccc-84bf-e181b2fb91cf"
            }
          }
        ]
      },
      {
        "id": "8fc38851-ade6-4bd5-9340-6e3559a90967",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a90ad466-6324-478c-b3bc-af67b53b4c97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "459aec27-34e1-41b3-a162-bc4db992a908",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b769da9d-c6d1-4a50-a105-7bd95c0b436d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25660a8d-90de-477e-8aa5-2ca98cec6a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8b3db44-b9fb-431c-9398-5944fab007ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dadc0d-d6b8-4515-8ecd-d9c7bc771905",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f48ad8-ff41-4551-9308-7337e1fda7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35f83719-6a77-43d8-b58c-15c58fa1d910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff962bb-68d2-4f5f-a0b4-e9e79b5e9bd9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2892f-a2a1-46ad-a338-74c55fcbe529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f90cf3b0-efb8-4116-98f9-de74db84b9b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ad17c8d-fe94-4766-b747-6e8b93c86537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6e7bb90-108b-4443-93cc-597a4906c26c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa8ac10-107d-4826-b925-12d503c941c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a772495-1e04-41be-ba2e-7610277cf1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c9365c-3926-4d66-b637-50d6da63f668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b92e6e-3d15-401f-9083-1fb179acc028"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b32c05e5-e203-495d-9d6c-7261057082d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41a5f337-5d9b-4c83-b526-97486b8f33cc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50f3667e-12b6-4fee-a591-b8f669063cea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bfccedad-d76d-482e-97be-55f9c62ea527"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecd6fb17-054a-44ee-beaf-8bd23f14b436",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6a9b8945-4b77-4268-b55e-9a31b7e2c84a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd87eacb-933c-4f1c-9563-7e1ac67f7834",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb2d2d32-0038-4c57-be1b-979b25f99d92"
            }
          }
        ]
      },
      {
        "id": "db2026bb-8cf1-4e5f-b915-ed9bcecb3d02",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f0bf0bcb-4e48-4a8d-b038-8cf5097e953a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f855430-25f9-4fe2-bae4-a52c5773501e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a137380b-8ce3-4a61-bf90-c5f8c5b6ed44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ac1cef-42fe-4165-9fd8-80adf84d4963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c653087-3cb6-48ab-a9f2-65a66e57960c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0462b062-2401-43d7-87bb-c7888437cd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfbe6720-7bff-4377-b070-609216b80c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d88c9-2136-45e5-9dcc-09fdc4575cad",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28549b96-f19c-47c4-bd68-a0344c82b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8f6d4d-9240-4d3b-9158-af5460b79f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24b1fab-d157-4c2e-89b0-653fdc00b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d323b89-4efe-4b11-b2dd-ea1c4c0157bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36fd655-3b7e-48b8-8748-b30ce1979231",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a08a2-e003-4b82-b4f2-c0a226a93f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d9cb56-2661-4ceb-bed8-e08f20d20505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0686d3-3162-479d-b2f9-d1264d363e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88abc3c4-124e-4a71-a5a0-ec8020029913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82851b5-3104-4f8d-befc-c640421db590",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7011e489-49c9-4582-9f27-636b9e23cf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063d524a-cff1-499d-9710-f6590ac151a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdad428-03ef-4e6c-901a-a05446d0ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44f773c7-8ed7-4d6a-825b-2148a84ef3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2360783-8ae1-4473-9b2c-dc527090c72f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4955106c-9dd7-4a4b-833d-58574d61662a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fcd13f-a68c-407e-88f8-447b21d33704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb70d39-509c-4537-ab66-7924af845102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7992e24e-406d-45da-80da-3b643d60dd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba39376a-897b-4427-97ad-60fa7f119e75",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a67103-38fb-4fdc-9aa2-3ec18b94b609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35187c6-daaf-4302-b9a7-2b23e081a97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff72ac9-c144-4380-9fc5-1264fd31ff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82d41188-7c92-40b0-9e50-1eab3b7d58c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec8ba25-055a-4550-b8d9-e4509261bea6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934f420-8535-40e3-a820-d83160dc74ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b3ac67-9d5d-4b65-8280-5591f1482092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cae80c-7ec7-47b4-ac22-aad0592e928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "748bf319-2034-44e6-8c3d-23f2c25333c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b6d631-d53a-489f-9470-75468867c7a3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7166771-e4f6-4399-b945-3f283236160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b0f30a-554b-4606-8779-cbc637fb551d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57273142-484c-488b-bff8-b6b7b2fbeb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e446600-064f-4e83-871d-1688897f4c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b331f5c-a398-402b-839c-434aa7f83ef6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1003adc8-cbde-4eaa-ba08-07764540296e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6d1b87-d7fd-41ad-b915-a95c3375704f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e192ef0-3011-4bd8-a87c-b4dce2f30a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f24dad2-b9f1-4286-a115-b02c23c4ee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34976d6-1181-43e8-b160-dbdce475460a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94705471-d04e-4311-9596-96f43fa8fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe789e5-9c3f-4547-b787-d40d30868115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4193a088-ad74-4fb4-bb95-43edb687b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b424a39d-01b2-46eb-9443-6e7829209b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4946274-115c-4e5f-9fd5-6cb3e1270530",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daac5cc4-9892-4784-b0c4-14e1d7733dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657c65bf-dc6a-45e7-9da6-fbeb7710e36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c49889-3937-49e6-9582-286e4495d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d23728d5-a9c8-4a00-a7a5-ceae18f2be7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d601d32-fa88-4a39-ab04-cfcd98a342ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20800ab4-7c22-43f8-ac96-0b42f2b82aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb4e2d2-a1bc-4600-bc05-0fa8d8fe484a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b923c9f-142d-4ca4-a9f1-1ac40783cd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0d58226-7b6a-4746-9f3d-b20fbcd0565d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9217e5-7994-4a41-86a3-c6d8f3eb4f64",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c67392-c03b-467e-a166-546ed2ce919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7e884f-1d82-422f-b04f-6c51dc27e4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7490b5a-384b-45a2-8978-7a60a6a552ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e7c53f8-6eae-4f8b-b4e2-2e7687d7278d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2710e1-e3c0-42f6-88e8-461898df3d87",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f5711a-a36b-4f00-aefb-ab82aad6b6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc07a586-9b6b-4317-a86f-1f66d2f4fa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9a66db-c5be-44af-8e3f-833ce3ecea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57504461-fa2b-4471-8c34-ea61b092b9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbe94b1-2de3-4b7e-bcbf-c115979d51d9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc2e06d-492f-467a-84b6-058f08f8ddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e1c815-1ed2-47bd-b6f6-bd3c12fdb34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef43c81-d56b-430c-b0f8-394761ccf780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31889ba1-66cb-4735-8a95-ff9245a8fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71825e00-7f4f-4565-ace4-b6d0137e9e3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d383270d-4b93-492c-ab3f-b40d946ef70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69e3b50-517e-4491-8bf8-c6ec632b099d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2fe969-f20d-44c8-9647-8718ac7f1e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0730fa8c-7cbe-4e2c-b1c2-2a2ae686238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2c0471-a06b-4162-8f8e-c8502d1f50e2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f8dd07-d68b-4f6f-a21b-7261ffad904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14143cfd-5f38-4e7c-9749-8a2448dafc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7239b65-2667-45c2-bd1b-ba8709aaa027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57790f03-99b3-4dda-9dba-ed992ee02432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cd93dc-49d7-4698-9330-a2223f695e66",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ae399-6778-4589-ab82-66408df5386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe745858-f14b-4d57-88fb-d1cc5cdec75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79500a3-b120-4c22-aa89-1672140ef2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3646de2-1297-456d-982f-f5db0d22093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d85729-b99a-4d54-9f0b-4e45e3bd8b12",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125fbd7b-c1a8-4253-8c3b-767390690548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6754374d-c94c-464a-9937-cd02b3679cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e5c147-ec46-4c17-b76b-611ed40609d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89572c67-7fd5-445a-9161-ad047eb67fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fbaaf9-d2ed-4447-ab62-d1d3d5517f29",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a879af16-8c77-40fc-acc0-661c414455dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac45b927-4b80-4f42-a1c1-3fad7ecb6c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7ce44f-b428-4e6c-89c8-9383d6938e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91c5c32a-1b0d-48a0-b576-a475e88a1a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06999e2e-c1dd-4168-ae3d-f3af1f5b63bf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5f421e-dbf1-4282-b099-7453e70bcc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3b497d-010f-4956-9696-72217e5d489d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596be795-4e23-4870-b660-00616fc204a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea530f6d-c998-41f1-96a8-ee9e99cae0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d9b7e7-c58e-4408-90e8-2762f8a1741c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1599e0-fe7c-4cbb-9a4c-00530fb9a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5937982-a29a-4ce6-b020-6539238b5757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad61a12e-3b4c-40fd-bc8c-73f1c091eb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17019e56-b750-44dc-938b-a9e9587f302b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599aa328-777e-44f1-9277-1c1e14a10b15",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191d602b-f687-41cd-9396-080a1a2ea177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfe2cc9-7437-431d-9e8f-7479373db0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3408d0-221b-42d1-9d83-99ba0f2a52e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01e056f9-811b-489e-ae65-253d51ec8066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61fd4a2-c2fe-471f-a846-207ce287042a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec2fbf8-15c0-42c0-a036-efadede4231f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9dddef-b49d-4db0-9a13-0294aa1242e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78fef77-6f58-4cb5-8f4d-158d8b2a4f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59547e9-68b8-4f54-a370-e9cbcbcf58c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11764e58-bc4b-4e6b-86d8-44d6bbb41674",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efbbb46-a4b8-4b23-a58a-aca352017e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dce1ff4-415d-446c-bd3c-73dbc8bfd02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6baa989-8b1a-477e-ab53-ae3f31695adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7c0df0-d5c6-453c-b65f-69aa6c9de3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7b9f1e-d113-44c4-b4b1-57978817ff86",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f399a94f-48fa-473d-8aa1-441535a26be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b319ac1-85e1-4044-b7ad-5a3f8fd77dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba85a4c8-3b61-4820-a219-0e954deeb6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d89680-f724-484f-b87e-d75001168cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47410245-ae36-4b1b-82af-6274697c937d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29492031-df0a-4e52-a011-ec0d333bdb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8df17b-3145-4a5f-8dde-5bd4295bc082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d9436e-6622-4ee4-9110-ad225c5acb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4a265a-5f6c-4452-82af-29c101731381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6afb218-af9b-4ab4-8332-f6f2134ae533",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad37d54-f903-4e21-b3d2-7490b69b170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ce9995-29e6-471f-9249-6694dc9e69dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb6041b-ab40-4fe1-93d3-9f6e7e3d7e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36629492-4542-4164-a2cb-4da303ee9f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8b547d-7245-407c-9ac0-241e8b519904",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb80a221-1b79-4e77-b8f2-abda702c42fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9d5958-6397-40ac-80b4-07f8292220fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd173819-2111-4fc5-a533-bdc6239e1eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcecebe-a95c-43cf-8efb-dafb8d691629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a8ac2-025b-4604-a133-b0dcfed52136",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1b5649-f862-4358-8529-5b7819fe3ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1220402-152e-4310-9a55-8d062282bd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb10ef1a-9569-4adb-b933-76889a3227c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "229a94f8-29b0-4671-bd65-a5f0c39dc681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f73703-f98d-4dc1-ac92-33d9d6028354",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee4d5f4-844e-4433-ac83-f0a4f568a8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4e1b0b-afc9-4fad-b653-2bb8d4cc3257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e07635-72dc-4323-b08a-40d900893751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d913b2fb-7a4e-475f-9ed7-14f7626054cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae48612-5e9c-4d5e-90c5-fe73a02753b6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2fa790-2859-4089-a7e5-aa9dc60c6469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a693d62-29c4-431f-b695-c04287e711c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2550d5f-115c-4cd9-b600-ea2b0c5b9c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba351df4-9515-4dcf-842b-ede212b0a949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c98e2c-71d9-426c-8df2-5c21ab7e29e5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b687e4-cc9c-4407-8c7d-4d71e855f5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b92602-e770-4bf0-8f2e-1761903d7f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7ea234-5214-44de-93c5-c85d9b86f880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55952e24-3ae9-4aca-96ae-801036c85607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e720fb-2f0d-43c5-ade9-855518500f6e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b932223-0dc7-48d2-9f79-49ac6d464e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e5e52b-28c8-44be-b23b-e3e7da9de801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4c23dd-5ded-4cdd-b824-81e540da3a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b2dc85-be5f-481a-a419-b4a9ab0b0c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7da2c7-7df9-4d07-8e1a-ed7ebfc54b28",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87def04f-889e-47c5-a0a9-97e2cfa835b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56124e8-b10b-4488-b601-79f9dd3b9ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb138cb-5356-4958-a8c1-0ef445eeb4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ba012a1f-65e4-44d7-9e5c-0f66f54f608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f50a205-3f69-4629-ac9e-d8ad6644a234",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa535837-6e74-4fa4-aa39-a5de0a254a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6963aac-3f50-4113-8615-9d02a2bbe072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc101b6c-7e0f-4a3a-84d7-0c8264aed439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a37db61-a79e-4880-8c41-04bdbd17a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca681b-2334-40c9-be77-c4c3f9543f43",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865d6356-3ccc-4b4e-89e9-59e55a810ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6126165f-5948-4d19-917e-8637fdf45c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08167333-3ffc-453a-b973-ad8890c11e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be6c6dd9-a114-478c-8e88-509296950fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc85570-59f2-421c-9a96-4b783dd673dd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026cb9df-09c2-4513-9d8c-58b2bae56c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597108ca-4c8c-4eaa-ae9c-eb0820c76463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e1f616-e561-433c-a11d-f4790db53fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a525c135-4f58-45ed-9cc6-c553d8ced65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba9f330-f1a3-4c0b-93c7-a5429b36efe8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73a7ab2-2851-4ec6-bc17-e3a150eee279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbd2eae-b38d-4d3a-97d2-b54a70a3b169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6925cf-809c-45f6-981f-3f5d43deffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ced7aa1-af2b-47f1-9e60-14654225eb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6899a0e-1e4a-4222-830f-ed3e27ba1d1e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b5f52d-b744-4e1e-9b01-b6fc87a4c764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6abd88e-52e4-443b-b775-e8ed2ecde5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782b191f-8121-4fec-8909-0c0bee9d0356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a113b4-5508-4a73-8639-6acd41feb433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0743ba-e942-47a7-a5c7-591182c6df4a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89bc4bb-ff5f-4ec6-9797-acb7c7384edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f58a714-9c07-45b3-b065-3c7ee235f9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fbc68e-262f-4aa9-abe8-d46892516a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "977c214d-a524-44d4-b29c-a8244799add2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86485e42-65cb-49d7-8810-1b7460c8443e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66835d6b-af5b-4639-ba86-a04a22a2d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e96ff1-603b-4064-8d6b-24b6a9ef2bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976decbc-595c-49cd-b59b-0c01be1782da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "61fc24e7-b101-4593-9461-f9bc2e723504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3a80f0-7b09-4fd3-9024-56650c620d48",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5312dc90-54ef-463d-9533-2638483fa703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426aa29f-9425-46ea-9b9a-fc4e8a9b9d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7924563-23a7-4085-b404-1ffda98318e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dffa7f9-18fa-4821-ae99-f72ba38bdf0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46821e9-a554-4049-af17-26adaf4a05fb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0a1d16-4bb7-4e9e-a7f5-712388bd97b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ea306c-f889-40b9-a603-63a0708fd623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5944b944-c093-433e-b3a1-e270128b0711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5374f588-59cb-4a26-b55e-eb5eb2c57a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d138d4-6e9f-48b7-b624-69b0dc8b5981",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8ff082-d7d0-44f5-8df9-b0ea376ef80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f60e7e7-ac03-4882-9f3a-39407704c6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831edeaa-6843-48e0-a623-48740ab173e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0702eb6-65ef-472d-ad62-558fbfd39cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6bca33-93f8-4a20-93fe-7555d45fa229",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b792caa4-961d-440b-9dbf-22b334751481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18129b06-67ed-497b-8f29-50080bbca047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de3ded6-08a2-4d75-a44f-b193bd5d387c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "209198dc-4a82-4777-844c-dca57028e7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9841d35d-0d64-4b31-af08-6be6f0d01762",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968475e7-f217-4eec-bcb5-98fcd045c1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611c7145-1828-4426-ba22-43df94c2f0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e92c7f0-c96e-472d-ac75-d4ad1789cce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9837c9-2897-48e9-928d-1561c10e0557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b8e22e-792a-4d5e-bb33-452a4467bacd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cb6b6e-ca96-4a66-a4f4-34afeeaca498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940aa9dc-e195-4d74-a7d2-2cb2651e81fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25117cb-b29e-463a-9c16-29a10124a12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ddc662-baeb-4978-98d2-faf583b59b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65cf25f-fdc0-4c3c-be59-d663bbb59750",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3062106c-1d96-4a5c-95f7-dfa4a8b9bcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc37819-298d-492d-b7ae-cc6bab39ff30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60218710-1bec-42b8-a353-b7d52a8d983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bac10a3-247b-4fd6-89ae-5e04165ce8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dd762b-ef7d-4fa3-b73d-f85130e10eb5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e19a44-5920-416a-86b9-e8792d50fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f7db10-714d-4801-bd24-6874c0fce679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6086caff-392b-4063-ad09-7f4ec3f078af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "413ce8e3-ff75-474a-9202-5400b5cbce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cf495f-ddbd-45aa-a87f-f18a36a349c6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de5afa7-ead1-434c-8aae-193c3e530950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c894652-9494-47d3-a969-4a96a17fb94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f5a61d-4308-41d4-b18d-2194a9cef32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c2660b-97d7-4415-a719-6a7b7eeddbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea0aec5-3a2e-4788-92f5-00bab4707416",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14962641-44e2-4aae-af09-2537c162f4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d82a764-69e4-441b-b985-1bc234a2f409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c3de20-1522-45a7-8162-2fdbefb17112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e32ca2f-4f6d-46d5-9701-382bab9f7d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d783a8b1-5ccf-4fcd-a197-f4d52e5af8dc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568c42d-63d4-4e0d-a649-239447f9a204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1548e97-b609-4d23-8b8b-ee145be76ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3496f750-2b51-4ec2-a82a-75312c8ed9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db5dcdc-28aa-4e52-ab45-333358f833b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2226bf6-573a-463e-ba0a-1db163e3cad5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1b5900-f90a-496a-9cfe-9baab0db7f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01354ad1-d8ad-410e-800e-ae424472a6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbf8f85-cf86-4af2-bff8-bbe60343a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf0175e-11c5-4aa4-8067-ff48e09199f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333d38a3-cf7d-4250-b422-35251339351c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf7afdc-1276-4020-a1f6-45e2cd3ca728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ab1312-290a-4b95-8529-94dced815b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd49611-196b-436b-b8cc-c75c501fed06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68c5575-3ca6-4bc9-9daa-8ff3dd17228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0e44bd-eb52-4fa4-844a-03d68395e656",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a25034-21a1-4920-9f86-e3a6def2bed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9df39d7-cbf2-4e4a-a6f6-321969c884cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f1cbc3-1300-437a-8548-36821739a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f27a0f5c-d573-4b6d-88e1-e8561cf668da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cea60e-53da-42e5-86a3-c5a9104e5c79",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0843da22-3fc7-46e7-b3b3-c4b3c0144b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3f57d0-79e3-4063-b306-ca48cd7c0f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82dd171-ac07-4243-b85a-142b21387770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf838537-f560-40ac-a1f2-b301a6d53e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9599b4c7-bf70-437a-a752-3dd7173e36e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facb4abd-030e-4a71-97aa-f8caed417f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31c98e6-6c7f-4429-b51d-94d7ae68e41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcab0e5-115c-4e43-a798-d68fbf3d42bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9066a62-5a81-4b83-be3f-dca66e809005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724d5bb5-ecf1-422c-a682-d4fd127162ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a447fa2-5a9c-453f-b8d5-0e192c95f952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94575aea-2109-4863-890e-3886bc05f2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bf0c3e-ebef-4457-9799-ec2b47161814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3ab8a5-67fc-48e0-a895-eb32847b1533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa0bcef-0856-43d3-9912-95c0f7184713",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5933ecd-67a1-4647-8ed5-76a9ee457b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8c74d2-bcf2-4181-8ed7-1e7b80ec643c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949cab21-3d38-4863-a961-625f91f306cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b18da8-0f60-407a-865b-cd02ef4ea864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb897b2e-0bdd-4ad0-bc15-2dfaf1fcb232",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3a7e27-ae22-4655-a597-ab4534a7b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df70dbe-0032-405b-be75-8f5291cccaa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb721721-1ceb-4141-963b-9729bca5f561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3011c167-eeb2-451d-b640-aa6ce564988d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00b181a-29b5-4d2e-89a8-93ba18f52e6e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c98e7f-540c-4e85-a307-beec3f758196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0753de5-bd2e-4931-aa78-e319fbe47c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4144e313-3a6a-474d-b47b-ee5cef73bd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1adbc4e1-30d3-4f7d-991a-cd98311b562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9415958c-4430-4c80-a9b4-55a6f11cbb37",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f8929-201a-4cc5-95b4-9373df1b3a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28357fd-7c8a-4a63-9473-d89a8756db5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b6dc96-7a4d-42f6-990a-ba66eea70496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c23ebe-4fcb-4f87-9afa-ee9307a3205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6c7122-fa72-42bd-8223-7410f69f25c4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0166c48c-0756-4040-a17b-901017899126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def51e21-a1b4-4405-b1a7-8af175c0cf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda80aca-1552-4e93-bc20-ab99aacac872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fe5ee6-2730-44a9-81ea-40add904f7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97ebe00-bd1e-4524-837e-74e8146bbb2e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cdb3f8-3e4a-4d95-98b0-3ace03020bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a1b3da-1638-4978-87c2-92f97c36eb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41ac87c-a418-4a32-8832-18df669acaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f661398-608c-4acb-9f8b-d4f215fff853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668d66c9-3656-40dd-8d5c-632005439f74",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0539db42-4620-4e98-99fb-0aa864a22f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d96c1-1373-4ce1-a14b-e47823d9310c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520ad37b-e853-48ca-b611-64ffcd65a433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0188d86-12a5-45e5-be82-f5ca9c5696ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c3f19-b072-40c3-b227-1184c8a53276",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc349e8-8923-4f5c-84b3-2bf5f3bbfb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2705e2e7-bc51-43ca-9e01-80af994a0963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df6b52e-8092-4a3a-af77-d0c9f2bf0aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3605dd6d-ad25-4a8f-8658-5b6860752ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcfa40c-9339-449c-9c93-f0168e516b41",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a6afbb-b130-4b76-8c64-f0605e27d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbf2c52-dfaf-4963-9f94-bf03b905151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdab4e33-092c-480f-8894-d926a8ac0ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1018c05-0243-4637-8a2d-9adadcde5787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aea84b4-877d-4e73-922f-f6256c8435de",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265393c1-e4d0-4576-bacc-367224a83733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa80d4e-3c6e-477f-98c3-3d56084d1eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee077fc-7735-4ec5-9630-dfb99d0e54c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71acf0ef-4e8c-4cec-8497-9c9aac4e6306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d4ce25-6852-4bde-a1b3-8d0477e21439",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d74afc2-9d8f-4853-9c6d-0d82d6e0fa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9573d3f-236a-49ed-ae90-c58a07afc7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530083b2-98b1-4e48-878b-5332fd3b9cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00abdcc1-4ff7-4a41-af5c-7ad4fdb5bac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c64686-c855-40a0-8398-26070918d309",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94d9246-9637-4ac3-8631-57a55bb0bfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4db1a57-ca5e-408b-b0e4-01219543e2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fa18e4-60a1-4d9c-b794-cd27fe6d9a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4273f3-233f-4599-94d0-f39ac7c712d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf4c41a-3fd4-47b4-8928-8369b7df5df0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39e49ed-fe4d-410f-ac3e-db1356c65875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e42ff9-ef60-4f9c-b197-083bade5b764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcea8a2-8af4-4cd9-b11f-ccf05a574888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9530f177-8f28-49c0-8b68-8bbe45d842a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15aea8f3-7c54-4a11-8fcd-e02baf571232",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d45159b-2ea7-4f0f-829b-03a64248b23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a3ecf1-248a-43ad-8d74-3aa0455d1d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ba22b-b94a-4afc-95f3-8421123da66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5166ca5-0276-4c84-9d30-2da1998a3495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6fa6d3-b3c1-4ca3-beac-8730811cc6d6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43743f2e-b847-4666-b172-4c7858657fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2040e7fe-8313-42ab-aeb3-23ad75e13484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59c94a3-e44e-419d-90e8-57311dc7c292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4160582a-ca8d-4f4e-ba71-36a0bab886c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693834ff-4e7e-485c-b495-01ac9612fed0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dc076b-ce82-4979-ade7-b398f3e6d380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a59003c-b44e-4e3e-af0a-d1281d69da99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eda3876-5cfb-4578-8e11-80ece4153820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b187b9-212d-458f-92e0-82387f0f1ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3ad7cf-3d32-4425-9264-a24bca7629d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89976fea-dfdd-40c8-89dc-4128d5596e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9372f96a-234d-47f6-810b-0d9a52de0e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c59212a-2538-4301-8c11-6802307280b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2876fcb1-44fe-4a5a-a5c4-7fac0e0b5cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfe0815-b685-4c3a-bdc7-c7f4c01dda14",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f644bd-5138-40ac-98b0-b46f350fb5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08857dfa-2d77-411f-ad6b-0a8d80a47786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ef76c6-fdef-4052-8fe8-61d052f983fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92469cf-338f-4f1e-add7-c15d16d6b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb1a25d-ddf4-4c26-ad28-a98d5eaebe44",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33bfb16-2f77-4928-8d67-6f88b9505e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6992f7-c3ca-40ef-8725-d5b1eddc8ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadcc288-da50-45c2-a6bc-c0287a875dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c721cd-947e-43fd-834c-baa35f6f520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4448b7-4518-4398-ac25-2e799906080c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8a2dc7-b137-469c-8c4e-bd5f87715ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8511af34-4844-4b00-92a5-a7c3212db423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8bb6cf-9b48-4d90-b014-cad834bed0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e94acae5-f600-4420-835f-cca6a072bef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73abf26b-d910-4ed3-8215-8cf38f51310e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaec5dd-064b-49a1-a71d-f0a1afa0e6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d9338e-c3d8-42b0-b57d-3e1f166afd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044f333d-689c-4d04-a4ec-f06e08e29354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "673067e3-6ab0-41da-934a-bb92d681c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead53b9d-e794-4ad5-a596-a3dff5d84804",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6a29fc-7647-46f9-b1bf-bb82da53e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31df062-8089-45e9-932b-d027fb480c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf66782a-399a-41d1-ac16-a94b2409e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb6715e-1454-4a6a-90f3-1c4dd7d5a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4231a24-6ba0-4b64-9369-cd599f05266d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1526fd-29a7-4b90-ad08-bfc6cce5b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6143844-ede7-4fde-9fbe-09eb805a5102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28d32fe-0bfc-464f-8814-9729b7687a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24efac19-e3bd-43e7-83c6-b874207fa9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de2a7e7-c80d-41db-991b-8f202c1d5b85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a12f962-bec2-4838-a22e-4b59582d1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfe51d9-94e0-42b5-80f6-6d0d61d61491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e58e22-380b-4c13-b1a7-454b682880a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e432ff8-04bb-4a7f-b0e3-bd73bfbebfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6fefd0-c891-4b95-9540-5e0250093a14",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f5c56b-70b0-4e18-a5e7-1fee1db079fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c7ba5e-febd-4bb4-adf8-124a13400a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056d0935-4e11-4232-903e-d231304e9939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "127871fa-051d-44ca-b9b1-26e32dcc544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a1e345-99d0-4f42-beed-8ca8195e99c8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49a587a-6800-4d2d-8cde-00ba614927dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d91094-a6f7-4bd7-ac99-66e9e4e641ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ba04de-9d6c-44a3-847d-d86f5d3db731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5c7d80-0c5e-4cbe-9570-674a3d911bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f83144a-e28c-4a73-af60-a9494d7880cf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66140fa5-669f-44e7-aa8b-9fbc9557c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a29937-19ff-4edf-a208-8a4d5c2cfb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d369ddda-a09f-49a2-b824-4da8796fc547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e337bc-d417-4281-9e6e-578310a221d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c2d9db-9e5a-495d-9081-9f37f0764691",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f090c125-661e-42f3-a1b8-e796b840f9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddad435e-41e6-498b-a7e0-26b749cd1830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c833154-49bb-4f26-9451-7119b2536857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "652ce3c8-b18d-4d85-8cb7-e07cbc65a6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61398d-ec49-458d-a0b6-0d8387bcde58",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcb641e-2901-42b7-bb15-d7672b32c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439fed3e-3821-4520-ad5e-fa0658fdec3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bcd458-66f6-4fd6-811e-e8d04dd1f299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e700c2-6734-44d4-b9e5-cc8f179f3d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9463c683-6e21-4516-a8c6-3c218ae453ca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052c2fda-a2c1-4e5c-b515-17424fe77acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd279c0-2760-4b75-8df6-3480067b32e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67358e67-016e-4e32-aa97-2c1fe2415198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "624c2877-b42c-4e62-9331-fdf41c99b561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99983f60-0efd-4f95-bd37-230038691183",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b5a610-21c0-4de8-abf9-ff46236f7e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8a5f8c-a9c8-431f-a48b-0e882066e6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb95d66-6629-466f-9216-f10f00d2d677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d761abea-da3e-4570-8555-d249c23e2970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6456d64f-09b7-4e51-95a4-7b3d92019c1e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08db66ea-5345-445a-a9c6-f04abb3637b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324d5bb6-eed7-41e5-9595-90529c5d4b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff03b065-a610-4b36-b339-ecd441df2759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e187d1e-f2fa-48a4-a2b9-e18cd4b3f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aad341-14eb-4dc1-8488-82a4804d5abd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d39a88-fdc2-4bda-99c1-7fe10cf9edd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f3629d6e-1b3f-4dfe-bbca-ceb38da2f1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cad1d4-06e8-4de5-bba4-24ab911b86aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f37a6c90-ec75-405f-9de9-1ec388b195be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5956a82c-3484-4682-998f-4002ae1dc72e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac14ad32-ff06-47f0-a343-1225aed9cc01",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d901fc1-f4de-4f5c-9a5f-3f4775b50573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2918fd8-eb7a-451c-97a0-a41a66860354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5ae2fa-626a-4f34-9668-2aa9c0de86bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28554255-d5dc-4eb2-8c1d-e039135f830e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9f67e49-ee34-4594-8fd9-6307451e6778",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43816b67-54eb-46c9-b369-66b02cd6daed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be0ca02e-654d-4679-be53-4fdfa4548542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3408a3a-c451-4028-a12f-a84eb8d9706b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1bf768d-8f9a-4c35-9d96-a4af43ce0816",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50a15666-10f0-45c9-af9b-f0f71b9652ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa3cadee-9339-4c86-a4e9-a27b71fb19d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d7e32be-ff9c-449d-b500-71821fc868b7"
                }
              }
            ]
          },
          {
            "id": "371b9213-d354-48bb-a379-41dc08cb20e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f734a778-e16b-4b8a-93e6-b97d75358a40",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff136e3c-9b1f-4267-8f05-bf7cde140d62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e71b5511-2364-4c04-94dd-41a9d4ed43f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba44788d-0424-4c13-9235-6c74a0d39c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1072c935-b1c5-4627-a007-a65c4a5d7959"
                    }
                  }
                ]
              },
              {
                "id": "b8d808e2-a44f-4f98-9c60-b67c896cac57",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72297a4-c514-42a3-be06-8118200af87b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c3fdedc-3285-4e0a-b91c-c62e179822f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff00dded-8b18-4b7e-96fc-08ad4f8cefe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a21f0f3c-16f3-4fe5-a0f6-f61062f14197"
                    }
                  }
                ]
              },
              {
                "id": "3543cb39-5ddd-4f11-a419-6a86704ae6bb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ac6f3ea-c45f-4b69-ab52-ec88eb99a827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cfa93a3-8f36-44e5-9ad3-4aa11d96f417"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "563caa39-c3e0-41c7-8ff5-bd32aa51392e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f625897-7c02-4e6a-a35a-f28273c0678c"
                    }
                  }
                ]
              },
              {
                "id": "b2fa15a0-37d7-4a4e-ac26-d729f5d7612e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b0435be-06d7-40af-9090-f46d0d7b0f85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "571656a2-a58d-4467-b79a-80ba8e9735e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a93df5-fe72-4bbf-83c5-7625388ad756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28aac882-7201-4814-8787-5c28d60cefe8"
                    }
                  }
                ]
              },
              {
                "id": "5f63e4e4-73d8-4788-8e38-a6a37bc1b21b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9766db2d-2b72-4871-8511-eadbfecc997f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f28df318-3312-466f-b57a-6200a426d668"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "503b615b-d685-4c73-8770-6a0bda9ad052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5a36b5a0-d35f-4e02-8094-6eca27983985"
                    }
                  }
                ]
              },
              {
                "id": "52d7a91e-3494-4153-9c6e-8fb721babe37",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "339d5573-d04d-42aa-a95f-a28846b43b70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fbd85f0-7cd0-4e5c-b73a-82db5c8b326a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f211e5ba-5464-45c9-bc8e-35bc269be719",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "addb916e-a141-4809-b8a9-fa53786d050a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "282b9f05-0d6a-4cd8-aeae-71012838213f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccc7f41e-0f2d-4a86-bd0a-3ee7d21049ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96cf37da-2bc9-459f-ac06-4685531b797e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51e62b7a-5fb6-4d14-b22a-62576e1f837e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfe9f3de-c2d7-4232-92ce-cc1edad57b2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e61fb142-323c-4198-b4d8-c5e70b029f61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45572374-5b30-497d-b8d3-c8ed88a0c835",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d5f26ff-d1bf-4d4e-a80b-ffd559b69342"
            }
          }
        ]
      },
      {
        "id": "6d98057c-30b6-4e51-859c-48e0e35a1bfa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "14c4506d-85de-4bfb-9d00-079860fa5d75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cab6d617-4c43-463b-b527-5272cc80c284",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3140cdc7-5fe7-4d78-ac28-e91c188bbebf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcdba74-149b-4d66-a6cf-3bbf5e3f5647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc660c2-69c5-456a-a540-fb2782c6cc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9ceb5c-3e44-473f-9d2d-83eb98490f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f8f5a5-fdb1-46af-9ed7-e607d7f79375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3704a8ab-8efb-46d5-b259-d57099f9dd7d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3480d5be-2262-4dfc-978a-cb02ea1a698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6814181c-30ea-456a-9211-563088bc5314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0ecbdc-3f9c-4356-bef0-ec854df7f3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43122193-f117-4b7b-abcf-75a5d67e5e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e23cd87-d374-4fad-a980-5c4f6d96226e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748bb213-724e-4e6b-a955-1bf1883638f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba881530-e13e-4acf-b351-eb1ae028c1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b923eb26-c07a-47e2-b2da-c7e1975eb98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d037f72f-91af-40c7-9006-2179bafc0aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39546c9a-8fc5-4282-be03-0ea762f3321d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa02da0c-d52a-485e-bf64-d2ce6b513070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96e9190-fd05-4c8d-974b-50894a0202bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a06bd7f-fa66-4f48-b8c6-cfeaa2651f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba1aad6-9b59-4c8c-87af-17c1e2189832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1895f338-83ce-4b5a-8749-4438c11556ac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a00709-9ee1-4506-b1b1-804712e80b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e86498a-2729-4d5c-b427-ff2dd408826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29301d76-a1a0-4622-9cdf-eb29542fe740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0d9229-9bfd-45a4-af79-9631a1156917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8ce8fc-72f9-4428-8c9e-a68eaba9f677",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f06c14-2ab6-43dd-ae41-c830dcf6f3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ee397c-c0e0-444f-904e-3afa214f9ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a3486d-52cf-4f14-a5c7-3b021c5552f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34b5e5c2-cb50-42aa-85ec-bc0433470da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d98478-4199-44fc-9cda-4b92167dd4b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a90199f-8473-47e7-bba1-ba3e95136f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060c4ee1-042c-4951-9730-b670918504d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ae68a8-7e2f-43ef-a844-c26adb9ad5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97feeb46-e4d7-439a-b206-a7d18a5bd1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06afda9b-a656-4d2c-a4be-b96ced6cb487",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7264ec8e-e598-47ad-8bcb-b70d7c1a4553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d34778-e946-4d0d-93c1-f18782a37731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e807e5a5-f799-4664-997e-8e18beecc152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a36d19-fed9-47b9-88d4-98f464e9645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9274e5-d7b3-4268-b94f-264444bd738d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a0c7a5-64e4-4c66-b812-15e2b3a31fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b63bacf-cfa8-46fa-9974-65f94fa072ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dd3edf-345d-49e4-bf47-3d0ee5133a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e81e5b-fc86-4b5b-9b4c-161fc39fb32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c7b63b-8a1a-4d9f-973e-869f286b66e4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c515be-23ee-4228-b0b1-4523768d2bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2006c328-e8e3-45e7-a056-00ffb8323e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3ac29b-b5f8-46fd-92bf-27d45636a86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0790e5c-b5cc-4f34-9324-268faddcb6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54a830c-86ab-40c7-8cbf-05ce09b07a4c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f51141-a34e-4fd7-837b-0c12cda8425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306291a4-0ea6-4c15-acae-cb4d5bbb2643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03cae73-cc36-45d5-8f83-16a2644b0aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e080a02-3cbc-4a13-806f-c1c6abb00f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c671dd06-62f1-454d-831d-33b0079812c6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a125418-d2b2-44e2-bbd3-56492d208b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd65e8d-5f7b-4ae8-8a3e-18cae631809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fed4650-e99d-47a5-9b0f-51d9a9bc3f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "263c05b8-3a75-4008-89ad-b9ee6003bd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0da02f-2b87-4859-984a-d6ad5acf0f18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d53670c-9373-4f09-acdf-d4d43ab5786e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553bd3f0-ea43-4a9b-8967-5c27195e7dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64408050-8de5-4552-b6a2-36fe3f817642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd0f862-5c40-4745-8767-c7764d50689d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca412df-9b1b-4aaf-95c7-b28f1838bf1f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a1eaf6-3814-4482-824c-5eb971be7265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9dc2986-0e36-4ff8-886b-f39fa129c7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1994bd9b-258b-48dc-8925-224adecb1e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "be021cc1-6337-46a9-9451-692be97cd010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1cfe51-05cd-421c-839f-766fcd01516b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f831c0-8a99-4cc6-a0e0-0db4c98530ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d4a0bd-dfca-4f86-8cb2-294dc8c28280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a37b5-cce6-41a9-b789-98d597d949b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "360a0c4d-cceb-4e77-9654-cf0635056f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21393536-a833-4a22-83b4-a4414ee3db5c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c89be7-3188-42ab-bcab-171f70b6e420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50eb4025-8806-4732-83a5-6e483987cb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369ef6f5-9e85-459d-8a63-6156a541f248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34d455d-f7e4-4eb8-811d-a63e3d535217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a20288e-e1db-4e10-b8e4-d5c149d1a08f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16560a4-ae63-483d-9f2d-cd8b8c232fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc1d594-dfb4-43b4-80cc-a4090cb13a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdea0756-0301-4dfa-84af-93e2b86918a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0797ab-4854-4891-ac5e-a4384a71174d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b97a9d2-bb9f-4516-9911-d924cc141df7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a6dfbb-b4ba-4755-868a-31b5b39baa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6549a8-052d-44bb-bff9-2607b37b2c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad99e41-75c6-48ef-b277-937ed8811146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c606c27-309a-43c5-8d99-ea3f863594e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1305d182-9363-487a-8df0-16892e366482",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa4219-b3fc-4f3b-beeb-18cf4c49e8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6543ed-0ee4-4005-8e76-f5b4a6062131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f3c249-0b37-4f0c-a04d-aa110c5b2f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b180cea-d06f-4e32-8d59-0654cf058b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a63eef-ac55-43bd-bbd6-b1fc9a84e495",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd20a5d-8820-47b6-b899-c9b28dd2e477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d59cf00-5564-4817-9571-fdd29fc491f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2830559-d318-4e5f-b059-886d7eef0ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a56d3fc-e041-44bb-98ea-88ea5b52bb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002b08cb-edb9-4274-9cff-5a2044fb0965",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f998bfab-6133-4197-8544-ea8116a7bc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38edd9dc-2cfb-4acb-8308-47788ef7397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8540c20e-fe81-4928-8f19-d7bad3de0e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27bcacb4-2737-4e58-bc15-cb71d109c6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201b5675-2261-40d6-a9e8-fdf8d8dfe29d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606605a1-7edf-4dfc-b1dd-ce923eb6ad56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df94bb51-5643-42f9-a40b-8ab7c8d78d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40b07ad-d290-462b-bd23-6161066139a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7b15f3-254c-4f6e-bb4b-43838eb37538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e681715-4040-4b7a-a48b-12ea3840d510",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825fd96e-dbe7-4bf8-91f1-16773cfb1297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f1493c-6916-4472-ac4f-939ff2414437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34328aec-9fb5-4e6a-8a7d-c0b7fefc7f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5053b274-4b30-47bb-8345-1d7dba6a562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f467d18-45cf-4a0a-9565-3123ab254790",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0304364-ded6-437b-a655-540072c32476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7ddca8-61a8-4d90-b4f6-70bfd8d54b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6acf43-f2ab-41f3-a89c-2fb7b61c564e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e5b8cc-68eb-409a-a25e-b8eb7dc5d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d07e593-5892-4879-9701-0301eb642940",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bede8e-ac4c-4f30-b195-2bb1a847e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065e0624-f069-4c20-9796-744de64e0130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa5d9ef-1804-47c6-a8c8-c3c61af6672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee670fc-2894-46ec-bae4-6676cf5a942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ef0599-a2d6-456e-800a-f8971a522986",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a343af8c-493a-4838-88a9-28c6615a0ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b83553-12e4-4914-bbfb-d03f0a35ab68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cedd1f-e6bd-427d-aea0-4cf774582f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e9a2e9-4abb-49bb-982c-d2a314619bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42f1d0e-f386-4fec-a6f9-1d3b79327a5a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a3ef12-662e-45a0-a793-e40ba0fd1653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590cba53-78df-4659-a936-2737f2f6a060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355db9a2-20ad-4e49-bd80-fdda4bf96afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0ecd98-41f1-421a-9980-75e960503d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4953195d-af5e-4338-ae1a-8f461482b90e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf9fdc9-5e07-4cc1-a12b-91728721ffbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae642a2-a9bf-4c42-92bf-b4cecf406161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cf7d6f-24f5-4042-9cd4-0d74934d6af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4fbb0a-1f7d-448d-9384-1bb98c6bd684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431d4ecb-4dd3-4071-8f4e-fd54f2b12618",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13740a39-12cb-4d6e-aee9-8e5bc7f73175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8871fccc-3a4b-4bb0-ab85-1c940a2f2549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74a4058-dbcd-4c75-bf26-4a17667d14bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21431c40-9050-47b4-b342-265cc7445216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dcb703-1a34-4ce8-a1c4-e81a961f9ec7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc50d92-fd55-4830-bae2-1f5060a41f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d158a2-78c3-4d97-b0a0-0c4fc6c7364a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a95cf5-7886-4c87-8a08-9d25f35be7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f654c22b-1d3d-4ed3-a4ee-7d02246c50ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1e2c1a-0bb0-4e15-a125-8c66d9b2eed0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b526b1b-fe2c-4f8a-a213-9d8dee4ea263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fd816f-1594-4865-9c8b-2b844a7dc6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7474fdc4-408d-403a-954c-46ab158498aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7070e7-4a5f-4a63-899a-9425ebbea4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbc6e82-41f7-4005-8a31-ee0630530a27",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afb11e-839f-4597-842a-adac759d1a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922fc4fd-1a8b-4477-8d23-281bc9963d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a00821-64ca-4287-ae2f-a72841f086cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a25e3e-77ca-44c3-a86a-c6b9c5f3b0af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09f6f7fb-f7a3-4575-a3ec-b937385c294e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d64db5d-24a8-4fec-a33e-f8b5efd79416",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28908acf-a213-42dc-9a9b-ae9eb8d7b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2f58dd0b-abb5-49b2-8787-c697e46758fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be64c17a-0d50-4b30-9f10-484ff39e8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74ace8d6-dfec-4402-a8f1-fcc8d5445ab4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "521e11a1-2263-47f5-b42e-766a1bf4a9cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32eb9271-73a4-4856-b07c-1a7b066734e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "349bc9ae-686f-402a-9b4a-cc05a8b91133",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1333e2fc-5416-4835-9186-8a8f87598428"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9de8eccd-6776-40cd-890d-01f0df01b011",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7ec1f7f-ae90-4104-b840-2d02382c3c7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d15bea97-ef04-4cdd-a0d4-f5a20db0f0b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e1a72b2-0409-4de1-8467-1c0ba5a7cffe"
            }
          }
        ]
      },
      {
        "id": "1bab6e76-8644-4ece-a111-7073140da439",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "69f6a23d-dfc9-4b6f-9d21-a5b3a1eeaf4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f77a6116-51e9-4446-bb90-659fbf511577",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7a8200a-f5b9-4962-a35c-2ee09bcb2e40",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7660d93-3b9c-4c08-a622-11f1be8a1e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba97d75-3500-44bb-ad4a-68f6691b270e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd79d31-2e2a-4a0f-93c7-afcda50a5210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a7aeca-5f4f-47d2-a6a2-d9d4969a41b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf0ea62-dd53-4748-86aa-e55374c3dbfc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e122e2e-bcc9-4ee0-a85d-ff70162aa6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9388f015-4254-44ba-9283-a803d2f4fc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa45a90-4b61-4ea1-b1b3-0e7eca936c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "384df454-ee76-484c-8cf9-6698662f3908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0fcec4-d6f6-47b9-92b6-7d39150c2c52",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0bd825-ed44-456d-93a7-88ffabf6ad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49137c29-32e4-4659-8fce-cca0a9925178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c81dbd8-9be8-4163-a6bd-456f91e521a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c9f545-2660-4110-b28a-5708615f1c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4e5d2b-9ad0-4802-ab52-3072a77ca535",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27491b4-054a-4a8e-b79f-1a1d6e5bdeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c7ab97-0109-4500-9da1-6aa52b16c8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e3502d-a745-4548-9f52-9e5fa8d69c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "122225b5-d97e-4cae-a385-42d3a1c85bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029ce7e7-12e3-4c90-9980-f1252300593d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc8e20c-707d-4591-9b6b-6a23cd982e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cde353c-b8fa-4314-b8ed-281c06e174e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46320fe1-20f4-4868-a905-124375e5a41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac48b862-9f30-400f-8946-4538326e06ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c17ad5-eeb5-44ae-9243-c2ce829b989c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107aad8b-92e1-4dc6-8ea1-479fcb0ba590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb07fbd-d595-41b9-abfb-c45a663a2279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0b59d2-fa42-4a45-b5d1-ed5d4fa05e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae88ea35-e29e-4540-92f7-b89659ea522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a46b92-3a64-48e0-a958-d2efbac8bf14",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2411c3ae-b2af-4f4c-9686-2d56fda3b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3115d7aa-ecf7-4228-9aba-72ae449a0e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f1d174-c45f-45d7-82ff-c16a90dc0fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15d9599-16e2-4eb9-a5fb-b10cdf3aab4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba5f085-e08c-4e8c-a45f-31590d1d5be5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3473ec08-288a-4b5f-80fb-836eccd5161c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff44a62-633c-4afc-8190-bf192791a8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c34724c-e8d5-4944-bfc2-30dabb718471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b8537e-5e79-424d-803c-be922214291e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249e1b6b-354f-42cb-ba2d-34698b120954",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23254b6-7646-4136-bf8b-89d9e18ad543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce00651-4ca1-48e2-90d3-43f6ad6fca54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb0741d-94db-401f-a703-ac91e9264cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "036ce60e-41b3-43bf-ab00-1a051e6461b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c9ae37-ac9a-4310-aced-77913485c064",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382a0b19-89ad-41f5-835f-fe9a68e0b243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d701d7-00de-41db-81c2-10cf273e60eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb03935-dc6b-4d98-babf-faf924355263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1357d876-cf48-42f6-b15b-883e1a8e496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab67339d-5f40-4491-9a0f-907917382ef1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870b3a79-e711-459e-85fd-91835d714951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b32fcd7-f3a7-4290-b1df-141248bfc2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a544fc72-34fe-46ba-88f4-4f290248dabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "decddf25-040f-4550-9924-137b7da8fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38774e6-a6c4-47f0-a27e-777cf7d30187",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3715ce49-fef8-4358-aaa3-0c2a21174123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894cbdec-859e-44b7-938c-f64efb3e98df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f6bfa-a7f6-4c4f-8765-f3e379e49bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9e38e5-f0b4-4434-9470-60372ba939af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95c4116-178a-4ad6-9c61-e10093f8a8a8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0639ae4b-d2a5-4b6f-8297-490ae7fc3a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60efd1f-2794-4ed4-b263-f2989fbbfaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0842e6-e1ca-4c29-949c-ba551efa94eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "078d71ed-dcef-4a2d-9b73-e5d1e918d4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc30349-84e6-46d1-9581-bd256d54df77",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a068e3a3-f927-4166-90ad-109435c3f46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67b4103-5184-4f86-b3ea-fd0c10cd2d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54357f9-280e-4225-ac63-957edfed2dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3aa7c45-7a00-4890-afd3-b86b9cdd2231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0ed6d1-449b-453c-bf48-4c829a954775",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe8e93f-391d-4157-90ca-420b54d35219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43ec63f-e2cd-47e7-bda7-5467952ea788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f628e1a8-ef5d-4e91-9b9a-3969b047b206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ce866e-f3ec-4927-8d55-231ba958c694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44a131f-d8f1-4459-8c50-70ded0f5d758",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea36a383-7ab5-47ab-ab3d-a5b1d05ef052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9401641b-6bbe-4923-a77f-0c7d4ae279e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe68cc8d-4c01-4431-a93f-6416f2a031eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5712320-6e54-49e9-9b0c-764db7be883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ef4f7a-55fd-44ee-bd91-27eec462945d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5da294d-0f0f-4c16-8ca4-573e927abf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfc5923-f8af-4ec1-897e-0c6f1b6d5cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ace3ad-18ff-4324-b3b1-3691e4188ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7a68f1-c3cf-4734-97d1-1cc9a968c50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111d3c5e-c69d-4dc8-a361-317a8593edb4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222cb976-f199-4f26-ac5e-10b63ee5430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a718df-589b-4b28-bdb2-48152dae1971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6a4155-a9c9-4874-ba07-5be55ecc4f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f53e66-4a1d-4adb-b468-a12fd674ae38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e2541a-ce59-4ab2-9f82-fbf82006d0af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821d3ff0-8be4-4dd8-8824-a24ca447f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cba7899-84bd-4a9d-8262-77581ba6a3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa90839d-6119-40bb-a062-1fa85a3f1b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "228b1bff-3f18-48c1-afc2-c51efc724edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5902282d-f9c9-4209-be4d-44f5ba325bb5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee54492e-bc43-409c-b2ef-8161fb5ba601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57afb8f5-22e8-4dbd-8a06-9d7c5ed5749a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea20f3f-74f8-4b68-9ddb-3cee49c73429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26ed334-d0d1-4a4c-a139-d061f807a7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c7249f-4177-44d8-a918-50196de3ed7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b58c145-f835-4d41-a6d5-2b7bb54fa3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae40d1ea-44a7-42cb-8366-394610c83cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0de918d-b9a2-4b2f-b2d9-4f103641f80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e21c325-e519-4341-abf0-6703034b24e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d95b6-f8be-457b-ae13-2856f3267b86",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e3b044-b50f-41cc-a9f0-aeb5e15fa60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ef83da-d9c0-4cd4-b00b-b74e4569823c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd898eb-0854-4214-befc-8866efc35912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccd3ebe-4e4f-4f51-bb91-216a4309993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62229205-b36b-4350-b07b-16210ac73b4c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a3e2fc-57b2-449c-b989-96a6ebf32769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3582ce8f-c003-41df-9fd4-a22e81356ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea992e4-07a1-4de8-a728-b87af5f4b3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74195a1-c496-4d62-8a0f-a8913eb76a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb85c870-66b0-4d26-9e0a-90e05ff49c7b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57625907-f757-44cd-b745-bd7f2b916001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22571a10-52ee-4c2c-a75a-ab3b2d0ab473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b2b236-07ed-4b41-bad0-7747050fbf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dba51ab-a06c-468e-a374-09a8272f6b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45b993-3487-43d4-92ae-5ed2eaa41b91",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d34850-add9-49c9-9494-6862dfe20507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bad986-f7a2-47ef-aa82-226a5c974771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc2ab4-dc3c-448c-a8dc-60de7dcd5b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbd402d-b496-424d-87d8-ac79342ea7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8726bfec-83ed-471c-922b-a3e9b68b26f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586096a7-e06f-4e6a-a914-d78d6e3ece22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b895a357-2b7a-4adf-9d6f-b850b92d1ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bcd7e4-930e-4019-beb4-2c71584a3f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bdb781-544b-4823-be04-59823b5b2969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cdcde8-6345-4333-84aa-6e2985f26d70",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2704d5b7-73b2-433f-afed-2a64604612ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7acf05-c470-4548-ab77-3e40014654b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83242ce9-fe8a-479f-b976-77d210d74c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "377a368c-19a7-4d61-ba03-3be476c94b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5c8c2f-1cf6-4b78-8f60-b3633b479f27",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931e6681-ec74-43f9-bfd8-e8c87efa694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae5c309-f764-4d02-8bc4-6b607c1f90b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e6e20b-1ff6-4610-9f2b-bae523ebff07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c85d53-48a4-4b08-a20b-da4acbcb1e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc9097b-3d11-4c9a-84fa-f5dfbc215fe9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4bbdfc-2e73-4033-9588-83705b960417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec05e6fe-f923-4ce6-8520-2d7915849510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27888b6d-1b6a-462c-9e22-fa7545aae0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19cb299c-63f7-40c8-ab95-1e7d91d708a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324092b9-9f43-4dc6-bd0b-995658390065",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77dcc48-5e1b-495f-93bc-b6a479e56af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb4bd7e-f0ac-4ea8-b6d4-c3a98962d7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bb4719-6968-4080-aa96-5b415a942c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f876a728-3cdd-4ac2-9d39-93d395a5c0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c593b8-6629-4c50-a810-35c334b58218",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a8731b-ca86-48b2-89d5-dad264b327cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9971e70-7b37-4634-8e3e-dd7d50b44d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f5fe4d-517b-413c-bbcf-4b878d67150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc48621d-6aac-4f18-bcbd-450019d6758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb10f53-4b29-40da-84d3-87132e29048d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf0917-4969-4f6b-9418-855f8aaa86da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9d3467-f358-4aed-b82f-ef6828f3a692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8453a424-facb-416b-a44f-c2c85ac06053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32fb9fca-c947-442b-ba65-b27fb95939d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4051b08-c213-4c01-8cf2-0ebbff802673",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ec3a68-7a52-4e52-b85c-294982eaa3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22316f6d-5c31-410f-9112-fe61683f910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e1cef-a65f-484b-b435-dbaf0a94f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb2026a-9cb7-40df-915d-b286b36abc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bab3795-d38f-4f43-b092-e2320ce48023",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef11198-9f83-41b8-9d14-2046731aabd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bc7db5-2d20-42fe-be11-8606d0d6c6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a192af2d-a54a-478a-bea8-4dd06528ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15589f5-00a1-48f7-8688-21d2d36f8d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27266afb-1bfe-4dc2-bbd9-697e2858ddcf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a044b62f-00a8-449f-be27-85d147b4f367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b318fe95-ad1c-41ae-a845-a4a6303aa107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd3ffbe-ae36-45f5-9bde-983d697aa6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f290a5-7d54-446e-8146-fe8a2c35c537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec5781d-a2d0-4e4c-be12-37118395db4f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96379a2a-8261-44d1-b587-3b80dd4f8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62ddc32-205b-44db-894e-a34afe46b950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624ac55f-0637-4839-9408-e05bd207d679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf716c74-02c7-40ef-8062-431b815b2033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11899d3e-92c8-4ee7-9255-c88a9e47bac4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3951516b-58a0-4f27-b44a-47425f5888e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4548a3-355a-4c01-b9f7-8dccfe63fbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84b081a-e7ee-4bf6-aed3-6d281f906e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40579d46-5011-4408-849b-0016eb1c0584"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5074ee12-a7d4-4234-af70-313e88c8c403",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39c9423e-b999-4798-9650-bdff555b86bb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762b41b5-0a30-4c2b-a9e7-cba265cffc2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff51d1e3-be18-4d82-917d-4843fd4d873a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ed4ea9-c106-4a35-931a-159c799bb48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88227578-6e4d-4ff6-b574-d3c624f9a9b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26ce425b-f0b1-45f8-9241-cca7221fbd30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f58043-b110-4bde-ad80-e76379e0af18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fccbe4be-7e9a-4834-ac36-e9739ff4d674",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eead3be-d051-4341-8c82-bea4e8975067"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fb95b73-d024-4aea-a52f-45d3ebe0a1e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c145d434-84d0-477c-8022-7ca5945baca8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f7abb07-c17f-4c03-b3dd-018f6bcab219",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32318324-30cc-457f-ba67-e1a3a28c1f6f"
            }
          }
        ]
      },
      {
        "id": "dd36427b-2ff8-4104-9bf3-916bd9cd1dd8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7ce52fe1-3b3b-4ea8-8c3c-d79873c23587",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ef3b7ab-84c7-4256-b1fb-c0cdf7827872",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b9e3755-ae45-4837-9bba-f8ec3f223dc2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1af062-a57c-493d-a40a-5d26fba309f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b291dc8-285c-4428-baad-1e289c468368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e03980c-33a4-4d89-b331-09efd022c472",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a691222-9abb-4b78-8216-a89e77f7d289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27168a6-0cc6-448e-acb6-4ed3786d7673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb50a64-f51f-4fde-8d23-0d216e2b5a31",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeba427-7560-4c5d-9ade-311a981e4e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315f9eb9-9cf9-43ba-bbb3-db5035ef00cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7220e7a8-2233-41ba-bb79-c20285414508",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a1f53-149a-4a1d-adc0-f4afa1d1a6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b688626-4a88-4a85-a4e4-d11d5e6c10c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e6da43-1968-4b5b-b09e-cdd6ae79be34",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0ffb27-6ccf-429d-a1b9-5aa8800eb6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2c189d-8c6a-430e-85b4-5208dadb8dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8398dfc4-ee32-4a70-87cf-bf08f398adb4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c58552-b6c8-45db-89bc-4dce2f93bbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38607b81-03f1-421d-9b25-df433d990d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda5f51-a9b2-4664-b20c-1006d7baca6b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a54b31-13b6-4526-b8f7-113189a88439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeaf333a-3cc5-4655-a70b-4ea689778ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90c031d-0cb3-42cf-ac7a-f66da55c9344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d2b926-386a-4b7d-9781-d3d5a97781ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915247a1-e536-434b-9a00-cb0fd3865889",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073cbc60-fb9a-4104-b18a-802562ee7fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946c4ce0-c27f-4c68-a606-2b90923002e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ba673a-a597-436b-806d-5a5bbeecd96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94747c30-f9cd-4db1-9594-7e31313b0dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3278d95b-87c0-4e8b-aa44-29736402dc1c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23494b18-db71-48f1-b7b0-64f2454264a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036e99e7-e97b-4fd9-a38c-ed788b77c54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d93cb63-3fa5-4b0d-a197-bb79e165d60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315a724a-6561-4a61-895c-d67cc4c5ea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9441b399-bf2a-43ef-b169-590ccb44b461",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07100292-b948-4a4f-944d-8e0426af294b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ef3054-1ca7-448a-b4e3-8242c9d5c2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b7e99d-a378-4f37-8163-3c04771e7902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b2590e-ea14-4b45-a21f-0ff5cc01be63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66068dfd-ebc2-42bc-b76d-de3a3d8f2f7a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd552b8a-8c9b-48af-9df1-ad8b41759812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c239cce1-2242-4c52-b768-08b8e46a2a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc7300f-1e33-4d77-86fe-b0e7e7715cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5e6366-fb62-4cee-88fc-22426a7b5be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e32643-f889-4b34-9deb-74c026287030",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f029d-c7e2-4d55-ba0f-4468933d22fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5a8720-0bc2-4225-b281-294dc3f9c3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac3c0b-2694-446d-978a-8748ce0d656c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f655afab-b702-46b1-b3f3-aabe2d423859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c373e16d-84b0-43ff-8763-6a97b5591ea1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e4d761-fa07-4301-b690-0e8eca9620ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a3d351-6eb6-4ec8-8672-abc964ef94d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a18151-b468-4187-9387-84db2d382b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36b2023-5e03-4ab7-a170-cde58cd092cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacbb64d-3e05-49c8-a12c-d28e806db531",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2915f-1e51-49bb-b539-3fca532d7c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded5346a-2165-42f5-9764-61f8d81ea18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa587f7b-9867-40a6-94c5-d19f6dc39565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67eaf7fa-dcef-4e26-b052-8e3c71967807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0182b9-c8f3-43a5-b5a4-3b68e9f6e20f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89432a15-50bb-4a8e-a211-170d3b8b8450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb7b7e1-75b4-4cbc-987a-ad9f82fbdb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed79596-102e-4ea5-9f20-2052ea1a6c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a053679-bd6b-4103-80b2-708056cfbab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dc41ef-1184-4fb9-9833-bd7dc970b7c8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653599cc-a862-4681-b3a8-c77ad1dd86cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b4a7d2-8730-4712-a3ce-a7929f255151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c418418-6edb-45bc-bcd9-343415f67263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ee80fc-f1f3-4d7b-a7a8-f195dda8489c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53924dcd-084d-4532-83e7-b0ac1fda78ee",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940dcc20-fac1-4996-ba2c-8ee090f130ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57f751f-6bba-4ade-b964-28829ad3884a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51a2b42-3774-4242-bc9f-cf49ea1dbd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0e1a7b-e28f-43f6-a946-66c53bb0c978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ece0a2-6cb7-4f57-8864-15d8d38e4b8a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787a5c0f-6bd4-4657-b089-30b3e875c5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f40464f-4a50-4db7-abfa-cdb6a5e1baa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a898fd-fd91-42e7-91ad-47939e883013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2a604c-ad40-4d96-9562-a90a22ce5bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07bde41-21cd-45c7-a1d6-30213a13eb89",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec219c3a-7036-4e17-a099-e803e9f5ecb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945ab1d9-109a-47cd-ad7a-28c6c7c8d898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888a4b61-c1e7-4738-a8e4-c2e9c272e6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9e0c78-886e-4dbc-9f03-381988a16c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a605b8b-8a8e-46ea-8e43-7b5bcec9bee1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2d9bfb-06a9-44b5-93c4-32a156cb74f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6faca8-8f26-4793-8e26-17ee3c48fbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa5bf6-ea43-4456-b0fd-ec28ae87646d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792e1bad-6c88-42ce-a78b-c916630be6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa62452-1202-42cb-ac83-dbb038de6928",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a2418e-7f87-41be-8b82-1fb9e0b40c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8ab2ff-7ddd-4924-bc90-b7ff72c961ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a261fa-f3f2-4044-91fa-9be747cc6e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0461eb44-2d28-4cef-ade1-1111ba8010f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4884ec-bf2a-4b9e-bec6-f74de4e68a7e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a3e8a7-dc82-474f-bbaa-9c923a491ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a56826c-34c8-41ad-8466-e0f4f50482c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fc5324-4bb2-4730-bb0b-cb6bb73b15aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29c9f43-b994-4f38-ad7e-3221664d2ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843e13b6-3d04-4aa3-9566-8e8d42172e36",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df71a30f-387c-4b6d-a231-ddfa05c5fb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e275cb66-ada7-47c9-9d80-5308535bb69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836ae8f3-3f35-470f-b491-58e068966384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14864c1-3849-4955-ac9d-19bb59846952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3583bb3-6708-4e7e-aae4-66f3f9ecadea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5cfb2f-54aa-450e-85fd-149d13b278f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caccc077-7e12-4465-88c9-8f874aa205f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89fcad3-a9fa-4088-85f0-ae83c7b7d7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93d0140-4e1c-4a91-a0de-d5cad58c0d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dbb5ab-ea01-4042-8711-3501835bcbc3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d715528-f6f6-4706-a09f-af86e30c4864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe144d5-d579-490e-b366-ba459e85c090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c0d2a0-36d7-40e0-9a68-0e1d685475ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d44a935-221d-4df1-9424-334392d102b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144f2d0d-6f5f-4053-bc85-1a59e053f3aa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7b5f6-e6fb-4ed0-a2fb-1d06c6a49240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49e2f69-359e-48ee-aa58-5281b77accc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef4fe4d-dc4e-47dc-8c3b-a863ba09a9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a3b0cc-739b-46ee-8419-829dcb633267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1dfb77-eab2-430c-8e93-452f4b603013",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbb1277-d9d9-4b0e-b135-37c1e9a3e951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f08053c-1432-47de-895f-bf0ea6e6bda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee7ef48-7e85-4bd3-b5b0-7025bd71360b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe185fe-4775-4b45-aa14-23532d8cb002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0a795a-0334-4632-ab3c-0598ed5ae343",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11922e7-5bb8-406d-843e-a091814a34fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59161389-7235-45db-a2fa-9f4f5e1fd6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc6e474-17e5-4cf9-99d5-274f7eb9f536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1428b0f1-7ace-4a8a-b279-802aa04d268f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ede766-52ab-4d0c-9f48-8451d400ac81",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d8dd26-9173-46ba-b153-087cfa78b565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94264588-154d-4afa-a142-fdc498d02950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d8a9ec-c77d-4a33-a550-c8940f47cc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ef1942-c6de-4fc7-8e2c-a0a5d5b29b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d4a57e-3702-4eef-bcbb-ec077bd3efca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91584824-7fea-4dc5-939b-ecb0e4955c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c32a40-71d6-44af-ab73-6bb6d82e79da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a5eb00-735a-472d-9b83-7317fad8cbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7175ae-c539-42fa-ba69-05ac1d4e5c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1aca51-9bc1-4379-8eac-8558e50792e6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7a93d4-0cec-4dd2-bb69-7613ec689757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c939ed22-9a8d-4c6b-8b6a-3c978dc750a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7bcca8-4054-4695-aa52-0370440cdf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59dfb966-a52c-4b00-9a8b-3ddce26853f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34b7078-dd7f-47fd-9cc3-19f4e3419026",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867df06d-859e-4030-8673-b288e5dbad62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d0cf76-42d3-45e4-8aa3-d0bc0dd8b1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd9009-6d3f-488b-8ed2-f9cb98b77d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2517606d-b7c1-4fe0-9fd2-981c41c9da73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d87447c-6897-478e-8593-e5fb6848af2f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50264ad1-1998-49c4-8ecb-fa9f66b94a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bc20d8-430c-4642-84f1-5931f167f554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79776405-e113-4678-99ac-adf5cf0865b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69655d6a-2787-481e-967e-cf6e453452a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be13b15-1305-4b86-97ec-3ecb160db525",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d28187-af8c-46a0-80dc-fb6ceee251da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0425e611-bfc0-4844-a3f8-d4e931297a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950b529f-5845-41c1-985b-cae6849b0350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5457e12b-25f4-4d98-b41f-6333400e23bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0ac053-6baf-44c3-9a80-19dde02f70fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9549ad8d-b0c1-482a-b159-1ff79458a385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6795407e-58cf-4282-9c73-5a81d4e5e484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b2cdf0-310e-4ef3-9dea-ffc2996708b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5107501c-28b6-4a8f-a924-5a6fb9823c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d2cc15-4c51-4a91-ac51-e40a7da2e059",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea62bec-90f7-4e3d-81fd-d96fbd9d4e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09205d23-fc8f-45cc-9c62-219d6a280535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a842750-6e83-446d-b498-de64b2833272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd545f65-6fe7-4a91-85c0-c17cf7f854d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7ccdf3-60fa-4df0-a70f-82f20a7c31f7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa93034-ab37-4bb1-b551-a01586c39f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474192c7-a0d7-4bf5-80d9-438203bb6c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713c72c9-0059-42db-92f3-d5f985cfb044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d0e6bb-a578-4524-bf7a-93c2cb5d7b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c68625-a9bd-4f9c-91a6-91ce09f8a67c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce75ad2-38b0-4ac4-b8d4-6c69b9e2d2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b366d771-8a7b-4854-b83d-f1be45374ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b571073f-69c7-4e80-97e9-cffb2bc76cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3457cb-5941-4191-98ea-1e8472bc10aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216d9bee-84c6-4bec-9cf4-3b0fec042592",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957af505-1cf3-42aa-bb38-5941e1a57c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12aa9012-882c-4572-9038-c1d9ff84c796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45864c6e-5cb2-4507-b824-05612bdbef99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e493c4-759d-4684-bf4d-b91c6aaddb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4547751-0c88-4c4f-a0e7-4543f5c3ac12",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302dee21-5fcf-4f4c-bac6-be51b24486ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331b1919-e7a7-482d-bf8a-8c038af9ed1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534333a1-b1b1-4b1a-86c7-dae8e3ad39f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c297c51-dafa-4a64-9201-8ea9b7272b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d55f9e-1d49-4fb3-aceb-b6ed4b7f9e20",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e765898e-17ec-4bf7-a902-2f063291c655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81c9548-5e66-4007-92b7-19162ddac6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a3cc73-3924-431c-a301-7a2865a53487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc513e0-1686-40ed-85cc-b4b1c2567013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caea9ddc-3915-46c6-81f5-5dc1dcf789e1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15916a2a-2c84-4cf6-afd6-647c8f597386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca85826e-c547-4a96-8d56-6c902879c34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a79a71c-16c0-429c-a6ef-7f110439b15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045c0a1a-8513-497d-8da3-f683a5c2f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084dcdd5-2cb6-4de8-88c2-a8e49e9e1296",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa61c64c-1f8e-4a1b-9bff-ffdcd5979ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7aec90-f599-4518-a739-de4929937316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3fa525-73a7-414c-a0f8-4e3a7b485cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25f535e-b96f-453a-8892-324095781e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff653b7-2142-4a0b-a47b-3aa9071737b2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8dcd15-6d60-47e0-9688-a7d8ba444e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7464697d-72e1-4e05-bdcb-ee35d6ab5e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b25f3b-0594-45dd-963a-55c5de22c024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bf90d3-64b4-4996-a281-4dbed6855c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a6a68d-c107-425f-b7e8-8b35feea1d18",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26bfad5-2e4a-458a-9d24-706ed6c52a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a138e0d-0b77-4cc5-9726-5aed147d1e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1657eb08-47c8-4773-b220-8f9a4812b313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfbb018-3af4-40a2-b2ac-584874d62f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3489c2a1-9ba3-4135-a8d9-e1a642eab85e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe79abd-5c95-4f60-8010-2b5308deff99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820f3eb2-f151-46d3-9f9b-b4884ecb498f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4a8850-391c-4b1e-9460-ec954b6c34f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3facc9cf-02cb-431f-8913-f8882578453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5714f688-38b3-44c7-aaf8-6f72efb11c98",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d947175-62fe-4ab6-8788-7b79ae0e049f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b803d683-6705-409e-a107-a1a8b735ca23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088184fd-8fa2-46db-bd0d-4197a6cb3433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2da5e2-b236-409f-a2ac-9ef718510850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3ea0ea-bc58-4c3e-a5b4-88290aedc360",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8fdef3-564a-47c2-8e55-daeaa0dc2d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aca28b7-71a0-4b62-becc-e18ca19037d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b901ad7-097d-4dbc-948e-20d25334ac8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e566ead-89ef-4cd7-bc30-1c4911fbc1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12475cc6-07b9-423c-a562-b7bf927056db",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c6502c-cd11-4418-bb8e-4af4f16f0fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbfcf48-263c-4d58-b4be-f91911c8c4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32af64ec-ced7-48b0-8944-973838a9d827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe9ea68-a292-4e59-87f4-961d8941e88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf9c66-6a3a-4db6-8a4d-e8446d1f1dfc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49dbc8d-0c7f-4f07-a79a-6396e8fa71b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9361c949-a0af-4595-a1ef-d2f800807b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557c3cfc-0182-4096-b610-9eef8c2001a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2d97ce-6c04-4273-b085-62a676479564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014b86cb-d32d-46d2-80b4-23f50841e95a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28264a1-093a-417e-9c17-a49c70d85bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3d7c56-c1e5-4866-b9a0-826659751468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9578f8-46b7-4f24-914c-fa5dc03c3035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab45f33-bb5e-4c0b-b03c-5c684b538a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe0a6f2-f319-42d3-9df3-faf30ac74100",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f04c45-4a18-45d8-9e35-1028f906f311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d4c48a-2caa-4d5d-a1fc-8c91ac880e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b86dd23-276f-4d3e-99f7-db865dfaaca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69d53e8-d1ba-452c-85c3-ffc9a3fa1b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8296cb-7449-4053-afca-688518b21fa5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0105078c-ec88-4fb3-99a4-4cfdb2e6c999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8424309f-c574-449f-8c9c-c0011a65194d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e78a7b-2e97-45ff-87ef-fb078ab3daa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af598e35-42db-48c0-84fb-e5728db4de89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f4c342-75ed-4535-b9d7-23263814184f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f147624-935e-454c-a734-6a9a4cc5a2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb8e461-4358-4515-a788-190193bcaf22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b64d50-55d9-49ae-8907-0cbac1dd270e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4dfa70f-1127-4767-9d54-d6cd65e497f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f036e7-ccfc-42d1-b795-953726d0372e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce37b17d-2196-4162-ac06-6ff70569a362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35493fb0-c53a-4143-98de-d21f54ddd678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c766bde0-af5b-41d6-a1db-ee4c85ba33b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db450b3-3531-435f-96d7-193871d264a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f700e442-9952-4882-a093-cb16cd451739",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e829ee-dbab-4784-bf13-284f70f84fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61708d96-0f81-48c5-91a2-b719de943674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82b04ca-bece-42f1-8007-b17be21b4a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ef8c3e-98bf-4e8a-8827-4ee7885a10d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7558c2b-39c3-492d-ade2-e27151e7ab2f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaba340-fe3e-4dde-98e7-d835436fb969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9ecc53-25a6-4db4-9528-4f79dd0a92bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b22ab29-eeaa-42a2-9b5f-26bdb18864c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b8b37f-4c13-4e40-8182-e75835043591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857ec053-6130-47ad-a94c-610e8b8fa889",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cd09e1-76d9-4d72-9150-65c777d39a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6b0c65-c1cf-4afa-87ac-1019f64a42e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f35faf4-45cd-40e7-9786-b37f2c10fff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44ec0d2-fae2-4147-a316-592c88c3f096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cbd015-371b-4140-aa40-059daff1e95f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc4157b-5eb0-41c2-9df8-3f971d4a60ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca13148-1aeb-4a63-8417-2db4a872cff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59161aa1-3378-487d-b25c-9077409794be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401e2bf2-14ae-45f4-bc49-e6ae2fc3ff6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b085fe8-3d17-4fba-b695-e180fa029ab9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dfffb1-a296-466a-a762-3729b6cc348e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4352549c-b3b9-4b13-8e7c-5e1835d76cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd00dd-12ae-431a-b62a-498fecbdd7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ebeff8-56c3-4a56-9aa1-e6f31101f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6707f91e-3cad-4e31-b452-c563a0203164",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45650dd1-aa0e-4dc2-83c1-85faffbada27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7d4be5-5766-4ccc-9a93-e284869acf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c1b2f6-e967-4e34-874d-4067bc46a16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24afe29-80ce-4885-b0a7-0625cb9a3efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391fa4f5-b3a7-424e-b463-c04236b6e817",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4c81f5-3378-4965-be9b-3dd0e8ea0a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfbe5f6-b2b6-4d24-aaec-70c00318c2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a11cd1f-3260-4ac4-97b8-684575f6e8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a5c71b-9c2f-44e4-ae6e-b993243190a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5aa760-655a-4d35-944a-61b60f7dcd90",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d7fcdb-9888-4fbf-ba16-c05de8de7332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df499a63-bfdc-441b-af04-1dd475ff848c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9334da3c-8f02-4a6f-be7f-d37760d3b39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af67be2-44be-4a0e-ad06-d39679ab95da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657a45f0-7778-491d-856e-47e384b7d1bb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5104f910-c52e-44d2-a632-6b97f1a8414e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e1d637-7e96-43ca-98ca-c48f2e47a9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c12864f-269f-4c36-b656-49cef8de74f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0465eed-f7da-4b95-8d50-afc0a7b3ba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111f79cb-5cb2-43c3-803d-a33a7dbc46a9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e94456-c04c-4bbc-a5a3-703a352067cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9119825-fa72-47f4-adc6-d4b3b251c942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4ebf81-d1dd-459a-b2ea-1abf5f91967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b490bd6-754a-469a-8faa-bb90aa98cda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54383f55-f530-4bf6-9d0a-b89e6cb2040f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48be2fbd-9cf4-49f4-bf39-f4f8a3da991e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d0383e-4eb1-41ae-8825-a55dc112c6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96411192-ee7f-4495-b2c8-6f7e249ac693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8d276c-520e-4671-b1e7-e21906fd8bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaaef1f-c6b8-42f5-915f-1aa3efc88737",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f938e-5818-453a-bf1d-cf5d9da86f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299633d7-4db9-4acf-be41-d762354f3071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c99818-a1a5-464a-8ca4-542dbfeb8d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc856fda-9c23-42ee-ac76-8a7c06688103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc65af6-e432-4b22-894f-636d6c2d2a92",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629533d6-666d-47a2-a304-ef03ccc35d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c937dda-e44b-4eee-8790-910b387666c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264b812b-4e19-4cef-87d0-0fb37223831b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c9d93c-9265-41cd-93e0-3ed6d3c87b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b665034-a9dd-4267-8b5a-8d14937820cb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4982049b-dd5c-4fe7-bad6-adc4530e923d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0e0f69-a957-42c8-9bac-8d34526c05dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f4e05-4fa3-4912-80cd-a89142f02329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c5a85e-3eea-415e-8f76-173658d1e615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13a929b-c977-4f1e-99de-a3f224a8313a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf12de01-9f7a-4491-a368-da9f0a8448d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2248fe2-bdba-4cea-93b3-e59636601b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c1aca7-1e3e-404e-8bd6-b7e7a1e520e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5c81a8-48dc-4968-ac43-f52e66a0b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae724e9-cb6d-4751-ae1f-2a2d92553320",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb5e7da-6492-42d2-bd1b-25df4d916edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c5f31c-c638-4398-a97e-98d8ea94377f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9191a578-226e-434b-9bf4-5b017fd64f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c2a73a-4a98-402c-8199-8f7be99c07f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ceca3-074a-4377-b1ff-5db72cc9a467",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea410440-9cbf-4f69-ba32-ff22216ffdd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "595aac80-3701-4e17-afe9-71299ed5b4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92bce76-6a55-436f-acb7-7c03d56746f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40b1ca9-3085-4ebf-91e6-fa7617a73a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5914a7f4-b615-4741-af59-961335546a48",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717086a3-d177-4d7e-8a77-9431f6a9536f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7d50f7-9bbd-4e29-b68e-06d7c6727675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52efe24f-8821-4ffa-bb88-6d17b02b4bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfccaa3-b560-4cec-9bcf-20ca49340249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24c35b0-6888-46ae-ad51-16ed05cbdf06",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97e8b7c-8d12-4d0e-8e49-c9626c3eeee9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d588793-e701-409e-9fd9-99cfeee926da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc726e25-9fc8-475c-9635-f6a427115cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb5d9d-ac5a-4c51-b3db-902e6d20527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7708ac50-088f-4de3-a0cf-58ac3b9afa61",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aee5cc-4aed-49ec-bfa2-d92232029fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1fa706-5962-41e8-888b-5f9d6ae4e510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2de9df-f3ea-487e-9739-47ebb188105c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58058b50-8e71-427a-96af-52e2020a1fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba84c39-083f-4026-aaf8-9f7706592c9a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede6429b-9151-4db7-b7e2-c1f1ba8cca17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1b6bcc0-71ca-4690-b71e-822de2d34914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb81569a-bae8-4fd7-8d30-1b3ca4c0fc87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd015af-a9fc-4890-b428-803c3bb9d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a004b75-2a71-4d63-b4a4-4522498ec2ce",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d6d02d-c20e-4b8d-bd08-0a27a3330de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eaa390b-5b2f-43de-8722-251a0cbb49ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750b308e-a31f-49b4-88cf-0f34e0eacb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b83fca5-5134-4194-bf62-a4fe551364ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7724dd77-71f3-449e-9c23-23d8fa8b8b12",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8800766c-5a79-4f8b-96e6-da8dea5e5d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0905a16-bbfe-4270-823e-cf2a223994a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5dae8c-1c4a-4ae3-bf8e-213481d719ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe99791-0a52-4fee-b1b0-fa0dc6e63e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca930c4-f1b1-41d7-bc36-b9b8574c2a0b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0916a1-f60a-42cc-b104-07c5d0a8b76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954feb19-79ee-4a3b-85fe-d61b703468cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4333f0-cbff-4a67-8319-3f11cdf6613b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d6d3ac-a97b-4b2e-a090-ebd42ca05904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5023649e-0d24-44c6-bdac-4509042ec8d1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e6a14f-87a9-490e-bd71-3aeaf172530e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5f7172-9122-40cd-9767-d2cc37dc1a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b8c95d-7aad-4936-92ab-9f3751d6bfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e3c59d-6743-44f9-9b51-f23eae285091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf48f53-da4d-4b39-8cbc-6bb124e21942",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc60bacc-02c0-4b8d-aba5-f5325ccc6df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e593d8-924b-452c-b5bd-ce94d7c18e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f54600-6a00-4c9a-b4a6-da39acbda8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b6d8f8-e2a3-4b0c-a706-99c3e3ab9f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdda328-298b-499e-9de3-46bb0c5668bd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e58ccdc-0138-4941-9a2c-1849fd70e90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c404bfb5-9e91-4d4d-aff3-ca8cb837b237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbbc100-73ed-428a-bd96-b10e74eabd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2224ac7-48eb-4419-9398-4a80873970e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bd7cc7-aa61-4e4a-bf0c-d2f79d90e74e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836c6312-32e3-4cea-9a09-cb084809f4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6040f199-9e5e-4b72-8324-4f7506fb44bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1cff7-fa1e-42af-8e16-aba4f367cd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099b4746-7b23-47fe-8959-978eadcf5e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fea586-61a4-43a6-ae5c-b1a88b43d0a2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774270cc-545a-4b4c-830f-fd87cf259822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b112660-0f74-440c-b950-9e4e18ffaa78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd107c-3d25-4eb2-bd1c-1c304371dc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82db40dd-f53a-4d7e-8edb-f12f0fa80e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5794de64-b279-4f9c-9ee1-ed1391b1af3b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65f36c2-5e5a-4f5f-ad4f-cd2799cbebd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cb87f5-2612-4a82-ac14-2561f80cd606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9ea645-4a6f-4c97-b0e3-f0b89065e459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505431a0-afe9-4c97-89f4-07756eb1c556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3748ce43-d0ac-49ae-a239-61ab3f0f9df0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3849bf-9421-4904-a1d6-6ee71c793446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1c409d-e3d9-47bd-9480-95810e9edc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e01e796-3180-4f1e-9853-8ac8eb049b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894dffad-6726-416d-adba-6f71e286094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66ca733-69ec-4fa3-bcb5-3bba6e476a7f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5470a08-b2dd-413d-828f-610141e3c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9809e690-41f3-4930-b62d-c5f3e15b3792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcd2e18-512f-4ff1-bb9f-ffc52993184c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d72ef7c-8150-4f62-a609-9841d4173a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeb2934-3407-4fec-a831-c4ce109215c3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef62135-f14b-4eac-8346-3fbaf38d46fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a5132e-5b16-4927-a843-58b637b6d243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dadd0cf-5dc6-40dd-8bfb-22e0d5b2602c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb9da68-f6a1-437c-bcec-207c761fa9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7616ff2b-9ec1-4cdc-8d7e-ed99004f06d9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce80e444-8f87-46cb-ba3e-712d44115f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c74ad0-281d-4787-beb1-7c3580cd8409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73080ed1-eb96-4a85-a440-c953b3364c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c47d54-e517-4936-a69a-6ce674f68e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7cf78b-a2b2-4553-8af5-3f37319c5040",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f451c4e-af0a-43c0-a5f3-314298e39d82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abaa9151-fae1-4729-9b5c-e6af4f742c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f9b9d8-d142-4ab5-a878-bd3b7916dc2c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7848221c-7263-40e3-86cc-d88aa65b4038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04893c63-45b7-4949-9241-530dfaa9e239",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b99a9fb-e713-4df7-a32c-076a4c99391f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9d56d7-b01c-47ee-8c79-fd458d8bc905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cfe6bd-f321-41fe-9d31-e7c9276e271a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7193d853-eadf-4cd2-ba2b-a15fde966234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53e6e5a-0aac-41ed-b16d-1579ff78d5ee",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb48b13-a14a-482c-8679-f0a7847a6fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c5189f-5615-4d9e-a722-c64625b815e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e085414c-d78e-4a66-bd93-e92252294dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbc7335-9e5d-4a1d-82f2-1d51b50309ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4bb0c6-1f93-4818-9b4c-dda5366e2e6c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515aa19a-493d-449e-be9e-0380149beece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624d033a-3575-4c5f-9d41-3554912edf28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288ec834-e257-49ea-baf1-0e89d43b3636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64513a36-6ced-4b9d-83fc-5e5cb78c9b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5878a8-69f8-4a2a-95b3-743b958caf5f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eca5dc-9728-455f-9d82-7f30f255390a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e24d988-f6a4-4f1e-8f9c-575fe36dd874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bf04a2-9282-44f6-a4b3-77dca35845e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68089151-4d59-4fe6-8465-bcbdfb2839a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50ddbcf-ecc0-4f63-8632-5ba246c6552f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f642c1-558c-4f39-bb86-d826b36a98bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97241a4-51ca-4559-ae8a-2308edb49bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671c74e1-253f-4075-9865-d7e336ed8695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b444a6d4-5219-4069-8e22-c6e1fd200935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e6ac9b-1069-46fe-b7a9-e5ec6167c01f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc34d19-382a-474f-99cc-ea410fe8f1b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d278fed9-c8af-44ec-829f-8a21343cf237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a2b20-7f06-4e4d-a076-51c8391a1d6d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46daa404-9024-4d80-b2fa-358b13833de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1236d5-9d2c-49c0-b353-96110f2d1d66",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5521f907-ecc4-405c-b669-5578dd75257e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7b68f6-d410-4f35-9d72-1c13ee4a6d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459c95b0-0c46-49b3-929b-edd27fbc80cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095ad330-e2c3-4795-9de7-f0d832a48122"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f55a65e6-3a28-4263-8726-3ae15d031392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bbc12c8-8e4f-4f41-bafb-69fcd37563a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "320aab41-5fca-4822-8f3b-f1ebb33cff52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6d5baca-1292-4656-a428-900417e4e339"
                    }
                  }
                ]
              },
              {
                "id": "1b1ba0a0-a366-4e02-b37c-7fc1da0f6566",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20d0aa3b-9d90-44a2-9e77-c67aba98e02c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f3d59f-eee5-415f-95aa-cfe288567796",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb953638-e04e-4c02-8668-2e1f89db0f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07eba60-f495-4b1c-9560-321c54d7c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "520f5bc4-6bd9-49b9-8172-ed7485de17ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a78ad183-aff5-455e-9c65-b958f1d76462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45d8cecc-cba7-4bb5-9f01-f8673f0d2963"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a1c6a8-4dde-436e-ae48-1453d27c35be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b917732-5979-44b5-88af-3ea5ddab88b3"
                    }
                  }
                ]
              },
              {
                "id": "cf59e8ed-76d9-4d19-b806-e3f46f7ccf83",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "35453905-105a-44a5-bad6-a0bbd69c0b4c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df5c050-24b2-4dc8-ae95-7b346d34b1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6985b17e-bb90-4090-a56a-4af89333c59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b30077-364f-482d-ab76-88f6003af810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61825535-551b-4b98-969c-bce31a6e99cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7fb5b937-770f-4bb7-a50c-09f97431d815",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9506f81c-f96e-4263-a307-8c0cb5ba2baf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e987d93-8978-43c2-97df-e70ac651fafb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4cf70754-ec70-42ea-a778-57e50ae98c60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab4ec12-f70a-4900-a09a-0e28eec0e107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6f4b8f1-1320-45cd-a756-a0cd71c660e2"
                    }
                  }
                ]
              },
              {
                "id": "2d935bdd-b2e4-43e3-bbad-33c67b3c9a11",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e3c05a-d073-4477-84fe-b226e2eacc6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa199119-011e-4f62-a758-c69ed23997d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03df08fb-7188-4efc-a327-673de694a359",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91a9dcf2-44cb-462f-9ba3-9b103d766b62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a92d7fa-af8d-4373-b0ff-961359691650",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f3c496ee-ee40-46c6-99ee-3dd29387b251"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a39c6e10-9bef-49ce-a6d0-be86623e492c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42023a2e-e2da-48b2-b25f-4e9efce8bd24"
            }
          }
        ]
      },
      {
        "id": "a6ec8e1a-4448-409d-b33a-df8d5f47c67e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "db120873-c02a-4cb7-8132-23c98e3470cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8f05e9a-2938-4bff-a523-a32ad44eeb10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2cb00fa-7b3e-4416-99d0-b7e6640208aa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9049bcd-73a6-41d0-981c-343e21f9a20b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "adbe07ea-91d4-48b6-b403-d2b53b6bea39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2625a7fb-2dcd-4bc6-a8ac-52f7eeb4dde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b47924a7-ba8a-4a38-885b-e58dc582b1de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79c3b8e5-678a-458e-b27e-b99820cd1657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0d846c9-4702-4785-b938-35569a649064"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fda9e14-a18c-4b3f-bd7a-5f44f0ff0da4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec521b44-1081-4e80-a637-001e09ef5bc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fd06bb5-a6c4-40e2-8c99-7efaa1fd212b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4dde0ccc-539e-4cae-8c73-b4cefc28884a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de9dadf3-2edb-4313-af84-a906e723cc89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ec198e3-334d-40f8-a1d2-a98b37c39278"
            }
          }
        ]
      },
      {
        "id": "b938b309-5cdb-46d8-bc5b-cbe3e922aaf1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "90fa7ae9-a736-485e-8868-e9effeda62a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a258c62c-a459-4139-9f9e-1f33fbeaa9ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14f1f643-38cb-43cf-af64-ab6b1c00faf2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc73273-9188-41e9-9391-5371ad694736",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fc98125-4ce2-4a07-9115-3c30e0033b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4da8359-4d8b-4596-8b4a-ad9dc93d1b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50080483-0be1-4088-bd8e-e82e372f6c12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d30d0fa1-9dd1-411f-96ae-2bdce0eb67d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86224a23-cd31-4c48-b557-89bc0e5fcba5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e28a144-c08f-4bea-b71b-a7c15787b99d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e327db67-1405-4d79-9380-9b312d3d890e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b96b5185-09de-40f4-b9cd-8426f7d31012",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "883fd85e-dadc-44d8-b54d-ad48affc7c68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eba6473b-481a-4459-861a-3630511562a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b153473-9ffa-46f4-a72b-69d382b08d5b"
            }
          }
        ]
      },
      {
        "id": "71168904-c6be-400d-a6e1-40c1981ea15a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "972f7e14-24e8-4fc6-a243-ec653a761668",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fd07e4b-bebb-4445-99df-a635af910156",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27ff5c21-4b76-4b24-8111-df4df1f84535",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c93098-c143-40a1-87fe-49ca73ed757d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f9b660-5d6e-4c84-a220-b67ce352df41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c332c2-d31b-40d7-90fb-8fd61362a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "834c5f47-f9d4-4f1e-a98e-2dacc5828786"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59bcf0dc-bcb9-48bb-adba-9fb9a0d13276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a22c8a7-5969-4eef-8b86-c15aabb3fb7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec802a0-2e92-46a2-9540-54818c129b73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20754cb4-1498-42fb-8a97-cf1c8177ba53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c293c26-b03b-4787-9ec1-5db3d23af44c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc37b9a2-7bbd-4c92-b065-b8807c8697d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "252542e6-cef6-4234-a97c-0a33346277d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b35e7d9-b826-4a5f-81c7-827320f40fd8"
            }
          }
        ]
      },
      {
        "id": "10c4eee1-6e76-4a19-a5ab-fd49680e8e1a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35de611a-c95a-40d1-86a5-f4901a401a63",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e6307e2-ee5c-4981-bf3e-145983cb905f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "03ea5c3a-c89d-4629-8d1c-77962b6b81a3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27ae337f-a792-4835-8519-7e1acfd0119e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6424146c-55f6-473f-b44c-2efe4535c2e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 316.36971830985897,
      "responseMin": 10,
      "responseMax": 7026,
      "responseSd": 833.1627171857676,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693960349933,
      "completed": 1693960452094
    },
    "executions": [
      {
        "id": "81cf425c-df06-44d2-a228-2a3a3e0a4492",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "954509ac-9d38-4bd3-a4aa-dab1f5eaeb03",
          "httpRequestId": "a70e65dc-a1ca-4b87-af99-7c539b0d5ea7"
        },
        "item": {
          "id": "81cf425c-df06-44d2-a228-2a3a3e0a4492",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0c42e000-79a4-47ce-91c5-ecbdefd8d019",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "a91b3791-b0e8-4b0d-a663-a14f46ecd317",
        "cursor": {
          "ref": "0daf97c7-13ca-4543-a857-8b87a829227d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b69f05ee-b27d-44f8-a7e4-9db25b9a898a"
        },
        "item": {
          "id": "a91b3791-b0e8-4b0d-a663-a14f46ecd317",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e8d7fe8d-ee35-40fd-953e-2348edc2a716",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6eb20556-b011-49e6-83ba-71663c47ef9f",
        "cursor": {
          "ref": "2a4cbf2b-dd45-40e9-9751-96496516f693",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "16da52b8-33d8-47ca-9328-59f288c967d5"
        },
        "item": {
          "id": "6eb20556-b011-49e6-83ba-71663c47ef9f",
          "name": "did_json"
        },
        "response": {
          "id": "3c09672e-f496-4c45-90a9-d8deb648ce74",
          "status": "OK",
          "code": 200,
          "responseTime": 1362,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b769da9d-c6d1-4a50-a105-7bd95c0b436d",
        "cursor": {
          "ref": "77aae697-c826-4887-8165-9f935878b1e4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59db112e-3bb8-44f4-816e-59f7aba82491"
        },
        "item": {
          "id": "b769da9d-c6d1-4a50-a105-7bd95c0b436d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a6217044-dae8-45e7-b607-08ef5473e07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b769da9d-c6d1-4a50-a105-7bd95c0b436d",
        "cursor": {
          "ref": "77aae697-c826-4887-8165-9f935878b1e4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "59db112e-3bb8-44f4-816e-59f7aba82491"
        },
        "item": {
          "id": "b769da9d-c6d1-4a50-a105-7bd95c0b436d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a6217044-dae8-45e7-b607-08ef5473e07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dadc0d-d6b8-4515-8ecd-d9c7bc771905",
        "cursor": {
          "ref": "b20e70fb-f3af-43e0-b05f-81277a68be21",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "100c7141-a6db-4403-bba3-c6fbbacc7e4c"
        },
        "item": {
          "id": "94dadc0d-d6b8-4515-8ecd-d9c7bc771905",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a0c08bce-beba-457c-a241-b6004ba890fe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 437,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff962bb-68d2-4f5f-a0b4-e9e79b5e9bd9",
        "cursor": {
          "ref": "be85ca7f-9937-465a-a547-c3495ca2aafd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eed9ae47-39a1-41a6-8cdd-64a455ed5d58"
        },
        "item": {
          "id": "eff962bb-68d2-4f5f-a0b4-e9e79b5e9bd9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cde12bcc-e9ce-4355-b7cf-644fdb35157c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 281,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7bb90-108b-4443-93cc-597a4906c26c",
        "cursor": {
          "ref": "4b35b75b-61c3-44ef-9b8c-0c4d2b54d395",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4189847e-487d-4c92-bcb1-cf2503bb215b"
        },
        "item": {
          "id": "c6e7bb90-108b-4443-93cc-597a4906c26c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a5c09db2-b2d1-444a-b32a-1c8865e60699",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a5f337-5d9b-4c83-b526-97486b8f33cc",
        "cursor": {
          "ref": "91de3c0c-8407-4d03-855e-565cc3e33ba7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c5e80702-d16f-4782-b074-50ecbe589c9f"
        },
        "item": {
          "id": "41a5f337-5d9b-4c83-b526-97486b8f33cc",
          "name": "identifiers"
        },
        "response": {
          "id": "bf584351-6563-4aef-9ab5-9a2d3d699e4f",
          "status": "OK",
          "code": 200,
          "responseTime": 1451,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a137380b-8ce3-4a61-bf90-c5f8c5b6ed44",
        "cursor": {
          "ref": "44016878-b177-4d3f-baab-8197bd228777",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f071dcb1-70f0-48c4-b7da-551c15d761c7"
        },
        "item": {
          "id": "a137380b-8ce3-4a61-bf90-c5f8c5b6ed44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c80eca96-16ee-4178-b34a-3b1eb33f75e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d88c9-2136-45e5-9dcc-09fdc4575cad",
        "cursor": {
          "ref": "546d4df5-4915-424e-8677-1f1d7a9d0926",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e76e9b2a-3da7-47b0-aad8-7e8340b3322a"
        },
        "item": {
          "id": "725d88c9-2136-45e5-9dcc-09fdc4575cad",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1a907336-a341-462f-ab92-aedcfb81786c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36fd655-3b7e-48b8-8748-b30ce1979231",
        "cursor": {
          "ref": "050f83f5-0813-40a4-8850-901639c91a27",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e28cc6f7-d450-4782-bd60-7fd18f77ec21"
        },
        "item": {
          "id": "c36fd655-3b7e-48b8-8748-b30ce1979231",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a238169e-cace-4b14-8f5f-bf484692b7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82851b5-3104-4f8d-befc-c640421db590",
        "cursor": {
          "ref": "644afa8b-23e6-4a46-a274-f72aa8bbbed1",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "aa966f09-e9bd-4dda-b740-a3cd1dfa0b87"
        },
        "item": {
          "id": "a82851b5-3104-4f8d-befc-c640421db590",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c71b5316-b211-492c-aafd-0f5b9d8a047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2360783-8ae1-4473-9b2c-dc527090c72f",
        "cursor": {
          "ref": "378241a3-b9d5-4aa2-920e-179194dcb5a1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "073ecaf4-6144-4389-bd1d-3caf373318c4"
        },
        "item": {
          "id": "c2360783-8ae1-4473-9b2c-dc527090c72f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c52a08f8-df97-402a-9c61-a01ed4e63ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba39376a-897b-4427-97ad-60fa7f119e75",
        "cursor": {
          "ref": "5856f52b-a11f-4d43-b8e8-38a3a4a56e6a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fe88a24a-5e6d-4dd7-8c23-a260459db690"
        },
        "item": {
          "id": "ba39376a-897b-4427-97ad-60fa7f119e75",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aa049aab-8e69-4dae-846e-3dc095994826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec8ba25-055a-4550-b8d9-e4509261bea6",
        "cursor": {
          "ref": "7edc8ad9-2a4d-488c-bdff-8b3d7c792112",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "70821cfc-ab40-4df2-af50-14790c2c09fe"
        },
        "item": {
          "id": "dec8ba25-055a-4550-b8d9-e4509261bea6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b16510a0-45b2-49dd-8ff4-928f05fb2483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b6d631-d53a-489f-9470-75468867c7a3",
        "cursor": {
          "ref": "65597fa1-20a7-4dff-a65d-5a2095a85567",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "799ea00b-4326-4493-b11f-cd4eec243977"
        },
        "item": {
          "id": "b2b6d631-d53a-489f-9470-75468867c7a3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a989403-b384-4ce4-b4d5-db7afedbf2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b331f5c-a398-402b-839c-434aa7f83ef6",
        "cursor": {
          "ref": "47da44a4-d0d9-40b7-b679-75a53d7b3121",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9d8ad756-50bf-4046-a733-938ce0e9fd99"
        },
        "item": {
          "id": "3b331f5c-a398-402b-839c-434aa7f83ef6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e3541088-41b5-4f82-9889-f7e804952990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34976d6-1181-43e8-b160-dbdce475460a",
        "cursor": {
          "ref": "716e2007-adfd-409a-8e3c-e8f84e19dfe4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9802e255-8a0b-4abb-bb51-4b09ed289294"
        },
        "item": {
          "id": "f34976d6-1181-43e8-b160-dbdce475460a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9290090c-12e1-47e6-a497-cc8e0f7dacc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4946274-115c-4e5f-9fd5-6cb3e1270530",
        "cursor": {
          "ref": "e2913027-16cf-4de1-bca4-78536fb63ef4",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "31abb756-1c96-4f6f-a912-826d7dce786e"
        },
        "item": {
          "id": "e4946274-115c-4e5f-9fd5-6cb3e1270530",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b80b2bea-fd4c-447f-bfa5-0d930c96ee7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d601d32-fa88-4a39-ab04-cfcd98a342ab",
        "cursor": {
          "ref": "67363082-060e-479d-a83f-78ba69ece531",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "16175e4c-aa99-40fc-9620-d632c1848b0e"
        },
        "item": {
          "id": "2d601d32-fa88-4a39-ab04-cfcd98a342ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "745c8bcd-2011-473f-a3cd-0adbd43295e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9217e5-7994-4a41-86a3-c6d8f3eb4f64",
        "cursor": {
          "ref": "b91a5d15-5fa6-4a17-9f8e-9d09338b956b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e420f00-922a-4567-9eb8-5dc3cdf1eed7"
        },
        "item": {
          "id": "6b9217e5-7994-4a41-86a3-c6d8f3eb4f64",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bd6dc194-ff7a-468e-ad0b-e91dfd29d8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2710e1-e3c0-42f6-88e8-461898df3d87",
        "cursor": {
          "ref": "f4671e47-b1eb-4e55-bba0-114ab10e84de",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cd4c64e0-11f9-4901-8aff-8d8fb62e814a"
        },
        "item": {
          "id": "2a2710e1-e3c0-42f6-88e8-461898df3d87",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e204bec2-b107-4882-a3c1-abbc3bc1db6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbe94b1-2de3-4b7e-bcbf-c115979d51d9",
        "cursor": {
          "ref": "fd82dccb-f6fe-4ed8-82ed-1d825ad6e951",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f29c74b4-864c-4a33-9af1-9c4a9a3fa8f2"
        },
        "item": {
          "id": "fbbe94b1-2de3-4b7e-bcbf-c115979d51d9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9d50e3eb-7af5-4da8-b254-706e72976d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71825e00-7f4f-4565-ace4-b6d0137e9e3b",
        "cursor": {
          "ref": "ad88ff2c-b78d-4fd0-a991-2ee2f705506d",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3539330f-f7bb-4558-99da-fe5da3230bc7"
        },
        "item": {
          "id": "71825e00-7f4f-4565-ace4-b6d0137e9e3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1ef2ceed-340d-4332-b46f-187cb6fb4cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2c0471-a06b-4162-8f8e-c8502d1f50e2",
        "cursor": {
          "ref": "602f1480-4fe0-472f-9faf-118d5b2a42e0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "75a8ef8b-cc1c-452e-a503-0082e248e640"
        },
        "item": {
          "id": "cc2c0471-a06b-4162-8f8e-c8502d1f50e2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1cb4ca88-f3f7-4247-b9c0-dfe9be8c6a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cd93dc-49d7-4698-9330-a2223f695e66",
        "cursor": {
          "ref": "40ebc25d-b69a-4763-8fe5-5044028e36ee",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7b2f1b1c-6140-4e4e-8481-a74c0b1b41c4"
        },
        "item": {
          "id": "c5cd93dc-49d7-4698-9330-a2223f695e66",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0648d898-4577-4a20-8061-38685d514f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d85729-b99a-4d54-9f0b-4e45e3bd8b12",
        "cursor": {
          "ref": "8da46668-8170-4716-943e-7f7dceede335",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb35a0f5-c49e-40f0-9988-c1522cd877d0"
        },
        "item": {
          "id": "16d85729-b99a-4d54-9f0b-4e45e3bd8b12",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f74130ab-75fd-4300-aea5-27bdc3ec3467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fbaaf9-d2ed-4447-ab62-d1d3d5517f29",
        "cursor": {
          "ref": "47ef4b04-425b-4b10-b08e-884fb8673898",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c33ae51c-2aea-42cb-9072-ee620f6af127"
        },
        "item": {
          "id": "a0fbaaf9-d2ed-4447-ab62-d1d3d5517f29",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5bcbfb98-cda5-46a5-8379-e7e9d3b708b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06999e2e-c1dd-4168-ae3d-f3af1f5b63bf",
        "cursor": {
          "ref": "aa54b099-2c07-4565-ae9d-6ceb34f60e2d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae3fe927-4c90-461c-9d99-4e94c94ad872"
        },
        "item": {
          "id": "06999e2e-c1dd-4168-ae3d-f3af1f5b63bf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "03d8c885-72b1-428a-8543-2abba9b108d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d9b7e7-c58e-4408-90e8-2762f8a1741c",
        "cursor": {
          "ref": "1e108540-ce42-43e2-ab6e-90e6defbb7fc",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c3f02490-c765-418e-962e-142592d2b5cb"
        },
        "item": {
          "id": "23d9b7e7-c58e-4408-90e8-2762f8a1741c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f520129d-158b-47a5-933e-f88fe0dd9417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599aa328-777e-44f1-9277-1c1e14a10b15",
        "cursor": {
          "ref": "17b831de-9b56-4a55-8d9b-71f4a880459c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9be994ba-454f-4b5d-9834-39201c941061"
        },
        "item": {
          "id": "599aa328-777e-44f1-9277-1c1e14a10b15",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f09153e2-65ca-4c32-acc6-658c4539a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61fd4a2-c2fe-471f-a846-207ce287042a",
        "cursor": {
          "ref": "74546ed1-7809-4146-8935-7cb1ef0119ca",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4b1e20e6-d914-4268-9210-f5aa89bb0710"
        },
        "item": {
          "id": "a61fd4a2-c2fe-471f-a846-207ce287042a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7cbe14b6-3cac-4d65-80d8-cee1184638cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11764e58-bc4b-4e6b-86d8-44d6bbb41674",
        "cursor": {
          "ref": "328bdc3f-4d7c-4bc1-b0de-09371869e868",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0a949a1d-03da-4847-940e-975882b5f2e0"
        },
        "item": {
          "id": "11764e58-bc4b-4e6b-86d8-44d6bbb41674",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1542a7ed-a357-48e0-a0f1-7b8a218caaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7b9f1e-d113-44c4-b4b1-57978817ff86",
        "cursor": {
          "ref": "ae91fbcd-93dd-4eb7-87ac-d72896567c76",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "94d8f9c3-1d96-4d3f-815e-8a0a0fc16459"
        },
        "item": {
          "id": "6b7b9f1e-d113-44c4-b4b1-57978817ff86",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0a9abec4-1514-4d03-8603-18ca47b3aacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47410245-ae36-4b1b-82af-6274697c937d",
        "cursor": {
          "ref": "428bae95-8e36-4e4f-bdd1-8eecfe193254",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e4ccf73e-16ad-4c16-82e1-060a7f8b8d60"
        },
        "item": {
          "id": "47410245-ae36-4b1b-82af-6274697c937d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a958aca3-fc38-469f-bcaa-216c8e055486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6afb218-af9b-4ab4-8332-f6f2134ae533",
        "cursor": {
          "ref": "f21e4e4b-5a11-47cb-8798-9befa0e78634",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4d2e8c65-4241-4ee0-a4bf-951281078fed"
        },
        "item": {
          "id": "e6afb218-af9b-4ab4-8332-f6f2134ae533",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9b677898-abff-40d3-b466-e6dca4ca1498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8b547d-7245-407c-9ac0-241e8b519904",
        "cursor": {
          "ref": "3808de2e-cf76-41ac-b538-a026af98bfdc",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bfc51c59-70c0-4f57-9833-5c58281b6806"
        },
        "item": {
          "id": "cf8b547d-7245-407c-9ac0-241e8b519904",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fe98d367-ed7c-4c99-8ce4-391bf4807ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a8ac2-025b-4604-a133-b0dcfed52136",
        "cursor": {
          "ref": "7432c2a3-45b5-4d26-98f4-7d309f5e6866",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ebf5f816-a485-465a-8197-1ab9c9ae0625"
        },
        "item": {
          "id": "0f8a8ac2-025b-4604-a133-b0dcfed52136",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2862603b-b073-4066-8956-22ebdf058078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f73703-f98d-4dc1-ac92-33d9d6028354",
        "cursor": {
          "ref": "a83340ce-415a-4623-b470-d130ca582f38",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6228c718-e424-412b-9b95-254408519573"
        },
        "item": {
          "id": "60f73703-f98d-4dc1-ac92-33d9d6028354",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "25ec10d1-6e42-4e72-acd8-455879514821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae48612-5e9c-4d5e-90c5-fe73a02753b6",
        "cursor": {
          "ref": "6ddf2e99-4873-461d-8eaf-04a32d44858c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "feb19973-6c1e-47ac-83d6-bd5e3e11a425"
        },
        "item": {
          "id": "dae48612-5e9c-4d5e-90c5-fe73a02753b6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24dd0495-0b66-44ee-a5d5-9da4e0f3711f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c98e2c-71d9-426c-8df2-5c21ab7e29e5",
        "cursor": {
          "ref": "4c51ba60-0d46-4102-97bc-c6e9f13e4d95",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "78f57b3b-b426-4069-82d3-b63d57f1971a"
        },
        "item": {
          "id": "d6c98e2c-71d9-426c-8df2-5c21ab7e29e5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b1ed662e-e959-4a10-95c9-79d7389ff005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e720fb-2f0d-43c5-ade9-855518500f6e",
        "cursor": {
          "ref": "932fef91-070b-431d-983c-553dab65c06e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b49789dc-e08e-405c-aba5-a14e016a41ea"
        },
        "item": {
          "id": "d2e720fb-2f0d-43c5-ade9-855518500f6e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7d1fea8c-ba22-48a8-a1d7-f42a183dc3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7da2c7-7df9-4d07-8e1a-ed7ebfc54b28",
        "cursor": {
          "ref": "92d495e0-12a0-4592-9e24-e0da6ba46e87",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e001ee38-d4ae-4802-bde5-8aa5f24e2eda"
        },
        "item": {
          "id": "4f7da2c7-7df9-4d07-8e1a-ed7ebfc54b28",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4af1f4f9-aab7-40ca-9df0-31e84802ca86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f50a205-3f69-4629-ac9e-d8ad6644a234",
        "cursor": {
          "ref": "151862b2-ceaf-4552-a047-1afcb82ad205",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7aa54e11-f15c-493e-884e-305dd2a434af"
        },
        "item": {
          "id": "9f50a205-3f69-4629-ac9e-d8ad6644a234",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a762106d-8367-4ecb-84e3-25f7bd4aa149",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 602,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca681b-2334-40c9-be77-c4c3f9543f43",
        "cursor": {
          "ref": "2d8fa22b-09e2-4640-a612-dde202d638da",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d3745dba-04e9-48c2-a7d5-72ad09063878"
        },
        "item": {
          "id": "14ca681b-2334-40c9-be77-c4c3f9543f43",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d6f6e7a8-6e6d-4fdb-afce-ac21d02c66d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc85570-59f2-421c-9a96-4b783dd673dd",
        "cursor": {
          "ref": "cb50a5d3-8ee2-461c-8f9d-c334b2a0dd42",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e4b1627d-7bc5-4f04-a19c-1db27aece367"
        },
        "item": {
          "id": "4cc85570-59f2-421c-9a96-4b783dd673dd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7c7b5ee4-a9e0-4719-9d00-aff61ed7b168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba9f330-f1a3-4c0b-93c7-a5429b36efe8",
        "cursor": {
          "ref": "37483ce3-0561-4623-bf6e-b17be65ca787",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6b96d914-3586-4de4-8800-91531125c384"
        },
        "item": {
          "id": "0ba9f330-f1a3-4c0b-93c7-a5429b36efe8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fdba72b7-139d-409e-ae6e-0225bae48fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6899a0e-1e4a-4222-830f-ed3e27ba1d1e",
        "cursor": {
          "ref": "ff5244e3-8bde-41a2-8ecf-b9b64b0063f8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4cca5c64-963a-4df6-b161-2da6b040fd0c"
        },
        "item": {
          "id": "e6899a0e-1e4a-4222-830f-ed3e27ba1d1e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7c58f081-b5ff-4cd4-9d38-ba72824d419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0743ba-e942-47a7-a5c7-591182c6df4a",
        "cursor": {
          "ref": "edf2b3b8-c877-4f2d-9b42-9982d59c4be4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "396e47ab-50c0-46cd-99e2-682f4d02eedb"
        },
        "item": {
          "id": "5a0743ba-e942-47a7-a5c7-591182c6df4a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5b17a258-119c-4505-b8cc-21cc536ec274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86485e42-65cb-49d7-8810-1b7460c8443e",
        "cursor": {
          "ref": "079a051d-af39-4f5d-b2d4-618d43a554ab",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "04be774c-05f0-419f-8853-62ae299c76d7"
        },
        "item": {
          "id": "86485e42-65cb-49d7-8810-1b7460c8443e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0dda05ac-9437-4f6c-a09b-243195befade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3a80f0-7b09-4fd3-9024-56650c620d48",
        "cursor": {
          "ref": "4dd862ca-9ede-4b3b-a4b7-c6cdd5f2f35b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d57e6602-a1dc-4f53-b6ca-feea931d961a"
        },
        "item": {
          "id": "bd3a80f0-7b09-4fd3-9024-56650c620d48",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c1aa7e05-5750-49d1-a02c-e372328f60b5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 595,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46821e9-a554-4049-af17-26adaf4a05fb",
        "cursor": {
          "ref": "8c5762fd-b8e2-4a08-93a1-4983c6217852",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4487c58a-20b8-4da6-ab9f-7fdfd6182cd9"
        },
        "item": {
          "id": "f46821e9-a554-4049-af17-26adaf4a05fb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "210ba47a-3693-4bc7-9eec-ba12db6c3986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d138d4-6e9f-48b7-b624-69b0dc8b5981",
        "cursor": {
          "ref": "47809e66-eeaf-4566-8069-3507f9bff5bc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "36c6f37d-70a8-478c-80f9-6674735f01db"
        },
        "item": {
          "id": "c2d138d4-6e9f-48b7-b624-69b0dc8b5981",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ad4a8e4-dcd2-4eb8-bd42-fae93e648fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6bca33-93f8-4a20-93fe-7555d45fa229",
        "cursor": {
          "ref": "446d5811-8065-43af-a54d-73a7fcdd841f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ddc9dfea-2d1e-44bf-a0c9-8e676b67037e"
        },
        "item": {
          "id": "ff6bca33-93f8-4a20-93fe-7555d45fa229",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b55eeb22-7203-4a3d-9219-e36976ba3058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9841d35d-0d64-4b31-af08-6be6f0d01762",
        "cursor": {
          "ref": "e5f57bbd-d521-41bf-87c0-08389aa7de07",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6986d605-4792-4ba7-881e-c559d623d64c"
        },
        "item": {
          "id": "9841d35d-0d64-4b31-af08-6be6f0d01762",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f5b1186a-38c5-48aa-bf2e-4c39e701e0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b8e22e-792a-4d5e-bb33-452a4467bacd",
        "cursor": {
          "ref": "9a7af9f4-95e8-4ffc-ab3a-04547f68e5d5",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "076c368a-5ffb-4955-8b3a-a3888523145f"
        },
        "item": {
          "id": "c9b8e22e-792a-4d5e-bb33-452a4467bacd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bf185396-8407-4f02-adf4-6ac170a4e0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65cf25f-fdc0-4c3c-be59-d663bbb59750",
        "cursor": {
          "ref": "76611c0d-a099-4440-8165-5d2b38294162",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "178fed1a-947e-44bd-999e-0a742cd2ba1e"
        },
        "item": {
          "id": "d65cf25f-fdc0-4c3c-be59-d663bbb59750",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "73ce6c45-9d58-4ba1-9507-3fd4d6d81dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dd762b-ef7d-4fa3-b73d-f85130e10eb5",
        "cursor": {
          "ref": "ce005675-9a7a-403e-9f66-98abedca6285",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "777d6e57-ebcd-4faf-b2c5-5a469e7ef3c1"
        },
        "item": {
          "id": "f7dd762b-ef7d-4fa3-b73d-f85130e10eb5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3c22af2e-ecfd-49f4-a33f-30940159640d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cf495f-ddbd-45aa-a87f-f18a36a349c6",
        "cursor": {
          "ref": "08e0bbbb-a818-474e-898d-bc8479ad8055",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7d6ea971-d69f-4b40-ba8a-6e4e3d248372"
        },
        "item": {
          "id": "e7cf495f-ddbd-45aa-a87f-f18a36a349c6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "644f7306-0a53-4090-b2b2-d0b9e12e495e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea0aec5-3a2e-4788-92f5-00bab4707416",
        "cursor": {
          "ref": "2a30d777-868b-4698-9670-4a9cbab7a9c8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1a1cbee8-79b6-468e-93ed-be81e2bb20c0"
        },
        "item": {
          "id": "1ea0aec5-3a2e-4788-92f5-00bab4707416",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3a85f795-dd20-4450-b17f-018dab62aed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d783a8b1-5ccf-4fcd-a197-f4d52e5af8dc",
        "cursor": {
          "ref": "316e08e7-37a5-4b7d-ae57-49d816428376",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e22d4beb-979d-4073-a531-eaabee64fbbf"
        },
        "item": {
          "id": "d783a8b1-5ccf-4fcd-a197-f4d52e5af8dc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "60adc0e5-2018-4a52-aefc-46ca16c96ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2226bf6-573a-463e-ba0a-1db163e3cad5",
        "cursor": {
          "ref": "68e9306e-3467-4387-aa3c-406a2e9c46c2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6bbcef32-8837-43c1-a4ed-8dbd9dbf5ce2"
        },
        "item": {
          "id": "c2226bf6-573a-463e-ba0a-1db163e3cad5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c971ffb7-acc3-4bb4-8038-bfdc53cb0632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333d38a3-cf7d-4250-b422-35251339351c",
        "cursor": {
          "ref": "7ae24a82-9c37-4a53-bc3a-2e3dea9decee",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3dc3c83b-a378-4fef-b16d-816a2821859e"
        },
        "item": {
          "id": "333d38a3-cf7d-4250-b422-35251339351c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2af2fd29-58c2-4db7-a333-cf827c3b7fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0e44bd-eb52-4fa4-844a-03d68395e656",
        "cursor": {
          "ref": "ea311e25-db47-4368-86cc-a98a5d259b74",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed573a8c-d97b-4ff8-bc15-84c69d52b24d"
        },
        "item": {
          "id": "7e0e44bd-eb52-4fa4-844a-03d68395e656",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9819c9ac-5f56-4df9-88d2-81322298f478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cea60e-53da-42e5-86a3-c5a9104e5c79",
        "cursor": {
          "ref": "3deab2bf-ecfa-4286-996f-4578ebdc0d0f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "993a826f-fc87-4d3a-a0c3-455b1a230e2c"
        },
        "item": {
          "id": "a2cea60e-53da-42e5-86a3-c5a9104e5c79",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7905e3b9-aa76-4bed-9fc7-bf9dc66af5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9599b4c7-bf70-437a-a752-3dd7173e36e0",
        "cursor": {
          "ref": "7935bc23-e29f-4537-ab0d-153a1d8df3a6",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "92f41bc3-709a-44e1-a927-51cebc1859e6"
        },
        "item": {
          "id": "9599b4c7-bf70-437a-a752-3dd7173e36e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6b36539f-0e6b-45d3-9469-00600da3df68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724d5bb5-ecf1-422c-a682-d4fd127162ac",
        "cursor": {
          "ref": "dee66565-67f9-490d-a462-06346e49f12a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b5e921dd-565c-4cdf-8aa7-9da6a84c9ad1"
        },
        "item": {
          "id": "724d5bb5-ecf1-422c-a682-d4fd127162ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5a5595d0-1900-4fd1-b397-58f29b9377fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa0bcef-0856-43d3-9912-95c0f7184713",
        "cursor": {
          "ref": "38167252-3962-43fe-816c-53f416ee17a1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "94f6df5d-bbbb-4d0f-a0c3-ce2b6b6feba0"
        },
        "item": {
          "id": "3fa0bcef-0856-43d3-9912-95c0f7184713",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4043645c-89ed-43d1-b5c6-f250df23f4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb897b2e-0bdd-4ad0-bc15-2dfaf1fcb232",
        "cursor": {
          "ref": "c9573ad6-5a75-43e0-9e3e-0bd834497342",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "338f8056-5593-4326-aae3-20062f098969"
        },
        "item": {
          "id": "cb897b2e-0bdd-4ad0-bc15-2dfaf1fcb232",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5f37efba-da7b-4965-aacb-12525e11499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00b181a-29b5-4d2e-89a8-93ba18f52e6e",
        "cursor": {
          "ref": "79e23a6a-569e-4c2f-b449-db3d24163e23",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e9f503f4-2842-41dc-9fe3-3a08aeb0746c"
        },
        "item": {
          "id": "c00b181a-29b5-4d2e-89a8-93ba18f52e6e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "88181e5f-766d-4369-9339-3eac593457f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9415958c-4430-4c80-a9b4-55a6f11cbb37",
        "cursor": {
          "ref": "8f558b56-0b2d-4099-8e2a-0fff1bb4a376",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9048009-ce65-41ea-b32e-50a6aaac2825"
        },
        "item": {
          "id": "9415958c-4430-4c80-a9b4-55a6f11cbb37",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "27a6c01f-f739-4284-b309-9e7ac57c7483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6c7122-fa72-42bd-8223-7410f69f25c4",
        "cursor": {
          "ref": "258a2f9e-a5ad-4e76-a021-b125e72c7a41",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "76865455-2651-4456-afc4-70c5e2daead7"
        },
        "item": {
          "id": "5a6c7122-fa72-42bd-8223-7410f69f25c4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ee7d269-cc73-414a-bc0b-1ad701e6c436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97ebe00-bd1e-4524-837e-74e8146bbb2e",
        "cursor": {
          "ref": "258e4cda-c5c6-4b31-80fb-35dac19412bd",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e190dd64-44a8-4326-a468-fa71aaf4a13c"
        },
        "item": {
          "id": "e97ebe00-bd1e-4524-837e-74e8146bbb2e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6290647d-c818-4ce6-8c4b-9c67d34531ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668d66c9-3656-40dd-8d5c-632005439f74",
        "cursor": {
          "ref": "62408c3d-31ca-4f58-843d-ee38831a02e2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1e16b066-ac24-46b0-b4b7-3e4dd983786e"
        },
        "item": {
          "id": "668d66c9-3656-40dd-8d5c-632005439f74",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b8815d10-eb7d-4781-b2c2-32bc4f43fa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c3f19-b072-40c3-b227-1184c8a53276",
        "cursor": {
          "ref": "4216f2a8-0bc5-4f4f-a241-20efc746b3e3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b9973fae-b059-4054-be2e-58295dee3be2"
        },
        "item": {
          "id": "e48c3f19-b072-40c3-b227-1184c8a53276",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a506586c-5dad-46df-b2bf-ea38f09c52ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcfa40c-9339-449c-9c93-f0168e516b41",
        "cursor": {
          "ref": "e5f0f101-1cde-410d-98a9-5953dc65b8c1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "57c9a53a-4cd5-41d0-8562-269c69961a15"
        },
        "item": {
          "id": "cfcfa40c-9339-449c-9c93-f0168e516b41",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f65ead1c-ab04-4cbe-9402-341cccdc9949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aea84b4-877d-4e73-922f-f6256c8435de",
        "cursor": {
          "ref": "265da476-6b5f-4fcc-ba50-51d8c5afd646",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f775a89f-6008-4100-8a84-4a45d60c0cce"
        },
        "item": {
          "id": "7aea84b4-877d-4e73-922f-f6256c8435de",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "147e7dec-027c-4210-af4d-7a77d2aacdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d4ce25-6852-4bde-a1b3-8d0477e21439",
        "cursor": {
          "ref": "1423f198-3cdf-49a5-94dc-56b69b9d19a5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d5e1118b-56cb-4c71-9631-761e69a125a9"
        },
        "item": {
          "id": "82d4ce25-6852-4bde-a1b3-8d0477e21439",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6486cdb8-6a95-4aa9-9c95-e972ce3248b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c64686-c855-40a0-8398-26070918d309",
        "cursor": {
          "ref": "5289fb4c-da7c-4edc-903b-c1dbfe0da4d6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c30eca16-38bb-4970-a8ad-40074431f667"
        },
        "item": {
          "id": "95c64686-c855-40a0-8398-26070918d309",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cf3c735b-cf24-48b0-88c9-4a7fc35723f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf4c41a-3fd4-47b4-8928-8369b7df5df0",
        "cursor": {
          "ref": "49c8a370-cffe-40b8-b047-3c9a9effb828",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7fdaa63b-df6f-4b81-9c30-1557d81f3698"
        },
        "item": {
          "id": "2cf4c41a-3fd4-47b4-8928-8369b7df5df0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "09ddeb46-1c3b-4c9f-9419-5cd3307af9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aea8f3-7c54-4a11-8fcd-e02baf571232",
        "cursor": {
          "ref": "02788caa-cc46-49c8-a7c0-9db58ec3df1e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "804b3f72-a9a8-44b9-aaec-f16db037f697"
        },
        "item": {
          "id": "15aea8f3-7c54-4a11-8fcd-e02baf571232",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "52092241-ace6-4278-848f-102deeb77e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6fa6d3-b3c1-4ca3-beac-8730811cc6d6",
        "cursor": {
          "ref": "8bb3d723-6f74-4b95-a4f6-6b86dfa4797d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "507e802f-7ccd-4266-ad0c-3b44d124e1c5"
        },
        "item": {
          "id": "3f6fa6d3-b3c1-4ca3-beac-8730811cc6d6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0be16bd7-6b37-44a0-ac2a-38dcde3c3fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693834ff-4e7e-485c-b495-01ac9612fed0",
        "cursor": {
          "ref": "23fb9783-fd91-4ba3-b0e3-819bac04bd82",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "962de54e-9abc-499a-b805-8d233e0469e5"
        },
        "item": {
          "id": "693834ff-4e7e-485c-b495-01ac9612fed0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c82afcdb-5694-433c-8f73-26b7e29d93db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3ad7cf-3d32-4425-9264-a24bca7629d8",
        "cursor": {
          "ref": "0dd632e4-98fe-48a9-8dcf-087ad93fe306",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6de734ef-c51b-4939-bd52-195e659ca4d4"
        },
        "item": {
          "id": "fb3ad7cf-3d32-4425-9264-a24bca7629d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ff91a005-6262-4cc2-a86c-27daac130b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfe0815-b685-4c3a-bdc7-c7f4c01dda14",
        "cursor": {
          "ref": "d5f3b141-c77d-461f-9ea0-bd8ebf481417",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7bd9af59-805c-44dd-a7be-8de2db07d5a8"
        },
        "item": {
          "id": "7dfe0815-b685-4c3a-bdc7-c7f4c01dda14",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ff799ae-149d-414c-ba93-599a25128b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb1a25d-ddf4-4c26-ad28-a98d5eaebe44",
        "cursor": {
          "ref": "4550b54a-4b22-4218-9882-00de666a20e8",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "212bf7a9-3d38-4816-8f92-3f82b0474fc1"
        },
        "item": {
          "id": "dcb1a25d-ddf4-4c26-ad28-a98d5eaebe44",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2352a270-3024-4c94-8960-8ab1c8d7af21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4448b7-4518-4398-ac25-2e799906080c",
        "cursor": {
          "ref": "cc9c27d1-8097-4453-ad4f-eb9ccf560fb9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d51d0afa-f9cb-496c-8ec1-c0f52603eb7c"
        },
        "item": {
          "id": "7c4448b7-4518-4398-ac25-2e799906080c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d55f2bb9-6037-46f7-a401-20c47ba25462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73abf26b-d910-4ed3-8215-8cf38f51310e",
        "cursor": {
          "ref": "e1dfaf0f-8048-48c8-b089-74cb274a55ce",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6e5ab950-6b38-4a6f-a703-062958ab0c01"
        },
        "item": {
          "id": "73abf26b-d910-4ed3-8215-8cf38f51310e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03ca02f9-853f-42fd-bb7d-3b755bbf32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead53b9d-e794-4ad5-a596-a3dff5d84804",
        "cursor": {
          "ref": "df914dad-4473-47b0-9880-15c458dd1ca0",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1efdb953-a720-4e47-9c13-c6cebf7548f0"
        },
        "item": {
          "id": "ead53b9d-e794-4ad5-a596-a3dff5d84804",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d36423bb-e5a9-47cf-b3e2-086ecc250b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4231a24-6ba0-4b64-9369-cd599f05266d",
        "cursor": {
          "ref": "e07a73c7-7917-4d84-a155-09c3e109bac8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4aba0c94-ff9c-4f15-b18b-24cb43f74885"
        },
        "item": {
          "id": "a4231a24-6ba0-4b64-9369-cd599f05266d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7b434850-53ba-4b65-be0e-da0c18d79932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de2a7e7-c80d-41db-991b-8f202c1d5b85",
        "cursor": {
          "ref": "20e91ffd-3d09-455f-9939-d6813c99a57d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "791a8804-3071-4640-aa69-6bb7336b494d"
        },
        "item": {
          "id": "9de2a7e7-c80d-41db-991b-8f202c1d5b85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e1cee77d-56f2-488a-b187-9530f2f5b063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6fefd0-c891-4b95-9540-5e0250093a14",
        "cursor": {
          "ref": "42660924-507b-4344-a63d-d91b1aaa6dd6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e0c5bbb-f349-48a1-a540-2626be6125ba"
        },
        "item": {
          "id": "7e6fefd0-c891-4b95-9540-5e0250093a14",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0259df99-fa5d-4517-a9a0-0ab8a959ba3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a1e345-99d0-4f42-beed-8ca8195e99c8",
        "cursor": {
          "ref": "5c99db17-7887-46d2-9e88-aac669dacc4d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "44e54635-5ce6-4967-b120-244bb1daaec0"
        },
        "item": {
          "id": "09a1e345-99d0-4f42-beed-8ca8195e99c8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "26bc2f36-eede-48c9-b138-b33fdc4157f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f83144a-e28c-4a73-af60-a9494d7880cf",
        "cursor": {
          "ref": "76b6f218-a1de-4db3-a36e-f1f0e62a5cb7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "58b927d2-0d6c-44d1-b8eb-7df70b51f3e2"
        },
        "item": {
          "id": "2f83144a-e28c-4a73-af60-a9494d7880cf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bcc6b3ca-7a59-470b-850a-7ec4e4577fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c2d9db-9e5a-495d-9081-9f37f0764691",
        "cursor": {
          "ref": "bd17d8ce-6e91-4c8f-bed4-e32ca7ba2dbd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c3294297-6fe8-4880-8d83-fd31f901ca41"
        },
        "item": {
          "id": "24c2d9db-9e5a-495d-9081-9f37f0764691",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "24497c83-576c-44b9-ba7a-5a54ad461f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61398d-ec49-458d-a0b6-0d8387bcde58",
        "cursor": {
          "ref": "488e2c02-7242-4c7b-b29f-afdb881ceb9b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f64d97b1-f1d6-4ca1-bdc3-ef23f82a3e5b"
        },
        "item": {
          "id": "1c61398d-ec49-458d-a0b6-0d8387bcde58",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "96a9e872-73b5-483f-b0c6-76899c8bb003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463c683-6e21-4516-a8c6-3c218ae453ca",
        "cursor": {
          "ref": "95532a27-38c4-4ce5-9d1a-9a17aee1261a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0217ff12-1747-411f-95e3-d530098d298b"
        },
        "item": {
          "id": "9463c683-6e21-4516-a8c6-3c218ae453ca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9924b5e6-2d64-48e0-ae0b-f92cc9ea3652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99983f60-0efd-4f95-bd37-230038691183",
        "cursor": {
          "ref": "18e9a55c-d5c5-4571-ab2c-c2fcfc784c4a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9e7c7661-5546-4894-a911-3a431f87721e"
        },
        "item": {
          "id": "99983f60-0efd-4f95-bd37-230038691183",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b591104b-2253-46d3-af2b-aa7100f3ef7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456d64f-09b7-4e51-95a4-7b3d92019c1e",
        "cursor": {
          "ref": "239bf5e7-4c0d-4fe3-a0be-d56973bc3597",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ba7659b5-b275-4425-905d-c756b9f1732e"
        },
        "item": {
          "id": "6456d64f-09b7-4e51-95a4-7b3d92019c1e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "360e3a21-d76a-4fa9-b4fe-acf17da1d237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aad341-14eb-4dc1-8488-82a4804d5abd",
        "cursor": {
          "ref": "7fc1912d-2407-4051-b22d-e038a6579c06",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "00bcf134-d4d9-43fe-ad97-157fd224fe3c"
        },
        "item": {
          "id": "b1aad341-14eb-4dc1-8488-82a4804d5abd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c76e07e2-fb3c-46a6-8280-37d42c431bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac14ad32-ff06-47f0-a343-1225aed9cc01",
        "cursor": {
          "ref": "548fdd7f-1dea-47ef-b8e8-e2f704b4a43e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "862a8cdd-6e41-4034-9590-17af57f0a042"
        },
        "item": {
          "id": "ac14ad32-ff06-47f0-a343-1225aed9cc01",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7d5280eb-85b2-40ed-a95a-e834481e7a0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f734a778-e16b-4b8a-93e6-b97d75358a40",
        "cursor": {
          "ref": "acd71439-b894-4764-9326-e2f65ae0c914",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c0ed86f6-bf70-466a-b131-e1504b14437e"
        },
        "item": {
          "id": "f734a778-e16b-4b8a-93e6-b97d75358a40",
          "name": "credentials_issue"
        },
        "response": {
          "id": "303d1e6b-c673-4e09-a1d8-acdc69995a79",
          "status": "Created",
          "code": 201,
          "responseTime": 7026,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d808e2-a44f-4f98-9c60-b67c896cac57",
        "cursor": {
          "ref": "936508e4-6adc-472e-bf47-ddf72be06605",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6cc74bfb-ca39-4424-a27c-4beb256fb545"
        },
        "item": {
          "id": "b8d808e2-a44f-4f98-9c60-b67c896cac57",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7465e876-d2d1-4498-9799-226df242591f",
          "status": "Created",
          "code": 201,
          "responseTime": 6791,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3543cb39-5ddd-4f11-a419-6a86704ae6bb",
        "cursor": {
          "ref": "a58197fb-22fd-424d-b24f-212cf37e5bb9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2fd90333-79e1-4df3-b3d3-bbab556f91b0"
        },
        "item": {
          "id": "3543cb39-5ddd-4f11-a419-6a86704ae6bb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cdc3119c-0282-47e4-a759-b7152d3186d3",
          "status": "Created",
          "code": 201,
          "responseTime": 6114,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fa15a0-37d7-4a4e-ac26-d729f5d7612e",
        "cursor": {
          "ref": "b5e0f66e-42c6-4706-9f98-9ad5c4c0b408",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "075817d3-8ca2-4965-8195-b291051f5ea5"
        },
        "item": {
          "id": "b2fa15a0-37d7-4a4e-ac26-d729f5d7612e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2bad823-809a-4149-b0d6-90188683948b",
          "status": "Created",
          "code": 201,
          "responseTime": 5891,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f63e4e4-73d8-4788-8e38-a6a37bc1b21b",
        "cursor": {
          "ref": "b8d485b3-5d40-437e-ab19-ca27f750804e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b493ac1-52cf-4582-bb2e-89e32489921b"
        },
        "item": {
          "id": "5f63e4e4-73d8-4788-8e38-a6a37bc1b21b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b33140a5-41e4-4af7-b34b-1cdd8668211f",
          "status": "Created",
          "code": 201,
          "responseTime": 6043,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7a91e-3494-4153-9c6e-8fb721babe37",
        "cursor": {
          "ref": "95a2e14b-ae79-4fba-b1e3-b045341c7603",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aca135d3-f600-45e9-8059-f25ee1440d0c"
        },
        "item": {
          "id": "52d7a91e-3494-4153-9c6e-8fb721babe37",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "513c6df1-07d6-4daa-94a0-7d09d2488048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3140cdc7-5fe7-4d78-ac28-e91c188bbebf",
        "cursor": {
          "ref": "a197fb88-05f1-47a6-99aa-87e3d2ca28a5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "980b8007-10e9-46a4-b8f0-c77a1b002497"
        },
        "item": {
          "id": "3140cdc7-5fe7-4d78-ac28-e91c188bbebf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "238fd324-de8b-4e65-8531-68d3896a6c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3704a8ab-8efb-46d5-b259-d57099f9dd7d",
        "cursor": {
          "ref": "32650f93-4d39-458a-939b-194664fa5918",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "07e9bbee-2dbf-4974-bfaa-3864c61b85e0"
        },
        "item": {
          "id": "3704a8ab-8efb-46d5-b259-d57099f9dd7d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e1992445-7479-4a8a-b4c5-3311fdf86805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e23cd87-d374-4fad-a980-5c4f6d96226e",
        "cursor": {
          "ref": "cd4bb1b2-1089-4af5-b412-32495c51639c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "93277d40-4bc3-4525-93c7-5f61f347dbbf"
        },
        "item": {
          "id": "8e23cd87-d374-4fad-a980-5c4f6d96226e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0b8c826b-f618-4371-93a1-abfbddf6eb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39546c9a-8fc5-4282-be03-0ea762f3321d",
        "cursor": {
          "ref": "c109b616-8a28-44cb-aa84-a076c98670d8",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "139db6af-670a-4f14-8068-9cc86edb27b5"
        },
        "item": {
          "id": "39546c9a-8fc5-4282-be03-0ea762f3321d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b791dc7-8418-451e-aa25-b4218a85fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1895f338-83ce-4b5a-8749-4438c11556ac",
        "cursor": {
          "ref": "ef963e30-4291-46b9-bba1-b2ea8c9e8ec2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7486d3bc-4745-4b92-8f7f-12dd23c5172a"
        },
        "item": {
          "id": "1895f338-83ce-4b5a-8749-4438c11556ac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "92594ba8-ba07-4b3f-88cf-9c6ff60a304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8ce8fc-72f9-4428-8c9e-a68eaba9f677",
        "cursor": {
          "ref": "82a9e74d-65bc-4bcd-9fc1-7e0ee31c5da8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d952b443-b1eb-4318-97c9-0d4dd8f41feb"
        },
        "item": {
          "id": "9e8ce8fc-72f9-4428-8c9e-a68eaba9f677",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "48d3524c-e01b-4123-8e50-1e6a18a694d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d98478-4199-44fc-9cda-4b92167dd4b5",
        "cursor": {
          "ref": "094e86bc-7fd1-4fb7-b522-efca6bd0377f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aebd63ea-4715-4aeb-942d-b336f6a42e9f"
        },
        "item": {
          "id": "c5d98478-4199-44fc-9cda-4b92167dd4b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "22b9cc54-91d7-4b99-ae1a-347719d4ef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06afda9b-a656-4d2c-a4be-b96ced6cb487",
        "cursor": {
          "ref": "8f4bd547-78f6-4a2a-b0cc-db08f55892c6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1e53aaa9-73b8-4cda-87aa-c4e85c5dcc80"
        },
        "item": {
          "id": "06afda9b-a656-4d2c-a4be-b96ced6cb487",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2bc55b9a-c9eb-475a-970d-f992f4f138c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9274e5-d7b3-4268-b94f-264444bd738d",
        "cursor": {
          "ref": "87cba11a-a8a8-48f3-980e-31e212d3bf66",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "82e574e2-3f78-45c5-97ac-473e9b9f342c"
        },
        "item": {
          "id": "cc9274e5-d7b3-4268-b94f-264444bd738d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ddedbf21-a1bc-4572-86b4-edb144383f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c7b63b-8a1a-4d9f-973e-869f286b66e4",
        "cursor": {
          "ref": "382a9d23-7773-4b3e-96bc-33f706f648c9",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "453c6acb-c405-4589-b7fd-affedf969280"
        },
        "item": {
          "id": "b6c7b63b-8a1a-4d9f-973e-869f286b66e4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2050e9f3-9f05-4f82-ab0f-931693103ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54a830c-86ab-40c7-8cbf-05ce09b07a4c",
        "cursor": {
          "ref": "d803010d-b18c-4028-a051-f19799ad5873",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "95edd3a7-7eba-484a-ad74-45d9895773b7"
        },
        "item": {
          "id": "f54a830c-86ab-40c7-8cbf-05ce09b07a4c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09db0e88-d251-4d6f-986d-a051b7b2ee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c671dd06-62f1-454d-831d-33b0079812c6",
        "cursor": {
          "ref": "6669361a-61b1-4723-a2fe-3b6d96bb221d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "134359c6-8d7a-47d4-8d20-d311b81ca108"
        },
        "item": {
          "id": "c671dd06-62f1-454d-831d-33b0079812c6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a2fa8c94-81f4-4097-ba62-78f3907a3bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0da02f-2b87-4859-984a-d6ad5acf0f18",
        "cursor": {
          "ref": "2a08379f-60e5-4342-82b5-3c9c78a10406",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f5a827aa-69d5-41ad-be21-c39d93bda49f"
        },
        "item": {
          "id": "3c0da02f-2b87-4859-984a-d6ad5acf0f18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b8cd3d5-eb69-40b2-8398-ebcb58efd0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca412df-9b1b-4aaf-95c7-b28f1838bf1f",
        "cursor": {
          "ref": "4cab7327-7439-4b8b-a4f1-0547394e9191",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a71cf073-f55a-4807-9af2-9184c8610a66"
        },
        "item": {
          "id": "6ca412df-9b1b-4aaf-95c7-b28f1838bf1f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43a6160f-9979-43c9-b303-af0ea21c5a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1cfe51-05cd-421c-839f-766fcd01516b",
        "cursor": {
          "ref": "d2e1f2ac-5a63-470b-badf-d02599144fec",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "050b482b-82c0-4110-9190-f0d69b0cf284"
        },
        "item": {
          "id": "dd1cfe51-05cd-421c-839f-766fcd01516b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca7337a7-ab5b-4a1c-80e8-7281c22f171b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21393536-a833-4a22-83b4-a4414ee3db5c",
        "cursor": {
          "ref": "cee4a6e6-59c4-45d4-b1f3-aa7230838b12",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d24f43c3-75c9-481a-8a8a-9d39ac358c59"
        },
        "item": {
          "id": "21393536-a833-4a22-83b4-a4414ee3db5c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2c557ce4-92f2-4771-8d53-500c7603450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a20288e-e1db-4e10-b8e4-d5c149d1a08f",
        "cursor": {
          "ref": "cb39f3d9-6605-446f-a3a3-b2032ed6b8b7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6709e323-6558-4524-984a-6705f43fdb2c"
        },
        "item": {
          "id": "7a20288e-e1db-4e10-b8e4-d5c149d1a08f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a6bc3f1-f788-4c63-adbc-60174b12bc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b97a9d2-bb9f-4516-9911-d924cc141df7",
        "cursor": {
          "ref": "714a08b9-52f6-4613-af98-8ca940eb5b22",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ca6e1a0d-54f8-4b07-ad37-9b69c8e1030b"
        },
        "item": {
          "id": "2b97a9d2-bb9f-4516-9911-d924cc141df7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6144360-8480-40a2-a443-154aefd3386d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1305d182-9363-487a-8df0-16892e366482",
        "cursor": {
          "ref": "8cc47625-5900-44b3-9be5-0eb6f969cbfa",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a9ea9e63-3cc4-40d4-9f9e-bdba9c2a8da7"
        },
        "item": {
          "id": "1305d182-9363-487a-8df0-16892e366482",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "653156fb-6033-4205-9dc9-fdeb19bd53bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a63eef-ac55-43bd-bbd6-b1fc9a84e495",
        "cursor": {
          "ref": "22bbfb54-8997-4b0a-b1a2-9b91c65c8bd7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5d0ed196-2357-4c5c-941f-7c68096e40bf"
        },
        "item": {
          "id": "a6a63eef-ac55-43bd-bbd6-b1fc9a84e495",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "27d3c957-a8a9-47e4-a20c-074fb09ab18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002b08cb-edb9-4274-9cff-5a2044fb0965",
        "cursor": {
          "ref": "2c6cc4d7-5e7b-46a2-9115-1fe7fa30aa04",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "73c17feb-2423-44d1-8b63-d600845d2345"
        },
        "item": {
          "id": "002b08cb-edb9-4274-9cff-5a2044fb0965",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20a14426-e030-49e8-9e98-82d90030518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201b5675-2261-40d6-a9e8-fdf8d8dfe29d",
        "cursor": {
          "ref": "ab3ed2cd-91f2-4784-bc4c-15aad53f0ea0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5b9bf426-2af4-48ec-98a8-a427f63d65e7"
        },
        "item": {
          "id": "201b5675-2261-40d6-a9e8-fdf8d8dfe29d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76a41038-5cfe-4dea-809e-e0589827713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e681715-4040-4b7a-a48b-12ea3840d510",
        "cursor": {
          "ref": "9b9d9d4f-09ef-44f9-88af-5ba68cc10eb1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f55b8d9f-cc14-4594-bdd2-327609416067"
        },
        "item": {
          "id": "5e681715-4040-4b7a-a48b-12ea3840d510",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f27b9276-f879-41fa-a41b-0de706f3b125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f467d18-45cf-4a0a-9565-3123ab254790",
        "cursor": {
          "ref": "ea583c21-be81-45d1-affe-bd09fed7aeba",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e6899373-37e4-4077-ad8d-cf7a1ce8a837"
        },
        "item": {
          "id": "8f467d18-45cf-4a0a-9565-3123ab254790",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40737194-8c42-46d2-9557-c6219971c33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d07e593-5892-4879-9701-0301eb642940",
        "cursor": {
          "ref": "dab8624e-6823-447c-a553-6d94db11374e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f449068b-25f2-49f5-aeb6-a15fd8ffb603"
        },
        "item": {
          "id": "0d07e593-5892-4879-9701-0301eb642940",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c10a89e6-bee0-4089-8d7b-9ba65b66f9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ef0599-a2d6-456e-800a-f8971a522986",
        "cursor": {
          "ref": "c1226fe3-d430-4ec4-a700-0df3c48d9589",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ac9db501-7dfb-4b3f-b259-b00ee4a8cdba"
        },
        "item": {
          "id": "a3ef0599-a2d6-456e-800a-f8971a522986",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "33ec2d11-a222-43a8-927f-911c079ed77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42f1d0e-f386-4fec-a6f9-1d3b79327a5a",
        "cursor": {
          "ref": "dd2dfc96-5d28-4121-a020-5ef1f4e6e621",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "32b7416a-7599-445e-87e3-e689b6069ec9"
        },
        "item": {
          "id": "d42f1d0e-f386-4fec-a6f9-1d3b79327a5a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3adff423-fadd-494b-8d38-3ec6bf1640e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4953195d-af5e-4338-ae1a-8f461482b90e",
        "cursor": {
          "ref": "0c435898-ed9f-4610-9dd0-ac22d9b8cbdf",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76baab26-1dd9-4eca-b79b-181524e93d99"
        },
        "item": {
          "id": "4953195d-af5e-4338-ae1a-8f461482b90e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8e8ece4e-dd87-4921-b389-db7c0f884523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431d4ecb-4dd3-4071-8f4e-fd54f2b12618",
        "cursor": {
          "ref": "1e2a9ee3-6ed1-4dcc-9b5b-4e9258f49681",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4e6513ba-e4c4-49ca-af2e-b5010319cea3"
        },
        "item": {
          "id": "431d4ecb-4dd3-4071-8f4e-fd54f2b12618",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98525951-b01d-461f-8c84-9b13236658b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dcb703-1a34-4ce8-a1c4-e81a961f9ec7",
        "cursor": {
          "ref": "9c26fac8-fcbe-42c6-8f52-446156605ab6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a71b6696-5ad9-4e81-aeee-bf0792c7cb73"
        },
        "item": {
          "id": "15dcb703-1a34-4ce8-a1c4-e81a961f9ec7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "73fb96b0-b958-45bc-8f9e-78657666b4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1e2c1a-0bb0-4e15-a125-8c66d9b2eed0",
        "cursor": {
          "ref": "e9ec8ad3-cb5c-49c2-b906-661a0536736e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "00a8e5c9-6d0d-473f-bc93-e8bc2a5782b6"
        },
        "item": {
          "id": "ee1e2c1a-0bb0-4e15-a125-8c66d9b2eed0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ba138c6-9ec1-498a-a814-f60b1e9177b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbc6e82-41f7-4005-8a31-ee0630530a27",
        "cursor": {
          "ref": "41e7be0f-1f7a-4868-bae3-312323f89daa",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f314736-916d-47ea-ab39-dd7e766d6dd2"
        },
        "item": {
          "id": "2bbc6e82-41f7-4005-8a31-ee0630530a27",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "281f77f2-431e-4cf9-b4db-ab695c9104a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d64db5d-24a8-4fec-a33e-f8b5efd79416",
        "cursor": {
          "ref": "53f8873e-811a-42aa-97e1-232bdb8ff189",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4aa3840c-6f42-4992-b897-529f38cb5d4d"
        },
        "item": {
          "id": "1d64db5d-24a8-4fec-a33e-f8b5efd79416",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a2803bbe-d7aa-4329-b9a0-e11bbfeeeebc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a8200a-f5b9-4962-a35c-2ee09bcb2e40",
        "cursor": {
          "ref": "7c27b820-d509-4317-a705-cf35fcf54ec7",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4d55a3d7-8e64-444c-9611-7459233b265f"
        },
        "item": {
          "id": "f7a8200a-f5b9-4962-a35c-2ee09bcb2e40",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ca167561-eb57-4532-ae34-6b9dc65ff891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf0ea62-dd53-4748-86aa-e55374c3dbfc",
        "cursor": {
          "ref": "43546f91-6ebe-4301-8af7-1e3148e09877",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a5a7e877-76b1-4be4-8f7e-516c9adc90cc"
        },
        "item": {
          "id": "ddf0ea62-dd53-4748-86aa-e55374c3dbfc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c57d6929-80e4-45c8-afed-ca16cd97eeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0fcec4-d6f6-47b9-92b6-7d39150c2c52",
        "cursor": {
          "ref": "8ffdb0ea-8eaf-4b7b-b651-1e2ec721accb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9a409094-8dd6-491b-9564-313c6f01333a"
        },
        "item": {
          "id": "8d0fcec4-d6f6-47b9-92b6-7d39150c2c52",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bffd5103-a119-4ce7-8b2e-6d2b178cb4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4e5d2b-9ad0-4802-ab52-3072a77ca535",
        "cursor": {
          "ref": "0f8a5b79-5a95-4ef7-b225-e73fd67f0b18",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "136b8a7f-fe6b-4738-8a11-138366022c75"
        },
        "item": {
          "id": "da4e5d2b-9ad0-4802-ab52-3072a77ca535",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "373fd74c-7d26-4c72-b421-fe4c371ed833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029ce7e7-12e3-4c90-9980-f1252300593d",
        "cursor": {
          "ref": "4292edb2-f184-4e67-8691-bece54ad1470",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bd06bbc8-8212-4947-92c0-fb1334f154de"
        },
        "item": {
          "id": "029ce7e7-12e3-4c90-9980-f1252300593d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7724d79b-463a-4821-b1e8-5250dbfffde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c17ad5-eeb5-44ae-9243-c2ce829b989c",
        "cursor": {
          "ref": "556c3100-1dcb-4d08-8f6e-1b4a63c2ca89",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c857a465-90ff-4a5b-b8ca-18be5a0398be"
        },
        "item": {
          "id": "47c17ad5-eeb5-44ae-9243-c2ce829b989c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "03f77a98-0eaa-4995-996b-674cc4fd6d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a46b92-3a64-48e0-a958-d2efbac8bf14",
        "cursor": {
          "ref": "d6690372-fce8-4222-96b1-5958ce277314",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e3b10efa-15b4-4d59-8b00-d22085ee4ae6"
        },
        "item": {
          "id": "54a46b92-3a64-48e0-a958-d2efbac8bf14",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d6335358-8581-4869-9d31-21a8a9226c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba5f085-e08c-4e8c-a45f-31590d1d5be5",
        "cursor": {
          "ref": "8851ef7f-4157-4e04-8af8-bfc7b8580f0a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "61fde366-a102-44a6-9667-03ddc1095957"
        },
        "item": {
          "id": "aba5f085-e08c-4e8c-a45f-31590d1d5be5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bd1adf75-f224-4629-94e9-bc07aa16a87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249e1b6b-354f-42cb-ba2d-34698b120954",
        "cursor": {
          "ref": "fafc1ad0-31e0-4cd8-9fac-40c2e8e29a41",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "07c19155-9d87-4ac2-88b8-e17f5bc3cf27"
        },
        "item": {
          "id": "249e1b6b-354f-42cb-ba2d-34698b120954",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b7f87275-50e3-44f5-8d97-7eaff49583ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c9ae37-ac9a-4310-aced-77913485c064",
        "cursor": {
          "ref": "df16e8d6-af81-45d5-a771-aced47dcd41f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0346cc83-abdf-4c54-9522-d2ecaf2a41b1"
        },
        "item": {
          "id": "e1c9ae37-ac9a-4310-aced-77913485c064",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "72af5e50-81f2-41a4-8f2f-7f9e01a57713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab67339d-5f40-4491-9a0f-907917382ef1",
        "cursor": {
          "ref": "3db4bde6-007f-4f69-b9be-9971f6becc77",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "268ef9e2-c088-4569-a591-3e8406a53a34"
        },
        "item": {
          "id": "ab67339d-5f40-4491-9a0f-907917382ef1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7f60e0a8-5145-4821-8180-cf58af940434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38774e6-a6c4-47f0-a27e-777cf7d30187",
        "cursor": {
          "ref": "29ae0182-8508-4968-8ce7-0efaaff3c838",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "34ffe09b-7bd1-436f-8d28-ca6409bbdfeb"
        },
        "item": {
          "id": "f38774e6-a6c4-47f0-a27e-777cf7d30187",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5dfd4ab4-5360-4e56-9520-d03a976d2c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c4116-178a-4ad6-9c61-e10093f8a8a8",
        "cursor": {
          "ref": "fc4337b9-2ded-4d4d-a8ae-efe34ceba9c7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7b79c2fa-4754-4325-a4d6-f891c868520d"
        },
        "item": {
          "id": "e95c4116-178a-4ad6-9c61-e10093f8a8a8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "334b5560-95db-4bb1-be10-db05d7f6c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc30349-84e6-46d1-9581-bd256d54df77",
        "cursor": {
          "ref": "a76339c4-a88b-499d-9a4f-098d8be14175",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0f124163-8df3-469d-99f3-1a3f78bae42f"
        },
        "item": {
          "id": "abc30349-84e6-46d1-9581-bd256d54df77",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "debcd6f4-8783-4c3e-b1a4-58efc5852d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0ed6d1-449b-453c-bf48-4c829a954775",
        "cursor": {
          "ref": "4199bec1-b056-419c-877a-03458475de1a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "77f94409-14c9-48e3-be5a-38aa5ab76a57"
        },
        "item": {
          "id": "ba0ed6d1-449b-453c-bf48-4c829a954775",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1842f4e3-b701-4447-b1e5-d5bce71f1c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44a131f-d8f1-4459-8c50-70ded0f5d758",
        "cursor": {
          "ref": "7aa0feb2-0b4e-464a-9e0c-1e41587065e1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "987a2d8d-546f-4c64-9359-5ad058832687"
        },
        "item": {
          "id": "f44a131f-d8f1-4459-8c50-70ded0f5d758",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a6f610fe-35fd-425c-8b5d-e3bd607f968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ef4f7a-55fd-44ee-bd91-27eec462945d",
        "cursor": {
          "ref": "b97d6a37-b92a-4c0b-829c-9114b620bfc0",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2a1e1a2-bc7d-4fd2-b3f0-34d1595b43ee"
        },
        "item": {
          "id": "a5ef4f7a-55fd-44ee-bd91-27eec462945d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b083940b-dcb3-4677-8de2-88a3973bfe11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111d3c5e-c69d-4dc8-a361-317a8593edb4",
        "cursor": {
          "ref": "884f3683-a4d4-4351-8ff0-05219636f205",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e953cd18-fb86-4697-a4ff-bc130ac21b38"
        },
        "item": {
          "id": "111d3c5e-c69d-4dc8-a361-317a8593edb4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e64f0bf2-e383-475e-bbef-cb895f1e0da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e2541a-ce59-4ab2-9f82-fbf82006d0af",
        "cursor": {
          "ref": "db6cf665-4091-4518-b3f5-0715da9c20fb",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7e1a8114-1383-4f69-9368-4822bc7cea0c"
        },
        "item": {
          "id": "61e2541a-ce59-4ab2-9f82-fbf82006d0af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1f4a94e-5b35-4cad-9b9a-e6126040117a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5902282d-f9c9-4209-be4d-44f5ba325bb5",
        "cursor": {
          "ref": "109907f3-4f35-4cd8-b921-4d1dc1cdc285",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61cfb1be-5623-4645-b4bc-526ba84aadac"
        },
        "item": {
          "id": "5902282d-f9c9-4209-be4d-44f5ba325bb5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9e54dcd-43df-4b70-8e46-f34dc2c2cd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c7249f-4177-44d8-a918-50196de3ed7b",
        "cursor": {
          "ref": "20cbd23e-ec56-43c9-b791-8f7a4af1e4dc",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cb73abc3-2789-4260-af84-ed4409fecedd"
        },
        "item": {
          "id": "25c7249f-4177-44d8-a918-50196de3ed7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ffc9a2ed-8996-4859-a83a-c286a0585482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d95b6-f8be-457b-ae13-2856f3267b86",
        "cursor": {
          "ref": "3539be16-9d3a-488c-b3d5-efa1ffe82b1e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c4426599-f325-4723-a047-f46d3807fb04"
        },
        "item": {
          "id": "bf8d95b6-f8be-457b-ae13-2856f3267b86",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fe405f0d-458b-40fc-aa25-ba266ddb5cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62229205-b36b-4350-b07b-16210ac73b4c",
        "cursor": {
          "ref": "7a41bde2-b3de-46b5-8aa3-8c6987c86fd0",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d25f60b1-198d-4eef-ad10-028c2236cede"
        },
        "item": {
          "id": "62229205-b36b-4350-b07b-16210ac73b4c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4cc120cc-74a6-45fd-9014-c020beb9dfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb85c870-66b0-4d26-9e0a-90e05ff49c7b",
        "cursor": {
          "ref": "3c987572-b22c-45b7-93b0-da241bd06933",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ffadf4cf-1e19-470e-910a-7709ce81dfd6"
        },
        "item": {
          "id": "fb85c870-66b0-4d26-9e0a-90e05ff49c7b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cff5baed-ba9c-4ca7-9f4f-7d1c5847189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45b993-3487-43d4-92ae-5ed2eaa41b91",
        "cursor": {
          "ref": "85adbd07-8c78-44aa-899c-807c3e092f80",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "aae5ad07-557a-448c-952d-ace7df76063f"
        },
        "item": {
          "id": "ba45b993-3487-43d4-92ae-5ed2eaa41b91",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "598e987f-9bbd-4ccd-a8e7-941610ccd5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8726bfec-83ed-471c-922b-a3e9b68b26f0",
        "cursor": {
          "ref": "0f235512-c715-43cf-800c-e0cc724f9a92",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d782fe51-c48c-4034-a4e6-9a70414cacc1"
        },
        "item": {
          "id": "8726bfec-83ed-471c-922b-a3e9b68b26f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "36119019-efa3-450e-935a-b14d1c486bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cdcde8-6345-4333-84aa-6e2985f26d70",
        "cursor": {
          "ref": "d0a57849-ba55-4bbd-83d0-d3f55cee5da7",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "785ceaf8-5660-46ef-989f-cf35d3ee2638"
        },
        "item": {
          "id": "05cdcde8-6345-4333-84aa-6e2985f26d70",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e342fd17-9558-49f6-bd07-60278910b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5c8c2f-1cf6-4b78-8f60-b3633b479f27",
        "cursor": {
          "ref": "05b66967-a96d-429f-bbeb-84146bb00c1b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e0f936a-0055-45ac-8a59-a65a042e72c0"
        },
        "item": {
          "id": "ca5c8c2f-1cf6-4b78-8f60-b3633b479f27",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5dbed073-7622-437c-8872-5709acbc5ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc9097b-3d11-4c9a-84fa-f5dfbc215fe9",
        "cursor": {
          "ref": "31ae9c0b-952a-420a-aa51-e1a1a4377f56",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f37b7fa9-4648-40e3-8cad-47b7ca1dac37"
        },
        "item": {
          "id": "9bc9097b-3d11-4c9a-84fa-f5dfbc215fe9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e162c26-7655-40e0-b515-dbd3317b5061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324092b9-9f43-4dc6-bd0b-995658390065",
        "cursor": {
          "ref": "bffcaeb6-e799-482a-97ba-8d1f2d814202",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "97f5354c-4898-46ce-b3e4-adf5ebf8e1fc"
        },
        "item": {
          "id": "324092b9-9f43-4dc6-bd0b-995658390065",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d5d0623a-47f1-4b20-9648-7ff2afa10988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c593b8-6629-4c50-a810-35c334b58218",
        "cursor": {
          "ref": "4409f3a7-7ea1-4365-9d11-36e5f3a74719",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "757be23a-8cf4-47fa-b92d-5c574309509e"
        },
        "item": {
          "id": "37c593b8-6629-4c50-a810-35c334b58218",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9afb6adc-4821-4f12-841b-d75a072c0fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb10f53-4b29-40da-84d3-87132e29048d",
        "cursor": {
          "ref": "2eceb9aa-ac1b-4a79-82c1-30564b7b2d50",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "74383016-8cca-4dad-a72b-9e7369c90e52"
        },
        "item": {
          "id": "cdb10f53-4b29-40da-84d3-87132e29048d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7f175e9b-ad9b-42f5-98b5-5e074cb12eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4051b08-c213-4c01-8cf2-0ebbff802673",
        "cursor": {
          "ref": "ebc7b3e7-7cd6-4abd-9284-8867a47fc800",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4b62527-2754-4c8a-bf06-d40417f136b8"
        },
        "item": {
          "id": "d4051b08-c213-4c01-8cf2-0ebbff802673",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "10c4dc1b-ac12-41c2-98dc-d7d5cd514a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bab3795-d38f-4f43-b092-e2320ce48023",
        "cursor": {
          "ref": "943fcc62-8d3c-4352-bfde-2e295f8d6f94",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "518eeed3-75dd-4d75-9de2-81cf8e54ed2b"
        },
        "item": {
          "id": "9bab3795-d38f-4f43-b092-e2320ce48023",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c8d56973-3663-4a22-b73f-7d5df644f247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27266afb-1bfe-4dc2-bbd9-697e2858ddcf",
        "cursor": {
          "ref": "51cb3a0b-f48f-4a22-8d41-ad83c4e0fec6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "daa7e58d-54e0-4981-bfb3-a0a9bee196e2"
        },
        "item": {
          "id": "27266afb-1bfe-4dc2-bbd9-697e2858ddcf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a192113a-c7a6-41c6-98f0-dfab1b51c7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec5781d-a2d0-4e4c-be12-37118395db4f",
        "cursor": {
          "ref": "a0a73754-f78a-447b-8082-a8f1da849450",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a4f108a7-79c5-4aa3-b91a-83f68d04944f"
        },
        "item": {
          "id": "0ec5781d-a2d0-4e4c-be12-37118395db4f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cd7e5766-1a63-4f32-b798-cda98a61d1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11899d3e-92c8-4ee7-9255-c88a9e47bac4",
        "cursor": {
          "ref": "d3e9579f-2d95-49be-a470-066b2d144f0a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f22d0046-6e23-49b0-869a-ed82e2ab21bd"
        },
        "item": {
          "id": "11899d3e-92c8-4ee7-9255-c88a9e47bac4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cc4dcb4b-7b99-4702-9861-763439febda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c9423e-b999-4798-9650-bdff555b86bb",
        "cursor": {
          "ref": "35a08641-fab0-4a3d-ba3f-7913c29f7a2c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8a1e4a48-8304-445a-bb67-77b15a995698"
        },
        "item": {
          "id": "39c9423e-b999-4798-9650-bdff555b86bb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03988937-614d-4d5a-b9cf-15a2eae1b717",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9e3755-ae45-4837-9bba-f8ec3f223dc2",
        "cursor": {
          "ref": "5b9f48ad-9bd5-434e-81ea-0a4f5b882b84",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2449e5e0-ae8d-4e1a-ba43-3958f4d5238b"
        },
        "item": {
          "id": "0b9e3755-ae45-4837-9bba-f8ec3f223dc2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a6f0c87-d7e7-4d6e-8dd6-9f1f123855c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e03980c-33a4-4d89-b331-09efd022c472",
        "cursor": {
          "ref": "83bef026-9e0e-485c-8fd3-843ea005a499",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f878463f-ae86-4102-90a7-1794b3536d04"
        },
        "item": {
          "id": "7e03980c-33a4-4d89-b331-09efd022c472",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6d31f880-5227-4e9e-b29d-eef40f0517a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb50a64-f51f-4fde-8d23-0d216e2b5a31",
        "cursor": {
          "ref": "ba5a0656-2751-43a4-ae60-975cf6f60ded",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ef6d4c12-9fd7-41f0-ad02-7058be06ec7d"
        },
        "item": {
          "id": "efb50a64-f51f-4fde-8d23-0d216e2b5a31",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "def13390-3bdc-4a80-aef9-a1b1b41dbd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7220e7a8-2233-41ba-bb79-c20285414508",
        "cursor": {
          "ref": "a4908e48-9851-4641-a43a-577b477a9b29",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a8a25685-4641-49d8-9895-a4d8aac091f0"
        },
        "item": {
          "id": "7220e7a8-2233-41ba-bb79-c20285414508",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4bd99eb1-7ef1-480d-9390-cae56f1b19f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e6da43-1968-4b5b-b09e-cdd6ae79be34",
        "cursor": {
          "ref": "82f7f998-071c-4499-9252-5028e64db5d8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b352aa05-ea7e-455c-af93-c3d0b4505883"
        },
        "item": {
          "id": "57e6da43-1968-4b5b-b09e-cdd6ae79be34",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8dbcdc48-bdb4-45e5-b258-0171772aa1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8398dfc4-ee32-4a70-87cf-bf08f398adb4",
        "cursor": {
          "ref": "a26f928c-c0e4-490c-ac04-29a06ef7e56d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "956c800e-a164-4a91-9f94-7cb880b49913"
        },
        "item": {
          "id": "8398dfc4-ee32-4a70-87cf-bf08f398adb4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eea67940-f5ca-49bb-b2ae-09d3ab2077bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda5f51-a9b2-4664-b20c-1006d7baca6b",
        "cursor": {
          "ref": "5b29d005-72c5-4734-a0f9-d1c3840d68b9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "da346c81-85ed-49ab-87fe-729b6df8f597"
        },
        "item": {
          "id": "0cda5f51-a9b2-4664-b20c-1006d7baca6b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "422b528e-eae5-4475-9c8b-38c690eb3e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915247a1-e536-434b-9a00-cb0fd3865889",
        "cursor": {
          "ref": "2ca3a750-e353-4c8e-b8bd-805c34a6d6ef",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fcadad33-ca0b-4949-b847-0971381d4658"
        },
        "item": {
          "id": "915247a1-e536-434b-9a00-cb0fd3865889",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a7726cc4-f520-46a3-a378-3a16451781f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3278d95b-87c0-4e8b-aa44-29736402dc1c",
        "cursor": {
          "ref": "01018ad7-ad30-42ff-9083-c4490f5ca2e5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c588d776-4888-41ff-b3ec-d77ef54b22a6"
        },
        "item": {
          "id": "3278d95b-87c0-4e8b-aa44-29736402dc1c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "22ab9b01-fba4-4945-b9ee-db4aa87e31ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9441b399-bf2a-43ef-b169-590ccb44b461",
        "cursor": {
          "ref": "58e6ba48-7705-4e6c-b852-8fa52b0f931c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f795c686-55d3-4fe7-81ff-402dbed26f5b"
        },
        "item": {
          "id": "9441b399-bf2a-43ef-b169-590ccb44b461",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "287c4703-654f-474c-b491-436b2f911180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66068dfd-ebc2-42bc-b76d-de3a3d8f2f7a",
        "cursor": {
          "ref": "d5438f37-8409-4156-ad13-981582780c69",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "32c77b50-67d1-49c0-8bea-7c0fe9319a2f"
        },
        "item": {
          "id": "66068dfd-ebc2-42bc-b76d-de3a3d8f2f7a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8b230673-5c01-49de-9abe-a63388309155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e32643-f889-4b34-9deb-74c026287030",
        "cursor": {
          "ref": "3579cd4d-2ba6-4b8b-bbef-4523840bc70a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ccbe43a8-1e00-4488-9764-3e55395b4e86"
        },
        "item": {
          "id": "30e32643-f889-4b34-9deb-74c026287030",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0c2c5bfe-2651-441d-93d9-202d6869bfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c373e16d-84b0-43ff-8763-6a97b5591ea1",
        "cursor": {
          "ref": "48c77fe8-5357-492b-817e-e4c7d570492c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fbb5d08b-5ca4-4807-9faa-69868b90390c"
        },
        "item": {
          "id": "c373e16d-84b0-43ff-8763-6a97b5591ea1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a36ae65c-74ad-40b8-a207-332c5aa96d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacbb64d-3e05-49c8-a12c-d28e806db531",
        "cursor": {
          "ref": "2387068e-193b-49c5-8c62-2dcb0a3a59c0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "15a20062-9797-4dd6-ae7c-61fbd8f24538"
        },
        "item": {
          "id": "bacbb64d-3e05-49c8-a12c-d28e806db531",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3d169fa6-1b76-4ed8-9340-cecdc92f86c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0182b9-c8f3-43a5-b5a4-3b68e9f6e20f",
        "cursor": {
          "ref": "5e7fe5a5-b44a-4e7f-8432-aa29056f3775",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "03afa9d3-21c2-4247-a9a4-f9351efbfa94"
        },
        "item": {
          "id": "ac0182b9-c8f3-43a5-b5a4-3b68e9f6e20f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e28a6180-c3d9-490e-b9cb-03a039c5fd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dc41ef-1184-4fb9-9833-bd7dc970b7c8",
        "cursor": {
          "ref": "fec6a9ff-7830-4833-b734-b4663b013201",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e54ef5f6-19c8-402d-9eae-6b7c4147b8fb"
        },
        "item": {
          "id": "85dc41ef-1184-4fb9-9833-bd7dc970b7c8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "24546054-ca58-4f4f-9863-f5bf6c0dd4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53924dcd-084d-4532-83e7-b0ac1fda78ee",
        "cursor": {
          "ref": "b23d5b03-c4ea-4909-86ee-1d6faff3dbb1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "241520da-b08d-4629-a53e-f09c852342ba"
        },
        "item": {
          "id": "53924dcd-084d-4532-83e7-b0ac1fda78ee",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1a7eaa6f-4290-47c6-89b9-c4e74501ba0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ece0a2-6cb7-4f57-8864-15d8d38e4b8a",
        "cursor": {
          "ref": "ca017b86-23a5-46f1-aa9d-31c5ec5409ca",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ebc3ed5d-9283-48b1-aaf0-ca16394125ed"
        },
        "item": {
          "id": "b3ece0a2-6cb7-4f57-8864-15d8d38e4b8a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "33ee91d0-e035-4d58-b025-4492d92d6455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07bde41-21cd-45c7-a1d6-30213a13eb89",
        "cursor": {
          "ref": "68b5efc0-8b99-4405-90e4-71a35cea1a24",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "05d4c5a3-fc2e-490a-a933-56ecc26c6d43"
        },
        "item": {
          "id": "c07bde41-21cd-45c7-a1d6-30213a13eb89",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cd6345bc-3229-4785-a168-939d87e0630b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a605b8b-8a8e-46ea-8e43-7b5bcec9bee1",
        "cursor": {
          "ref": "7afa4745-1993-4ac2-8498-c1a68dfdc535",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c0e62aea-d45d-471c-a9d0-27f9e1aae76e"
        },
        "item": {
          "id": "1a605b8b-8a8e-46ea-8e43-7b5bcec9bee1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1379da40-c053-4288-a401-b991207710d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa62452-1202-42cb-ac83-dbb038de6928",
        "cursor": {
          "ref": "84c155dc-0603-4d15-859b-73afa944cf4c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "22904d72-c9cf-4f8f-b9a6-b006b048ea57"
        },
        "item": {
          "id": "daa62452-1202-42cb-ac83-dbb038de6928",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e5486e24-0fd7-4aec-a227-d9e33af423c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4884ec-bf2a-4b9e-bec6-f74de4e68a7e",
        "cursor": {
          "ref": "9f525072-3bd0-44fe-bed6-ba004811d711",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "49261791-c339-4c11-89d1-937bd1ad42c2"
        },
        "item": {
          "id": "fc4884ec-bf2a-4b9e-bec6-f74de4e68a7e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "09039d91-e1d4-41cb-ae5b-50a73b8a9165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843e13b6-3d04-4aa3-9566-8e8d42172e36",
        "cursor": {
          "ref": "975b0a62-40e2-4ab5-a725-978a109e6d77",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4c3c9a9e-8a7a-4e9d-80a3-c99f3ea277b2"
        },
        "item": {
          "id": "843e13b6-3d04-4aa3-9566-8e8d42172e36",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "790bc143-03ab-4562-82a0-b47c5c2b2e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3583bb3-6708-4e7e-aae4-66f3f9ecadea",
        "cursor": {
          "ref": "a55b9e31-2f5d-4e68-a9d0-3ad2c6effe5d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21d29894-dee0-4706-9ce1-0e3a8e51edf1"
        },
        "item": {
          "id": "e3583bb3-6708-4e7e-aae4-66f3f9ecadea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1678c1a9-416e-4f2e-bc6c-e6523c862c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dbb5ab-ea01-4042-8711-3501835bcbc3",
        "cursor": {
          "ref": "dd7ccf42-d2c6-4413-ae4b-a208b2bbf6c0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "644ccbf4-152d-4f6c-a6f3-a7dea5e8d9fe"
        },
        "item": {
          "id": "a3dbb5ab-ea01-4042-8711-3501835bcbc3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bb14cfab-1aab-4d68-98f4-bd6678ea964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144f2d0d-6f5f-4053-bc85-1a59e053f3aa",
        "cursor": {
          "ref": "4e43e783-908a-4a4a-b2f9-8b2c789ca440",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0f45dffd-f529-4ce4-b48a-1b0a532aa887"
        },
        "item": {
          "id": "144f2d0d-6f5f-4053-bc85-1a59e053f3aa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "41280c6d-86e2-428e-94c3-f0744d16d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1dfb77-eab2-430c-8e93-452f4b603013",
        "cursor": {
          "ref": "aa7c58df-660f-4de2-afb3-be087eaffd55",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8a43f792-603a-4a95-8440-bef5eb3e6976"
        },
        "item": {
          "id": "9b1dfb77-eab2-430c-8e93-452f4b603013",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "79662826-23f2-4ad8-8a02-73bfe8e43781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0a795a-0334-4632-ab3c-0598ed5ae343",
        "cursor": {
          "ref": "ce1cab88-87e1-4b04-a583-17d5c061b473",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "90546d1e-3a42-4001-8df5-cde3a54b0f5a"
        },
        "item": {
          "id": "cc0a795a-0334-4632-ab3c-0598ed5ae343",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "989f425e-f6f8-40a4-851a-9c4b07159b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ede766-52ab-4d0c-9f48-8451d400ac81",
        "cursor": {
          "ref": "d651e26b-7a3d-43e5-8ad9-2b26b8635ff4",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "27ef833b-7235-4ad2-a345-15f1673b01f0"
        },
        "item": {
          "id": "82ede766-52ab-4d0c-9f48-8451d400ac81",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "146f5859-fe29-4d37-a3d3-979aafa65577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d4a57e-3702-4eef-bcbb-ec077bd3efca",
        "cursor": {
          "ref": "d2bd3ac8-be16-4589-8c63-c45a21d5f52f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5782dc26-3b9c-40ca-b669-10661333b995"
        },
        "item": {
          "id": "77d4a57e-3702-4eef-bcbb-ec077bd3efca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c962d3f2-b9e5-401d-a6f1-d402fe6acc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1aca51-9bc1-4379-8eac-8558e50792e6",
        "cursor": {
          "ref": "183e1a5e-4c80-4d3b-8a8f-82aee25e2868",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "272ce2fc-d2ab-4b82-b512-90c20fe1459b"
        },
        "item": {
          "id": "cd1aca51-9bc1-4379-8eac-8558e50792e6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "382245f7-2446-4b3b-ae54-bfa5d950ab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34b7078-dd7f-47fd-9cc3-19f4e3419026",
        "cursor": {
          "ref": "93f29310-f64b-4a5f-904a-df80c67ca92a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b3be2a98-72e5-41b3-9de4-9eb375b2d405"
        },
        "item": {
          "id": "f34b7078-dd7f-47fd-9cc3-19f4e3419026",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6a0a3ab3-13d2-416f-89c0-9d3f1f5ad951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d87447c-6897-478e-8593-e5fb6848af2f",
        "cursor": {
          "ref": "b6837da1-bd26-4c74-950b-e0962e3bb497",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8183ff3f-51df-46dd-8e9a-498d846fb95e"
        },
        "item": {
          "id": "7d87447c-6897-478e-8593-e5fb6848af2f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "260667f2-c925-4cca-b43f-75ea539a5738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be13b15-1305-4b86-97ec-3ecb160db525",
        "cursor": {
          "ref": "afda21d7-fabe-47e7-8880-88e28e0727e0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4fce494a-4f4d-4808-9fd5-fa4eba79d072"
        },
        "item": {
          "id": "1be13b15-1305-4b86-97ec-3ecb160db525",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0438a0b6-0b50-4aa4-9791-1dfa3b28cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0ac053-6baf-44c3-9a80-19dde02f70fe",
        "cursor": {
          "ref": "0e9fd066-36e4-4e16-a219-def928094dd3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cbcf5445-60d2-43d3-bf29-dc755f560179"
        },
        "item": {
          "id": "ec0ac053-6baf-44c3-9a80-19dde02f70fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "66d742d3-57f0-4773-b31f-c33172ce81f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d2cc15-4c51-4a91-ac51-e40a7da2e059",
        "cursor": {
          "ref": "16bcf327-7ae7-4652-9941-050292b62514",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a8f7fec8-d209-46bd-aedf-6229a4c2524b"
        },
        "item": {
          "id": "82d2cc15-4c51-4a91-ac51-e40a7da2e059",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb39bacd-93d4-4d97-9439-750c1913d966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7ccdf3-60fa-4df0-a70f-82f20a7c31f7",
        "cursor": {
          "ref": "7be10f78-69c7-489a-95ef-c5014515df95",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "342657fa-e8e3-4f54-80dc-c10fa59be00f"
        },
        "item": {
          "id": "2b7ccdf3-60fa-4df0-a70f-82f20a7c31f7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2fcfca2d-4c22-42e4-85b4-68cc00991bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c68625-a9bd-4f9c-91a6-91ce09f8a67c",
        "cursor": {
          "ref": "07e92e30-4142-4736-bf78-c64e40cab620",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4d3f9232-4cc3-42b6-a694-241cc24264af"
        },
        "item": {
          "id": "e6c68625-a9bd-4f9c-91a6-91ce09f8a67c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c477e808-140e-43cb-8e37-cd7808f8b9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216d9bee-84c6-4bec-9cf4-3b0fec042592",
        "cursor": {
          "ref": "8a5d7249-e860-4b81-bf11-2895622e3db2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c826da8e-a398-4e9e-81ff-84d485818b46"
        },
        "item": {
          "id": "216d9bee-84c6-4bec-9cf4-3b0fec042592",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "52a70621-2dce-4b10-b966-a7421f83d1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4547751-0c88-4c4f-a0e7-4543f5c3ac12",
        "cursor": {
          "ref": "e42f513a-6ca4-4c3d-9654-fbaa1b544512",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "554c5209-27c7-4ca0-956c-0c279a5067cd"
        },
        "item": {
          "id": "b4547751-0c88-4c4f-a0e7-4543f5c3ac12",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "855fc4ca-49ae-4f1c-a7cf-39548ea979f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d55f9e-1d49-4fb3-aceb-b6ed4b7f9e20",
        "cursor": {
          "ref": "27154a9c-625e-46a1-a5ab-49ee9580ce28",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ae073061-6fa1-45f4-9f37-0aa2fad3b86b"
        },
        "item": {
          "id": "e8d55f9e-1d49-4fb3-aceb-b6ed4b7f9e20",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fc58841f-45b6-4a84-9d2f-82edd8a872dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caea9ddc-3915-46c6-81f5-5dc1dcf789e1",
        "cursor": {
          "ref": "fc9c567c-b533-4590-bf62-ac441b8a7397",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7a5131ce-61b6-469f-8428-8688b8e3fbb3"
        },
        "item": {
          "id": "caea9ddc-3915-46c6-81f5-5dc1dcf789e1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4616f687-8703-4ead-ad7a-b71b9f803a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084dcdd5-2cb6-4de8-88c2-a8e49e9e1296",
        "cursor": {
          "ref": "4db2f70e-54b8-4e7e-b9f5-23308e4f8d93",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "67b81d33-6a60-42d1-8ce3-e2cf0d81ec70"
        },
        "item": {
          "id": "084dcdd5-2cb6-4de8-88c2-a8e49e9e1296",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7eec3cd6-8c5e-4dc6-95e8-739ea40e0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff653b7-2142-4a0b-a47b-3aa9071737b2",
        "cursor": {
          "ref": "edbe482d-e3b9-4f9e-89e8-87c40f657d96",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "794738eb-749a-4e1a-83e3-4853d5ce47c5"
        },
        "item": {
          "id": "bff653b7-2142-4a0b-a47b-3aa9071737b2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0d0edb3f-6410-439f-a84d-dd7302aab022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a6a68d-c107-425f-b7e8-8b35feea1d18",
        "cursor": {
          "ref": "b53c0e95-9fcc-4384-af18-85bdc0814f86",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "88b91ed1-96bf-4091-b2e8-6ced4f8bfa6a"
        },
        "item": {
          "id": "80a6a68d-c107-425f-b7e8-8b35feea1d18",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "29a99adc-1f80-4adb-9d08-6b04052413f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3489c2a1-9ba3-4135-a8d9-e1a642eab85e",
        "cursor": {
          "ref": "e49859d5-dfac-4798-86f8-7096e88d62f0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "05e71b40-3b54-485c-83e9-a99363625d1a"
        },
        "item": {
          "id": "3489c2a1-9ba3-4135-a8d9-e1a642eab85e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a5ee04b5-708b-48c8-b635-792f86f94ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5714f688-38b3-44c7-aaf8-6f72efb11c98",
        "cursor": {
          "ref": "b028aea4-4135-42c0-9e75-319e655682d7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f8fe6ad5-5091-45bb-a8d1-d57801d3bcf8"
        },
        "item": {
          "id": "5714f688-38b3-44c7-aaf8-6f72efb11c98",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b0e1fead-c0cd-42ed-9ba9-c49313ed5212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3ea0ea-bc58-4c3e-a5b4-88290aedc360",
        "cursor": {
          "ref": "565ddb14-a8b2-4f22-91e8-e78e9a64f0e3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a34eae79-b862-4e90-9d00-88c68df07071"
        },
        "item": {
          "id": "ad3ea0ea-bc58-4c3e-a5b4-88290aedc360",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8578cc20-f33e-4cfa-8a8a-ca6d289f5653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12475cc6-07b9-423c-a562-b7bf927056db",
        "cursor": {
          "ref": "da7f49db-fccd-4313-8385-37e7b4c09f4d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bf3932af-f589-48e2-a696-e1c735601121"
        },
        "item": {
          "id": "12475cc6-07b9-423c-a562-b7bf927056db",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f77950d9-f3eb-4c5d-81c6-0dc5563ab470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf9c66-6a3a-4db6-8a4d-e8446d1f1dfc",
        "cursor": {
          "ref": "82a658ad-4e5e-4949-9364-6b807ed55643",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8bdeea56-4380-4efc-ac9a-542f105b6347"
        },
        "item": {
          "id": "5ccf9c66-6a3a-4db6-8a4d-e8446d1f1dfc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "324e64fd-3af3-4d3f-9465-752e187e5f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014b86cb-d32d-46d2-80b4-23f50841e95a",
        "cursor": {
          "ref": "62a24af0-97e5-479c-80c0-9d34cd7bb976",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b7abba62-c1a2-4a3b-9703-df14aec249ca"
        },
        "item": {
          "id": "014b86cb-d32d-46d2-80b4-23f50841e95a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0ea6bbd0-1a3b-4bb9-a9b7-457d380d1fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe0a6f2-f319-42d3-9df3-faf30ac74100",
        "cursor": {
          "ref": "580ba2b6-d645-4a5f-baf3-7e9507caffd3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3317b4f6-f38a-4723-afd5-99fcfe5d3ff4"
        },
        "item": {
          "id": "bfe0a6f2-f319-42d3-9df3-faf30ac74100",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "73ee335d-b28c-4b46-94de-7fcf7c2280d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8296cb-7449-4053-afca-688518b21fa5",
        "cursor": {
          "ref": "b209a3ea-9996-4377-bf01-b2285e6f2880",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b14732f-5962-4687-8557-f9ac4488e599"
        },
        "item": {
          "id": "bc8296cb-7449-4053-afca-688518b21fa5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "13f50614-10e1-4fad-b80b-4573dab96f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f4c342-75ed-4535-b9d7-23263814184f",
        "cursor": {
          "ref": "0c00e4f9-af20-4ef0-9abe-c468c039e209",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4d1671ba-22fe-4f81-bb91-eabd3e886f6c"
        },
        "item": {
          "id": "d3f4c342-75ed-4535-b9d7-23263814184f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "daee2f99-4265-4d2b-897f-fb89e7c0ce20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f036e7-ccfc-42d1-b795-953726d0372e",
        "cursor": {
          "ref": "9a36542f-cc9f-4c60-9a91-467231b60793",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8c611d6e-2ecc-4172-80b2-421351986a4e"
        },
        "item": {
          "id": "b7f036e7-ccfc-42d1-b795-953726d0372e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "20453ddd-cd3d-4605-93b3-7a56009d3441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700e442-9952-4882-a093-cb16cd451739",
        "cursor": {
          "ref": "f92e02ee-94d0-4d30-bf15-697ea0a058bc",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "267cf2a0-ca56-467b-8e64-5845a004f44d"
        },
        "item": {
          "id": "f700e442-9952-4882-a093-cb16cd451739",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5964d7e7-889a-400d-9d26-23cb0f3917bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7558c2b-39c3-492d-ade2-e27151e7ab2f",
        "cursor": {
          "ref": "0e2972ea-b7fe-47c1-8b18-5ff7e7c9f491",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c3daeb93-99d1-4fa5-a38b-0a343ed53627"
        },
        "item": {
          "id": "b7558c2b-39c3-492d-ade2-e27151e7ab2f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fd0619f4-9ff0-4033-92ea-dff5b65b48e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857ec053-6130-47ad-a94c-610e8b8fa889",
        "cursor": {
          "ref": "ec7ca89a-a6ca-4776-824d-8ef7c064a7de",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "912e9d81-44f2-4ce2-99fd-4abb0a7ae8f2"
        },
        "item": {
          "id": "857ec053-6130-47ad-a94c-610e8b8fa889",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9e3c7025-d47a-4be0-874b-3b06c15728ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cbd015-371b-4140-aa40-059daff1e95f",
        "cursor": {
          "ref": "feb6818d-8df6-40cb-961c-a147725da6fb",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4b80ddd6-a1d7-40b9-9c21-ddf5a0c9198c"
        },
        "item": {
          "id": "e5cbd015-371b-4140-aa40-059daff1e95f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ec668407-9c1e-4403-983d-eff40ce24f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b085fe8-3d17-4fba-b695-e180fa029ab9",
        "cursor": {
          "ref": "968f7b9e-8ae5-4a0a-a280-1330d862fdda",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24d8e07b-291e-4342-b108-9ed44225d543"
        },
        "item": {
          "id": "5b085fe8-3d17-4fba-b695-e180fa029ab9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d5d4ff34-5ea3-4719-a68a-61a83bcb7673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6707f91e-3cad-4e31-b452-c563a0203164",
        "cursor": {
          "ref": "4357d5b0-024c-427b-98c8-e738c368cac1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c4da590-fbc6-47ff-8851-8906399419f0"
        },
        "item": {
          "id": "6707f91e-3cad-4e31-b452-c563a0203164",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f3ef9506-7d7d-4161-95bd-63ea87b10f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391fa4f5-b3a7-424e-b463-c04236b6e817",
        "cursor": {
          "ref": "4aa0221c-8893-4b5e-8dac-60ec1459e7aa",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2c9282e9-7a78-43e3-9302-c09e424eeb0b"
        },
        "item": {
          "id": "391fa4f5-b3a7-424e-b463-c04236b6e817",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d152444e-3e70-4276-b6c8-0ba08c650950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5aa760-655a-4d35-944a-61b60f7dcd90",
        "cursor": {
          "ref": "1bf1f21a-96a5-4b93-b8ca-909f38835bd8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "378fa8df-e12c-4d21-a526-f22aecb442fc"
        },
        "item": {
          "id": "2d5aa760-655a-4d35-944a-61b60f7dcd90",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c2afb2fa-235b-442c-84d7-51f8eaca3412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657a45f0-7778-491d-856e-47e384b7d1bb",
        "cursor": {
          "ref": "804be049-f6ab-4421-bc22-c50d34364b48",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3acb731c-ee88-45b0-b735-82cb38975dfe"
        },
        "item": {
          "id": "657a45f0-7778-491d-856e-47e384b7d1bb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e824e18a-e401-4dc7-9630-46ad6607afca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111f79cb-5cb2-43c3-803d-a33a7dbc46a9",
        "cursor": {
          "ref": "00fe1f8c-a5c6-4eb8-a8d3-47906e2c816d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ee350b23-5939-4eaa-8b87-009eeb42c7d9"
        },
        "item": {
          "id": "111f79cb-5cb2-43c3-803d-a33a7dbc46a9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32632b6f-9083-4b41-acd5-cbfd793a5768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54383f55-f530-4bf6-9d0a-b89e6cb2040f",
        "cursor": {
          "ref": "c8c15cd2-affc-4989-a0f0-5cacf7fe08e3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c67e6673-b28c-48b6-a6fc-6c98131b0a25"
        },
        "item": {
          "id": "54383f55-f530-4bf6-9d0a-b89e6cb2040f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "167be102-e868-4618-846f-8889aed1a646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaaef1f-c6b8-42f5-915f-1aa3efc88737",
        "cursor": {
          "ref": "c31f7ef1-9b32-4db3-9f20-57a8b915aa14",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "19f91918-8ed8-475e-aabd-971ae1bd7326"
        },
        "item": {
          "id": "baaaef1f-c6b8-42f5-915f-1aa3efc88737",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ec26f879-6e75-4490-bd48-d77c0bb9fbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc65af6-e432-4b22-894f-636d6c2d2a92",
        "cursor": {
          "ref": "577a2033-e7bb-4e7d-acc5-02e833c6731f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6fcc9526-2401-4ad5-ba5a-2b284bbd13f8"
        },
        "item": {
          "id": "0cc65af6-e432-4b22-894f-636d6c2d2a92",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f32c5e3a-bcc2-47d1-bf2e-411f5b03b792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b665034-a9dd-4267-8b5a-8d14937820cb",
        "cursor": {
          "ref": "5c4cd8e3-eadc-4b25-bc69-d31c1b1d19e6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0523dfc5-bd73-48a5-a1cd-587799dee316"
        },
        "item": {
          "id": "9b665034-a9dd-4267-8b5a-8d14937820cb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "34447fbc-2611-4d2c-93fd-47f74f053cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13a929b-c977-4f1e-99de-a3f224a8313a",
        "cursor": {
          "ref": "fbf0c1c5-14b0-4f4c-a0f4-9923b6279aff",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0a3fa5d7-05b3-49d9-886a-c9c1d66213b3"
        },
        "item": {
          "id": "d13a929b-c977-4f1e-99de-a3f224a8313a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a36cefda-033b-4e67-8556-c900a256ce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae724e9-cb6d-4751-ae1f-2a2d92553320",
        "cursor": {
          "ref": "800ef643-dfe5-4b3a-903a-d6539d4cd099",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a59c4de4-ec29-4a3a-9f49-1b4d839d7938"
        },
        "item": {
          "id": "fae724e9-cb6d-4751-ae1f-2a2d92553320",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b6fedca0-12ac-49a9-bdba-858e3aa7a85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ceca3-074a-4377-b1ff-5db72cc9a467",
        "cursor": {
          "ref": "91b3b8c1-d456-4605-b728-cc22aaa788e4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed9a639b-18bf-46f1-9d4e-e81468a89952"
        },
        "item": {
          "id": "a82ceca3-074a-4377-b1ff-5db72cc9a467",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0df0df1a-ac7c-412d-8d05-156839dc369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5914a7f4-b615-4741-af59-961335546a48",
        "cursor": {
          "ref": "3da410ad-6526-4a05-aa3f-4e9a9f42f178",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d5f95244-1a97-4f62-9eee-857e476a8b81"
        },
        "item": {
          "id": "5914a7f4-b615-4741-af59-961335546a48",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a5a14dbe-786b-448f-993c-5789309520c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24c35b0-6888-46ae-ad51-16ed05cbdf06",
        "cursor": {
          "ref": "21a32b81-67cc-48d0-a892-bfa779225ff4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0cd4a785-7fb2-408d-bba6-75dddeb7c52b"
        },
        "item": {
          "id": "e24c35b0-6888-46ae-ad51-16ed05cbdf06",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2888d064-dd8a-42f4-812d-1e4cec4fc8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7708ac50-088f-4de3-a0cf-58ac3b9afa61",
        "cursor": {
          "ref": "7cb548cc-cecd-4479-8a32-1158ac98df9f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bc34f8e6-2f40-43d4-9252-dff5ab30d8aa"
        },
        "item": {
          "id": "7708ac50-088f-4de3-a0cf-58ac3b9afa61",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dbb7c3f5-21b6-4ffa-af44-19c0c6fab622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba84c39-083f-4026-aaf8-9f7706592c9a",
        "cursor": {
          "ref": "304c0560-307e-4f47-b304-dbc281ef1992",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4e37f9fa-64ed-4e62-bafe-9f2f27d504ea"
        },
        "item": {
          "id": "5ba84c39-083f-4026-aaf8-9f7706592c9a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f6ac4c66-618f-488a-a08f-76a3a6d604ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a004b75-2a71-4d63-b4a4-4522498ec2ce",
        "cursor": {
          "ref": "3e2b67d2-012c-4f4f-ac5c-dcacb7a83c74",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4f49c33e-e4b7-4bbd-8e25-1d583b061ba0"
        },
        "item": {
          "id": "9a004b75-2a71-4d63-b4a4-4522498ec2ce",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1b052e25-b1fd-4814-905a-51f4781e3567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7724dd77-71f3-449e-9c23-23d8fa8b8b12",
        "cursor": {
          "ref": "a27086af-7a4b-4612-8674-5941a578bd76",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5d6e44a5-3204-491a-ac37-6f7147da3019"
        },
        "item": {
          "id": "7724dd77-71f3-449e-9c23-23d8fa8b8b12",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5d42d736-385c-4f98-81d2-f99afa852ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca930c4-f1b1-41d7-bc36-b9b8574c2a0b",
        "cursor": {
          "ref": "34e458fc-49ce-4fd8-808c-efd937625a87",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "74d23c2d-a415-4895-b205-f0cc019660a5"
        },
        "item": {
          "id": "7ca930c4-f1b1-41d7-bc36-b9b8574c2a0b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8cec7e06-7142-4b5b-89cf-ab39bc874c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023649e-0d24-44c6-bdac-4509042ec8d1",
        "cursor": {
          "ref": "c0c1a857-cf6d-4a57-a5d9-cf66f0e120d5",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f286b762-1554-49a2-a1a0-885d5f098875"
        },
        "item": {
          "id": "5023649e-0d24-44c6-bdac-4509042ec8d1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "af4fade2-c9fe-4883-9eaa-e5eb3c8606a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf48f53-da4d-4b39-8cbc-6bb124e21942",
        "cursor": {
          "ref": "f2244f1e-e2fb-4007-a847-9a14cb0b0202",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "06741a83-1152-4ad2-9084-964a7ce37399"
        },
        "item": {
          "id": "ddf48f53-da4d-4b39-8cbc-6bb124e21942",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f6740d8f-a52b-4b3e-be24-aade02a1ac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdda328-298b-499e-9de3-46bb0c5668bd",
        "cursor": {
          "ref": "97ccdae4-b1a0-4cea-be45-bc02253a046d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9655caf9-ee6a-41a5-b05c-df76f1a44615"
        },
        "item": {
          "id": "cbdda328-298b-499e-9de3-46bb0c5668bd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "12d0b5f7-440a-45d0-a169-6dcdfa27b665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bd7cc7-aa61-4e4a-bf0c-d2f79d90e74e",
        "cursor": {
          "ref": "3b1a7359-565c-47f7-a997-f82f152abe69",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ecb9c0ea-1b92-4725-b31b-bb56683b71f0"
        },
        "item": {
          "id": "25bd7cc7-aa61-4e4a-bf0c-d2f79d90e74e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3034ea5e-6add-478d-839f-4522fc49197c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fea586-61a4-43a6-ae5c-b1a88b43d0a2",
        "cursor": {
          "ref": "bd38a5f6-1684-48fc-9d9b-b0aad28f512c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8d67bf96-1d76-4a7d-bedd-271b66908387"
        },
        "item": {
          "id": "84fea586-61a4-43a6-ae5c-b1a88b43d0a2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a3d2e768-25c3-4623-b705-7efddebfe4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5794de64-b279-4f9c-9ee1-ed1391b1af3b",
        "cursor": {
          "ref": "423d4775-3920-41b6-9687-dd1cf7e05627",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "76f08599-4929-42b2-8b41-57bab2042980"
        },
        "item": {
          "id": "5794de64-b279-4f9c-9ee1-ed1391b1af3b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "264e9382-2a6e-49a5-93f1-75ab594ade08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3748ce43-d0ac-49ae-a239-61ab3f0f9df0",
        "cursor": {
          "ref": "5fa00db2-0c07-493d-b017-73c07da7d7c3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3771cc28-7a7e-4e5f-bd49-77eaa36b9883"
        },
        "item": {
          "id": "3748ce43-d0ac-49ae-a239-61ab3f0f9df0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b35ca1ee-19c2-4ffc-8738-6cb1c456f5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66ca733-69ec-4fa3-bcb5-3bba6e476a7f",
        "cursor": {
          "ref": "c0214cd5-a630-44a7-aa19-5ffc960a8d69",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d5462e20-a7c5-47cc-ba3c-7cce7232d645"
        },
        "item": {
          "id": "e66ca733-69ec-4fa3-bcb5-3bba6e476a7f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "88847ae7-d1c1-4b43-86e6-8d5c5977b466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeb2934-3407-4fec-a831-c4ce109215c3",
        "cursor": {
          "ref": "16390627-0d79-462a-aabc-f88cf8b74328",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6e79cbb3-00fa-4134-837e-87a40a36d30f"
        },
        "item": {
          "id": "adeb2934-3407-4fec-a831-c4ce109215c3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e74f4f08-ffa9-4cfa-b1f4-8599b5bc849a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7616ff2b-9ec1-4cdc-8d7e-ed99004f06d9",
        "cursor": {
          "ref": "5e1aaf4f-5389-41c4-8f3a-73f4d3275b9b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0dd5e35f-67ec-46f9-8b31-f6cd6a221f5f"
        },
        "item": {
          "id": "7616ff2b-9ec1-4cdc-8d7e-ed99004f06d9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a4a0dc03-d406-465e-beea-50666954e64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7cf78b-a2b2-4553-8af5-3f37319c5040",
        "cursor": {
          "ref": "d43371f8-6f2f-4c05-b4e9-97eee88f10f3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a83827f1-14c3-41dd-89c8-1de641108f4c"
        },
        "item": {
          "id": "fe7cf78b-a2b2-4553-8af5-3f37319c5040",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8f6c61a7-9322-4f64-a9bb-edfad0ede368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04893c63-45b7-4949-9241-530dfaa9e239",
        "cursor": {
          "ref": "489c33d4-68c2-4adb-a69f-cc551643e681",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "99b6cf8a-6cc3-4b61-a725-c0e4cbbb2f45"
        },
        "item": {
          "id": "04893c63-45b7-4949-9241-530dfaa9e239",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4a93792b-d216-4a89-a845-95390834fb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53e6e5a-0aac-41ed-b16d-1579ff78d5ee",
        "cursor": {
          "ref": "095a23fa-761c-4d85-a9c2-7e04d5bca021",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9d44aec4-efeb-4b58-924f-67237ffaf078"
        },
        "item": {
          "id": "d53e6e5a-0aac-41ed-b16d-1579ff78d5ee",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7ca76714-2157-4267-aa7e-449b86b8c8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4bb0c6-1f93-4818-9b4c-dda5366e2e6c",
        "cursor": {
          "ref": "5c3de39b-0461-4e55-802a-c6b0b1ebbf39",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0d92bd1b-8025-487b-9766-f095f9dbcb7c"
        },
        "item": {
          "id": "bf4bb0c6-1f93-4818-9b4c-dda5366e2e6c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "33fdd5e9-1ae5-4231-a564-4c09add96654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5878a8-69f8-4a2a-95b3-743b958caf5f",
        "cursor": {
          "ref": "c9621629-2e21-4bdb-a7fb-a49c9035df9c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8a83800f-b0da-45f4-94b9-0dbc1d4999d0"
        },
        "item": {
          "id": "8c5878a8-69f8-4a2a-95b3-743b958caf5f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "986c1487-2894-4bf3-a388-ecbf9ad0afec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50ddbcf-ecc0-4f63-8632-5ba246c6552f",
        "cursor": {
          "ref": "00939168-b0cd-4d0f-aa5e-6bf2bfaa5d99",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c66afd2e-c061-439f-9ec4-24b21ea50855"
        },
        "item": {
          "id": "d50ddbcf-ecc0-4f63-8632-5ba246c6552f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9e76be93-1f8f-48aa-9c8b-a9d4e964735f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e6ac9b-1069-46fe-b7a9-e5ec6167c01f",
        "cursor": {
          "ref": "2171b5e8-df0e-4ab2-b5fc-2791e835643c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6f398582-0587-4990-976e-69c07f0fcace"
        },
        "item": {
          "id": "04e6ac9b-1069-46fe-b7a9-e5ec6167c01f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0c15c9b8-c7d2-4aed-99ce-98637638fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1236d5-9d2c-49c0-b353-96110f2d1d66",
        "cursor": {
          "ref": "fb1f8ade-3e64-47a1-8ae1-bf8646db1876",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "77efabac-9252-457e-a4be-ab973a60a823"
        },
        "item": {
          "id": "ae1236d5-9d2c-49c0-b353-96110f2d1d66",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5f04bce9-e584-4174-98de-133f2e0d68f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d0aa3b-9d90-44a2-9e77-c67aba98e02c",
        "cursor": {
          "ref": "c04f3f03-34b0-4905-9668-a9a823ad1a86",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "441fde9f-0a19-4461-b9f7-9faed8c9d82c"
        },
        "item": {
          "id": "20d0aa3b-9d90-44a2-9e77-c67aba98e02c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "86315d1e-50f4-4ea6-a3d5-5a69267becdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35453905-105a-44a5-bad6-a0bbd69c0b4c",
        "cursor": {
          "ref": "501f2a7e-262b-4926-af3e-5eec2c523c0d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3e25430e-7996-4378-9f7f-bcce4791cbd3"
        },
        "item": {
          "id": "35453905-105a-44a5-bad6-a0bbd69c0b4c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "80bb4918-b501-45af-81e1-aea3d6c41c3b",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9506f81c-f96e-4263-a307-8c0cb5ba2baf",
        "cursor": {
          "ref": "e723c223-80b5-4a14-a701-4a069b3ad481",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f3e289aa-b3da-48e3-bade-bc33a8b77298"
        },
        "item": {
          "id": "9506f81c-f96e-4263-a307-8c0cb5ba2baf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2e24233d-5ddb-4a8d-8e4c-0abbcffae8f5",
          "status": "OK",
          "code": 200,
          "responseTime": 1514,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d935bdd-b2e4-43e3-bbad-33c67b3c9a11",
        "cursor": {
          "ref": "eeb60a41-d21e-4074-acae-c4eb9e1e6a45",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4fdb2236-96bc-4288-af2b-4c464df464a3"
        },
        "item": {
          "id": "2d935bdd-b2e4-43e3-bbad-33c67b3c9a11",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d8c2b95-ee06-4499-b816-190f1b2b484f",
          "status": "OK",
          "code": 200,
          "responseTime": 1251,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cb00fa-7b3e-4416-99d0-b7e6640208aa",
        "cursor": {
          "ref": "7f95f0ff-8ebb-4678-bb7d-f4c9a6511f0f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dd109aa5-6b5c-43a2-89c6-1152fd9305b7"
        },
        "item": {
          "id": "a2cb00fa-7b3e-4416-99d0-b7e6640208aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b57d4031-8147-498b-987f-b108863c3d72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cb00fa-7b3e-4416-99d0-b7e6640208aa",
        "cursor": {
          "ref": "7f95f0ff-8ebb-4678-bb7d-f4c9a6511f0f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dd109aa5-6b5c-43a2-89c6-1152fd9305b7"
        },
        "item": {
          "id": "a2cb00fa-7b3e-4416-99d0-b7e6640208aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b57d4031-8147-498b-987f-b108863c3d72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f1f643-38cb-43cf-af64-ab6b1c00faf2",
        "cursor": {
          "ref": "e85443a1-2ec9-4150-8ad4-b14ee0aef0d4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b6410726-b129-4143-b7c1-afb89c178fb3"
        },
        "item": {
          "id": "14f1f643-38cb-43cf-af64-ab6b1c00faf2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "736647ba-39af-4409-9d67-ae4f4bf354e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ff5c21-4b76-4b24-8111-df4df1f84535",
        "cursor": {
          "ref": "52228711-1d49-4d8c-98a9-bf3bb288fa1a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "791a36a5-7eda-4aff-a0d7-084cfa98a8ae"
        },
        "item": {
          "id": "27ff5c21-4b76-4b24-8111-df4df1f84535",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a2ca5b0a-4f36-450c-abbc-2212f2c4027d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 139,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}