{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "50b9d0f3-4e03-4400-a99d-3987aad264b9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e0259489-cbe4-4bce-9e90-7b158fdf13d1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c32a0d98-c660-468e-9eea-72e30c36bdaa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7174604b-7ae2-4eff-bdff-24a3dc1bad47"
                }
              }
            ]
          },
          {
            "id": "866232d2-4fa7-4ad9-be39-dcafa517d930",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99208de5-2da2-486f-bbd4-8d605ec0a581",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb4022a2-2f9e-4117-b06b-d7490f4aceb8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3b9a5dff-12c1-4bbd-bb72-addf2912f023",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a7fb1a66-f9a3-48f2-8483-7e16283b29c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad254f4e-319b-4c94-902c-13f70710e8c3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cec36a2-3cfe-4012-ad27-7e2356681d49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce6e07b0-9619-44d7-8eed-b6b854c26f9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99591ccd-90ce-4570-80e4-8ea43d05984a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d002b93b-00f7-49c2-a2a5-2c20b9b5cc35"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecc27851-d6f2-49ca-98a9-f9957c0fc152",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d70aa77c-0ebb-40a0-a3e4-310b5ea6f88e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09047bd6-e444-434e-a67d-da8d84f08782",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b107a3b4-5f48-49dc-8aa0-174730317374"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb22b94f-e37b-4300-805b-571764af8321",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "720955ce-e841-4975-8707-ebffb4a11496"
            }
          }
        ]
      },
      {
        "id": "0bc74c2b-7f6e-4a7d-b6eb-048fccb63413",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f3802a0b-6041-41d3-8ef8-92769bc58831",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16d7233d-58ec-4c23-838d-ca99d92e3f3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90271652-6d4a-48bc-b03e-8f8df871aeb7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6641a7-7401-4875-8989-5e058671c868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d54a308-e96d-43e6-bea6-517b6111aba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5273cc-77b6-4544-89eb-e027e2611e60",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37871d34-9a0e-4dc5-a4b6-60d23fd56861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22023e06-39b3-462d-bb8c-e6a1b847bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cc522a-ebff-41bf-a769-b9c9a3ef2a6f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51212881-0d73-43ca-9fee-6604d84a8369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4300b62-cd2f-4d0a-9764-9f08ffa36cb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3b1c5aa-06d8-40f9-a7b2-3ccefc4480de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1ad3727-97a4-41b8-96c6-03638246ebd2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82023612-91db-4c26-9e9d-af6a4e5c02e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7fd8b50-b525-4dca-9f17-875645beacce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87877c3-dd8e-4ac7-8da4-0d02d75daa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50eea54d-421d-4e02-a00e-5ea6c21c6cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a313184b-33dd-4f67-80cc-32b7f3a20a7e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1af3f8-6b7c-4fc5-9a93-095414521bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f50ccdf-7b56-4079-96b5-dab91c0ecf6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0373dfb-89da-4b3c-a331-53fc8e943642",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9ea594bc-3ef5-4727-a7d6-ede0a10af311"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6bfb1b56-4bfa-4374-a821-caab90aa8dbe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29e579c0-ffad-4637-9acc-00e3357b8c37",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f82ae56-9cd5-4055-a357-62e606149403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dd3e83c4-a735-4ec6-827b-62e6695e82d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3276385a-ff81-42aa-a42c-ae939e7948a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a4aed28c-082d-44c4-ac79-5bfaf0bbbdf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89e22d09-8cff-423a-bc5b-445713504982",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "304eecdd-6904-412a-8556-457290dc9a7a"
            }
          }
        ]
      },
      {
        "id": "418002c6-aa39-44ce-a066-15c6c774725a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "967b2502-1839-48da-9506-efb76af865c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6957f631-474c-4554-a943-4a6d14cbc285",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b48c9fc8-1c02-4fdc-beea-e1fe7c840085",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b062ad37-43a6-4188-ae7b-78adcd8a4339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74268f41-222f-45c8-a9d2-2bba01411f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf976ae8-397d-4467-8b60-3dd439be5d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a4b33f7-343c-407c-b2e6-c474bbf95745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e806c42-0215-4690-a207-5855f43c28b5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec881aa-b6b5-40d8-8f64-f50fc459434e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8f95c2-53b4-403a-92e3-bc175b0f27ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b857430a-4390-44ef-bbf0-201ef8bc2231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a280d9ff-5772-4217-8066-e28fa3c5500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2d6bbe-8fd3-44a8-b2e3-661cc60ea644",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68661adb-f20f-4b4f-8c2f-ead64d3d8750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b388fa-18ed-4671-9239-a49719339e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b151b-9db0-4ba9-b883-d2d75d47c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51d2e52b-3a3c-44d7-a793-7861881dbc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b6c58b-d272-4d06-ac13-3c1ac33c2487",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52998bb1-829d-4510-8a02-3e9682399f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7883bd-57d7-4e19-bf6c-8010d93fb784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8eb4ce-f800-410e-97b8-8e6ce6ba8223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "594710e7-8959-4490-86e0-9e1c7b1ea3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63897cfb-6e76-4623-ab0a-1852d0695b3f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5920d03-d733-491d-b265-f906952a40d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0318ebb9-8c2d-4a72-928a-ba1ab54b7c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ce0bc2-07bf-4681-8bdc-e3154d230932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45e96fc-77b4-40ad-9b91-17b0ac325eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6055f02b-c0ea-4ca0-b9e3-f068bb3a0649",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5063f5e9-039d-4354-a2a9-682ba314ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0834c737-732e-4e97-a041-dd77cc928908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24e34de-4fde-407d-8988-81e255075ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "114a530e-1cc0-4e68-8ad8-efec18718419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db71a029-da14-4d28-a4da-1f015d6bdf95",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6112414-b1ba-448b-9d8d-6783af491b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e16e351-2319-4221-9da1-f6ce026a20eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41482bcb-2642-47ab-9bc8-d5cd669ca063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65394f64-cefb-4f16-a232-2bccf4651417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11456081-52a4-403f-a125-3a0f4eb60275",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1578e698-a1be-4305-ab02-893fda730723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839b4a9d-89d6-4d5b-8d14-a4b29edfaec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9233b984-e5b3-4a6f-8858-cb7b4187a18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7170d629-7b84-49e4-b1da-24595cb89e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b21355-9d99-47b5-bf8d-97c90205152d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52461c39-22f4-4b8b-8864-fa2e8122a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abf54b9-80b4-49a1-8121-b02e92e067bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0ee1c8-0aa4-4a5d-8f94-7276caa21c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36660bab-b977-47c4-9345-46fed7143d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5c3b5e-2984-4c7a-a579-d37d801c7f3f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cf9ce5-909d-4713-92db-3126ecba0691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf133f3-ebfa-4eb8-b12a-64c8a18ed92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9806c006-fbc5-4697-ab11-37fdfc3f398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13dfc3cc-4f2f-4882-9ec0-2367c10e9e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2283f0d1-9f5b-421e-b755-070b25a57e8a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f6c446-99fa-458d-9c9e-fafa96c7fa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78406c01-9b91-4ac6-99f2-032fb88f7c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8687d8-499f-4fe0-9c2d-5a0f775e555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "230da603-dd09-4cb7-a01c-11b8aba201aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b76882-e7d8-487b-ba70-c0f7757434ad",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2d501b-1ee4-49a8-873e-5677ee1f72bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d848738d-e61b-4bab-97ad-ed471b6ab64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062474ff-22cf-40a8-8e92-cdb1d1fc4313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f7f12d-1c9c-46fa-8338-45822583eeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7705f28-d4fd-4936-903b-934cdb09f056",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57df8c8-617a-4e67-9a88-b646c4de447c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72873a0c-203d-495c-8338-0f2dfdc4f57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab6eb0f-7f43-4943-b442-b26f56ddee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "568d06c2-786a-4a66-adb5-b551aa4c7a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77547e3-0d9f-4d1f-b8ab-d112949e417b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36161be9-ff6d-4acd-9d10-ee338237fb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b89b49-eb7b-46fb-9153-e5e1df993cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d85f532-eba9-4ebd-8ba6-c7efc08dbe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5af80e75-8b5a-40b7-aeed-da9b9eb0cfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d147939b-cf75-4723-8f5a-96d43d564341",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b70f18-9052-4601-9c81-a03815c7acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c75f15e-a1f3-4cf2-8926-ed9adb87beac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98857d6-a6e4-41a0-ae6a-5f47e473af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e35c89e6-76ac-4ea8-8db0-1c57f7df10b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779afa15-cb39-48ab-9124-c0a55b4ff2e4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b628ab-9f8c-4f11-8771-0be95809b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbecf49a-90d1-440d-bc12-4592ce0f311f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325179d-12f4-4064-b2eb-4ed4937f54e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60732456-acd4-477c-9be7-76c4efd4bc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1fa3b8-fc83-468f-ba5c-522c930a84c8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa670ca0-59fc-4b83-8ae5-bd42146e4079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d65c38-34e1-4512-8e9d-81a6147c14b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd98c32a-caac-4f98-b442-274cdb845437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39bff4a2-961a-4c5a-87aa-bb6fcfcddd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65be17b7-a9f0-4db6-8f3c-f6c93c8199ae",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e31c1-e6b7-483d-b608-4d654c7c896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3e129a-42b3-4083-83c7-fb0495dcf5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a7b1c-2538-4357-b902-631f2652ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7b8255-b8fe-4ffb-b707-6d5f59333847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec88e96-0174-4e61-bf50-c00ea34366bf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428098a4-8af6-4e42-96ba-5bd6b7255378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e297ebd1-8ee3-451c-96dc-b89058a66849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0dfd9d-2271-4ddb-8f02-ecbe96907a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8921f353-9707-42dd-b915-a32fb0efe532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1dfd27-2aba-447e-bbe6-f47641c0b640",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e943c4db-ac51-41a4-99bb-1f1debd84666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d243042b-da13-44dc-b3a8-2aad0a61bb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c979798-2c3e-4ae8-ade3-607ed61d64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cea5ba5-a227-4ddc-b588-7d414b982f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e814894a-d9cd-477f-a49e-3a8df8c9b805",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6843d7-cc1b-46e9-876d-c21481f534b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b386ec-4f7b-4207-9714-a472c9ff7fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b577a07-9c5a-43b8-a6a8-eff3695b50d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "273c3f67-dd5c-4a69-bccc-d21bb5c3e99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc30f37b-5084-4b07-ab18-0f680ef1a61d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d10340f-6913-4287-9637-bbfb8d31b9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8b23d7-88b9-49ec-a792-672dcb1fb01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0309315-da38-44c7-9ab8-36c978b7f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f811b2d8-3b89-40cf-98d6-1cdc71f1ab9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affade68-847f-4a43-90aa-fb5d4726bb38",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476fd98a-d33f-4be8-8002-4fc4d4bbde98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4205ef6-9059-48e5-99ac-9e546c5ac553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5d904-06f1-4d86-891a-26a1e3177510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "652e412b-d090-4346-bc3f-5c2bc6628c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1075372-047b-4125-bcd4-2e04f25cfc05",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d04900-fbe0-4042-8b93-115b77ccbdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948f02b4-46f0-49b7-a5b9-82e8f5795091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09baf527-01ff-4115-9159-a15faf12c07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21c27c7-8b02-42af-a050-51ab502deed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0869c3-dd6c-40c2-ba9c-d1f4f4fb8a7a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6222db97-9095-440f-82a3-fd659cbc85f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7cfaa0-1507-4663-a663-55e2c379edfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42eaf26-313b-4aef-975d-4dc0e195b3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9eec49d-fed0-4ffe-9ade-5350e72c45c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0932153-abdd-43c8-a616-1d147897267a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6cdc8b-386b-4583-aefe-1b9db22db5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00036e2e-62ae-4600-b3e6-c3082cd570a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6069695-a032-4e2f-a00f-dd3411b29db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e30fc215-b3c5-40ae-b28b-80bdbcfdd03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5458a9e1-fdad-40e6-b910-030eedaa556b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1521b625-c6dc-4a2a-a1d2-7d6e3faef5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d327d9cc-fb94-425b-a46e-9a3937f3cfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35679024-f905-4e00-aba7-109955f60e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9fbeaf-c8de-4c3a-acb4-bee9527535ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9671ac-20bf-4860-9af9-11a0de679262",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db71b600-6f16-46ad-b8e1-60a6b97df4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b319e16-8860-4989-8185-f2af785e1314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4325c11-560f-4e05-8ad7-35f4888af086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b341f0-a7c0-4f15-94ae-baf292302bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2cbbf8-e2ee-4e19-b615-172a918d02c8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefe8caf-d981-4e24-8bd9-8412ae46f4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99446266-75c0-4a17-99bb-d956735449cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab8acf7-7467-4e8d-ba13-eafc194e89c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "186a231c-5fed-439c-9f03-429c99157074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e694a2a-b479-4bc2-bb34-efac70f113a0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4591bd2-cd4b-4745-a428-cb2f85c0c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232d132f-d001-417c-a9cf-f8a7000f2866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb839d88-1139-4a40-83f9-24f841a753fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e45cb784-564c-4019-971c-18eae45146af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd660b9-7092-4323-8386-a567d02e0864",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0203ae-45a1-4846-9d22-431734899ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52867d94-39f1-44aa-a419-18e26dc8a036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd31b23-0f7a-44cd-be3b-d904ac7391fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e445c0cc-eea8-4b71-b159-66dccd72e3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0915bc39-3885-4753-add1-07a0d97881ab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884f624e-da8f-4f95-810a-72c2df61d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f2dfd6-c313-4939-87cb-169c19516ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdafac3-6d3d-48b1-a3e3-5fd8f2e19af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30b45e55-c4eb-4b1d-ac0b-f115ce027507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031be36e-913e-41e9-b9b8-2a1146a0f0e6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158c157d-3a7f-41fd-9770-f61df8f1a03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3415fa88-f694-4d5f-8d22-181bc4593b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf7fc4e-5f24-4961-9749-d4cb25be438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17ac0b1-5cd8-454e-831e-3fc897e8edce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f58363-0b38-4b0a-b46e-8df1a39c953d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0568a058-97b5-4129-8106-a575817665c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1930f84-323e-4ba3-95a3-b173b48fa9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a86878-9097-46f8-9440-ea3338dc7735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e046b74-4b31-4804-9ca7-765c29afb6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578b7242-7ae5-4fd6-9186-7323bcce33ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d99db83-ba4e-44ec-b4fc-cf73d038b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6db8f85-171d-46e4-933c-a9a531c22fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d479df5b-39d6-4045-8502-03cda4166d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5817120c-c320-4359-9d99-567441ecc912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad92b11-3c46-42f0-8845-4325345b2180",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0e5d7c-d2dc-4ab8-9e8f-51c5dec78901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e6b79a9-54fc-41d8-bf98-176f39e3da4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af5ac2-dfd6-423e-8f51-489e69a80327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e56d49d4-bd64-4d8d-8059-49f56c5ee108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f498e82f-391a-4936-a83f-19cd01c38e5c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8accb3ea-52e8-4583-9fd3-4fb17e5be0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25da102a-5f00-4944-ad44-779c3da97ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216d39a0-74ef-4861-acfe-98435f109867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e181d8-5ab2-472f-b39e-ef616cc7b926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4bbfc4-08f6-44b7-96c5-208d4452edee",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf57e984-2ed5-457e-96d6-67ecf547b4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab66db6-a409-4473-8ee6-eadc6190dbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8150916a-7b5e-4628-a39d-1f7e196e4df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d4fab6-7f93-4a69-8288-57862f6c59b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b8d748-c4d2-4f5a-b2be-2b7a060f0536",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65308f25-9244-4cfd-b9d2-0d7d234f1959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee4f887-a836-4ac2-9caa-b2c39137da92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9513a34-8513-4b41-b475-b50903121635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2b92d9-c721-4850-af90-33ea248841cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc95f8c-6d6a-40f4-9653-d1079ee2afd3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e462222-d013-4d52-86c7-2ada5ff7691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925b6712-8ac3-4664-a98b-aa2ba0a4f7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f453b59-e09f-4e61-ba86-b794a0a33787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "102b29a8-75dc-42a2-b3d0-b153e4e7d0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9083f6d-2f3d-4c96-96fe-92fd229ddf1f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82117247-1063-4f76-9239-7d23a473350c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbbd936-e715-4e56-b343-f6a4b1ca6715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ddf68f-742e-49c1-9fa1-db2500c71ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68d63dad-c1ff-46fc-98b6-d753c8920272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dbf6ec-c906-4e79-852b-14d555086ad2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9355876-9a4a-4349-8520-f49c82bff3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229c9bb1-cb68-4c5d-9426-84145e920427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a77ff5d-e815-4d29-9c0b-929e0e814d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "43cc93b9-1e4b-4478-a2f5-7276e0f6c685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66677e9-6a40-4268-b491-8d550f0cabaf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94dea9f-14aa-44cc-ac87-850df0ac0ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a5a6ed-f4eb-47ad-808d-254482454675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec62997-ec45-4b50-83d7-63410fbde725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4508530e-3d37-4466-a1b7-8c81615662a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511d098-0125-4a60-91d7-3042ae5e99b8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe10ab-29fe-45b3-b5de-6cea82bf8f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb005d4c-7201-42e7-a866-9ea91e87b6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e1b532-e401-4f00-aa1f-c7029f8c1d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "143b4747-4446-4050-b3f3-3cc0d6f56dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af99cdc4-25f0-4846-a78b-09148f0761fe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36961738-af20-4795-baba-ce0f7b1ff6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d101ec-3f89-4561-9efe-7199e8aa6b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e606ecae-2a0f-463d-9af0-ff5aa408b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b480469-1d23-42a5-8ed0-295148beadfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ae1f37-ed3c-4d8e-8830-3e7ee045a164",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d3b240-02c5-405f-9ef3-9931856e8de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02098076-7d68-4e89-bce8-c3ffc98621fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63286a71-8b05-48cf-bd81-2fbe7b457855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d812c01-ce1b-4482-85a1-103449982e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b19d03-29dd-44be-883b-423f0c60a974",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118e2870-719d-4da8-b25a-f7d29d1eee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90b298f-41c3-4357-9f6a-968a039d4615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bacd97-b1dc-49cb-823b-41f35ba47702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b2d61a-ec30-4955-8144-c8266975a2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40de3ac-7342-4021-9859-cd4d4c26f2d0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83112bdb-2016-44d8-a328-f35f586c7ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6e6746-0619-42b8-ac3c-4741c55ec1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13645097-879c-4347-b197-ed0e71fb50b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9959cddd-0319-417b-b622-fb55c008dbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f6fafc-1201-40a3-b08e-f813dcecc28b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f70d4ee-d777-4392-b9a6-1718c07c56ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc54fe2b-610e-4b94-b9db-ed77b8327be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92480bb5-12aa-47cc-8dd3-9cbc7bb10c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "971cef42-75c9-48d5-aad6-2bd7951a00a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab65975-5895-4814-9f82-115ea48ebbe3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80b4f95-073c-4f2a-b7f8-817b5b914573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08920e87-3435-468b-8646-e4ecbb0a364d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6d0c07-da19-4b7a-abc3-a67960f0bce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b715752-8691-4703-b81c-5c35abdddb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53983c5d-706e-4fe3-9713-45169bf928fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bb4f26-bd66-4cc3-8f9f-3ae28ae8d80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5215aef-0cb9-465b-813d-9c9825bccb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35d3a7e-c806-4850-9953-2fac65671bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad47da68-a408-4d73-b6ec-f600378cbfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83184d8b-01fb-4096-a210-6876347af64e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fbc0c6-901f-49b0-bb6d-4a5e32588136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24aa9c2-db96-488c-9c11-85b686908b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9ad12b-533a-4d27-8842-c1808092797c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24681adb-ab90-44a5-ae8c-5f5244b82092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89cf70c-6113-42de-a67d-ef6e22f35e01",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e7cc3f-658f-473a-aa80-9c9ba05b5490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8d94df-d428-47c0-91ee-fee949a61b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e492bca5-36ef-4fbb-a1fb-e2ba9ae4ecf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23363c18-0af7-4403-8af5-8a48b7dfb575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9797e5af-2cc9-4743-a4f3-a279754df7b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f7b96f-8ae6-4b99-b838-bd2d6f1897c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5acb19c-d5d9-404d-9d30-b96782f645bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd3c484-d83b-4879-ba12-58ecab665be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb6f217-fb25-4aa9-a430-82e825e6f1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a238d5-26c6-432a-bbf0-4aefd9c9416b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbc1295-3448-4696-b440-e99826b381a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88eb8a38-bbc5-4f94-a6fc-0ab6941a8513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91f1029-4552-429c-be2d-9c285fd94a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84de59b-9f08-4e1e-93d9-b4d01387f7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545803e4-36d7-47cd-9807-8777bc7caf71",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c1316-7617-4b9a-918f-a122669e6054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c4871c-009e-4a91-945f-8c64a751b8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fdd74-83bb-40ba-910e-b96978f8fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c52b2f18-ff37-479f-ab7a-d77e665c0374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a994e740-2758-4403-9c91-90a948494663",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3501aa69-247b-480f-ae69-4a09755108a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce402760-266f-4e73-8155-345f01ccb6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f40722f-2b9d-469b-b97b-17a2904753a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1545679-8442-4a81-8c25-4661b8362e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f345b2-6002-4a3f-aeb1-c307d817ba07",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff038dc-dadd-4a66-a064-b1c30ebc9f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34d4234-db00-43a1-977d-87c3831493ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4b915c-16bc-4d5d-a5fa-e9fbe501680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3644ff92-0d9b-4586-8e37-515525d119a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e64812d-9f05-462d-a1de-43f1a853cfa3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b62a90a-5c28-4acb-bd59-b84ca7d90063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bb26bd-c3e9-4d93-8fe3-1adbe8ffb30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1077cf-ba7e-48b4-9d70-c4e79e75b6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bf88e1-d912-45b6-b72c-8f8b5cab5800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7c10d5-77fb-4cd0-bc69-713f24a36eff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29d76c2-6e87-4390-8a3d-9e57c3c71d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52f2022-dac9-427b-b426-d63964c1fdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2dfbbd-b719-48b0-8ac8-8da6d5e61999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa93b7d-5848-4085-bb54-de35bdc7c409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9356a959-f9ee-429c-94e2-9ea1cdbc715b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205b29fb-e2c3-48e5-9510-143ddd504500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba65fbb-17e1-4263-bc17-cdac60ffab3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fa04a2-8e24-47d2-86b4-1f1092091ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef82111b-7746-431d-af17-a852ceab216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3922a615-82d1-461e-9817-9e03cd906104",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eef91c-a319-4f36-9af6-277c78c3d242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64710ce8-40b4-4cc5-88ee-f88ca005acd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea2d44f-fddc-4c4b-95ef-d475572d3040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b6a6ed-35e4-4f1a-b53c-a86a51351a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd181768-ae8a-485e-a8cb-1c19bb59cffe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd48c6c-e9e9-4ab8-a581-42206034c098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212c28c5-21ba-4aa6-b524-55c907358a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2210413-9c2a-48f2-a7ae-ead2d5232eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f1500b-8b1e-4a47-a068-47d3d9c11617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac00252-f4b3-495c-b7a7-c7105df243da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b238e7-af0a-4305-9b56-e1df58a2baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fcf817-a4b5-437a-ac0f-9c354f06b9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d21137-3d2a-49a4-9a59-eb75c8672f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37de8148-3015-46ce-aa6e-a03f6356b021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bb4062-a0d0-4661-8114-ecbfd3ddccd8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40348163-fb5c-4a82-ac56-7c9c98c881fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc8666a-44e1-4f52-97b0-52a7162c6653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1629d2-67e9-484d-b5fb-60dd5cfea5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3d916e-5099-4848-ab0f-46aff77f0625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c15f4b-6096-4aa0-869d-b7ae8fce4111",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7542c3-f75d-4bd6-bdab-1e428cb16626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d75127-9106-420a-a38d-d99822ebc570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbe89c6-6354-4af7-ba1d-edcd0d95178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d769c7-457c-4bab-8374-74326db9d0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e3e39f-222f-4334-b99e-e9f940c8a6f9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0502be-644b-4421-b9ed-e557a596fef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25aae22e-fa63-45ae-bb4f-991e98a64e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092bf4db-2f0e-4e70-94eb-81395629c1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "810d1cea-01ee-4608-9ee7-abd9eac4b458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7699efb6-0244-4278-a51d-15ffad16d9f8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee7777a-31ba-41ec-9345-038775149af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4f74c3-fac1-4b41-99e4-4e5697a8f25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaff662-fbad-4500-86ed-58ad0a26e9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d783f0d-cea9-4afe-ae57-bb19b1bf9b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd168470-1628-4a66-a75e-0f0a153e4fb3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4524ae07-1874-43cb-bcef-fbf5e4919b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8a1c17-3753-47d1-a9ec-2b779f20afca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee30523-e249-49d0-994a-732305d5fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "843438a0-f7f9-45f5-bace-b6ba3aeb1939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e0fffe-4772-4a54-a504-89a3588ae7b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83da114-9ac5-46a9-9a86-1cf04196db03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b7deed-e35b-45e6-a7f3-1b2eab6f8104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223c6426-407f-4c74-bfa1-cdf99f09a0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4663332-24ed-49f8-a09e-c8ae4238da38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71166437-c98f-49b0-bd02-3657b685f241",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc7c250-3027-4108-aa03-5dba78b1475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3e9990-6649-4c8a-9bfe-925508a60d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b64535-1762-42b8-b04d-ccc394a3aef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "004d0688-c727-4b37-937f-e19ef0067e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43318825-157b-446a-aa65-d0570904b85e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d537dc-f97a-4352-9510-327c9c980329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24c1cd-6f5a-4153-a729-817888693580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faf640b-5615-46e7-9715-be1be6e6e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3585545-c325-40fc-8013-7819a8e6e0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f82d68-698e-405f-ba50-fdf2de18ae18",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c5a9d-4b52-4794-9957-e74bb7c9bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cea124-40dc-4eea-8699-7d8b2c5ae470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d94dc4-d223-4567-a866-e93c17da39ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64de7303-1d85-431e-a602-ad642601d24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecbbcef-dbf9-4e2d-ab10-d61a51865dfa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8fa4b6-7581-4e65-96f2-cc58502cae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefe3348-bac4-4124-8fc4-d4204104a668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3b3bee-7f9d-47a4-9b55-156ad3c6c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d47dad-4afc-4c84-b6f0-ec7530f7e55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ac88be-0089-41f8-8b82-e83e9cb306e3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7dd7c9-f8f0-47ef-a03e-62e850c9e5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631adc2d-b380-4000-977d-b0340e91f93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985270b4-aa69-45fc-94b6-76c4c8a3a3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74375cdb-69a4-4520-9bd1-3420874780e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d508be-37be-43ac-8e46-d61db3495a26",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de8f306-81af-4431-8036-590bb189a184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c310b2-906e-4eb7-8f0c-7fe254e0610c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7257ea0f-b23f-4d7b-aea5-0d13ebbf4b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7899b9a2-d447-46f4-a524-600c02d41d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c96de5-9d5e-4e0c-b2ee-30ac89e100e7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ec323e-3a3c-47e8-ac04-fc0753a2ed62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1e683c-38e6-47cd-86ac-4e0c138a07ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2a28fd-452a-403e-8aac-a72855c2d972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "757765cc-2f4d-4152-a97b-d49ee8e29e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e0f5cb-95ec-4f0a-abb8-fd5466b6d374",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73282170-12ca-400f-bc4b-fb20533cc8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cc48a4-5ca8-4999-b0cc-d1329bc66776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21103c37-c38e-48ad-abbd-5d740af0bd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c4615b-fbb8-40b4-b9b7-18c300f494fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e38830-7c29-4ab5-a320-8026856823ef",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5b39b8-4ba6-4dab-88ed-4d591b7e5e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84450c07-0a2b-4891-9e53-dda4946c4fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07a6ed0-343f-4351-883a-6845fd11f2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa72127-7a03-42a0-b12d-6ac9645c2e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f4733c-5810-4a4c-9f97-ec942a52c589",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a8e8ac-5101-4f78-9b48-7adb5eaab70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37c931c-c1d6-4efc-9315-75ffc0749659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b09ca5c-ce62-491f-9492-9a288ebb314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71f01461-fddb-4ff2-acbb-c1d9167711d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9301b359-2a64-4c59-99a2-c25487e77e7c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1306e6c7-eef2-4fef-bd76-2589370ac18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c96d8c-d534-42b0-b8ca-954be9b515ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46395de9-6222-48b7-9836-dd4cdc09d294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3615b1-6ba3-4e42-b65c-c76d1a99eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe0bd1e-aa9a-4182-9a31-4989e4d4fe0e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1461bc8d-b293-4ab3-8a0d-5cd95d16287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb536fb-6ea0-4aa3-af3d-09b4498536f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a86dc0-c90c-4d8c-9699-a543c05a47b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6debf1-9217-4aec-adbe-c6d5d629e888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7320c7f7-65a8-4cf1-be8b-db41ef378e17",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e690b67c-3df9-4c04-bf8a-c97f71e19ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48d6b78-ede3-409a-8586-7ac0a6f69853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382add0e-dd18-4e79-aad3-300767af75dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96d51a1-d27f-4f37-b615-8a329a60de9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a12d4b-0287-4fd6-89d0-fe4d879f1258",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aacf74e-4d2b-4dfd-bb52-49db09726931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb04f86-e62a-40df-ac91-e1638366182d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8985842-35bb-4f33-8927-0a17b314744d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4151644-c9c7-4cdf-9eeb-9bd7dffdd6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cba5e5-aa6d-4157-942b-48c083b8469c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523105a1-4d10-406e-8d41-1f1dfa16599b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2191d7-e682-4848-9ce4-71a22c7bd142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f3e9d8-38ab-4147-9c56-1d6267acbd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b481253-e006-4c3d-aceb-980fd18880d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4652b93-b40e-4d65-8336-c20cc2b8d21c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37213e0-c85a-48c8-b18d-ec37ca554f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f695c5fc-b95e-461d-98d5-e0f40e087247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4066c9ca-6485-409b-b802-59c82f152fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0833511a-bf66-4058-a742-2523ec83d669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f10c5e9-93c9-4338-85fb-ce2c10ac8b6c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc22d172-8052-4656-8687-667a05eaa44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46426143-3060-44c9-a8e9-9d5aa085c5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef182fb1-2b88-4683-b418-418d22a1aa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e9fa63-1b27-419d-b1c2-e2efae4a6b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70633292-c8fb-47c2-8f0c-f589c16e06d1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925ac6ba-a603-4bcb-90be-914dd9863a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252e6aca-9840-4975-9fa4-e504822c2115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41556e1-26ab-415f-a822-e2c7c128035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8a9d04-7f9e-4c8f-bda8-b7599a1b00ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73701576-5499-49dd-8882-fdd87af4f8b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a15e331-7312-4c14-84ce-3284cb91e2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ef80c0-86b1-4b20-a41c-aad6556e318b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bfca48-3700-4c26-9efb-ec97adc3b5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ced12916-1b90-432a-abfa-143105dd53d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610a8172-eead-4005-81c5-c03fe5c6a607",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524803ec-b211-483c-b6c3-cb1ef708df68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dd22d5-0e28-474b-bc9a-a3c91a7f3b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97824ec-e58d-4ec5-bce7-f494e9d42761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef0eb37-aaac-4782-a7cd-bf6b031e3438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b1044e-8b02-4d49-abeb-f61d034069b1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472c3638-0eaa-4f6a-afbd-1146df82e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d94e14d-2ea2-4620-932b-96958f359309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10a0c4b-5fef-4b63-9e5f-946c2ee436ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f807ee6-4a00-46ae-8f57-19d3f06e8589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6289151f-397d-4b29-880c-cffb8d6dd87d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69dcfaf-dd9b-4b45-a2da-d6c09cc95924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4dec37ff-bd8b-44e6-ad0d-1fbcd8172e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04026a8-ea7a-493e-8858-c6782aa18871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2f96db-1bf0-4525-8e11-d5801549dbad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "081777c2-719c-40a4-9711-72f5562e02bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "184fa3e0-d5ac-449d-9ad4-0c5052834228",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf212d-2a26-4762-9cc8-1dee4cf4f3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec9e169d-f866-4e3d-ac29-88556c324f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80ff266-9c81-45a6-bb2f-7735366a8a9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7590ab89-31ac-458f-9235-12a880847d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769a9ed9-5a88-4d02-babe-25395e24baf6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34f287a-e329-4819-bbaa-0beef2e25216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38bc9a20-1625-41d0-ad41-ca183a9d0741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621372c8-ce90-4f7f-b6a6-53c1d793fc10",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6717819e-3a2d-4f50-9ed4-a50393220fd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83ae0763-fa66-426d-915f-6db56938861a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18d0334c-78d3-485a-803b-f6fe028ae555"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e1114b2-139a-40bf-9ed7-412f42182309",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9959ef5-158b-47d1-a3ad-73af01ce7ab7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b6dc259-1fa3-47a7-a6b1-bd4574701103",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25cbe084-5b6a-4727-bf03-8c6c04d49984"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6c71bda-5294-4a3c-92db-e056a0d34791",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac8c7ed6-69cf-407d-b9b6-2d783d23882b"
                }
              }
            ]
          },
          {
            "id": "7cef6fd9-d774-4a6e-bbcb-8e347fd74b83",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e2a17df-58ce-427b-953e-a58cf2bb737a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90e8fbb9-e31e-4247-9aa0-317158d76a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd053aab-391c-4900-9b6a-d197c9beda9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9baa3e31-da34-4d1b-ba04-8c5855b1264d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8c4aeb5-c601-41e1-950a-94d926342b11"
                    }
                  }
                ]
              },
              {
                "id": "a6160b69-6ae0-4d36-abff-265a6dd52c97",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc719a3e-66f7-4b13-872a-11839d516df6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "669e106a-76cd-407d-89d3-1a50ac630d05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ebb211f-15e2-40cd-8550-0eabadc0469f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bcc4b220-df2a-4efb-84fb-e7cd5d0057ac"
                    }
                  }
                ]
              },
              {
                "id": "b2d39da5-8cb7-47e5-a445-d72b5e819191",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "464af407-0edb-4054-b104-91003d05abb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c594261-b257-4f54-bc1f-bce33c1e0e21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bd04aee-d8b8-4f8a-9cc9-18295e7d0999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "967203cf-3fd0-4bb8-af8b-4a9dd7fc3767"
                    }
                  }
                ]
              },
              {
                "id": "ccdebab7-b57c-4586-9089-60910be0ed5d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70424761-422e-4171-bf4a-71f468e0d49a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d134c989-c162-4864-9127-733d9ce697f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab953e62-9f35-4398-aa82-8790807a08d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "46a7e6b7-b5e5-41f0-9799-db1acc660eb3"
                    }
                  }
                ]
              },
              {
                "id": "e836d31a-2413-4145-ae12-63cf3d5a434f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d798f00-31ee-46ed-a075-037fb151f179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22b9bced-6492-4c6e-831e-e3ab27623b9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe7f97c4-9961-47fa-872d-cf65634e1f39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c86c0634-d8a9-46c0-a8bf-f45a3aa8d56e"
                    }
                  }
                ]
              },
              {
                "id": "0d60a084-6989-4ee1-9304-bbc2a8b1b3fd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ca01883-14b5-47e9-85c6-b27c83e0918c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4562f208-1f97-4ad6-9bf4-1752c0cf220a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67c27cc3-e022-40e7-910f-a2a7e6bb4512",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ddf6624d-ae1b-4b4e-a64b-f38d5022143a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdd8c08a-f4fb-4212-b0af-b1eef53fb4b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9bd0226-17c8-413b-b162-d600a3c5e568"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8e0b86c-caea-44ce-8d0b-2ebfe671ae25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13a376f1-bfcf-46eb-83d3-82755fca6f64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4afd83c9-5934-49cb-b683-f649db6ebfae",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2117ffc7-afb3-4b5d-b244-56ae80179393"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "512c28c6-9577-4bd6-86e4-19e4d9ac73cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbda37e8-4ae2-412e-9b80-66449d0d8943"
            }
          }
        ]
      },
      {
        "id": "6563acaf-67a3-4122-8f9a-b536bd558249",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e359706c-7da2-4ce1-97f5-59713e4d5d1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cf2f377-416e-4ee9-8c08-c4755ecd2be1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a8a0025-8720-4838-9790-8b9b6125f266",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa1e609-4eea-4c4c-926b-567c2835eb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e46c7c-5f68-4524-90cd-6f0892e041bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1b76c3-1688-439e-83e7-c77608deddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9f5812-51ec-4671-9758-0d8450973f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de003d39-5b2a-4c02-8eeb-d15a29d7be2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5349d89c-19f4-4703-8f02-11cffcd960d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b6abf8-da48-4312-bf37-97466f215888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b485e8-ed87-4a07-9af5-91c29527cb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ea0777-bf6e-4816-a340-9f38c9dff957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e130f84-8d2f-4dd5-bebd-9035dab644ef",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b29602-7f4d-4d6d-bc0d-e9e50f80a5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56490e93-5654-47d7-865a-2cdac1574e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65b9be6-e1fe-42e3-a537-5f92ceac23b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e2d0b7-a728-4eb2-9c38-98b1b7dc3bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c999db-57dd-4852-85e4-d1830370973c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b4b75a-5e9f-4c4c-8075-1f768b415c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58fa39cb-705f-455e-94b5-1ed03747daf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722ff04f-a7f1-416f-9b25-364e97ed0853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeec823-30aa-4fcc-a0d9-cebfb367e71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc7b8e8-73b2-4ca6-aee1-342d0e2d241e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e86d01-cd1f-43ef-852b-7aa618c6db86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386a2198-16e9-4553-833b-0496088f876a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47843728-3199-4b1d-a82a-dcf764688bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6b68ed-dac3-4f0d-ac26-8f85d310f593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cab5dbb-455d-4637-a72c-fd8fc30af8c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0f4e8d-30e6-4aa2-aac1-f009b1c23bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957797e2-d658-4d8d-a5b4-81a04891b7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb73bf04-78dd-440c-8421-e61c61271971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "621768a6-c237-4e0b-9dea-7d8b3bf0a297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8d64cc-504c-447a-9821-745c02ab62bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011e5b61-6387-4dad-8a0b-7a1518dd7f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42093d04-ee31-45d0-b18e-555c4f532837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bfd350-7b17-4701-8c1c-b92b5490819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd392bd1-238b-4a8e-99f6-493ec192bcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63be1b2-ccd0-4eec-9ca5-32f3411893fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f70868-48bc-4e34-9c9d-961eccf1b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbff85d-7430-4c1c-990d-6d02f0de0feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd04c239-7a01-4083-9fbf-d6a3896f1940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b793d0b1-08fd-4849-868d-b5d61bca298a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7a032b-3057-47be-b58d-018b8b2fe139",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2bc4a3-7c53-4c32-89e1-bfa18e154aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14893ab8-30e4-4e6a-b9cb-c492bccc5126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ba68b6-e658-49de-9910-ca0c6179e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb3ac03-3e79-46e7-a06b-5b204fdf47db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f0889c-f5be-431c-8cf9-2b1aab0ac72a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b056dd-d05c-46d5-8e45-fafd5341652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06480c53-da7c-41e5-a8b0-ca9893492c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e5881-961e-4106-b252-97796d46f4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d472c99a-bf1b-4c6d-a196-7e499c65fccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50911c6e-605f-434e-82cc-7cf2b248b038",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cd58db-42ed-4609-aea4-9f7771781cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cab0064-10f4-4c4e-a8bf-68a404db8abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4023b8ab-1c8d-4aa6-873e-41b13793d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "458daa38-fc1e-4dcd-9e58-4e13d9f4fbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f4c872-5b3f-4157-9ce8-0649b0d6355c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed260959-6475-4492-ab15-b214a334b583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfd949e-bb22-4688-80dd-8eba717c8deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a793fbfb-31aa-43ae-8d72-6a8782d3f22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "459a48ef-fe40-400b-9ec9-344bde1dd88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad62e281-221d-4a9c-9e1f-4f28331d1989",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607a29d4-4b0b-4c70-b461-d1accf3e67d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b605e218-2eae-4d47-bcb4-54f4c8b3e4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9ac2e1-82e5-4dd2-973c-5784931f9b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c0ca71-d34f-4baa-963f-364acf1d84e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d907ec8-1e2c-44f8-b04b-b0494023707e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9afce2-4218-40a0-a04a-42fe66ee5044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa82b92-8019-46da-8281-838e4d9db33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064c7f87-2439-47ed-a018-c0c6ef0bef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "713cef81-35e5-42af-a832-e22a67a2c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6628cf-0d36-4b38-ac48-260b8f115f64",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd5b80-f7dc-41e4-90ea-dab03ec8584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d2100a-ebc1-4733-943f-808414f8a4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c76433-962c-4f35-a875-e7215d46995b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6591ef77-f297-49a1-ae94-c3b7c10f82f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251e1c1b-4bec-4b38-8a39-97f3cd5bf98b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d180af36-3417-4d4b-8877-8c662d95839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da33022a-06d3-475c-9a68-1934fbdaacd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df32c471-8844-45f1-a6cc-2a3f5a125a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19a47e3-0343-44a2-be89-f9f7083a0188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d32336-c15f-4ca2-b90b-c3f724185778",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874778c1-a6a0-4757-befb-5464cf1c1b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c779a13-6bcd-42ca-8c9c-19c89df2fb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fe4f2a-2bce-432d-bd32-367e7ac05b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f83639b-7bc0-4259-88e8-324f67cf5790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1adced-e65b-4f96-92dd-b2af812ece7b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27a766c-2146-45cf-b36d-19dd1eedb47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbeb180-5611-406d-bd77-3e779218b7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f3e611-9dce-4c03-af66-626e64a2d28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a348c904-e9b3-4cbb-a8e4-c0448e042c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2128641d-4730-4bc3-b1d3-099dbc37e366",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3056c119-4b68-4210-b643-64fa92f5454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab3e310-0969-40af-96e7-5edfad395d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc3c41d-63d8-4655-9218-b0e8f04e3032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e8a8e6-0ab5-4549-96f5-e126453d8c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd793829-2871-46fb-b220-b3b290c557a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaad02d-8d5c-48e1-88df-e0f44cda9ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca741002-179c-422d-b339-d6cf92ef3027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c6384a-565e-479b-b9fa-d777791444fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc35a20-4b7d-4d59-acb9-acaa3a9c5b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6ec977-d4b0-42f3-82af-8975984c8ccd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f751fb70-3b4a-4fa2-939f-450f0c73e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a844a162-74db-46ea-963b-19057f797dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ca5e83-3987-46e9-a074-a488defe753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3bc364-6cf9-464a-9963-2f658ae9130c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc33961-70dd-4bfa-a632-a086e32944de",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0a41fc-75f3-4ec0-a4b4-b1e14f7d7fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79775fd8-dd66-4da8-b3f8-13d25c959a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a4da4-9913-4d4a-a430-63a3f413705e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc515e95-aa94-4d28-8cf4-583da63b1824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542dfd0f-67c5-49c7-8dcd-67099a0202b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a55f59-eb4c-4c3b-9453-314c150d831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d730ee36-6951-4ca0-9122-c0b7d74302f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea8959f-5d95-4193-89c3-0c2a77a9c649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12413ae0-afc8-44d7-b76d-46aab806ecf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636f3582-36d7-4aa3-8de0-25251a209743",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126da343-4287-4bbe-9e2a-3eed171d5bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4d8abf-cf61-47a4-a25d-a5dbac602fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2b9703-e515-488c-b17d-1627c5025604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0858975e-cda2-4b8b-823a-38d7f3422cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89554ed1-5c2f-44e3-8337-14c2e4815e1e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec6652-fd6c-4dee-81aa-d9454445b008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be42533f-7bfb-4ed7-ad99-196a5ae59950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c7b83-d683-4c13-b6a4-5fd2cabe06d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2147aa2-916f-46ae-aaea-bd12938ff315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e7cb15-1e71-481b-be58-2f1f31668e54",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c177f0-a9d0-4dac-b119-35c3aecbf115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c17198a-6344-49e1-8a1f-bc4c9804ac3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3254d36-e1e4-486d-81ab-29bd1f2684aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d37a8f8-8525-43b5-b592-2d083b3bbf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4220e449-333b-4cf5-9b50-48fd77daed52",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff7e610-d855-48c9-a141-241af413c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c531c34e-cdd2-4070-8285-885d9eddcba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d72ac4-2557-408e-b612-16247da21347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1ea0b1-32fd-4a4b-a7d0-dfc3289b9c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad64c55-037c-43c0-b821-4fefa4610031",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ccef67-0540-420d-b352-8041b09ecf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c151f68e-6e46-48f9-ae1d-fbaef2a5d038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78b58b3-c09f-4c31-9e95-02fae76ef8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93545929-d89b-4629-bae9-7db5d8d697ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18181c2-864f-4ded-b933-1ee0526ace58",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979cdb9a-75b0-421f-a887-9a7cc06519a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1c1087-516b-4d58-90e8-484a32b8e2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09b84ce-be9a-4454-aac4-ea11dd4900ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885781dc-d25e-4418-84f2-f0c8e7163ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dc7e97-428e-4a3f-b4d5-74ef56b03e6a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd22a131-835e-4fbf-bf15-be7bc3786ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f280fd-7379-4fe9-85b0-88b9e9016fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7349c41-918c-4c77-8f6a-959bf3a34eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e1b7d3-0334-4fb5-bb08-b62842ff7aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd3dcf5-f270-414c-b915-4c8a92227a4f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d6acf0-e4ef-4b8d-b82f-4c5012ef88c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656b4e02-aeb2-4ef2-bf67-345c58729a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae51ca95-3fc5-4057-b312-989eac93e73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a865f68d-793a-4009-b15c-792fb2714eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cc7cf3-a090-4c19-917c-27dc0094a86c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278a06c5-b4dd-4019-811b-5135c9d6c9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44237bc-c93d-4af1-ae27-765786d7ef20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70125bd5-00d2-4ac1-b408-d02076a7279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b73bd3-776f-4cf0-b001-5b65e812ab0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c5cd604-6117-41ae-957a-2359930ccb39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eff92790-bfd7-43be-b35e-044e7d75d362",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac29d7c3-ecd1-49fa-bf96-49b0e59600cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dcef935f-59dd-4f1d-8113-7ea3ccb534f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876fece8-02f3-4951-8ea0-f9d5028cccc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "417c8b88-3298-464c-8ca6-204c2fb87c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c19963-794b-4667-ac98-ab01b978c032",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10400f9-2ab1-4e7c-a334-c8f8beafe19b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "383c2a85-1030-48b1-9b1e-1f05b1674575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc308fd-b216-4d4b-ad5c-59bac995ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6528f2e-03ee-484f-9b87-6790c5038c53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d31132-a7fa-4901-bf91-c980fe9356ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ee91bb4-c09d-44ab-8c1d-41585225e691"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b7dead5-c162-401d-accd-5e4a5d0a2e82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e279aee-0411-4baf-b88d-d2c743d766a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8be87e85-8197-4134-8a1d-7b782560553d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a98b964-0be6-467c-b97f-6ab70ec77ec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37520ea7-fd78-4ff5-a4e6-67e3e2511764",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd589348-07d8-43ab-a63f-05682dc3eb3a"
            }
          }
        ]
      },
      {
        "id": "f9895100-9742-44aa-8c09-d63b594e77f4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a6924519-7767-4cec-bd49-607ab972277f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b37262a5-cb3d-4b0d-9b03-4336bb9dd37d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1727c7b-eced-404b-a248-5c10ea794a9b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef73df42-6e5e-4f0a-b63e-3238b71ddef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca5adc8-8e1b-4b35-8f8e-92b76e814746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd0a6ea-9558-4964-bfe7-f9d0b7a13ae0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee98a08-fa03-4e4f-bc65-6fd78b21a062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656be495-9cb9-496a-b484-1ca2d50bf0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d82b0e6-c572-4400-b309-cd26740fa85f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a11cbce-1c7c-4cad-a0b1-26992f713853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f06e0ed-06d6-4c49-b95a-86b4fae33e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecde75e2-1515-479d-a616-f8dfc6b84b18",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6448a91f-bba8-4872-a3c5-0025a0b04ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29b0f56-4545-4bac-ac4a-59affe5d9e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae3ffa8-85f7-418f-b40f-e64ac5c8190b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe4d3d-4409-40da-a4df-16569f14dade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a55ea8-c7ac-4458-94eb-197039f8a069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1228d2-4acb-4dfc-b612-e42078552765",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8595c40-1333-4c12-af1f-e7dc04113ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcd6598-6bd1-4778-a0b7-23abb4b7d9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea37c5ce-3774-42c2-9573-3064ed4cd877",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a30027f-d474-475d-9a90-030d74a2fb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcde294-61c0-4507-a8b9-91b4cd691fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa63e47-332f-48c1-a6a5-8f653311a0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e075ca98-172e-4adb-aced-24f57a1a3204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061b57fe-0880-4eda-9b91-428ac6cacb47",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34959ab6-3ae8-4580-90dc-9c4fd526afad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a74c0f2-7653-49f3-8408-12b17e17aefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c2eed4-c047-459a-8d84-c2ff01546766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65404fe-e3c3-4cd6-b8fa-c877726458b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5cc0c9-b900-4044-bb34-fbdf16cb7880",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df10bbcf-069f-4fe7-84ac-c46260db6894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac99cd3-b4af-4d24-8e06-7ac741c92c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e3fe54-bebf-479b-8de8-c3126d79d558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fd6768-4df4-43ab-b5a1-6347d357025a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d8ce03-8674-4470-a962-1e62e63f359d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8dbd50-3642-4dcb-832e-3cf077996f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a070d03-1358-478c-b4e0-eb5b8d632e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfe896a-d057-4a1c-a3d3-954db038ec81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce911b1d-0c76-43cc-8116-79b3a4b532b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf268c77-72dd-4bc9-ab54-bc9913f47b45",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0499823c-2025-44a7-8848-3f2489b75e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b2c48f-a5a6-4718-a9b0-dd3d239e3f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f117c81-de74-4871-98d2-7b8f95a1aea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d20090-7c19-4393-a12a-9c990c2d8626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ae0075-aee2-46f1-bb12-e2e25bd99e71",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bfa6cc-ee9e-4739-a162-8a1db3511fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce08056-a143-4bce-82f8-c737b90d4b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77b0f00-ff59-4faf-b0b8-aacd4d975448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a45103-1ac9-4de4-8c79-025b3597e0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8b2346-2cf7-4bb7-8221-4946cc363db5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1b423f-66ea-41f6-b609-c01f4d4cf7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caff157c-8616-4f15-a334-94b6fcf599fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64521ed4-a2f5-4aa8-8b86-ab140a0bce12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c821559f-0e7e-49d9-89cf-aabec60e205f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a972e78a-5a37-4d03-a6d8-73eb32ccb716",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cf5a4a-7d7c-4461-8e89-c4b9f0dfadf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179729b0-121f-47f9-8e19-563bd4581a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3bfda1-d55e-4718-85e2-02d728ec261b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9036d28-eb94-48c5-ac2c-58c165e23027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3306bfd-46c5-4d42-80a4-d2195db3dc3f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2374d248-c4a2-490a-a9f6-15e299d5cf24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed634f65-ee77-49f2-a903-c43fcc5c67b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c859e4a6-16ca-4119-b940-3f4b0a19bdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6163d4-757c-446a-91ce-33145b7ca072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e3a8d7-7f37-428b-9b48-588662186e12",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e09fbc-df41-4b15-a8f9-a0556e59fb0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ca716f-bf4b-4e73-93da-6d90b26c0a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f12ff4-4abb-4eb3-9457-2eb9db38d3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c780447-eba7-4af6-948f-9124b90c03ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19821cb0-bab7-468a-b63a-64a79f787d1b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b0ec5a-1afa-48e5-8e57-1cb47dff586c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa4b006-0a01-4243-9285-0eb7926c19a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242a1b08-7d58-4d35-ba3c-98ab79cdce8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c103c67d-bf68-47b6-85d8-8259c8a7b33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dbdd8e-77ac-42e6-8c31-7446ea802212",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98713c8-51a2-408f-ad63-6107985a2f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718d097d-e47c-45b6-855d-857381e60c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bfc504-f98b-4aa1-b24f-1d3c84af859f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e79e8f7-1a1e-463d-8d38-7ef84940ae7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc653e9-2843-4971-8211-377f0996447d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e64e424-93d7-416f-9f0a-38b4e1d24551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44ccf8d-617f-49aa-a00e-75c750bec191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f28e14-96d7-4b81-8790-2d8b53758961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1e99a9-7279-4202-b748-3efa0c2f18a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7273479b-1c91-4027-a3c6-ced0c712236e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1da2702-e34d-411d-8697-ef628998c5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee365c56-d61e-47c5-bcd9-43d46d97fe08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbd89d9-4540-4d23-968e-37481e886eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5f6188-ec41-4a1a-b8c6-de8599c3c5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af58844b-af4d-4295-b37b-c8f964c4414f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e92d90-78b2-46e3-99b5-a74026b19e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446aa893-83b3-40ba-a097-be4b6e862cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ac5778-fd0c-4e34-a8f1-2c55a3ad0ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdcc405-9fa8-4fd2-9e39-bf4032dc1905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1811389c-2c65-4aae-b288-6f5b1ab7552e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d1e6df-f786-4ed1-88bd-46744e4175b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e413fb5e-e19b-42cc-a55c-702e02d0c6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eb5896-60e6-4c40-8c68-53600cf02e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff64ad0-2aba-44d3-abe4-c2448211a3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ac67ee-b22b-4d61-bab6-c6907cb65e00",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3febc3cc-3b3b-4c3b-8279-fbc158575bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c390bc-5c3c-45e8-a65b-da93d7035a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3158b4be-8a50-4042-8570-a1da3d67a9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc94935-0b59-48ca-ad65-7e3ed6de283a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b45c0ce-de18-4f30-a858-bf73bce11213",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ea6958-8c64-4fea-a135-ff311b7d13ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a33319-a74f-46fa-9a69-e33a57d88ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92974939-ae51-41ba-a162-abff5ec5c2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f7b8ba-6cba-4462-a674-0e0f6e3e24fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999751a8-cb2b-49ec-9e0e-a651ebaae73f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7172b6-807e-4ea9-9dec-fe2fed9929e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78fe423-2b2b-4dfe-8e34-4cc67b6ae008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2566d041-083a-4507-8e0d-92431901ceb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd7a2e7-70ea-4b4c-88da-a64ebec725e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a7b7a-0229-4fe6-8c1f-b021e086a6df",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef218ce1-3f21-4826-849c-d16af841d4b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad50ab6-47a7-4652-aacd-d8145aad1e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a6b748-0952-4e89-8873-74cb28f58b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31a66a4-b42f-4686-b52b-c8c232b71fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9bf861-a5d1-453c-9646-2336cbeb6010",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32b10ca-e0a3-4c7e-bb19-4627f96085d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc0cf0a9-d795-4dea-8090-27f727d3c9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6b521f-ddc4-4d9b-965a-d18da32a19d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13beae59-9789-411c-a4b6-61e6a02980f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5266f0a7-9e61-4345-8aab-1a2b0490ff97",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920dbdef-64d4-4785-977a-a991db5a94e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c857a52-5aad-4489-8801-9f5fed15dd9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871099b6-df0d-4b5e-8db7-ab65907ea3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdd5de8-39f2-4ee3-aa90-a1330a492a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cee690-e598-47ad-8075-c5065c62ea70",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edadad95-60ad-42ed-bc80-3f588a6b740a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c90cc91-c0fd-4b11-a8f3-13794acf577e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08a840a-917d-4ee2-9580-0c9aa084d6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccc3b32-7d0c-4bbc-8233-91b55f9f185f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d3af89-7d56-4297-9cb9-efd91c1cc3d2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a1b54b-37e0-4657-b79c-0089d06fc750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3807ad-2abb-4eef-836a-a2a78fb0d243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cf871f-af15-4a69-ba6a-35c83ccfae32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7dd338-8e62-4033-9645-e4fcc5ab6f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dcd86c-7045-4e19-a944-19603ab2ef38",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11af973b-8e75-42fa-9d78-52628da02ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73fee4fd-0475-4fd8-a540-3e3e12d3a9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c44fcf-e441-4d72-a90c-63ed9b44b79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fbd9ca-f5fb-4804-a440-159954ca1557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de01271e-73cd-48ec-8d12-0b085798ab95",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37868f7-6097-4b76-8f2e-ae4ea954f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ff3fcf-6b5a-409a-be1d-8d72aff2a254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac8fea3-3734-423a-a2ad-a55b353a7b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7957341-94e9-43d5-9047-f5b0f4091889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37bb8c1-4345-40c9-9f78-940e8f31a4b0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234a3afa-1c9c-4e3b-a3b7-085cfae2f11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9558054a-a118-481e-add6-3659dcf57ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eef4a27-1eb1-413e-b2e8-a40697c0ccf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d0984c-9bd3-4877-a4f2-8920ed64879f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a494ae37-6226-4db8-b25a-2adc615f1a74",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32db6e68-4475-4e73-9c28-112855f435f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f73639-2a0b-442b-9085-766568d1e710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e9a4c6-84f4-4e31-8717-032d65c634e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706119a4-8831-4e3d-a47c-a5bde6063fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3165f98b-a2b7-4576-99a2-7b0be94eeeaa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c93328-16a9-4c26-9e48-264ab344fa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5218df7b-fb5e-4750-b79a-eb5869d40c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3780ea9f-41ec-41da-ab19-7ec924c50633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e8bcef-6160-4170-8cf7-6fe5f00e9a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50b636-ec0c-4baa-9683-e1db54ce4305",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea76e6c-ee7d-4bcb-a3db-c7bbe2dd5f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20251c3d-f5fb-4d86-b352-0cac35621c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad970b0-f484-47dc-9876-eb0dd4e8a453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cdf234-0c7a-47ab-b4ab-e6650b771fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b856a7ff-58d6-4804-8f57-14a3a6c39672",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ef5a0-da0e-4002-996f-3ba99b35e9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c004938-9919-4299-ba9b-d001861f3340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b26a8-653b-4315-88de-e81d1e2b96cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc66a0e-411f-4e98-8765-0e1622a4093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbc0ba0-58bc-416f-b2a9-80bf7de30933",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ea429e-f9b8-465c-8e6c-ebb6e75c0806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4c4e1e-d63f-4aff-a0ab-6e8857479f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccaf55e-2bca-4f48-bd63-fbfac3874847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33cb4ec-670d-4d39-a1cf-1a3b176a12c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24348d5f-92a3-4853-b214-5e8a73bad2aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4249d5b2-1397-4412-bbbe-fd30a584dae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05218c98-27e1-4dd2-88cf-3e4a60cfc29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa0b77c-b99c-431e-a414-cbaaffc79fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ca4ba0-e29b-4d34-98ac-f5f57b083388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f26d55d-e304-4480-9c87-bac9f2b8781c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866a8926-48be-4af6-b4a2-61332531cc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc913e3-e4f9-432a-bfd4-dbc99b9ea045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776f74c5-fda5-4ffb-ab4b-adddf174c2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a71c08-5580-4611-bd3f-0ad35a428b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13578a81-7d7c-49fe-b889-02d314092320",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64df7575-151a-4219-8b1a-3ade10c2ec92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e363d79-ad9b-4854-a613-89b111a6f42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544c89b3-9a81-4c8d-9c27-46799d4006ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7e3b2c-8f46-46fb-a4e8-974e849ffb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04574fed-dffd-4458-a942-cc0efb11f6f1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2681c14a-076d-48bb-a46b-e76d7af7e4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eaca8d-c2c0-478f-b505-4059fb4f2164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6448f05-e5a5-416c-8135-758ac2fbb438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90d4eb5-8967-4aab-8202-0807728c67aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919f58a0-dbb5-480c-914e-811ce7c49853",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8fd5f0-e04a-49e3-ac4e-62c93e563fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c356823-a3b0-4a90-a16d-81160efd132f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36770e8-4816-48f9-b14d-00dff56bd691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a65fe45-79c9-4f57-ab02-f0aeab66822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9dda50-4db6-42c0-a8e6-86c5de96a24f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328c4f03-2f2f-4c71-94a9-5abf05fdf8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dabc09-dc85-48a9-b88c-b0df1b2821d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68270ea4-71ec-4200-b857-03f6314fbedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62792c39-87b4-46e8-829c-f1b28243d11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e1a518-6c67-47ef-8c79-6449e3e3b3e0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971f3bf0-1e2f-4329-8575-0076af603119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0773744c-f2ad-4834-9193-fd19d9aa7f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488c953b-5c39-4245-a251-f24d3762681a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6696940-c126-4c31-b7f9-daf761388a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef3da9a-bddc-4e51-8930-8f20dd17e6cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66d61e4-66b3-4204-b5c1-681103ad8d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832219dd-a5c3-4ca8-94a7-c1812e6c7db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359dded9-f3a7-4c38-bdd6-def8f44bc34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a833497-5ed1-4ac8-978d-592b0c202b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1965e207-6b64-445e-8392-a7a458727944",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c80397f-54d2-46cb-a7fb-9ddf2f5aaa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8f8246-834e-4738-8dc5-86b483ebcac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2c5dc2-968a-4e06-9210-22d8af583eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fbd4a5-be29-4e1b-9db7-6f2b1a817fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422f432-6f6c-4226-8810-7e09aea4d91c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d08d867-4208-48bd-8583-d37f9e4f3335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b8ac7e-dd61-42cc-a322-8bcc254263b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2a1ea7-04ff-4ba8-ab63-3f2fb94de433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c803479-2b53-4a3b-8d8a-2ba41b9e9985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0324d1-2d2a-4f94-8412-24a34751ec7e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceb669e-4a2d-4406-81c2-c060a005effe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8e9fbd-766b-4244-a14a-ed4ac6737ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bededa-c219-4c3d-9f0e-edac136a37ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550f033c-c941-43a8-b4f8-567605f6f929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4194c0f-f189-40df-afea-e75efb1f521d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df50d00e-1944-4351-b4eb-54a275dae873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade689cf-7329-4a69-9324-c476e37a9f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b7b314-d6f1-441c-b702-fe6607b8f997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563d8e13-4d2e-400a-a4ea-956353bceea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67e1bb9-293c-42ec-aaac-2d0b79baf07b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc65cb14-fc9a-45b0-a117-25a6c9fdfdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1b62c6-cbe3-4a2b-b86d-36020fbdda6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74295524-72d9-4d78-8639-9e74cd82ba16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10129e4f-be8a-42e2-be96-0aa8d41d0918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8b55c2-3b9f-4908-a07e-e8623e9e9c2d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37862c08-6c04-4cac-9f9a-cfe203208c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3407d7ba-e975-4ef5-abad-e194e02bc696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e5584a-0eb5-4899-aa42-5162ede89634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137af386-5155-4561-a7ca-fe3e69d1146b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2dc3e6-add6-450f-b46a-8fcd378a17f1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b500eccc-2590-442d-9c16-d87477da0231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114bb640-2075-4b50-8ea0-45346cf6ba25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8914579-90eb-4509-bfec-8b0cf74154bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f358e2-2d24-47df-9bc7-aee21bdf60b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb2499d-b06e-45df-8162-923caad0ff57",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb771d2-79d7-42db-b237-617f14c2fdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52dd52be-2641-407b-b10b-0befb5a22934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b06b0-4e83-4269-a1e3-c5e4c6c5aafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c1a8b3-9602-49b7-a915-89e1b62e25eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8263c1e9-f0dd-494c-ad23-5638fea51bd2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14afc503-9ed0-4501-999b-11ea0dbf2a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9374eb82-dc53-4b46-b390-7e2244fc756e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2243e56d-4766-4eb5-a3e6-698a980c0567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409b58d3-dee4-400a-8d85-2c15876cd58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ad2c75-c139-449c-82a8-5708132da2f9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd966e15-c274-47f1-a23c-9883be04d220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d047bf7-2b57-4074-9314-70a8b8025ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62841d2b-effd-4431-b2fe-f24670751f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e19973d-082e-419d-82ef-ac9f9a38759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0281f75a-06cb-4b23-ada7-c50403555ec0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d900fcf-0a16-418a-a587-345de5b35883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36c07f0-e544-4119-9bd9-a625a318e826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5a15d8-fe52-4abe-ad38-273732c423e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea2866a-a6e6-4103-b13e-d2a9bd5e3a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e425d0-559c-4cdd-b18a-c114858a300b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4cea2b-5a52-4cc2-a825-110778ad1c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acabefa-4f66-43ce-8a86-cfb92abdf58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd00a611-cb6a-4132-bcbc-a86e767143b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9a098e-a81a-406b-b583-c94e047b3627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07038c0d-d6c2-47dc-9584-ddb8f5dc439c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47589de-9f83-4d1c-9412-190a2f35cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2430b228-d9f0-4ac1-928d-2d4ae3c93ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5810a04b-f297-4173-8c81-04e24a08fc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465adf00-6f53-4b54-b2da-b639a804b4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c61cb6-c01d-4b87-9e39-e84570b986bb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397bac46-52a5-4589-af7a-5eaaba6f94f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc9c14a-43fe-4cd8-9083-d37e956d8247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4417af0-4fb4-460c-9239-78798562482c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b191e965-4376-4447-b1aa-54289f6e5d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ac4382-83c0-49b3-9723-94ea4ee5a538",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8058a489-ec79-41fa-801b-b8b2e04d5805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4877bb6-1f0b-461f-b4b8-df9090b66027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6001bd7f-0319-442f-b243-73c39c7faf18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218e368d-29a4-4541-8c5c-5f85c8f6c2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74301cf8-e7de-4be6-8ed3-d7cece5b4d7b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74915b18-7d2f-4789-bdfd-353dd63502fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5261bc-de36-462e-a694-ee1e82be939c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30fcdf2-ccb1-4b95-813c-8f9b78e5b0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494cfc04-a917-421d-b9a9-35353c0ef087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b722256-8dde-4972-9479-0560e6dfa160",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2939a4-f26e-4de0-bd30-9206752357ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a1ea95-ea82-4209-89a6-fd703a3f40a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d2d128-27aa-43d3-9a6a-2c5eb5dae728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c5294e-28af-47a5-8a21-e059b95ebc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4c5f01-3e37-4ffc-850a-cca7dc3f958c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330b4958-2140-48c7-9c98-5edc10927b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fce435-d3ce-4c1a-a51b-f9677587a8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8541a99-ad8a-4226-a38e-020b79ea6fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb28e36-0e5c-482e-85b8-f005791980a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea6b056-a9ae-4eef-9323-746b80a5cc86",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bebfba8-a328-44c9-ac54-ff2a9a776c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc56bf7-062f-476c-bd84-cb5e691e1403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34619c8a-7c8a-4629-9cb6-6b437a70dace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae831b3-efcf-4eac-87dd-b7fe6901e5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aed912-56b7-4348-8151-ca8bdd2ed9bd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d174caa1-5b5c-4bc5-a0ab-9ffa4a8848c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17609cac-b5ed-4e60-be64-de42bb78f107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ff4065-d43b-4e15-92d5-0c6f34751339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4c4ff8-2f79-4163-9d91-b85b7cea6522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53f2792-4f75-4f7d-bc36-a25c45e3a500",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccc29a7-51e5-4de3-a577-e4aaee62c917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cff618b-774f-4af5-a5f2-e1085d3dbf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b3c045-b47c-464a-9c35-661a52568dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42db9e13-f1a7-4435-b242-aff39b1a4e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a6a21-aa7e-4d81-8df5-742f460d0529",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d65179-0915-4255-8ba4-abe5467c62e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ec8144-4921-4cf1-bf00-d72e600f3aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06ffe38-59bd-405b-9c0a-da1ceae4ff8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdcfba7-3ff9-4f55-b2a1-361c4d6cd8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e47c6a-a9ec-4de6-af63-5d1588d1c5cf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f77e86a-58bd-4e29-bea3-bffac8210f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d89318-f5c6-4c65-824b-6ac3079806c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1dbe75-2482-435c-8eb5-23ff1c198dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bcf5b9-7f0e-4c0b-b377-50046884aa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1b2ff1-f389-44d1-a333-aa2be8144a81",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b33a4e9-42d5-43aa-bac8-49a9d69f3b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0757393-99cf-42e2-b328-5fdce985db7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328dd2b7-6958-4e4e-b543-2cdb0160aefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd3baa6-6a55-4b69-8afc-061cd9e32411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9607ca-2235-4aa5-867f-586ab08f37cf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9381f08e-ef9b-493e-a8be-20c25ad4274d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f1397b-4807-412e-8ba9-91d3c660dccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6a2974-c60c-44b8-84cb-c223dfd81286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d5a70f-29c4-426b-ab39-589700d38a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eeba76-e830-4ce0-b592-c200c440e269",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7de49f0-aa6c-4f93-9294-589e5ea2a21e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254e5f96-4f00-4651-bf17-5a045c873d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dcc47f-5dbe-4383-9ae8-a9f53bc956ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6b9e0d-4239-44a3-966a-9130f084f29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c98aa-bae7-43b0-8b33-63c4a7ab8221",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8896c137-4e68-4e54-9f4f-ac41efbe2a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0238c5-10d9-4651-9ed2-cfe556f13150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6becf3-2062-4e52-81c2-52518dbb3957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90113d63-9068-4a42-a2ee-2aed88d6e641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519fcbbf-d61b-4262-9b6b-c17545c1ccfb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ffa1ec-6e8d-4fc4-ae33-b6785163d75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946c62e3-64ea-45b9-b054-dc6a66a34cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feaaac2-140d-4a3a-89c8-91b3f388817c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1173d3b-0027-43ae-a7a7-4d6a3c098448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497a3c8-1096-4a57-b9b8-6405ea368856",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda3fe63-6495-4c19-b4cc-201dcb24bb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8302bfbb-59cb-427f-90e0-db9d33f03065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520f1748-8454-417c-8c7e-72ce4b6d7c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e984c6-36e2-4e99-80be-21f854d21fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8c8ae1-fd54-40e5-a7c2-546295a12751",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfb1b4c-03db-4bd7-bcc6-58972c18319e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d913e58b-5d4c-4a30-8d72-8159b260b2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4199647c-405f-4b88-8db9-ce1c33d65113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea209e96-6d8f-4533-8fde-bd8835b74bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8ddc18-0669-4144-b0f1-3c488863a457",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f8d4bd-a069-4929-b9a8-2ca4abb8930c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821a5756-6306-47b1-91ac-8d3d29d5c655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c816d0b-2d7d-4bfd-a1e4-efb0089c740e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de704ef-1bb0-4528-a5f6-e39a1cc36be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb14823a-7ee6-4642-b2f6-43bb18e9eb6f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5d6c48-52f4-4f18-985d-dfb207bdb081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4d2a06-112c-468b-a1fa-6023c17085ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8987fe05-83bb-4035-8b42-28744c842773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b86f1f-a4eb-4bc7-8d38-b56ed45650e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa48a2e-a5b2-4028-a056-407cfa6d0f8c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc6c5d-5fe9-4f96-b9d1-5049ca27687c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f7ea85-2726-43b4-a769-5bdb96e2541d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5cc359-8248-4d72-b4a4-3109f430e2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7b3041-0f3b-4f21-9ea4-1ea405a6500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295a2501-8496-475f-a377-4ec53fe6341c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfea030-747d-4386-9820-6959d075e53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c82452-506e-4b93-82ec-7fdac2a1609d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fbdada-b60b-4171-a7c8-8fc6b8650643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25c9071-aeb7-4d2a-94ed-ad2ca836e6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b2fed2-b32f-4193-a771-029d154b8297",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d0f571-a785-441c-9970-6e15b79d49ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91550a57-f9d3-4f18-b1d7-0393c1a2f676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93426361-f810-4bcd-b776-e33cfc94334f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ffe450-0cca-4d70-978f-55c86ebefd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b000cd1-d790-4487-8bd3-5b6c39b86c7f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec52bf8-1dcc-4363-aa3c-29278141e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0254941-db3f-4b1c-bb09-e7a3ca9b8259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87871fc2-d694-4207-8566-23f16fb61992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9c31f3-a55d-4605-a3d2-29e4f5e7c7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e01af-85bb-4c9f-ab8c-181a5d7419c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ef55eb-5180-402f-8d59-cf8a08b56136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73ea08b-2310-430b-9d14-392fa5356a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a4dc1-5d18-42ab-a668-3d312c96c923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b41699-0afa-4fc1-aa67-a42daf686cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c041e1ee-8a1e-49b6-82cc-551a2f4c2a03",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e484c34-6fc4-40b9-aad0-19c01c7dd94c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42914d9-fc54-4520-adf0-24aff3b6186d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d903e6-21a9-4c68-89d2-65002f23c2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7f1323-8d30-436c-8e69-8e4498cc9dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8679cee3-acfc-40a7-bf0c-db2c45728006",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44466538-38f4-4111-83a7-d2d1a40bc3ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c345de20-8e8a-411c-8c50-b818454e60fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45671bbc-b11a-4558-a711-b5fb340b0caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356503d9-ec3f-427b-8319-f6136e6ba8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0558abd2-3422-4e7c-8867-dee0f4519e7e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e95fa2-d4a3-48f3-a417-d1c757f7f793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f6d7fa-dea0-4816-b37d-4468504c12c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a51a78-50f0-4a0c-b8cc-1cdad8aa54aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660b39cb-1a5d-4bd4-9b91-5e8c8335c59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6318d5d1-c00b-4bc1-bf11-99781b19cdff",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a906dc28-d041-49b7-85b3-deb0a644b0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a906674c-54d8-49dc-aaaf-9e9ed2a7d59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8beb5a3-e1bc-42a0-a4cb-b9f51055ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ed2c9a-519a-469d-b585-3acb86032d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10546e91-e327-4ae3-80b0-20215f9b5223",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdca44f8-7ad7-4fd6-b998-8c08a874e48f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c704024-5cb9-49ff-a152-103acc3a01c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be227d59-864b-4568-97a8-63040ff294f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05adc8e5-3f4e-4da0-8ad0-5939597c6542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4626a9-c77f-48cd-927b-e55aeb928c77",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c02054-b6b2-473a-a345-e247d5e35d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee9182e-f2b7-4541-b63d-dc629bc96628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc1d81f-4caa-4381-ac6e-b223e0620eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53272af4-a4f0-4d26-8f06-2f32b0f876a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9144217d-1f37-45cf-8416-1404ee8eb2d8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7ac26f-b086-47ff-9e5a-29908c5ba8e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13604319-1da8-45d8-86e4-bf54f6f3ee10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bce55e-a83b-4c1f-a82e-fee8fcdfdb6f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa47afbc-8642-4e8b-a066-2d55bb6cf392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037bdf59-beec-4211-be94-c936b1a04e4b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbed83fe-5737-45f3-bae6-168b1cf9dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b574dc-76b8-4f8e-b873-bf95af76847a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c646d49d-2815-4c6f-81e6-00d3fd174bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067c85c5-2b31-43ab-be6a-b861a494cfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8c50a2-524b-404a-9526-ebaed1a7f932",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0027019d-445a-4aa6-a3db-512a92aad598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988fc2dd-af31-4df8-928f-b611e07a8fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353afa97-5401-49c0-b891-19858d698096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1059fdb-62de-4b4a-bcb8-126a78c65b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f6fdb1-c9cb-4a1c-ac9c-b0c1407797c5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a376a66-2c1e-499e-be41-ac3955f34d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb06f80c-777d-49aa-a6e9-0facf6148b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e51fac-2c10-4542-97da-1cf9ba7f0819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff25cea-5748-4f72-820d-4a484683b27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77986ef-cbf0-4859-9283-4ac1c21a47b0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7d6e21-4fe9-4013-a645-71b0a9dbd99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edb0905-73ca-4174-b2f7-0c89773c4125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a4e113-9355-45c4-b7ef-43fb4e6ee25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e233bf55-51af-4e90-a896-bbab5642fa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1cb41d-7719-4e52-99a1-bad413a18441",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66572c7b-5cbf-4629-acf2-6f5dc8720ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d66a810-59f4-4294-846e-23166f781aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8014d7af-7b51-4441-aaad-f20cecd141cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55410576-614e-4f44-9115-d186a6383263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2186dc-e803-489d-a15e-c5faeea41595",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8746c897-d316-4c5a-a6bc-9e4c6fe7e642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37c3c9f-854a-4cba-a5a1-eb99c25760af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15283dc4-453f-4203-b2c0-245dd86948d2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a59656-6feb-480a-b022-920a31bcf1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f1c261-8270-4fe8-b7f3-dcaa8b430ed2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d37d87-292f-453b-a699-0e4cf833a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fd685b-2d40-4a39-8857-e153f366bfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24651b3-4017-4cb8-9758-09b60937bf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c3b7ea-03fd-47a6-bf93-013b5c70e061"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1286de8-30cb-4379-b8e5-f984d0ce23a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c771126a-f5ca-43b4-910a-1d3547f0e4f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11de67a3-b5b4-45c5-82f4-a64dae78517c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d274fb59-31a2-4de5-9cd9-7ecb126a6ec9"
                    }
                  }
                ]
              },
              {
                "id": "fcb73188-c2a2-4b47-85f3-fa8eaa1000db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22a81cb3-adf2-428b-a0d8-7ade314618bc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac74c55-9752-445e-a834-2977ec310b60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "42c68576-7128-4e8a-b0aa-6d9c28e26724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a54370-e96f-4edb-bea9-70852ce7e5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bb05d72-173e-4262-9915-9c58fd952fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b66ade-80e3-4f27-9ce9-beee1bd75083",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd01acf-ae7d-4100-9fa8-420589e9933e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2d6e6b95-368c-4ca7-8efe-7581137d93e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bc786b-6b33-499c-8a1c-df8eaa70820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7151da7-b2b8-4522-ace8-51af922cc2e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5880ace7-5dbd-4ccf-9ede-e6ab94d0c06c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e76a644-3588-49df-8f0f-426d712df6e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5c12e96-0585-42bf-b46a-d35c76d5121d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb1231ff-491d-4944-b414-4ce16ea60802"
                    }
                  }
                ]
              },
              {
                "id": "8383cd40-5aa6-4bfb-b78c-c8c5c57ec796",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "68de2aba-05c6-4718-8026-3e6a94787914",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53907b72-f6ee-45ac-8a5c-696b15de3334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7e09e712-890c-4a12-b2dc-af697fb15f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331e905c-299a-425d-9855-f6d0bd69ea15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2333eb-3db5-492d-89b3-e7a9e7c65df0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f24c4cb-6f01-47a1-bc32-7a87f58ef20b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a15799f6-80b6-4123-9fa7-fa3b59283738",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bb625ca-bb47-4d71-af53-376c7e45ff07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f26e00d5-3c33-484a-943f-8a5ba33f760f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e3fc7b9-1fe6-4b90-b940-b40fa2814455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "176e7a4e-da2a-4196-93cd-70b53896205a"
                    }
                  }
                ]
              },
              {
                "id": "07a3ace4-565e-4440-a599-1285a0f85825",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a701127-cc9b-4044-80bc-6f93853b4839",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "121d45c7-c488-4f80-a9b3-78de743b7bc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fe537f1-9562-4160-b0e9-48573a410bbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c9257f7-529d-4df7-9aab-cee1b1a73165"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f6a8461-001c-45a1-bf82-dab52ff80cbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1fa260a4-c36a-4229-9af1-7dcd2f244b26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1e9153a-ce26-43aa-b213-529a6a041bf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "205b12e4-1ba4-49f1-a55a-38dbc43434e9"
            }
          }
        ]
      },
      {
        "id": "c01aacd6-41a3-4492-b7a3-b3834dc3df09",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bcbbab84-8016-4b47-9ccd-0905de3333d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73bc6bae-cde2-4fb1-9de8-e15e5ca6d685",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c4f57b-e4fe-4a0a-b904-6210bd12197d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a22caeca-414a-4cf3-b491-de0b248e1545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e10d21-2543-4f71-bb31-4807e1b084a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e74e93b5-732a-46b5-b80e-1d036d9a9651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6634248e-28e1-4827-b2fb-4d6a18f1d9d8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977a82cd-fe61-4f32-9311-ba1267373a61",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6fd87ff2-a09e-4d46-aedf-323e41de8d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed97827-5769-4bfa-93a4-943a3eac2c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e459e0a-33c8-4b60-b3e9-2bad398df029"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d458b43e-28b6-44d2-9f35-897bcdea158c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "059f3d8c-d459-4d93-8ef6-1ecc1d6793d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "440c6e60-4ae0-4ef1-bf52-eb836f19fcec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ee15e4-a7d1-44ad-968d-6a3c0762f119"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4851d71-b61f-4035-8ddc-b08e93570226",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7b6290dc-14a5-40e8-988d-9bfa9ed31190"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2641a283-75ac-41a3-8206-dca19ac58d68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "093b8322-0802-4bd0-9423-746f34692061"
            }
          }
        ]
      },
      {
        "id": "104f6a0d-5079-4801-8e59-fcece8686564",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b89a62a5-71a9-448a-8cb5-18678b319c5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6987a01-e9af-48f2-82d3-b9bba55272e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4a48355-f759-4402-91d5-096934d2b411",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1b03da-c5b8-4b2b-89a4-7bf6d4c8090d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31fe122c-e2a8-4392-9fd9-bddf61e7f31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf9f665-aa79-42da-a5c5-68b17d703875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "207d5000-3183-4440-ac56-ec08a895a8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cf8d22-b117-4fda-950a-4ab7b7ecf4e7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91fa027-0eb6-4b3f-b653-918b2ac57adb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a73b8f0c-f341-4ffc-a4ab-2f4a624c21ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd49adc-0374-4137-b399-6bfc2e7d2262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b84d2783-e89f-441f-81b7-47bd8e696eb4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "526dcb40-48af-432c-a852-e41d7a8ef42b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98d13a21-d865-4f5d-9857-6ac990c90266"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47a8edc1-1e30-4bc3-8fb1-0bde6e023975",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc6a4aa0-d7d7-4315-ba33-3d9330ce1e8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "806a8bee-8f66-41de-8dd4-bfb46958a869",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21239787-59f6-4d15-a703-c25f8f4a7964"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "158461ce-4225-4912-947a-d1f137b5b3ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13bf5807-5005-441f-83d0-1599d7ccabda"
            }
          }
        ]
      },
      {
        "id": "b6950dea-e585-4877-8967-b917687464ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6afe0921-fa3f-4e3d-b946-4fe3e9bdc93c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "866454ec-ef15-4d8d-b31a-e7917031ba46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa46b42f-7b53-4222-9ef9-47cf83697b25",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbaa72b-86be-47b6-a218-ff1c5320a52c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f07ad2b4-b68e-445c-b4c5-5cf6f59ba81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8885b8-592a-46bf-96ae-adfc1f54e70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acb8c787-d002-4bd8-b898-d1d4f8289e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a7a028-79e4-4d3e-a7a1-6b60d656de68",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa9c25f-dcca-466b-b382-107d0679354e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aec38f1a-d708-43a6-9830-6df277ed71bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02d70d1-52f1-4f79-aa9f-cb7edc4d9d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45f602f9-a915-4628-9f6a-0177c81f8276"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff0c1c16-9af4-4c1f-97f1-e7cf48443855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdae9594-4fbe-47f9-852f-6c33879eed02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e8b8ac-8745-4a68-aca5-54a0bce60032",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04058634-c1bb-4967-8642-437dd20b1939"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8217dff-51f4-4f0e-8d92-d00fd40090a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5dcf755b-0b3e-41a6-94df-dd4641c71d05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f83fb70-33b9-437c-af03-c8f2fb551fae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7214d1d-3d5e-4410-be63-6b44df37674a"
            }
          }
        ]
      },
      {
        "id": "2aa796b0-9a50-4e41-94b3-3317770e6042",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad397edb-8382-4310-bbf8-70093b6b7754",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46b4d437-8adf-47bc-9567-478354291acf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "863b4fb1-3e51-43a8-8279-8165cc9421c9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cf61f2e-546d-4250-8f60-2e173d68b6e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b4f3e8f-798f-4600-9fa6-51d2e5dd9910",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 18.900000000000016,
      "responseMin": 6,
      "responseMax": 315,
      "responseSd": 42.53366992070018,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680136723307,
      "completed": 1680136738723
    },
    "executions": [
      {
        "id": "e0259489-cbe4-4bce-9e90-7b158fdf13d1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "acd2da75-7218-4260-8970-b64fa4970def",
          "httpRequestId": "22a0529b-732b-4c7e-9286-f8b23179bca1"
        },
        "item": {
          "id": "e0259489-cbe4-4bce-9e90-7b158fdf13d1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7751b2c7-9ad0-4f31-a9da-72c967314e18",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "866232d2-4fa7-4ad9-be39-dcafa517d930",
        "cursor": {
          "ref": "173c1d97-6aa5-4c65-b725-35db361c9330",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "27c87c72-1371-49a2-b76d-a74d590749a4"
        },
        "item": {
          "id": "866232d2-4fa7-4ad9-be39-dcafa517d930",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "00489d7e-1d0e-463a-b46f-bf8c227fcb8e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ad254f4e-319b-4c94-902c-13f70710e8c3",
        "cursor": {
          "ref": "d00580ed-ce78-43b9-8eb9-f3b1c185da8c",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ce6df9b4-7ffb-4cfa-8752-27233ae434bf"
        },
        "item": {
          "id": "ad254f4e-319b-4c94-902c-13f70710e8c3",
          "name": "did_json"
        },
        "response": {
          "id": "b064c375-04dc-46d9-acc7-039b58296c48",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90271652-6d4a-48bc-b03e-8f8df871aeb7",
        "cursor": {
          "ref": "06bc0263-de8d-4537-9dcc-87779437925a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b34d63cb-0fce-4374-8d8e-17240b67bacf"
        },
        "item": {
          "id": "90271652-6d4a-48bc-b03e-8f8df871aeb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "07575521-d05d-49ec-9e6f-81f8a3d23749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90271652-6d4a-48bc-b03e-8f8df871aeb7",
        "cursor": {
          "ref": "06bc0263-de8d-4537-9dcc-87779437925a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b34d63cb-0fce-4374-8d8e-17240b67bacf"
        },
        "item": {
          "id": "90271652-6d4a-48bc-b03e-8f8df871aeb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "07575521-d05d-49ec-9e6f-81f8a3d23749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5273cc-77b6-4544-89eb-e027e2611e60",
        "cursor": {
          "ref": "68d47d63-d797-4146-9da3-795290808c17",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c5d65931-01b5-4dcc-a191-f4f8a61a3008"
        },
        "item": {
          "id": "fe5273cc-77b6-4544-89eb-e027e2611e60",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b18bd40c-3fed-4869-9af8-951628fe5486",
          "status": "Not Found",
          "code": 404,
          "responseTime": 82,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cc522a-ebff-41bf-a769-b9c9a3ef2a6f",
        "cursor": {
          "ref": "21bb10a7-e684-4c82-8799-f819ec9aedd3",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "32508efc-b3ce-4839-9314-1e683bc1e559"
        },
        "item": {
          "id": "b5cc522a-ebff-41bf-a769-b9c9a3ef2a6f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "90a39d39-e7f2-405a-aed7-a588bec4c969",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad3727-97a4-41b8-96c6-03638246ebd2",
        "cursor": {
          "ref": "c8d294bd-63ec-4519-b902-dc04bf94474c",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a8feff21-5950-4db0-b218-b04f38aece21"
        },
        "item": {
          "id": "f1ad3727-97a4-41b8-96c6-03638246ebd2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "69144aed-6474-4203-b779-6dabe17d4eb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a313184b-33dd-4f67-80cc-32b7f3a20a7e",
        "cursor": {
          "ref": "3d663516-a243-4200-9710-46757e624d28",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3f5135b5-2e76-49aa-b951-65e83dd7f626"
        },
        "item": {
          "id": "a313184b-33dd-4f67-80cc-32b7f3a20a7e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4e7abaf7-4d8a-4ef4-b6d2-92abd60a4f7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a313184b-33dd-4f67-80cc-32b7f3a20a7e",
        "cursor": {
          "ref": "3d663516-a243-4200-9710-46757e624d28",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3f5135b5-2e76-49aa-b951-65e83dd7f626"
        },
        "item": {
          "id": "a313184b-33dd-4f67-80cc-32b7f3a20a7e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4e7abaf7-4d8a-4ef4-b6d2-92abd60a4f7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e579c0-ffad-4637-9acc-00e3357b8c37",
        "cursor": {
          "ref": "c7bed3bd-3ffb-405f-abfe-a2c67e9cd601",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1efa6c2-da32-4123-b090-2e2def3bc7c9"
        },
        "item": {
          "id": "29e579c0-ffad-4637-9acc-00e3357b8c37",
          "name": "identifiers"
        },
        "response": {
          "id": "0a5db4d8-de56-432a-9a6a-4e769d209312",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48c9fc8-1c02-4fdc-beea-e1fe7c840085",
        "cursor": {
          "ref": "1dcfea2d-c673-424c-a4e9-9782a6e2b0db",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a12917d-646f-4050-8afd-24c64f8627cd"
        },
        "item": {
          "id": "b48c9fc8-1c02-4fdc-beea-e1fe7c840085",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d64dd58b-ea5e-4040-87f8-bc56e24087df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48c9fc8-1c02-4fdc-beea-e1fe7c840085",
        "cursor": {
          "ref": "1dcfea2d-c673-424c-a4e9-9782a6e2b0db",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a12917d-646f-4050-8afd-24c64f8627cd"
        },
        "item": {
          "id": "b48c9fc8-1c02-4fdc-beea-e1fe7c840085",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d64dd58b-ea5e-4040-87f8-bc56e24087df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e806c42-0215-4690-a207-5855f43c28b5",
        "cursor": {
          "ref": "1a961008-ebdc-49d4-8b32-064b62380511",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d788b293-202e-4a2b-9967-c723d0c78598"
        },
        "item": {
          "id": "4e806c42-0215-4690-a207-5855f43c28b5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e0135290-b36e-4efe-9ce4-71f8dacb4be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2d6bbe-8fd3-44a8-b2e3-661cc60ea644",
        "cursor": {
          "ref": "e0813ef5-bf08-46f5-b133-ea51af6c81b6",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f6e82f16-d3ce-4688-b2a4-2d5294f6cae2"
        },
        "item": {
          "id": "3a2d6bbe-8fd3-44a8-b2e3-661cc60ea644",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "13a76b49-c73e-421c-97de-070d618fc70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b6c58b-d272-4d06-ac13-3c1ac33c2487",
        "cursor": {
          "ref": "77a8a275-795d-47ec-89a7-196b049b8919",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3bad633-8c00-4448-844e-e4f4e440a943"
        },
        "item": {
          "id": "71b6c58b-d272-4d06-ac13-3c1ac33c2487",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "15624af6-3690-4f2f-a954-5a21dc90cdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63897cfb-6e76-4623-ab0a-1852d0695b3f",
        "cursor": {
          "ref": "62785dbd-f88c-4f53-8392-f82bb17c0b91",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25e5cacd-d691-4191-ae59-98fa6eb92c78"
        },
        "item": {
          "id": "63897cfb-6e76-4623-ab0a-1852d0695b3f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c7838e23-acc0-46af-b76a-438e44d9b633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6055f02b-c0ea-4ca0-b9e3-f068bb3a0649",
        "cursor": {
          "ref": "0de89035-5141-4cce-b823-694ff7e76fff",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "02b827ce-f8d8-4188-974e-e955d1d0860a"
        },
        "item": {
          "id": "6055f02b-c0ea-4ca0-b9e3-f068bb3a0649",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8ad4e0ad-ffb1-428d-8cc0-937401710f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db71a029-da14-4d28-a4da-1f015d6bdf95",
        "cursor": {
          "ref": "528bd676-a921-4a3a-b349-926cb2fb0a8a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6053ca8e-1c36-42bd-904a-cbf77f2fcfc3"
        },
        "item": {
          "id": "db71a029-da14-4d28-a4da-1f015d6bdf95",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b585ec23-ace3-4daa-a206-b79164140e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11456081-52a4-403f-a125-3a0f4eb60275",
        "cursor": {
          "ref": "7fe5b729-3cc3-4227-a7c9-7862abd2cfa1",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1a7ba608-e323-4ec0-9205-0e3b4462b4a0"
        },
        "item": {
          "id": "11456081-52a4-403f-a125-3a0f4eb60275",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0ab51b8d-12f2-4353-97dc-ff7aa6e6f559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b21355-9d99-47b5-bf8d-97c90205152d",
        "cursor": {
          "ref": "aa093e92-c541-4497-9cad-d3824bf397fc",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cbddc6b0-6770-49d0-bb64-5be7215a3014"
        },
        "item": {
          "id": "86b21355-9d99-47b5-bf8d-97c90205152d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "568221e6-ee0c-47c1-a422-26e7f49b6a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5c3b5e-2984-4c7a-a579-d37d801c7f3f",
        "cursor": {
          "ref": "14fb3cd8-8f22-4e52-874a-77ff5f886541",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "032b8f01-bd54-4c03-8f0f-c43f191308cd"
        },
        "item": {
          "id": "be5c3b5e-2984-4c7a-a579-d37d801c7f3f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2acd66f6-5532-423e-93d8-26686ad5c145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2283f0d1-9f5b-421e-b755-070b25a57e8a",
        "cursor": {
          "ref": "d8b701bd-4ecc-423c-bb98-c76af448c290",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "205e7c47-3ddc-486f-b199-cce9c3b74d8b"
        },
        "item": {
          "id": "2283f0d1-9f5b-421e-b755-070b25a57e8a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d9ec944e-07d8-4771-8a45-64994ba4ecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b76882-e7d8-487b-ba70-c0f7757434ad",
        "cursor": {
          "ref": "ae29c252-89f9-42e5-ae81-037db09ad12b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "19457749-6253-42dc-b4f7-bd85f70e25a2"
        },
        "item": {
          "id": "b7b76882-e7d8-487b-ba70-c0f7757434ad",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d628b15-4e21-4680-9ce2-bb02a0c3ea37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7705f28-d4fd-4936-903b-934cdb09f056",
        "cursor": {
          "ref": "eb1022d6-3867-4417-9caa-8b8695ac3aa0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "577775c4-790b-4a14-9778-41114081cf3f"
        },
        "item": {
          "id": "a7705f28-d4fd-4936-903b-934cdb09f056",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3c742720-afdf-41f4-b499-d3d56f0c6c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77547e3-0d9f-4d1f-b8ab-d112949e417b",
        "cursor": {
          "ref": "f1c10c48-5dee-4022-9a26-c02d813803b7",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aa67889f-d2b1-4fec-ba0e-246165a9d0ed"
        },
        "item": {
          "id": "b77547e3-0d9f-4d1f-b8ab-d112949e417b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b2770635-6ba6-4025-9f53-dbd2f3031b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d147939b-cf75-4723-8f5a-96d43d564341",
        "cursor": {
          "ref": "3717be89-f664-4134-b895-758fb1869d7a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "76b71835-8ad2-4fe8-9e9d-46365bfbeba1"
        },
        "item": {
          "id": "d147939b-cf75-4723-8f5a-96d43d564341",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8ae9dc4c-6d38-45c0-9cf5-9331c52233d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779afa15-cb39-48ab-9124-c0a55b4ff2e4",
        "cursor": {
          "ref": "59f5fa3d-6bdc-4633-97e7-c323acd5c317",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "091d0edb-d4a9-4130-8757-85e55df8b75b"
        },
        "item": {
          "id": "779afa15-cb39-48ab-9124-c0a55b4ff2e4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b0727a0f-e766-45a1-bdec-a0e6b5b107f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1fa3b8-fc83-468f-ba5c-522c930a84c8",
        "cursor": {
          "ref": "d77ab8ef-ba8e-4033-a1f9-ce1b5807ba3e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d34b803d-7dc2-4aca-a9cc-06db690608bc"
        },
        "item": {
          "id": "3f1fa3b8-fc83-468f-ba5c-522c930a84c8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fca9711c-2b35-40b2-8764-8bc1816ccd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65be17b7-a9f0-4db6-8f3c-f6c93c8199ae",
        "cursor": {
          "ref": "ac6fd12d-4633-4356-8473-22b691929d24",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b1ea7643-3818-4b70-9606-8d955c7d832d"
        },
        "item": {
          "id": "65be17b7-a9f0-4db6-8f3c-f6c93c8199ae",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f50e4ea-0887-4f30-8ae5-ed2de437ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec88e96-0174-4e61-bf50-c00ea34366bf",
        "cursor": {
          "ref": "13ac70c1-dbed-45df-b0a8-00a03b02cd7c",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "637807bd-6e59-412d-930e-b04b220a2163"
        },
        "item": {
          "id": "4ec88e96-0174-4e61-bf50-c00ea34366bf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "58fb3073-7dd7-4743-b054-d305efcdc7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1dfd27-2aba-447e-bbe6-f47641c0b640",
        "cursor": {
          "ref": "11a98e35-a603-4dad-84c9-1e75c44adf4f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b2397206-89c1-4163-9786-e889b0523395"
        },
        "item": {
          "id": "be1dfd27-2aba-447e-bbe6-f47641c0b640",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b9d45f53-70fd-424b-97d9-e0ecd567451e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e814894a-d9cd-477f-a49e-3a8df8c9b805",
        "cursor": {
          "ref": "92c95ed9-f08b-4474-93db-d9c729da7551",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "74abd8b5-f7ff-4f82-9c5f-ef29208563af"
        },
        "item": {
          "id": "e814894a-d9cd-477f-a49e-3a8df8c9b805",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1bd8a021-767b-41ee-ad9b-782998dedaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc30f37b-5084-4b07-ab18-0f680ef1a61d",
        "cursor": {
          "ref": "b7a08e6e-91f5-4dfe-a718-e5a7fb851ca3",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5aba5756-ecc9-41be-a835-41596c4ce0ed"
        },
        "item": {
          "id": "fc30f37b-5084-4b07-ab18-0f680ef1a61d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "05048e57-8c01-44b8-b08e-835e72e58bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affade68-847f-4a43-90aa-fb5d4726bb38",
        "cursor": {
          "ref": "7b5e2ab3-b68c-41f5-8ea6-408a58de75d8",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9e184186-cc40-454c-a396-072b06e121ea"
        },
        "item": {
          "id": "affade68-847f-4a43-90aa-fb5d4726bb38",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e48a2c5d-71f5-4a05-bec8-55697f438402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1075372-047b-4125-bcd4-2e04f25cfc05",
        "cursor": {
          "ref": "a9028d74-e6d0-4f12-bc0d-9cbefe9d1ec8",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "17b88715-cb78-4ff4-b43f-527dae736634"
        },
        "item": {
          "id": "f1075372-047b-4125-bcd4-2e04f25cfc05",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "75ebc64a-d743-40a5-b05b-3a6729f2f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0869c3-dd6c-40c2-ba9c-d1f4f4fb8a7a",
        "cursor": {
          "ref": "47f2984e-9268-4481-8ecb-432591bd6b67",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3160b53e-edbd-4836-933b-d6aa61b709f1"
        },
        "item": {
          "id": "eb0869c3-dd6c-40c2-ba9c-d1f4f4fb8a7a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19400c05-93e6-47b2-a281-e8899f58b59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0932153-abdd-43c8-a616-1d147897267a",
        "cursor": {
          "ref": "d930a585-8b1c-4caf-ac84-d33c4d77c9c5",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4372092f-1298-4424-9bbe-c866c2e20bde"
        },
        "item": {
          "id": "d0932153-abdd-43c8-a616-1d147897267a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a20c3004-598b-43a1-b21d-a9940135abd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5458a9e1-fdad-40e6-b910-030eedaa556b",
        "cursor": {
          "ref": "0f6c3dab-bdb1-4aeb-90c3-39139a5a8d00",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0bab0325-88b2-4710-8ad4-b3878292f65c"
        },
        "item": {
          "id": "5458a9e1-fdad-40e6-b910-030eedaa556b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6bb13685-80dc-4465-a49d-9055d375c8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9671ac-20bf-4860-9af9-11a0de679262",
        "cursor": {
          "ref": "5bf26e5a-7a5b-4fa7-9adc-9e426d7e2a73",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fe9436cf-da2e-4461-929e-90ce4e5a423b"
        },
        "item": {
          "id": "8b9671ac-20bf-4860-9af9-11a0de679262",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a14f6521-a54c-4919-8cd7-63c2e338eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2cbbf8-e2ee-4e19-b615-172a918d02c8",
        "cursor": {
          "ref": "5c8e6b94-3b95-4282-9b3e-ca4b682093be",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e11d31e7-5376-47fc-a03c-140cf704795b"
        },
        "item": {
          "id": "0c2cbbf8-e2ee-4e19-b615-172a918d02c8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "82f7e1ec-4586-47ea-89c0-6eb89c451143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e694a2a-b479-4bc2-bb34-efac70f113a0",
        "cursor": {
          "ref": "e57cfa30-9fe3-4b51-8532-55865239c50c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fc75076f-05e2-452e-a56d-310a51d2cd53"
        },
        "item": {
          "id": "8e694a2a-b479-4bc2-bb34-efac70f113a0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "52d4ecdd-caba-402e-a3e3-f4599e88f50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd660b9-7092-4323-8386-a567d02e0864",
        "cursor": {
          "ref": "5f7d5ff9-c3cd-4724-981f-1c888c25ffda",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fadabfba-75a2-4f24-b15c-a95e943a4a5a"
        },
        "item": {
          "id": "4fd660b9-7092-4323-8386-a567d02e0864",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1858dd8e-3dbd-4ef8-bdf8-05f7e0b10f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0915bc39-3885-4753-add1-07a0d97881ab",
        "cursor": {
          "ref": "7c6659c4-f637-4c32-a618-bfa59ad0d921",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f3bae958-5f4b-40dd-98d7-186627f1a4d4"
        },
        "item": {
          "id": "0915bc39-3885-4753-add1-07a0d97881ab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "889b73a6-7e4e-4df8-a413-d63ae4c2dca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031be36e-913e-41e9-b9b8-2a1146a0f0e6",
        "cursor": {
          "ref": "f4c5bb9f-ea29-49b6-95ab-7249e753ea0c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0473eb82-948c-4a9d-b764-9dc27aba3edc"
        },
        "item": {
          "id": "031be36e-913e-41e9-b9b8-2a1146a0f0e6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c1f4033-687c-46fd-8de6-6d098f6697a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f58363-0b38-4b0a-b46e-8df1a39c953d",
        "cursor": {
          "ref": "90e622cc-c0b2-4fb9-a4e4-a329ca701fed",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1a9807d1-e44c-4b2a-85b5-a86eb1b9b9df"
        },
        "item": {
          "id": "e6f58363-0b38-4b0a-b46e-8df1a39c953d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f0a5f92-b99c-4f7a-8b2b-200732319cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578b7242-7ae5-4fd6-9186-7323bcce33ea",
        "cursor": {
          "ref": "74155233-815d-4614-87da-9c5fbdc178e7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e38622ac-4fb9-4865-913d-8e0cdbf14998"
        },
        "item": {
          "id": "578b7242-7ae5-4fd6-9186-7323bcce33ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ea32b181-a6ae-4584-9cf0-b462bf74adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad92b11-3c46-42f0-8845-4325345b2180",
        "cursor": {
          "ref": "e2c3d8a6-0b94-4076-8b48-abf48bd06675",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6d8d0f21-43a2-4b57-b2c3-5bce98b7209a"
        },
        "item": {
          "id": "9ad92b11-3c46-42f0-8845-4325345b2180",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e8f9b410-22a5-445d-9191-3a8e84b8598c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f498e82f-391a-4936-a83f-19cd01c38e5c",
        "cursor": {
          "ref": "2014e79e-8cf2-436d-bb23-d51610c04c98",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5fb77318-9397-48e2-b5b6-3d2c3325c487"
        },
        "item": {
          "id": "f498e82f-391a-4936-a83f-19cd01c38e5c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d4359c49-97b4-4e1d-aa93-dd3b7046bdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4bbfc4-08f6-44b7-96c5-208d4452edee",
        "cursor": {
          "ref": "5af838bd-8eb8-403c-a3bc-c58701119bf2",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ac21bf41-1309-4fd4-82dd-f83619e2a1a6"
        },
        "item": {
          "id": "7c4bbfc4-08f6-44b7-96c5-208d4452edee",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ed58d971-50ca-4e58-a047-83317cf0e595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b8d748-c4d2-4f5a-b2be-2b7a060f0536",
        "cursor": {
          "ref": "9f749b8d-5fbf-4b11-a43a-9451995002fc",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e8ed468c-9033-4838-9bf5-46b17410fe26"
        },
        "item": {
          "id": "27b8d748-c4d2-4f5a-b2be-2b7a060f0536",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cc5ddf2a-ac8d-4db8-be25-e0e542091c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc95f8c-6d6a-40f4-9653-d1079ee2afd3",
        "cursor": {
          "ref": "9428e886-e7c6-42bc-bbc4-26e0185680ca",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "95d0af1f-30ff-48a7-83fe-c84259dde24d"
        },
        "item": {
          "id": "8dc95f8c-6d6a-40f4-9653-d1079ee2afd3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a2596a0f-06cc-4959-a286-531270544394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9083f6d-2f3d-4c96-96fe-92fd229ddf1f",
        "cursor": {
          "ref": "eff4db60-1661-480c-8584-bfeb4cd71bc6",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7d2cf4bb-0f9a-42c5-88db-ad9d5a7ff3bd"
        },
        "item": {
          "id": "a9083f6d-2f3d-4c96-96fe-92fd229ddf1f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8f39a4a-f56e-4dc0-bdbf-c0085f829235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dbf6ec-c906-4e79-852b-14d555086ad2",
        "cursor": {
          "ref": "814e56d5-c912-4152-8357-716b8e2bd847",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5d420ff-2628-4137-acd5-9acda99aca9b"
        },
        "item": {
          "id": "b8dbf6ec-c906-4e79-852b-14d555086ad2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3aca7c10-32be-405c-af98-a58322f39875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66677e9-6a40-4268-b491-8d550f0cabaf",
        "cursor": {
          "ref": "623c08d3-94fb-4eb5-b86b-d5c282a88538",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "feef59b5-83e1-4bf8-9535-744fe9d71684"
        },
        "item": {
          "id": "e66677e9-6a40-4268-b491-8d550f0cabaf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "345e2ae9-5305-41f2-ba39-57137b17b0c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511d098-0125-4a60-91d7-3042ae5e99b8",
        "cursor": {
          "ref": "36f20431-dc3b-421f-91ab-7cc27861ca98",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "676f77e4-aa69-48df-b4eb-de4e23f35b08"
        },
        "item": {
          "id": "c511d098-0125-4a60-91d7-3042ae5e99b8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "afe0af3e-785f-4b6c-a289-481041489faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af99cdc4-25f0-4846-a78b-09148f0761fe",
        "cursor": {
          "ref": "9215a7ea-c8cd-46b6-b33f-0f84c6551744",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "49341dd4-b588-4a6e-992a-f9a9ac0c80b9"
        },
        "item": {
          "id": "af99cdc4-25f0-4846-a78b-09148f0761fe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3d27021b-9177-4973-86ac-9af486628f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae1f37-ed3c-4d8e-8830-3e7ee045a164",
        "cursor": {
          "ref": "4d6ad0ef-ce54-4743-808a-b7d283ecadb4",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f250f281-25eb-4385-afe9-ce5225c7dfd1"
        },
        "item": {
          "id": "46ae1f37-ed3c-4d8e-8830-3e7ee045a164",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "280407d3-91aa-4f0a-a146-a50f8acd97d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b19d03-29dd-44be-883b-423f0c60a974",
        "cursor": {
          "ref": "3280ba41-4c51-4f23-abd4-992186f78580",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4fcd9e6c-f02b-49f5-901b-e5afe814f5d9"
        },
        "item": {
          "id": "05b19d03-29dd-44be-883b-423f0c60a974",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "be408e60-750f-42cf-bf5f-e0c584db4318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40de3ac-7342-4021-9859-cd4d4c26f2d0",
        "cursor": {
          "ref": "a3ca7dea-1d2b-4224-a02f-8628d0663408",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "918c2aa2-e7e4-4fec-9ea6-0e6de6eb4108"
        },
        "item": {
          "id": "e40de3ac-7342-4021-9859-cd4d4c26f2d0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cf5d0061-3a86-477f-8657-6f9d61e46551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f6fafc-1201-40a3-b08e-f813dcecc28b",
        "cursor": {
          "ref": "512c7917-e897-4560-ba32-da1493afabd6",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1eea8824-3796-45ea-ada9-ca41f4e28ef6"
        },
        "item": {
          "id": "65f6fafc-1201-40a3-b08e-f813dcecc28b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a86e3483-63ea-4556-a660-7fa5ea19afe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab65975-5895-4814-9f82-115ea48ebbe3",
        "cursor": {
          "ref": "d21f3ed0-5e85-4b28-98c3-36599b87deed",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f1a096ed-a824-4240-925d-4a984766a508"
        },
        "item": {
          "id": "0ab65975-5895-4814-9f82-115ea48ebbe3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0aa99167-d62e-4e01-ada3-d71561b5a3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53983c5d-706e-4fe3-9713-45169bf928fe",
        "cursor": {
          "ref": "7d42e82f-bf06-4f6e-a3c6-c7b71411eb1c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3d003319-ba21-4a22-8335-857258c3723a"
        },
        "item": {
          "id": "53983c5d-706e-4fe3-9713-45169bf928fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f6ed8fd-bf20-458b-b7cb-a2b5b017138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83184d8b-01fb-4096-a210-6876347af64e",
        "cursor": {
          "ref": "f8b01032-ffe6-4740-ac6c-35ae0882d897",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "752a2bc8-69d8-4b4c-a57f-c8afe72116b9"
        },
        "item": {
          "id": "83184d8b-01fb-4096-a210-6876347af64e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "355c3877-ae8f-4327-91f3-c971fbd50e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89cf70c-6113-42de-a67d-ef6e22f35e01",
        "cursor": {
          "ref": "2a8a0613-6dab-4856-a3ff-62614a37b6ba",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eb27ca6f-0dee-4606-b531-fb5407e8855b"
        },
        "item": {
          "id": "b89cf70c-6113-42de-a67d-ef6e22f35e01",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0056367d-22f8-47df-b4df-ada57ced8738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9797e5af-2cc9-4743-a4f3-a279754df7b9",
        "cursor": {
          "ref": "ba26d497-42c0-4805-808e-d83213ff429f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c548705b-79d5-4b50-9c35-9e470f04b5c1"
        },
        "item": {
          "id": "9797e5af-2cc9-4743-a4f3-a279754df7b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2385f743-8751-4f5a-983d-3816742a8c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a238d5-26c6-432a-bbf0-4aefd9c9416b",
        "cursor": {
          "ref": "c066f304-75e1-48ff-9f74-6fb590eae297",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7a59b3d9-bb23-44f5-99bb-936efbb9b37a"
        },
        "item": {
          "id": "46a238d5-26c6-432a-bbf0-4aefd9c9416b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5c62de36-6853-4197-8bb6-0ab93e76f2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545803e4-36d7-47cd-9807-8777bc7caf71",
        "cursor": {
          "ref": "8772bb4d-6523-49a6-a1d7-c95c8049a757",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "50326116-cb29-458f-8208-e2ba89c5d7da"
        },
        "item": {
          "id": "545803e4-36d7-47cd-9807-8777bc7caf71",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "60dc0762-0611-4058-9b85-b2322e7e16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a994e740-2758-4403-9c91-90a948494663",
        "cursor": {
          "ref": "970f4a15-def9-419c-bda7-7568a3537b72",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bca25c56-4b92-40e6-85d0-4e9b5f8accaf"
        },
        "item": {
          "id": "a994e740-2758-4403-9c91-90a948494663",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "02b676f5-44fd-47d5-ab93-ce6a3e727451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f345b2-6002-4a3f-aeb1-c307d817ba07",
        "cursor": {
          "ref": "258a5bc2-4651-4aaa-bc2f-993e195b3520",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35adaa2b-a8bd-48f8-a538-82fd3e6bdc56"
        },
        "item": {
          "id": "80f345b2-6002-4a3f-aeb1-c307d817ba07",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1845f010-a950-4421-b48f-271df930e123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e64812d-9f05-462d-a1de-43f1a853cfa3",
        "cursor": {
          "ref": "2df1c923-e773-4931-ae36-f16bd137abab",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bde4d5e3-a49b-497b-bbff-dbd5a80b9544"
        },
        "item": {
          "id": "1e64812d-9f05-462d-a1de-43f1a853cfa3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eeac629b-c053-4b8d-8252-e959c28fe037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7c10d5-77fb-4cd0-bc69-713f24a36eff",
        "cursor": {
          "ref": "34601143-7ea6-4646-aa42-8e16a6865e78",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dabd1491-bb9a-4e70-ac2c-64e5c9f65adc"
        },
        "item": {
          "id": "6b7c10d5-77fb-4cd0-bc69-713f24a36eff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "474ea305-b1c4-4692-ade8-37194cb127d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9356a959-f9ee-429c-94e2-9ea1cdbc715b",
        "cursor": {
          "ref": "ac18ee62-b5eb-4b9a-ab16-f12f7d4ded44",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eaa07834-e530-4fb3-ad0c-1d678ca3ba60"
        },
        "item": {
          "id": "9356a959-f9ee-429c-94e2-9ea1cdbc715b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9377bf4-ccf8-47b2-8d9b-aae53b4ea248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3922a615-82d1-461e-9817-9e03cd906104",
        "cursor": {
          "ref": "332c6c71-3d82-47e2-92db-7109c045fa6b",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f0205d5-a712-4a97-837e-bac29f3f80d2"
        },
        "item": {
          "id": "3922a615-82d1-461e-9817-9e03cd906104",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "814c6ecc-55f0-43bc-bd2b-97b00e561f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd181768-ae8a-485e-a8cb-1c19bb59cffe",
        "cursor": {
          "ref": "84bead7d-9f31-4741-9e4c-ca317ff8bd45",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e43c4d1c-5dac-4d06-ae94-2dadb1fa6358"
        },
        "item": {
          "id": "cd181768-ae8a-485e-a8cb-1c19bb59cffe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f199534b-338f-4ff9-ad6a-93fe0ac55d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac00252-f4b3-495c-b7a7-c7105df243da",
        "cursor": {
          "ref": "f525e239-e0cf-4f55-b99f-cd57069b8ced",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a07b48df-6307-44fa-8ad6-f33fff8861a6"
        },
        "item": {
          "id": "7ac00252-f4b3-495c-b7a7-c7105df243da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "96ed87a8-6b6d-45bd-9e3b-4cd9cd373a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bb4062-a0d0-4661-8114-ecbfd3ddccd8",
        "cursor": {
          "ref": "5625ad55-91ef-4fae-8102-077a7a06e8ab",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fa0759a7-fdfb-4fb5-a5d9-84f0ce2653f2"
        },
        "item": {
          "id": "d6bb4062-a0d0-4661-8114-ecbfd3ddccd8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f417364d-a8e6-4184-bfb1-017cef07f0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c15f4b-6096-4aa0-869d-b7ae8fce4111",
        "cursor": {
          "ref": "a2314c3b-1e35-4239-8bbb-3e243c479426",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0b807617-5bc7-4acd-9222-65f070e39562"
        },
        "item": {
          "id": "10c15f4b-6096-4aa0-869d-b7ae8fce4111",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fc6278e3-1687-4aab-808c-ee5692e9b53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e3e39f-222f-4334-b99e-e9f940c8a6f9",
        "cursor": {
          "ref": "f14f9b9f-6611-412c-aa90-528c755c2068",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f2400a9b-aa38-4082-9d40-4e0507313bd2"
        },
        "item": {
          "id": "a0e3e39f-222f-4334-b99e-e9f940c8a6f9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e986cf38-9c1f-418c-ae08-da99963e9ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7699efb6-0244-4278-a51d-15ffad16d9f8",
        "cursor": {
          "ref": "347e260f-3315-4068-8b5c-934b7c6ca409",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cfab3dec-7f17-4167-847d-4d4137031528"
        },
        "item": {
          "id": "7699efb6-0244-4278-a51d-15ffad16d9f8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b2e76d93-ff1e-4d80-bb69-a191e00d6838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd168470-1628-4a66-a75e-0f0a153e4fb3",
        "cursor": {
          "ref": "74cd2af4-2cf1-4338-9361-cc661dbb3912",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a92a1059-c501-48c0-919d-fa3d7f576542"
        },
        "item": {
          "id": "cd168470-1628-4a66-a75e-0f0a153e4fb3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f041bb7-b065-465d-b111-2a4e33a5dea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e0fffe-4772-4a54-a504-89a3588ae7b9",
        "cursor": {
          "ref": "b9a0afb7-113d-4313-a38b-e3860cfbcfa8",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cea78284-6047-40b1-8766-5176a7b251db"
        },
        "item": {
          "id": "c9e0fffe-4772-4a54-a504-89a3588ae7b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e1eee0be-6b33-482e-a488-56d8e36fcae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71166437-c98f-49b0-bd02-3657b685f241",
        "cursor": {
          "ref": "b99cf548-95bf-41ca-ae52-1572b5204615",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "78ca34db-4d0b-4aa2-9797-d8c64420c2e6"
        },
        "item": {
          "id": "71166437-c98f-49b0-bd02-3657b685f241",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fe7bd0c5-7fca-481c-a3b6-a4c645ac9dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43318825-157b-446a-aa65-d0570904b85e",
        "cursor": {
          "ref": "57e4941b-7508-4784-b94b-395977faf610",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e387d947-bec5-4dbc-9944-8c33a82e5724"
        },
        "item": {
          "id": "43318825-157b-446a-aa65-d0570904b85e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a358c35c-d852-42e3-966f-f4f58b0f7a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f82d68-698e-405f-ba50-fdf2de18ae18",
        "cursor": {
          "ref": "18395f88-a352-4644-bb2a-96ee5bcb918f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0f53e12a-9fb9-4a9d-a46c-851b68a2f0d0"
        },
        "item": {
          "id": "d0f82d68-698e-405f-ba50-fdf2de18ae18",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f8bf7765-3eb8-48f7-b901-d4b9458ebdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecbbcef-dbf9-4e2d-ab10-d61a51865dfa",
        "cursor": {
          "ref": "e7496b4d-8c36-4616-ac8f-477a35f767a7",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fc4c99f9-2c17-417c-9f18-c98d50d0ebd7"
        },
        "item": {
          "id": "4ecbbcef-dbf9-4e2d-ab10-d61a51865dfa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5df9dad7-bc01-4e29-b27f-43b967bfab40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ac88be-0089-41f8-8b82-e83e9cb306e3",
        "cursor": {
          "ref": "933912dd-817e-4287-8708-c0fbd9ab87a5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2632369a-075b-42a6-aa45-c4eddb84796a"
        },
        "item": {
          "id": "26ac88be-0089-41f8-8b82-e83e9cb306e3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f27343e3-ecf9-427b-b04d-fd7753c460d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d508be-37be-43ac-8e46-d61db3495a26",
        "cursor": {
          "ref": "047b79bf-c15f-4a36-8856-c7aa1de559ab",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "42080ea2-bdcc-43f4-9b61-91ca1b404287"
        },
        "item": {
          "id": "c8d508be-37be-43ac-8e46-d61db3495a26",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8e093777-b159-4a9c-b81f-abcdad10928c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c96de5-9d5e-4e0c-b2ee-30ac89e100e7",
        "cursor": {
          "ref": "42e698ca-843d-443a-af2c-bfef745e1260",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f3da7f34-1fd2-489e-9245-064cd0974f1e"
        },
        "item": {
          "id": "17c96de5-9d5e-4e0c-b2ee-30ac89e100e7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "78e93c0b-e7a1-4111-81f6-b4536bc70960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e0f5cb-95ec-4f0a-abb8-fd5466b6d374",
        "cursor": {
          "ref": "0fd80e19-1f22-441c-a9e3-50398313b362",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c2743d7c-05bc-4d59-abb0-2a80a6f48d82"
        },
        "item": {
          "id": "34e0f5cb-95ec-4f0a-abb8-fd5466b6d374",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9bac1747-43ed-4f68-971b-a7c191f019cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e38830-7c29-4ab5-a320-8026856823ef",
        "cursor": {
          "ref": "62ddec81-004c-4577-975f-0d3fecc98e77",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "52ed0492-5438-4ace-ae75-15fd67a2288d"
        },
        "item": {
          "id": "40e38830-7c29-4ab5-a320-8026856823ef",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c6195b5e-62a3-4771-8bd5-db0a039bb597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f4733c-5810-4a4c-9f97-ec942a52c589",
        "cursor": {
          "ref": "133e5fe0-1597-43d2-9a13-ce986abbacea",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a2282dfc-0f2e-497d-90b7-ef1a89cfe4af"
        },
        "item": {
          "id": "69f4733c-5810-4a4c-9f97-ec942a52c589",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "acad078f-fa7d-4b40-a4bc-f4eb0f678546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9301b359-2a64-4c59-99a2-c25487e77e7c",
        "cursor": {
          "ref": "d48fbd51-a001-4b9e-85ac-056a732c9b02",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fe34d820-bb47-4b74-b3fb-48ca9168372e"
        },
        "item": {
          "id": "9301b359-2a64-4c59-99a2-c25487e77e7c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1065571a-7bde-4e4c-9076-8c7a6497197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe0bd1e-aa9a-4182-9a31-4989e4d4fe0e",
        "cursor": {
          "ref": "1dd7b529-2bf8-40d6-a01e-cbec59281f60",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0c373f6c-d970-454f-855a-7ee2097b4a25"
        },
        "item": {
          "id": "bbe0bd1e-aa9a-4182-9a31-4989e4d4fe0e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "71a2b35c-7761-4672-a874-7280ce6d8ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7320c7f7-65a8-4cf1-be8b-db41ef378e17",
        "cursor": {
          "ref": "459a6889-889d-4f9f-a48e-fd0d3e403729",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b04ca769-b0c3-4002-9a82-0234319bc0ad"
        },
        "item": {
          "id": "7320c7f7-65a8-4cf1-be8b-db41ef378e17",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "703a7ca7-230e-443c-9c33-bcb5be1adcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a12d4b-0287-4fd6-89d0-fe4d879f1258",
        "cursor": {
          "ref": "7f0dad35-1ae7-46ae-b29a-f3e204ec60a7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "671bd30e-0c65-41c9-b67c-1e17f5ed4032"
        },
        "item": {
          "id": "28a12d4b-0287-4fd6-89d0-fe4d879f1258",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3f6db279-2b9c-4dce-ba1a-3edbc738e006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cba5e5-aa6d-4157-942b-48c083b8469c",
        "cursor": {
          "ref": "df0c10d6-24e2-421d-8f05-80aecf09aef6",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "492cdc8f-9cbe-4ce1-9daf-50d5877d9185"
        },
        "item": {
          "id": "91cba5e5-aa6d-4157-942b-48c083b8469c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5a985b5b-7833-4eb9-85ed-bb5fc060fbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4652b93-b40e-4d65-8336-c20cc2b8d21c",
        "cursor": {
          "ref": "b4579379-8add-412f-a1a2-6001555dda54",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3b9e4d6c-8bca-4eee-9588-a20327ba941c"
        },
        "item": {
          "id": "f4652b93-b40e-4d65-8336-c20cc2b8d21c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7f94cbc7-675e-4ddb-85ca-59f27cb2aaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f10c5e9-93c9-4338-85fb-ce2c10ac8b6c",
        "cursor": {
          "ref": "adef7d20-49c7-4278-8e53-d1b0b445b890",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b672d889-da63-4584-a350-2e56b1743139"
        },
        "item": {
          "id": "3f10c5e9-93c9-4338-85fb-ce2c10ac8b6c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "32c1b78a-dce9-4cbf-8665-e6ced69afb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70633292-c8fb-47c2-8f0c-f589c16e06d1",
        "cursor": {
          "ref": "99aa76b4-9c27-4306-b0dc-4200558ff050",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "76f592b5-2a5e-4662-b069-635a6c97e709"
        },
        "item": {
          "id": "70633292-c8fb-47c2-8f0c-f589c16e06d1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cc9f068d-13f8-4119-a446-ba3593230731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73701576-5499-49dd-8882-fdd87af4f8b5",
        "cursor": {
          "ref": "ddf6a46c-4e85-4c67-ab37-b11b314926c0",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "839b2b9f-b0c8-4520-8e61-9ef249fe731b"
        },
        "item": {
          "id": "73701576-5499-49dd-8882-fdd87af4f8b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d8dc5a3f-bfec-4d58-9c94-d8c607b1e123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610a8172-eead-4005-81c5-c03fe5c6a607",
        "cursor": {
          "ref": "512be3ab-83d7-4cbb-8be0-65a92347aa35",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aad08dd8-46bd-4972-95a4-8929609d51c8"
        },
        "item": {
          "id": "610a8172-eead-4005-81c5-c03fe5c6a607",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "524ca0e9-39a7-4bc2-a472-aa711f19bcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b1044e-8b02-4d49-abeb-f61d034069b1",
        "cursor": {
          "ref": "d79347ed-adf2-4551-a1d0-58e75c0230ae",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fb946ff1-b46f-478c-bd18-d58f6eaf133c"
        },
        "item": {
          "id": "e4b1044e-8b02-4d49-abeb-f61d034069b1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d53c332a-8600-41c2-a8d9-2de776791cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6289151f-397d-4b29-880c-cffb8d6dd87d",
        "cursor": {
          "ref": "dd53d289-48a0-4557-a8a1-d16e3abad01a",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44527446-5b3d-4ae1-aab9-45e5d96736a0"
        },
        "item": {
          "id": "6289151f-397d-4b29-880c-cffb8d6dd87d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1988ee38-dab3-4300-8b8c-2fa412a3516f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184fa3e0-d5ac-449d-9ad4-0c5052834228",
        "cursor": {
          "ref": "b0e6848f-be51-451f-a520-2102b58ae1a0",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "780b0344-281f-4a8c-882d-715c16b4f0ed"
        },
        "item": {
          "id": "184fa3e0-d5ac-449d-9ad4-0c5052834228",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "864abd63-98d1-42a4-a929-c8a7b0421295",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769a9ed9-5a88-4d02-babe-25395e24baf6",
        "cursor": {
          "ref": "f71abad2-903f-46e1-a89e-23514003b80f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8a2de1bb-40b4-4b19-bc74-a43599e838ec"
        },
        "item": {
          "id": "769a9ed9-5a88-4d02-babe-25395e24baf6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4e38b537-a4ee-49e7-88c8-f5671a6ff2fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 45,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2a17df-58ce-427b-953e-a58cf2bb737a",
        "cursor": {
          "ref": "f1c5fe11-43af-4e67-853f-19a61d78e54f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7cdb32ec-8a90-4c65-ae27-39242f02fa71"
        },
        "item": {
          "id": "2e2a17df-58ce-427b-953e-a58cf2bb737a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d480562a-9f66-46b6-8a54-be8c9543f955",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6160b69-6ae0-4d36-abff-265a6dd52c97",
        "cursor": {
          "ref": "1f8ae2d9-5032-4b11-9948-95f8facb5006",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3d2fdf9d-ad2c-43a1-a386-fd0225041c61"
        },
        "item": {
          "id": "a6160b69-6ae0-4d36-abff-265a6dd52c97",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3cf59b5f-2bac-4a67-bfeb-6e576e508906",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d39da5-8cb7-47e5-a445-d72b5e819191",
        "cursor": {
          "ref": "e737b798-c378-4d37-a3d3-be0f173867b4",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09ef7965-16a5-4db5-96be-4504227cc6e8"
        },
        "item": {
          "id": "b2d39da5-8cb7-47e5-a445-d72b5e819191",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "94111d48-f9c5-4ba7-89ca-1611f9353456",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdebab7-b57c-4586-9089-60910be0ed5d",
        "cursor": {
          "ref": "572991bb-ddad-4b07-882a-e6c1e5edfb94",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "751f6717-2cc5-495c-9524-ee1f99689d62"
        },
        "item": {
          "id": "ccdebab7-b57c-4586-9089-60910be0ed5d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1c79ea9b-9399-4cd3-ac58-c3e2e59d076a",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e836d31a-2413-4145-ae12-63cf3d5a434f",
        "cursor": {
          "ref": "fdb3401c-5694-490d-a616-e250a884dc85",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d73fc2d4-f788-457b-9021-01316aa63f41"
        },
        "item": {
          "id": "e836d31a-2413-4145-ae12-63cf3d5a434f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1f48ca1d-1b06-44a3-ace2-9e76e1e0f031",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d60a084-6989-4ee1-9304-bbc2a8b1b3fd",
        "cursor": {
          "ref": "b0c94661-4b71-4d9e-8d91-0ad0402d70e5",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e98db8d0-8a66-49cd-bcf4-9bf8983fb796"
        },
        "item": {
          "id": "0d60a084-6989-4ee1-9304-bbc2a8b1b3fd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "781b766e-80a2-4d9d-82ab-f5e4ee7ed413",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8a0025-8720-4838-9790-8b9b6125f266",
        "cursor": {
          "ref": "3e0b84d8-7b96-4032-a825-c97a4e53eb8a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5bf2b768-de76-47d4-bc71-866ac2dc667a"
        },
        "item": {
          "id": "7a8a0025-8720-4838-9790-8b9b6125f266",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "056837cd-1c98-4a07-b7ec-c03b163206d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8a0025-8720-4838-9790-8b9b6125f266",
        "cursor": {
          "ref": "3e0b84d8-7b96-4032-a825-c97a4e53eb8a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5bf2b768-de76-47d4-bc71-866ac2dc667a"
        },
        "item": {
          "id": "7a8a0025-8720-4838-9790-8b9b6125f266",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "056837cd-1c98-4a07-b7ec-c03b163206d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de003d39-5b2a-4c02-8eeb-d15a29d7be2e",
        "cursor": {
          "ref": "e4bc2af9-da45-4f7c-bb6a-8163fc4889e0",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7bb0559a-7737-41d4-8d86-ebae4424fe84"
        },
        "item": {
          "id": "de003d39-5b2a-4c02-8eeb-d15a29d7be2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "117243f3-8bef-482b-9f79-f1e9828b65fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e130f84-8d2f-4dd5-bebd-9035dab644ef",
        "cursor": {
          "ref": "6d97fe44-1dc3-4187-a50e-d5bb6ea1be94",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4b6a16b7-2bbc-4865-8c82-286e02051ad4"
        },
        "item": {
          "id": "4e130f84-8d2f-4dd5-bebd-9035dab644ef",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ae765203-8d60-4528-9706-6f08f7f704a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c999db-57dd-4852-85e4-d1830370973c",
        "cursor": {
          "ref": "061e2325-a2bf-41e2-9e3c-ef1b10e19695",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4685740b-a2a3-478a-85d2-78762623826a"
        },
        "item": {
          "id": "37c999db-57dd-4852-85e4-d1830370973c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "96b7fa7e-b921-49ce-abed-982fb8a9fcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc7b8e8-73b2-4ca6-aee1-342d0e2d241e",
        "cursor": {
          "ref": "779b4b58-c0ff-4ea7-8d96-892f60663023",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "90ae4b98-ec2f-4f50-b815-da2bc4ce3446"
        },
        "item": {
          "id": "3dc7b8e8-73b2-4ca6-aee1-342d0e2d241e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a120bd44-9314-4281-a486-c1e2d52bba4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cab5dbb-455d-4637-a72c-fd8fc30af8c9",
        "cursor": {
          "ref": "19d58476-4925-422d-9e1c-13b56917b36d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e9d3934b-1b0c-4c91-9adf-3d17fd535327"
        },
        "item": {
          "id": "3cab5dbb-455d-4637-a72c-fd8fc30af8c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "07fbcaa8-a8a9-49cd-9ebd-0cb515fb1622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8d64cc-504c-447a-9821-745c02ab62bf",
        "cursor": {
          "ref": "e2365370-b549-4148-afbb-d17d9a462633",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "123f7787-9881-4b2b-845c-96246b6b02e2"
        },
        "item": {
          "id": "fe8d64cc-504c-447a-9821-745c02ab62bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9a95bfb0-9e26-452d-ba1a-9909651a7964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63be1b2-ccd0-4eec-9ca5-32f3411893fe",
        "cursor": {
          "ref": "482d3eef-76cc-4538-a9ac-5b128652f13f",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e48bae45-9db9-4c0f-b540-33130167d831"
        },
        "item": {
          "id": "f63be1b2-ccd0-4eec-9ca5-32f3411893fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a888d84-9b1f-4ff0-be39-83d0b5ec1983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7a032b-3057-47be-b58d-018b8b2fe139",
        "cursor": {
          "ref": "46176073-8a96-474d-83d7-87dab64b4447",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a547ba61-60a2-4753-891b-8a91ec820b23"
        },
        "item": {
          "id": "0d7a032b-3057-47be-b58d-018b8b2fe139",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "64d47780-3229-414d-8049-091d223283b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f0889c-f5be-431c-8cf9-2b1aab0ac72a",
        "cursor": {
          "ref": "105faa41-6f3b-49e6-aac6-8db38bc6a4a9",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "736a77e5-0a86-4136-9c03-ba310ab0fca4"
        },
        "item": {
          "id": "b5f0889c-f5be-431c-8cf9-2b1aab0ac72a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76b9da57-c7c2-46e8-8a47-2c413328e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50911c6e-605f-434e-82cc-7cf2b248b038",
        "cursor": {
          "ref": "4d47093c-d6f0-4cca-97a5-ff5a957d93b9",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d1e47d7c-2905-4228-bee0-f7327946c28f"
        },
        "item": {
          "id": "50911c6e-605f-434e-82cc-7cf2b248b038",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5dfd6e13-c9d0-4152-9555-d08c81574353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f4c872-5b3f-4157-9ce8-0649b0d6355c",
        "cursor": {
          "ref": "22d6e667-9552-42e5-b38b-01939c68d106",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6d4caaea-04ff-4fb7-b7b6-611f45374155"
        },
        "item": {
          "id": "98f4c872-5b3f-4157-9ce8-0649b0d6355c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc6fab85-6006-4d3e-8730-9e53d2b6f19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62e281-221d-4a9c-9e1f-4f28331d1989",
        "cursor": {
          "ref": "a713eca3-f849-4388-a67c-5b3b3e672a55",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c4c70848-089e-47b3-a13b-34cc5f6e59d4"
        },
        "item": {
          "id": "ad62e281-221d-4a9c-9e1f-4f28331d1989",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd802131-1a0d-4df8-9481-69649a1f0d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d907ec8-1e2c-44f8-b04b-b0494023707e",
        "cursor": {
          "ref": "df255029-a7f1-4775-96e8-762842def6e3",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "828afde4-63f0-4c7a-894c-ab1d4ccc749e"
        },
        "item": {
          "id": "6d907ec8-1e2c-44f8-b04b-b0494023707e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8492cb7e-9953-4b9c-a951-3c96a59a30fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6628cf-0d36-4b38-ac48-260b8f115f64",
        "cursor": {
          "ref": "fe700dee-9b99-415d-bac9-ea88443a7eb4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d0988434-f52a-476f-8d7a-24b749412e09"
        },
        "item": {
          "id": "1a6628cf-0d36-4b38-ac48-260b8f115f64",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6413f555-d3a6-457b-972b-3fc1e09bc988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e1c1b-4bec-4b38-8a39-97f3cd5bf98b",
        "cursor": {
          "ref": "c5f7594f-1d99-4b27-a452-d6986baea84b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a2c895bf-fb25-4628-82f6-ba4b41713c84"
        },
        "item": {
          "id": "251e1c1b-4bec-4b38-8a39-97f3cd5bf98b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a4a8ed2-fb55-4e31-b653-b66a21857f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d32336-c15f-4ca2-b90b-c3f724185778",
        "cursor": {
          "ref": "a5a4b672-efd1-4eb2-9358-73a00e57b415",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8e0bd9ec-c8db-4929-83f2-48fc05451b55"
        },
        "item": {
          "id": "59d32336-c15f-4ca2-b90b-c3f724185778",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "760ed18d-b92e-4aa4-93f5-6486948c25d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1adced-e65b-4f96-92dd-b2af812ece7b",
        "cursor": {
          "ref": "ca644194-f7db-4515-aa35-9addb8718d0a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c877d0f4-b940-4317-9256-7dc709d9b019"
        },
        "item": {
          "id": "5b1adced-e65b-4f96-92dd-b2af812ece7b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f8b2f265-724e-45a5-b11a-849bf4b37f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2128641d-4730-4bc3-b1d3-099dbc37e366",
        "cursor": {
          "ref": "5d4515f1-1549-412f-8572-612aa90d7da4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "98bd17dc-3613-44ee-a1ff-395fc671f475"
        },
        "item": {
          "id": "2128641d-4730-4bc3-b1d3-099dbc37e366",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2ba512ad-0fb3-40d5-b386-a89605d3d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd793829-2871-46fb-b220-b3b290c557a9",
        "cursor": {
          "ref": "8c5ee9a8-cd07-4407-b18e-b3a3f7127400",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fefc9853-4eee-45c6-bdab-7e0032b69995"
        },
        "item": {
          "id": "bd793829-2871-46fb-b220-b3b290c557a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bf0426d1-a3a5-48d3-8814-d16e6700bd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6ec977-d4b0-42f3-82af-8975984c8ccd",
        "cursor": {
          "ref": "2064df76-9865-4ec7-b49f-0f9e39c83733",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b193f877-f56e-4c23-948f-0c1a07ec5f04"
        },
        "item": {
          "id": "bd6ec977-d4b0-42f3-82af-8975984c8ccd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a435cd47-af71-4703-b64c-10829fa5a448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc33961-70dd-4bfa-a632-a086e32944de",
        "cursor": {
          "ref": "8baa8ef9-f1d4-4093-a5ac-9e01e936debb",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dd4c78bd-a791-4ba2-8962-ddabc20c60f0"
        },
        "item": {
          "id": "0bc33961-70dd-4bfa-a632-a086e32944de",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "55be1ae1-5173-4db5-8f3c-0b8645408a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542dfd0f-67c5-49c7-8dcd-67099a0202b0",
        "cursor": {
          "ref": "e5c471c8-a021-4e9a-bcc3-1d7f6af18cc8",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "21dfa8da-b4e7-415e-adf4-dd40418be1ff"
        },
        "item": {
          "id": "542dfd0f-67c5-49c7-8dcd-67099a0202b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dbd875be-cdb0-4004-94c1-ef514d4bfc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636f3582-36d7-4aa3-8de0-25251a209743",
        "cursor": {
          "ref": "287f9103-1ecc-4832-957c-ea6056476644",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "460c9128-92b2-40dd-8ca9-5cf04a28aa6a"
        },
        "item": {
          "id": "636f3582-36d7-4aa3-8de0-25251a209743",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "08ac682b-68cf-438f-b90b-8668c87ddb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89554ed1-5c2f-44e3-8337-14c2e4815e1e",
        "cursor": {
          "ref": "6c2923e5-5ff4-46f9-843b-6087a678b6a9",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ff68ddef-dc17-42b3-a0ff-de5eec56d53d"
        },
        "item": {
          "id": "89554ed1-5c2f-44e3-8337-14c2e4815e1e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eac6cda1-7216-420a-bd02-3583de2c762d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e7cb15-1e71-481b-be58-2f1f31668e54",
        "cursor": {
          "ref": "9780cfba-524b-4054-b34c-6ece07381fab",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "582d9d67-169d-4e53-b7d3-bb9549e9c3df"
        },
        "item": {
          "id": "85e7cb15-1e71-481b-be58-2f1f31668e54",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5326b1a5-1872-4fa3-824c-8b38724e5830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4220e449-333b-4cf5-9b50-48fd77daed52",
        "cursor": {
          "ref": "cea4cbb4-5964-41e2-b4f7-5156703bc25b",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bd42ae66-e83f-4b92-8ef8-557e6ae600c3"
        },
        "item": {
          "id": "4220e449-333b-4cf5-9b50-48fd77daed52",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "07cfa2ea-0839-4773-8583-c532e542bb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad64c55-037c-43c0-b821-4fefa4610031",
        "cursor": {
          "ref": "13860745-75f4-4b4e-814d-ffd28c24caf1",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "09b99b2b-882a-4dfb-b0e4-d3376a6a4bf6"
        },
        "item": {
          "id": "fad64c55-037c-43c0-b821-4fefa4610031",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1962ebeb-8602-4bd5-8fd3-f11368981d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18181c2-864f-4ded-b933-1ee0526ace58",
        "cursor": {
          "ref": "26c77970-7b52-4bd3-9915-f6eaf18afa2e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "69860d7d-bc8a-426d-84cf-9f8ae29069c3"
        },
        "item": {
          "id": "a18181c2-864f-4ded-b933-1ee0526ace58",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4ccad98-4c97-42e3-9ffe-a48944251feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dc7e97-428e-4a3f-b4d5-74ef56b03e6a",
        "cursor": {
          "ref": "8bd66644-31b2-469f-b3a0-071b1ff83ab7",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1153aa80-9a27-4050-947b-bca9dc974376"
        },
        "item": {
          "id": "c6dc7e97-428e-4a3f-b4d5-74ef56b03e6a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6dfd4ff3-61f8-48ce-8366-0266c7f03dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd3dcf5-f270-414c-b915-4c8a92227a4f",
        "cursor": {
          "ref": "1fa1f5f8-cb97-4b7b-8ce7-82316e90e566",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1acf32a8-668e-48e2-b9c3-e24e274c7420"
        },
        "item": {
          "id": "6dd3dcf5-f270-414c-b915-4c8a92227a4f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a0330948-6f70-4e9c-aaf4-3f42c84d42da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cc7cf3-a090-4c19-917c-27dc0094a86c",
        "cursor": {
          "ref": "de2cc7e9-3589-4a38-b5d1-9840baed2858",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b48b9e3e-7d1f-4a7d-8baf-c948029f4c12"
        },
        "item": {
          "id": "33cc7cf3-a090-4c19-917c-27dc0094a86c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "718b0d6d-68cc-4427-929e-a1bd3cc30042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff92790-bfd7-43be-b35e-044e7d75d362",
        "cursor": {
          "ref": "7d4757df-3565-407f-9d93-4ad252699f8c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c931debc-8648-46fe-bd3b-6746d511e987"
        },
        "item": {
          "id": "eff92790-bfd7-43be-b35e-044e7d75d362",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "154a0866-cf48-420b-b1f1-79ec5693b2d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c19963-794b-4667-ac98-ab01b978c032",
        "cursor": {
          "ref": "1abfb6e4-8ea5-4979-a319-29b4a4acccde",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "003c1400-cd32-41ea-a8b4-c4d95491c973"
        },
        "item": {
          "id": "47c19963-794b-4667-ac98-ab01b978c032",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "5dfcd69a-5ccb-4eab-9fa5-aa366a0ecd93",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1727c7b-eced-404b-a248-5c10ea794a9b",
        "cursor": {
          "ref": "55320bc2-4afb-47aa-a3d3-745db2875da6",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e08c29f-f5d7-4909-8e70-6e6a2bb3f792"
        },
        "item": {
          "id": "f1727c7b-eced-404b-a248-5c10ea794a9b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d8bcb6a6-1090-466b-a89b-4f1fdcdda2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1727c7b-eced-404b-a248-5c10ea794a9b",
        "cursor": {
          "ref": "55320bc2-4afb-47aa-a3d3-745db2875da6",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9e08c29f-f5d7-4909-8e70-6e6a2bb3f792"
        },
        "item": {
          "id": "f1727c7b-eced-404b-a248-5c10ea794a9b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d8bcb6a6-1090-466b-a89b-4f1fdcdda2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd0a6ea-9558-4964-bfe7-f9d0b7a13ae0",
        "cursor": {
          "ref": "5791f3d8-e26f-4a99-95ff-4064af8e16d8",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e4bc6427-5815-4d0b-abaa-ca2f7db708d2"
        },
        "item": {
          "id": "bbd0a6ea-9558-4964-bfe7-f9d0b7a13ae0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8a578566-b687-4e39-8458-60ab6931d591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d82b0e6-c572-4400-b309-cd26740fa85f",
        "cursor": {
          "ref": "9580e421-db3e-4164-a7d9-792dfe4f0928",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cf93dddc-6247-4dc0-aac3-0f716b9a06cf"
        },
        "item": {
          "id": "7d82b0e6-c572-4400-b309-cd26740fa85f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "76601e29-1ea5-4d38-826b-f2ae68ebea5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecde75e2-1515-479d-a616-f8dfc6b84b18",
        "cursor": {
          "ref": "9313b1e8-e0d8-4e25-a4f9-43a0ada86fef",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bf193d5d-05ab-438e-afd2-f655549f132d"
        },
        "item": {
          "id": "ecde75e2-1515-479d-a616-f8dfc6b84b18",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c1dcaf3c-456b-4162-b429-9f31c439b575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae3ffa8-85f7-418f-b40f-e64ac5c8190b",
        "cursor": {
          "ref": "971ddaec-c0a2-4f88-8747-df70badf2a72",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "017fd1b0-279b-47f3-9a5c-ebadc9814169"
        },
        "item": {
          "id": "9ae3ffa8-85f7-418f-b40f-e64ac5c8190b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "508fd6ef-c621-4199-bdf0-19a7307a756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1228d2-4acb-4dfc-b612-e42078552765",
        "cursor": {
          "ref": "90f5ce62-93ff-4a1a-bfe9-84f3b7ad6846",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2a15aab2-a02d-451d-8050-db624eb224a2"
        },
        "item": {
          "id": "cc1228d2-4acb-4dfc-b612-e42078552765",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1b1b1459-d14f-47db-acfe-ce3c0a5bf921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea37c5ce-3774-42c2-9573-3064ed4cd877",
        "cursor": {
          "ref": "a157053e-0fcd-4ca7-9e60-d6dc5a77f5a7",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ace919ea-28b5-4963-a185-78be74b3dbab"
        },
        "item": {
          "id": "ea37c5ce-3774-42c2-9573-3064ed4cd877",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6aa371b6-c786-490b-843f-8559f37b74b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061b57fe-0880-4eda-9b91-428ac6cacb47",
        "cursor": {
          "ref": "bc1b00e9-53fd-45fb-b39f-8706b18d7ada",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0847a0f9-c83f-4e10-9567-803b49bb182a"
        },
        "item": {
          "id": "061b57fe-0880-4eda-9b91-428ac6cacb47",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9a4aa6ee-4ea1-4147-9750-1248b51dae57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5cc0c9-b900-4044-bb34-fbdf16cb7880",
        "cursor": {
          "ref": "575c5431-3dec-4a2e-92b1-42e96b50e2c3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3287ef64-cdec-4ff4-afb3-70b9f278c32a"
        },
        "item": {
          "id": "aa5cc0c9-b900-4044-bb34-fbdf16cb7880",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "686d6e39-b050-42f4-b50c-cbbbd41ada62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d8ce03-8674-4470-a962-1e62e63f359d",
        "cursor": {
          "ref": "74e45caf-dc52-4744-8f50-ea9dbd45ed94",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9d908a9c-5cdb-4af3-a402-08623933cfda"
        },
        "item": {
          "id": "d2d8ce03-8674-4470-a962-1e62e63f359d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7ed675e4-cb99-47ef-a7b0-60785fa3e71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf268c77-72dd-4bc9-ab54-bc9913f47b45",
        "cursor": {
          "ref": "4844faef-df98-436a-a489-010024c5f8d9",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34970ede-9e56-4853-b019-54dd7f259dd7"
        },
        "item": {
          "id": "bf268c77-72dd-4bc9-ab54-bc9913f47b45",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be8a8547-8961-48c6-9286-12b9a1f8fcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ae0075-aee2-46f1-bb12-e2e25bd99e71",
        "cursor": {
          "ref": "2433b0e1-9c8e-4871-a992-e4467133c177",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e2d0a1f4-fa41-4d6b-b92c-aeb15decff80"
        },
        "item": {
          "id": "c0ae0075-aee2-46f1-bb12-e2e25bd99e71",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e6eac11e-c6f5-4738-bece-a036d9dc8e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8b2346-2cf7-4bb7-8221-4946cc363db5",
        "cursor": {
          "ref": "4e309495-30a7-4233-b971-e49bf0747cb3",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "67d01ef6-0619-42b4-a982-787a47083014"
        },
        "item": {
          "id": "8e8b2346-2cf7-4bb7-8221-4946cc363db5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "57e73cad-c48a-46d4-b17a-70eaf1b89bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a972e78a-5a37-4d03-a6d8-73eb32ccb716",
        "cursor": {
          "ref": "ec054828-8ca5-45c5-9a8c-97bbe320fd85",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f0c47e06-af1f-4c9e-8af6-686ee0678dae"
        },
        "item": {
          "id": "a972e78a-5a37-4d03-a6d8-73eb32ccb716",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "df6733eb-5417-44af-b13e-dc811811c02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3306bfd-46c5-4d42-80a4-d2195db3dc3f",
        "cursor": {
          "ref": "c4f33950-6b35-4973-93fa-3fd7b1ead817",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b63dd49e-4267-4515-887f-94ceeb662899"
        },
        "item": {
          "id": "d3306bfd-46c5-4d42-80a4-d2195db3dc3f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f631b659-112f-45bf-ae9e-31a9bef95ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e3a8d7-7f37-428b-9b48-588662186e12",
        "cursor": {
          "ref": "b6528b93-eda9-42c9-9e9f-b7d69f662ac6",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "91b4cfe1-1c9b-4865-ab9b-ddcf4d822dc2"
        },
        "item": {
          "id": "97e3a8d7-7f37-428b-9b48-588662186e12",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b1333873-8229-4e15-a645-192dab2e0354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19821cb0-bab7-468a-b63a-64a79f787d1b",
        "cursor": {
          "ref": "7709fe22-865a-4218-9ad0-d8edff821ca6",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75c24f0f-6985-416f-91d5-b28af6dd151f"
        },
        "item": {
          "id": "19821cb0-bab7-468a-b63a-64a79f787d1b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "23f3c0a0-1c80-4856-aa77-47294e1958f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dbdd8e-77ac-42e6-8c31-7446ea802212",
        "cursor": {
          "ref": "46287157-b569-476a-9178-32d5d472f558",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9d1cb976-3d96-4224-bff6-4c69c3d043eb"
        },
        "item": {
          "id": "c8dbdd8e-77ac-42e6-8c31-7446ea802212",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4fc069ba-aacf-4b42-9479-249fe038d40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc653e9-2843-4971-8211-377f0996447d",
        "cursor": {
          "ref": "ba3df503-452c-4e21-8e44-67471ff3a5d5",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "63732c62-5461-4508-8570-b081b76b5b76"
        },
        "item": {
          "id": "6dc653e9-2843-4971-8211-377f0996447d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a81daca0-b401-49ae-a12b-ec9dc1c2ef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7273479b-1c91-4027-a3c6-ced0c712236e",
        "cursor": {
          "ref": "a32a8dd2-a003-4247-8375-90bfeb6d1c41",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fef9cebd-4d66-4cc0-a831-bcb552f4a79a"
        },
        "item": {
          "id": "7273479b-1c91-4027-a3c6-ced0c712236e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f56f0b03-bb1f-4a79-bc37-130215256ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af58844b-af4d-4295-b37b-c8f964c4414f",
        "cursor": {
          "ref": "c19e96a8-9b10-4ade-98f0-8bd1a785a1bf",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0d4a2448-11b9-46a9-a5e7-a990f58cc1e2"
        },
        "item": {
          "id": "af58844b-af4d-4295-b37b-c8f964c4414f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fc1187cd-1fb0-4f7d-b86a-bf60e4d427c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1811389c-2c65-4aae-b288-6f5b1ab7552e",
        "cursor": {
          "ref": "1c7ec15e-6670-42d1-9840-8b4cf2efb0e9",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8cbb7f42-3914-4162-bec9-c57788972d27"
        },
        "item": {
          "id": "1811389c-2c65-4aae-b288-6f5b1ab7552e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "184726ad-6440-40b3-98b1-33533885a36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ac67ee-b22b-4d61-bab6-c6907cb65e00",
        "cursor": {
          "ref": "7a39ad21-25f1-4495-b8fc-37c31573a739",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b020d1d6-e158-4c11-9d12-7c78faac1ed7"
        },
        "item": {
          "id": "71ac67ee-b22b-4d61-bab6-c6907cb65e00",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04a6a75a-7fa1-48b9-9b49-fda6d988c683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b45c0ce-de18-4f30-a858-bf73bce11213",
        "cursor": {
          "ref": "db87d0a3-a733-4297-9a21-8371f324d3b3",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "378dd4ec-465a-47fb-b87b-eae1a6312a74"
        },
        "item": {
          "id": "8b45c0ce-de18-4f30-a858-bf73bce11213",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94f510f8-efc8-4bde-a7cd-eeafd783f3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999751a8-cb2b-49ec-9e0e-a651ebaae73f",
        "cursor": {
          "ref": "14200bb0-117a-4589-b640-dd9406c1f082",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "26386f90-068c-4f4b-9855-d58af018c758"
        },
        "item": {
          "id": "999751a8-cb2b-49ec-9e0e-a651ebaae73f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4665cb68-fbb7-4b71-ada1-e844c1e66e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a7b7a-0229-4fe6-8c1f-b021e086a6df",
        "cursor": {
          "ref": "5b6fc0ac-3def-489e-badc-805c87efe697",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cf87d202-8630-44b6-b4a2-40cc09161bea"
        },
        "item": {
          "id": "072a7b7a-0229-4fe6-8c1f-b021e086a6df",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f53d408e-243e-4dd1-89a1-5a28b287bc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9bf861-a5d1-453c-9646-2336cbeb6010",
        "cursor": {
          "ref": "4ccdfaa8-050e-4642-82e8-455b805233de",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "042dfe8a-6b83-466f-ba3e-810afc255fba"
        },
        "item": {
          "id": "ed9bf861-a5d1-453c-9646-2336cbeb6010",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "85fb9beb-6651-4bf2-8d4a-da5e753dee2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5266f0a7-9e61-4345-8aab-1a2b0490ff97",
        "cursor": {
          "ref": "64f3f85e-ff8f-4687-aff6-cc768ff65547",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "743203da-b74a-4f33-982a-389e484b8cbc"
        },
        "item": {
          "id": "5266f0a7-9e61-4345-8aab-1a2b0490ff97",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bd977436-90ee-40fb-a0e4-6da034d2c8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cee690-e598-47ad-8075-c5065c62ea70",
        "cursor": {
          "ref": "a694962d-f252-430d-bfb2-e665b5dda62d",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "88811ee9-b1b3-49f8-bd93-c3bc9c8dcbd3"
        },
        "item": {
          "id": "97cee690-e598-47ad-8075-c5065c62ea70",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "49c4a746-e8ab-47d3-9d51-87eccfb9e53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d3af89-7d56-4297-9cb9-efd91c1cc3d2",
        "cursor": {
          "ref": "70e03c82-38a6-4685-a237-64a02769d368",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bee23f04-af01-45dd-94d5-27dff07d0c2c"
        },
        "item": {
          "id": "d1d3af89-7d56-4297-9cb9-efd91c1cc3d2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "17e9fd75-ac16-47bd-b2ce-72e41162d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dcd86c-7045-4e19-a944-19603ab2ef38",
        "cursor": {
          "ref": "ca33a344-734c-478e-9f94-9bdc3cd5facb",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2358ae82-dd70-4032-8348-5d16d289b159"
        },
        "item": {
          "id": "10dcd86c-7045-4e19-a944-19603ab2ef38",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fe7456e6-12fd-4bc5-8c23-cd00ee95816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de01271e-73cd-48ec-8d12-0b085798ab95",
        "cursor": {
          "ref": "c3eaf87e-6271-43b6-b3f8-5000cd0ac580",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b13029d0-07dd-4810-8e0a-9042da2b1626"
        },
        "item": {
          "id": "de01271e-73cd-48ec-8d12-0b085798ab95",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c489cb57-a4b2-4b62-a19b-b632dd2194cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37bb8c1-4345-40c9-9f78-940e8f31a4b0",
        "cursor": {
          "ref": "e2a087a2-781f-4135-ab33-bbd8367d6f56",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "435c6707-8762-45ee-a06f-1916e2e9d1e8"
        },
        "item": {
          "id": "c37bb8c1-4345-40c9-9f78-940e8f31a4b0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ab454334-99af-428f-8905-b0187cb6227f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a494ae37-6226-4db8-b25a-2adc615f1a74",
        "cursor": {
          "ref": "1f8390c4-53bb-4ca5-91d1-3d3b6b67bd33",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cad66f07-4f7b-423f-903e-71dae5cad80b"
        },
        "item": {
          "id": "a494ae37-6226-4db8-b25a-2adc615f1a74",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "af4eacc7-8e55-4ae6-85d3-0d241be6803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3165f98b-a2b7-4576-99a2-7b0be94eeeaa",
        "cursor": {
          "ref": "a2d4d2d8-5cfc-454b-896b-a41d1f63aab9",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c0d7a1cd-13d7-4f3f-917f-7cb9169c0a42"
        },
        "item": {
          "id": "3165f98b-a2b7-4576-99a2-7b0be94eeeaa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a9b3bfd9-119b-43c7-ac3f-bf10e3d44c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50b636-ec0c-4baa-9683-e1db54ce4305",
        "cursor": {
          "ref": "43face83-10ff-4855-801e-5665a42ff3c3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1e6df3df-7822-4a57-b862-70fea3b5a599"
        },
        "item": {
          "id": "6f50b636-ec0c-4baa-9683-e1db54ce4305",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4cc7168f-af9d-4c0a-9357-4b2159caaec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b856a7ff-58d6-4804-8f57-14a3a6c39672",
        "cursor": {
          "ref": "40d9695a-d61f-4b8b-9f1e-bcac825586ad",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c474ce3a-60eb-4526-ba24-24077e9f6d17"
        },
        "item": {
          "id": "b856a7ff-58d6-4804-8f57-14a3a6c39672",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "29871e38-1b96-4ad0-982f-ae819ae96379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbc0ba0-58bc-416f-b2a9-80bf7de30933",
        "cursor": {
          "ref": "1e43ee21-8073-4cc8-8073-eab611d84417",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7662a425-b207-4b26-bbf0-42764af982c6"
        },
        "item": {
          "id": "bdbc0ba0-58bc-416f-b2a9-80bf7de30933",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "970398d4-ecdb-4d8b-9227-01b4cd1d0cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24348d5f-92a3-4853-b214-5e8a73bad2aa",
        "cursor": {
          "ref": "8dcd415a-b4d2-4187-9d60-ca42db765ef7",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "52c8b2de-e189-4f8d-a424-0d9a24117b51"
        },
        "item": {
          "id": "24348d5f-92a3-4853-b214-5e8a73bad2aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "abb9d675-37a8-49eb-8534-c09358e0c689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f26d55d-e304-4480-9c87-bac9f2b8781c",
        "cursor": {
          "ref": "5feb4fe3-ddb5-4d5a-b5f9-c81ad356a4d5",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1d1294b9-0260-4ae1-818d-e7ed10b413a1"
        },
        "item": {
          "id": "6f26d55d-e304-4480-9c87-bac9f2b8781c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ec9e9261-c11b-4411-8e72-91349ec779f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13578a81-7d7c-49fe-b889-02d314092320",
        "cursor": {
          "ref": "52d361a2-67d4-460a-9168-e80b66499319",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "85789033-faa3-43f8-ac34-19a001cf6f00"
        },
        "item": {
          "id": "13578a81-7d7c-49fe-b889-02d314092320",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ed2d1ddd-1a64-4bd1-93f4-405b5261b69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04574fed-dffd-4458-a942-cc0efb11f6f1",
        "cursor": {
          "ref": "600457a7-bd39-4190-9126-d424ece529d8",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "28f05ed3-0195-49a4-a98f-a0a4690d40d2"
        },
        "item": {
          "id": "04574fed-dffd-4458-a942-cc0efb11f6f1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cc8231fe-9b8f-4ce8-bdd3-6de7fc7d46e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919f58a0-dbb5-480c-914e-811ce7c49853",
        "cursor": {
          "ref": "60fd4118-6592-4339-8e14-f5d82589ae1a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "174dd0f6-693f-4a80-a14e-8f8cba146ab9"
        },
        "item": {
          "id": "919f58a0-dbb5-480c-914e-811ce7c49853",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "30a5e47c-f7c7-4b67-b55d-9a536a9ddf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9dda50-4db6-42c0-a8e6-86c5de96a24f",
        "cursor": {
          "ref": "2f7a018d-a60a-46ad-b031-fb2f990525f1",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "95474b98-1d4e-47bf-af9b-d3be850ff6a8"
        },
        "item": {
          "id": "5f9dda50-4db6-42c0-a8e6-86c5de96a24f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6d2b1151-8969-4e67-93e5-dd3959462f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e1a518-6c67-47ef-8c79-6449e3e3b3e0",
        "cursor": {
          "ref": "cb69f684-ca5c-4eef-9938-a746226be6be",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3eb6a411-7b7f-4cd0-b337-96182fee05ee"
        },
        "item": {
          "id": "52e1a518-6c67-47ef-8c79-6449e3e3b3e0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "723f2cc5-70ad-4f26-a028-ec8f2b916bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef3da9a-bddc-4e51-8930-8f20dd17e6cc",
        "cursor": {
          "ref": "296157ba-2616-4e74-aeef-8d7543c1600b",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "50979be3-1981-49ef-872f-7d8911db1ee5"
        },
        "item": {
          "id": "fef3da9a-bddc-4e51-8930-8f20dd17e6cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "248e00f5-4371-4c23-ba03-7717825eeda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1965e207-6b64-445e-8392-a7a458727944",
        "cursor": {
          "ref": "2cb49b40-3eb9-4493-9a44-f3f1249dee6b",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "adb06bc1-5f62-47be-8724-3148ab416e94"
        },
        "item": {
          "id": "1965e207-6b64-445e-8392-a7a458727944",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cf7532d0-567e-4c72-9fb7-5415b9b98a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422f432-6f6c-4226-8810-7e09aea4d91c",
        "cursor": {
          "ref": "cc6f5ff4-acb8-4aeb-bcba-1ce150204e86",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b80f5203-002a-41c9-8629-cd2b03a4fd24"
        },
        "item": {
          "id": "1422f432-6f6c-4226-8810-7e09aea4d91c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3d11bf74-4254-4301-a05d-42bee4d7b110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0324d1-2d2a-4f94-8412-24a34751ec7e",
        "cursor": {
          "ref": "abfcb92c-2068-467d-8a44-056b55894389",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "65db28b4-44cc-42fc-9fc7-35a9700f54ef"
        },
        "item": {
          "id": "1f0324d1-2d2a-4f94-8412-24a34751ec7e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cb824e10-5bc0-4574-a8c0-a7a65fc76f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4194c0f-f189-40df-afea-e75efb1f521d",
        "cursor": {
          "ref": "4eaf3cca-49c4-4da0-b769-687d8bb41ff9",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "993c7bad-a5ec-4489-b952-70a791ac0a1c"
        },
        "item": {
          "id": "a4194c0f-f189-40df-afea-e75efb1f521d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "64b650f2-3607-444c-b9bf-2f10b8ce2077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67e1bb9-293c-42ec-aaac-2d0b79baf07b",
        "cursor": {
          "ref": "503dcee1-9387-4c31-8a9f-cc794ddbd42e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "92a4d6c6-776a-408a-8d9d-25d31aa00373"
        },
        "item": {
          "id": "d67e1bb9-293c-42ec-aaac-2d0b79baf07b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ea4987fd-8d0e-4c26-bbcb-e487b3be4560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8b55c2-3b9f-4908-a07e-e8623e9e9c2d",
        "cursor": {
          "ref": "08f8b32e-f549-4930-ba15-89988ff04555",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "391bdde4-1906-4296-be4f-1b5fe4e2d844"
        },
        "item": {
          "id": "1f8b55c2-3b9f-4908-a07e-e8623e9e9c2d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "265b83db-bc7d-42fd-96d2-0838796ad0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2dc3e6-add6-450f-b46a-8fcd378a17f1",
        "cursor": {
          "ref": "c7a9c4f5-79a4-4ebe-ab55-75ab3efd7b97",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4582beee-b33f-490e-bbfb-e3d544289b14"
        },
        "item": {
          "id": "fa2dc3e6-add6-450f-b46a-8fcd378a17f1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "be10532a-ddb4-4e26-8639-67694b89a93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb2499d-b06e-45df-8162-923caad0ff57",
        "cursor": {
          "ref": "6fcc28ab-0f42-4926-8db1-5db5cc5e6432",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "85fecff3-f797-4e98-acca-0b3552d1850e"
        },
        "item": {
          "id": "dfb2499d-b06e-45df-8162-923caad0ff57",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "77d18ac8-7798-4a85-9edf-c47443afd384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8263c1e9-f0dd-494c-ad23-5638fea51bd2",
        "cursor": {
          "ref": "9b752680-c95b-46dc-9d63-627602ca8ea8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "38523774-abdf-4393-8682-958411088393"
        },
        "item": {
          "id": "8263c1e9-f0dd-494c-ad23-5638fea51bd2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2c2ac1fd-b5c6-466e-aa31-4d221d4c8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ad2c75-c139-449c-82a8-5708132da2f9",
        "cursor": {
          "ref": "67e14db4-407a-479a-b644-4d116bd0964c",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2776acd3-4a85-4d6c-a049-ccefd377f23f"
        },
        "item": {
          "id": "25ad2c75-c139-449c-82a8-5708132da2f9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "70d33f31-23a9-4b33-8662-e0ff27540334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0281f75a-06cb-4b23-ada7-c50403555ec0",
        "cursor": {
          "ref": "51353fe3-c981-4407-b3e8-8dc4d42101df",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9087746d-bd27-41e7-a4ed-408825951f8f"
        },
        "item": {
          "id": "0281f75a-06cb-4b23-ada7-c50403555ec0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b47b5176-ac26-4e8e-b9ac-f3efd0501724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e425d0-559c-4cdd-b18a-c114858a300b",
        "cursor": {
          "ref": "59ede9e9-a1f9-4ae1-9fa0-46e91ba15d57",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2aa2049b-4f5c-4a3d-a690-8110741b5e80"
        },
        "item": {
          "id": "79e425d0-559c-4cdd-b18a-c114858a300b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ad432db7-1010-4df2-9472-eb083119c640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07038c0d-d6c2-47dc-9584-ddb8f5dc439c",
        "cursor": {
          "ref": "961932be-9b3e-4f3b-81c2-c621b5065790",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2ff521da-596d-4f26-8885-dfb2132a2c3b"
        },
        "item": {
          "id": "07038c0d-d6c2-47dc-9584-ddb8f5dc439c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a5eb961f-bf78-447d-bcc4-b7b98a429403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c61cb6-c01d-4b87-9e39-e84570b986bb",
        "cursor": {
          "ref": "13ea5af8-d219-4db7-a07c-05504eebcc72",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "959e4e1f-417d-4e54-b109-e7374bbcf628"
        },
        "item": {
          "id": "f7c61cb6-c01d-4b87-9e39-e84570b986bb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7646d26b-e605-4b30-b6d8-7a09968e16d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ac4382-83c0-49b3-9723-94ea4ee5a538",
        "cursor": {
          "ref": "ded9e969-6f51-445b-b49d-0b16a9d63150",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee78c14a-dd84-4b2a-9827-1d46e8fc25a2"
        },
        "item": {
          "id": "b3ac4382-83c0-49b3-9723-94ea4ee5a538",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7abe92d8-d8f7-4305-856f-19e7848bb064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74301cf8-e7de-4be6-8ed3-d7cece5b4d7b",
        "cursor": {
          "ref": "1e12ec50-ba77-40ca-9b11-7eed04f2bbb2",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "faf9ca09-795b-496c-9675-05cde86230af"
        },
        "item": {
          "id": "74301cf8-e7de-4be6-8ed3-d7cece5b4d7b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6d1a085f-925b-4b26-a266-7402725ada2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b722256-8dde-4972-9479-0560e6dfa160",
        "cursor": {
          "ref": "5a8df334-32cd-4f00-8034-70e2ccff6926",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5835dbf0-1133-4194-89e9-478e190f673b"
        },
        "item": {
          "id": "0b722256-8dde-4972-9479-0560e6dfa160",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b5104208-e30f-4dc9-8971-4e05fd83a308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4c5f01-3e37-4ffc-850a-cca7dc3f958c",
        "cursor": {
          "ref": "4c160205-f083-4a20-b272-059a247b3648",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e391ae64-0508-4f40-8aa4-de4801343acd"
        },
        "item": {
          "id": "be4c5f01-3e37-4ffc-850a-cca7dc3f958c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "38df55b7-4f69-4da8-9b25-101dd6c59a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea6b056-a9ae-4eef-9323-746b80a5cc86",
        "cursor": {
          "ref": "7614cd05-de82-4909-88f5-0a7bf4b88bd7",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "df16f03d-d2b5-4f5f-bec3-49500031d649"
        },
        "item": {
          "id": "0ea6b056-a9ae-4eef-9323-746b80a5cc86",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4a2ca66-e0ed-4534-9c41-c8fbe77d0bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aed912-56b7-4348-8151-ca8bdd2ed9bd",
        "cursor": {
          "ref": "b955d0c5-a982-4a95-9d03-2115cb40762b",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "841960db-a0f6-4db9-9e7c-a1b93b27e891"
        },
        "item": {
          "id": "d4aed912-56b7-4348-8151-ca8bdd2ed9bd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bb3a7010-b98c-4b06-a36d-aed07432375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53f2792-4f75-4f7d-bc36-a25c45e3a500",
        "cursor": {
          "ref": "21194fa3-beb8-4965-9ce1-9d83e623f1eb",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "54acdef3-5a58-4a60-929a-faa506fecbf9"
        },
        "item": {
          "id": "c53f2792-4f75-4f7d-bc36-a25c45e3a500",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a902462b-f4a7-4370-97b1-c86992994104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a6a21-aa7e-4d81-8df5-742f460d0529",
        "cursor": {
          "ref": "8d08db64-6551-44de-9d40-92b610085e4d",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0f975c56-88c2-438e-a133-8e36ea8393fe"
        },
        "item": {
          "id": "584a6a21-aa7e-4d81-8df5-742f460d0529",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5fca0720-ac38-4723-ab24-f89701aa40dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e47c6a-a9ec-4de6-af63-5d1588d1c5cf",
        "cursor": {
          "ref": "96b578f4-eee6-40bd-a450-ccfff0bae435",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68bc4dbf-dc5a-443c-ab4b-f3b0166b0961"
        },
        "item": {
          "id": "83e47c6a-a9ec-4de6-af63-5d1588d1c5cf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ebfef096-0257-4d20-94b4-af5055571070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1b2ff1-f389-44d1-a333-aa2be8144a81",
        "cursor": {
          "ref": "264fe33b-4b0c-4d5f-aeb5-6d70cc76c27b",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "55784f6f-c4c1-4b0e-b52c-5b3ab21f5f33"
        },
        "item": {
          "id": "4e1b2ff1-f389-44d1-a333-aa2be8144a81",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8e9c88ef-0144-4138-a958-3799a25d214c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9607ca-2235-4aa5-867f-586ab08f37cf",
        "cursor": {
          "ref": "2641ea2f-04ff-4577-8140-a4280e596b32",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bc7ba3f7-929c-4365-b2bd-3177107c2d9b"
        },
        "item": {
          "id": "be9607ca-2235-4aa5-867f-586ab08f37cf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1ea48743-053e-4407-829e-9561cdd1516e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eeba76-e830-4ce0-b592-c200c440e269",
        "cursor": {
          "ref": "b2b59a2d-1ed8-4f24-8e88-535adb74b5f0",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ddf1c2c4-606b-4a45-8b1f-aac72c352bea"
        },
        "item": {
          "id": "42eeba76-e830-4ce0-b592-c200c440e269",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "12aed1af-8501-4698-8df9-4a3e94e708b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c98aa-bae7-43b0-8b33-63c4a7ab8221",
        "cursor": {
          "ref": "1ca54051-2767-49ed-92fe-234d8d584991",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1a74b777-34e8-4d8e-bcf2-7bbf860a7059"
        },
        "item": {
          "id": "491c98aa-bae7-43b0-8b33-63c4a7ab8221",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "18af7eca-0f80-4b7c-84ea-0ce5f66289b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519fcbbf-d61b-4262-9b6b-c17545c1ccfb",
        "cursor": {
          "ref": "dfc71ed8-4ed8-4438-a884-c55ed58b0c83",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ce342c7b-00da-4f53-8854-6a172da46367"
        },
        "item": {
          "id": "519fcbbf-d61b-4262-9b6b-c17545c1ccfb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b11b0eb8-4290-4944-829e-28394adb097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497a3c8-1096-4a57-b9b8-6405ea368856",
        "cursor": {
          "ref": "0e9d52d0-bfd3-435d-8acf-426de36bc64a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d7080ef2-ceee-498b-926f-51d82108b8f7"
        },
        "item": {
          "id": "c497a3c8-1096-4a57-b9b8-6405ea368856",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "55e78518-aa76-434a-9583-25aba5fa3cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8c8ae1-fd54-40e5-a7c2-546295a12751",
        "cursor": {
          "ref": "6df9f931-89a6-48cb-a0b8-2a436e76dbb2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "989a4922-f440-4d83-904f-65bed40b1b28"
        },
        "item": {
          "id": "da8c8ae1-fd54-40e5-a7c2-546295a12751",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e7088c64-b93a-4674-97eb-01b75b2bd617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8ddc18-0669-4144-b0f1-3c488863a457",
        "cursor": {
          "ref": "dfc4df35-7859-42fe-9b84-de0912112385",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "31349a3b-3c47-4a0d-a416-0ae92811bc9c"
        },
        "item": {
          "id": "0d8ddc18-0669-4144-b0f1-3c488863a457",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "600e3c95-3ec6-43ac-9f0f-fcec531c1d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb14823a-7ee6-4642-b2f6-43bb18e9eb6f",
        "cursor": {
          "ref": "c61b82cf-ee1e-41ac-b03f-314e0ea147e1",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eba41a56-9346-482b-85d5-2e88f05efe0d"
        },
        "item": {
          "id": "eb14823a-7ee6-4642-b2f6-43bb18e9eb6f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "63a19088-488e-4de4-9e3f-6e715856cf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa48a2e-a5b2-4028-a056-407cfa6d0f8c",
        "cursor": {
          "ref": "56f7f94c-eb26-4503-bb57-f3a5771013ab",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "68ee4bdc-0c9f-43fe-ba55-55658e4799e6"
        },
        "item": {
          "id": "8aa48a2e-a5b2-4028-a056-407cfa6d0f8c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1bab07eb-c641-4d83-bf5b-5d0a67d4114e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295a2501-8496-475f-a377-4ec53fe6341c",
        "cursor": {
          "ref": "d63161e4-3701-44b7-8e26-2cffa021f225",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2601b564-0a89-4f83-9ade-a408ae868e47"
        },
        "item": {
          "id": "295a2501-8496-475f-a377-4ec53fe6341c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "32cf4b1b-b7f3-472d-a995-964ce0e81d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b2fed2-b32f-4193-a771-029d154b8297",
        "cursor": {
          "ref": "6c227bab-8c98-4c75-8ac5-b5f1181c40e7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "05ad7350-fbf8-45ca-a414-d36a816c18d0"
        },
        "item": {
          "id": "88b2fed2-b32f-4193-a771-029d154b8297",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0c257f38-4ba1-4a1a-8c14-4818a77a8519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b000cd1-d790-4487-8bd3-5b6c39b86c7f",
        "cursor": {
          "ref": "4e827608-156c-420c-9ed3-51078fb6414b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4c3bd515-6f62-450c-afeb-5ef22050731e"
        },
        "item": {
          "id": "8b000cd1-d790-4487-8bd3-5b6c39b86c7f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0e5515bc-70b8-4e19-b0af-6da1527c0cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e01af-85bb-4c9f-ab8c-181a5d7419c0",
        "cursor": {
          "ref": "7cc8ee3e-98cc-466b-8b7e-b590eb6ec319",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c56c6ef9-14a5-4de1-a3be-9020b38e3114"
        },
        "item": {
          "id": "af8e01af-85bb-4c9f-ab8c-181a5d7419c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c3b2db49-7f52-4b15-a431-22d1bf183cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c041e1ee-8a1e-49b6-82cc-551a2f4c2a03",
        "cursor": {
          "ref": "f11b7ad6-28d9-4fd6-acec-3a7e832f3d89",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5bbeac2d-6f89-417b-b38f-628e51fc0416"
        },
        "item": {
          "id": "c041e1ee-8a1e-49b6-82cc-551a2f4c2a03",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f9ee4068-93bd-46a2-91d9-336d89ac4ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8679cee3-acfc-40a7-bf0c-db2c45728006",
        "cursor": {
          "ref": "4cac6d29-d8ed-4757-bcf8-bb801ac8a6a5",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "219efec4-ed97-4111-8236-a2f42b8c953e"
        },
        "item": {
          "id": "8679cee3-acfc-40a7-bf0c-db2c45728006",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f343bc9f-c3f9-422f-a08b-5aa877bbcacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0558abd2-3422-4e7c-8867-dee0f4519e7e",
        "cursor": {
          "ref": "f4e47cfc-efb2-4f6d-a3fe-bfaeba1c44d7",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "68c5dc8b-7bc1-416a-927a-27026e29f63f"
        },
        "item": {
          "id": "0558abd2-3422-4e7c-8867-dee0f4519e7e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "31e6ca12-25f3-4992-b754-4035a3765c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6318d5d1-c00b-4bc1-bf11-99781b19cdff",
        "cursor": {
          "ref": "5743985b-1e94-40a5-9031-4267bc503b77",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7899fd7-1560-4252-b097-8b6ece70fe7b"
        },
        "item": {
          "id": "6318d5d1-c00b-4bc1-bf11-99781b19cdff",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e3ec1a0e-0fd4-44dd-9eea-9d0341c34207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10546e91-e327-4ae3-80b0-20215f9b5223",
        "cursor": {
          "ref": "75bfee41-4e82-4ec4-ab24-655a5e441f19",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "07b28e17-1507-42dc-99ce-5d35e3b37891"
        },
        "item": {
          "id": "10546e91-e327-4ae3-80b0-20215f9b5223",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "221b01a1-922d-4139-b2d5-203428bf9de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4626a9-c77f-48cd-927b-e55aeb928c77",
        "cursor": {
          "ref": "db6b8b95-a7ce-4372-8a1d-31b4b4d29dd6",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a4c8df25-2d63-4224-b2ed-5a843eb4c483"
        },
        "item": {
          "id": "1e4626a9-c77f-48cd-927b-e55aeb928c77",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d590fb90-6724-4afb-90f1-58c2258b616a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9144217d-1f37-45cf-8416-1404ee8eb2d8",
        "cursor": {
          "ref": "c44f4f32-3a24-4ef4-b5e7-d671fa811499",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "78e1e433-0658-4aad-8d37-58e77fe9b190"
        },
        "item": {
          "id": "9144217d-1f37-45cf-8416-1404ee8eb2d8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aee14402-74fd-4022-a1a0-64e26987eb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037bdf59-beec-4211-be94-c936b1a04e4b",
        "cursor": {
          "ref": "407addea-2a69-4513-abda-3939c295d5fb",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fb2ca84f-5bdc-4abd-8810-e15a06a3689d"
        },
        "item": {
          "id": "037bdf59-beec-4211-be94-c936b1a04e4b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "53c9161a-b2ae-418c-9513-229115817fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8c50a2-524b-404a-9526-ebaed1a7f932",
        "cursor": {
          "ref": "7259d7a0-3f40-4216-acd7-f68216d73305",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ad9f6471-8698-4e5b-a52f-e30bf16b4d82"
        },
        "item": {
          "id": "8c8c50a2-524b-404a-9526-ebaed1a7f932",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "24084f39-61fb-4a34-bd35-6ee5cda94c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f6fdb1-c9cb-4a1c-ac9c-b0c1407797c5",
        "cursor": {
          "ref": "a8f4a18f-752f-4b0e-a527-fa5831a4caf3",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "701b274e-fd29-4403-b77d-3b573772abd4"
        },
        "item": {
          "id": "71f6fdb1-c9cb-4a1c-ac9c-b0c1407797c5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2dcb9339-49aa-4907-8069-9eb18c4b86c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77986ef-cbf0-4859-9283-4ac1c21a47b0",
        "cursor": {
          "ref": "9a01b854-579e-4898-9872-72c63f643f9e",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c26aea84-9a2a-4a31-8b93-1dcdd2310b18"
        },
        "item": {
          "id": "c77986ef-cbf0-4859-9283-4ac1c21a47b0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c6b855c1-6c48-42b6-9555-0edc203ba500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1cb41d-7719-4e52-99a1-bad413a18441",
        "cursor": {
          "ref": "f0955ace-28c7-4142-9fdf-ea83fd0cc49f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0d08face-e224-4de4-a92f-0c79c6770195"
        },
        "item": {
          "id": "db1cb41d-7719-4e52-99a1-bad413a18441",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c25f67db-0a0c-4118-87c5-53394414c9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2186dc-e803-489d-a15e-c5faeea41595",
        "cursor": {
          "ref": "2b1e3091-ce8a-42d2-83bd-d724ae359555",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "074e3142-e340-46fd-9376-6b1870751f2e"
        },
        "item": {
          "id": "df2186dc-e803-489d-a15e-c5faeea41595",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "184414c6-ccba-48a7-9a3d-32a06e95831c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f1c261-8270-4fe8-b7f3-dcaa8b430ed2",
        "cursor": {
          "ref": "c4413687-cc12-478c-99c1-f188e8a272ea",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6e461e7e-fe15-4882-a2f1-7d47748c7e87"
        },
        "item": {
          "id": "38f1c261-8270-4fe8-b7f3-dcaa8b430ed2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3a080e39-5ca9-4826-8ddd-48a17878db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a81cb3-adf2-428b-a0d8-7ade314618bc",
        "cursor": {
          "ref": "eec1ecf7-961d-48a7-8b73-e6c62463ffac",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b2f4f558-432c-4cb0-a1a4-b4ef3423860e"
        },
        "item": {
          "id": "22a81cb3-adf2-428b-a0d8-7ade314618bc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0e70d126-a4a3-4df2-a02e-54117960182b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b66ade-80e3-4f27-9ce9-beee1bd75083",
        "cursor": {
          "ref": "933c531a-283c-4969-b19f-3c5b7e6fc95f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2ad4a186-f40a-4dee-ab64-a9d070b9be4d"
        },
        "item": {
          "id": "f6b66ade-80e3-4f27-9ce9-beee1bd75083",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ffe3b120-8c48-4a17-ad74-3172e681fc35",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68de2aba-05c6-4718-8026-3e6a94787914",
        "cursor": {
          "ref": "68b1124e-31d9-47e8-a6f7-2d9729e02729",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a888d920-46bf-41dc-ad7e-67dd9a675333"
        },
        "item": {
          "id": "68de2aba-05c6-4718-8026-3e6a94787914",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "425edf02-cb4b-46a6-b55b-f14cbfe0ae69",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15799f6-80b6-4123-9fa7-fa3b59283738",
        "cursor": {
          "ref": "c581402c-79c7-4b52-945b-4172005a5fac",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f8239d88-9d41-46ca-b910-824057821ab8"
        },
        "item": {
          "id": "a15799f6-80b6-4123-9fa7-fa3b59283738",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bddf0cec-67bc-4f48-9afb-94aa576699c0",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a3ace4-565e-4440-a599-1285a0f85825",
        "cursor": {
          "ref": "2b9af6c3-5d32-4ea6-a151-2e5ee754fba2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c0aeb26d-00c6-4864-937b-96b37823742f"
        },
        "item": {
          "id": "07a3ace4-565e-4440-a599-1285a0f85825",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d7e6fbaf-d91e-4f68-b2d7-5cbe65bef9fb",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
        "cursor": {
          "ref": "35c5bb24-531a-401d-ad51-05d0ff824471",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "186409c6-2187-4916-a6e1-9aab0bd1f679"
        },
        "item": {
          "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3a9dd50-91db-41e4-ae10-4b9ad2fb0437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
        "cursor": {
          "ref": "35c5bb24-531a-401d-ad51-05d0ff824471",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "186409c6-2187-4916-a6e1-9aab0bd1f679"
        },
        "item": {
          "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3a9dd50-91db-41e4-ae10-4b9ad2fb0437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
        "cursor": {
          "ref": "35c5bb24-531a-401d-ad51-05d0ff824471",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "186409c6-2187-4916-a6e1-9aab0bd1f679"
        },
        "item": {
          "id": "59c492b1-e69d-4299-b4d8-d4f554500e8c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c3a9dd50-91db-41e4-ae10-4b9ad2fb0437",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6634248e-28e1-4827-b2fb-4d6a18f1d9d8",
        "cursor": {
          "ref": "9aeda7db-ac48-4525-82c6-df9bd93168c4",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5f23f8ef-8cb8-4813-b34c-c0db80fa679a"
        },
        "item": {
          "id": "6634248e-28e1-4827-b2fb-4d6a18f1d9d8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ac0573ce-d9ba-415c-878d-2ae9fd6d6004",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a48355-f759-4402-91d5-096934d2b411",
        "cursor": {
          "ref": "ce6c1f29-aa58-4c45-931f-6ec5bbbd781b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b123fa4a-4b79-4738-945d-de075b68733f"
        },
        "item": {
          "id": "e4a48355-f759-4402-91d5-096934d2b411",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "00b1bd14-e44c-4eed-b405-38fa0454ded7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a48355-f759-4402-91d5-096934d2b411",
        "cursor": {
          "ref": "ce6c1f29-aa58-4c45-931f-6ec5bbbd781b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b123fa4a-4b79-4738-945d-de075b68733f"
        },
        "item": {
          "id": "e4a48355-f759-4402-91d5-096934d2b411",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "00b1bd14-e44c-4eed-b405-38fa0454ded7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cf8d22-b117-4fda-950a-4ab7b7ecf4e7",
        "cursor": {
          "ref": "bd114429-1d15-42a2-8807-44c3382b8916",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3e2252fc-ed3d-4a50-a9c9-58e1da466d7e"
        },
        "item": {
          "id": "d7cf8d22-b117-4fda-950a-4ab7b7ecf4e7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4ca4a5ae-f101-4be2-92a3-f52b84f1accc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa46b42f-7b53-4222-9ef9-47cf83697b25",
        "cursor": {
          "ref": "e6eb7b01-2345-46d4-9b81-f5e44917ede2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca43bed3-11af-4b88-9464-a10818fe9ef5"
        },
        "item": {
          "id": "aa46b42f-7b53-4222-9ef9-47cf83697b25",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a45e5d74-3868-4d5b-b865-c3817a6ac3b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa46b42f-7b53-4222-9ef9-47cf83697b25",
        "cursor": {
          "ref": "e6eb7b01-2345-46d4-9b81-f5e44917ede2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca43bed3-11af-4b88-9464-a10818fe9ef5"
        },
        "item": {
          "id": "aa46b42f-7b53-4222-9ef9-47cf83697b25",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a45e5d74-3868-4d5b-b865-c3817a6ac3b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a7a028-79e4-4d3e-a7a1-6b60d656de68",
        "cursor": {
          "ref": "796cbe91-1ebd-401a-af89-c8517c6a76c3",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cebdaf3d-f864-4999-aae8-4bf3acd94329"
        },
        "item": {
          "id": "a6a7a028-79e4-4d3e-a7a1-6b60d656de68",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ef862bdf-d8cf-4b17-a9f3-58e273fe3423",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}