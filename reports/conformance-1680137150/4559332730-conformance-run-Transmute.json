{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "109ceaef-bc92-4281-91ed-e487e4e48979",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6c9a78f7-0592-46c6-95b4-7aa02aa61ff3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a525082-0aec-42f6-9040-8729683d69bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84c26a03-98c3-49ea-9657-cdf18944bd36"
                }
              }
            ]
          },
          {
            "id": "224b8b6e-54df-454d-bafc-0c333b64e3db",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dfc1fe5-a20d-4b83-92c6-65957c9a5f22",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "745bda0c-7776-4c31-b151-c75f05719577"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e31ce204-7965-4b31-bb7a-4e784e6fa045",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a4912c5-c37a-494f-bb9b-72e759ac6594",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f7df765-b366-45fa-9dcd-60bbf6ab01e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5782f48-c5cf-4afb-ba88-54407ada1476",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4a13aae-4ee1-4a54-a7dd-f3ae105d1fe0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fce6def6-9937-4970-af95-89dd8b6ea465",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e368b07-4746-4443-a361-130f6660a5e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b40baf12-b78f-4912-bf3f-bb69a59ef149",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbcf7248-196d-4eee-9fa0-5cf439952ff2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62d09901-cdca-4f18-9b5a-232e8d27b1ac",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "52b2c7c8-0b6e-4cd6-a175-8cfad696915f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fafe4fe-f670-445e-b68d-3f86c0d28bdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ce14f13-8d25-4364-8863-75a2ff82046a"
            }
          }
        ]
      },
      {
        "id": "def0d8db-9df2-4780-9583-462c1e2708fe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ae147fd7-c5d9-42dc-aa02-534b44c67d9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c2e3def-8ef7-4e2b-8c2d-e911a108bce9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29afeabb-f187-481b-ab41-8f7d61cd3d2d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0c9e93-e578-47de-8c8b-2565f100aeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a48398e2-70ad-4a58-ad10-b3b3e7f36215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83cb8c3-5c95-4e60-b16a-cd8f9a904ab2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41597e23-b214-44cf-a5f0-1a031ea93351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "383476dd-3694-472f-91c5-72e0faee0e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df88aa9-9de2-4c2f-aa6a-398d33774a00",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4f0783-c8a8-4530-a7c1-754374496be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7b3e25d-2dfa-43a9-948a-255372f85bbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dcb000c3-1cf5-4a90-9a0d-11d985d6ff5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "971a5b4c-5a1c-47e4-97b3-45b758ab2ca4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee7381-bf81-46f1-a402-9a3b25d0ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e566e658-c453-4c6e-9ad7-9d15be177f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990bbeba-13ef-4fd4-a726-3df9af94ac3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60824d1-8da6-46af-8f4f-2181e2ffc2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae988c6-836d-4e1f-9e24-e23c9e3513f3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd51eb7-09b3-4895-a3c5-0b2e1465b75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18e4faf2-d5f1-4130-a7dc-e58a737bb4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15478fd1-74bc-49ad-96a1-7c3a211adbc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a15177ba-23cf-47b8-81a9-2348b2dd5eda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "87b66446-e1a5-4333-bc91-a3c12e854b1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5223af6-7f81-46f9-98e9-86733241207c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "569b6f2a-4843-4c02-9878-db468114e4dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "05c067e2-4a6e-4fff-8f8a-3276b58d5315"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ab2ff45-fa66-4bb1-86ab-fa70ea64a703",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "49e17cc1-9db5-4f3a-9f26-f8a40056c9f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d651578-3cf0-4a67-8724-85657376c992",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cef90c3-701c-4fbe-b510-cb2bbd241320"
            }
          }
        ]
      },
      {
        "id": "7a60000f-9ae9-4719-a47f-ec3533a06ff6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "df25f2fc-b1e1-4119-9de1-cf3bc320d9d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94f653e7-0d4f-46ef-9c56-ab23b08041f5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "afe1c5e6-248e-4843-93ba-855a917269ee",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108dfc07-a21d-457c-aaee-256e460beb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4a72d4-ff6a-4b27-b2af-a59836c9beb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01c348d-ccfc-4693-a959-ad4b906b3bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38fa14d1-681a-4a71-a3f8-e8212924a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156a81ac-079b-4c03-8b75-0fedbba8464e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4ed14-9fe2-410c-a7b1-bfc7f4a7ec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e3242e-c4bd-4c3e-b99d-6baf373f437e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c21c61-058f-4551-b9b0-f5948890cf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b844cd-ab6a-40ee-a16d-95f02df5cbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f9c034-6d72-4539-a883-c8c8a2a1feba",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9562b8-2fdb-4edb-870f-f9a626b6d163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb6b1df-54f9-4d0d-9288-44b34296b6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45c13bb-fcfd-4a39-81de-629998c31a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e9b10f2-2210-4ce1-bfa0-6fd5d1a1644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ba1983-85cc-404b-a3a3-52a04ccc8ed2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e337988c-7d16-4279-adcc-cf9b194e97f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b693585-df5f-496e-bf87-981fbb646519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42748ae-186e-4d84-ade1-d439bbd04b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b89dee2b-c47e-4466-b59d-983956b6b53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caedde2-9b68-4460-bd64-ef9d618cd5ba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a6cbb-051d-433d-8e10-e3b68cc4c847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ba2c3e-35d2-44dd-90f0-395719ca0e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e82de-1f76-4139-8629-85bccb09cf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f1d1aae-26ff-453d-ae06-67131b593226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7df73cc-f9b2-4506-9f09-7f6b9f0e2246",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28998add-db0c-446a-8ff7-3e853c2415e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9499a7-25d5-478a-93a7-22eed1c7c93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc269fd-2efb-4e0e-8164-676a5ebeaa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8583bda2-bc35-4d5c-939d-64b4ac419f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4a804f-33c2-4070-90d6-604ee1162b51",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2365b8e5-93fb-4cd9-bd2b-70122d2d59f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff454152-a292-4f46-8f8a-ebcb955df711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590d0641-07bd-445d-8b51-31316f1f9cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df45ff4c-79e3-4506-8691-2b3b1ad659a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbbb65b-4bbd-4ac6-b844-64fbbc227401",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702197f-681d-47a5-9ea1-16790c8a06a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75592a5-dcda-4b41-a65f-2dfb2a61d88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db939f1a-60a3-4172-b3f0-5c9d0e1824d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4032ed53-eaaa-4f4f-8559-82fe35dd5358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9142986d-9f38-449d-bb1e-aed0dd350789",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6885b7c-8391-4db7-8fd2-6faa6de2141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d4f13c-2927-4fb5-8085-5a5297356e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab3a3a5-6a29-47ad-a66d-95f3acc6e6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39f0f241-c642-445e-9b29-faa9a535d877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca08752c-8236-454c-973b-d41470f0e54e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53f85c-dc29-47ea-94c3-ff6bc257bc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e077748-03df-478d-8936-eaaa56f5db97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdc9c5f-c2cb-4de1-ac26-56a5990cb229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97c5d550-ab41-4665-9023-2952b2a126d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d7977a-7141-45d3-9bfb-5f20afb2eb53",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985bf1e8-7760-4f04-8660-922f21e39b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efc0fb1-581c-4fcd-bc76-5d108895c523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e1c773-9be8-4a5b-a08a-c915f3729dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d282e8f-1ea2-4468-bddc-d72248bc3e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1445cf9-5eb5-425e-a84c-edb0261e3aeb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13dec8e-b266-4a19-accb-46150819dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c875f3-eea8-4512-9f2a-fba8a0157bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f57548-4766-4ac5-a497-7b1908ac754e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "843a80ae-36fe-458e-8561-48f455083da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f64479-584f-4efd-b62c-6fedb09a7511",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b065952-b06e-4463-a620-346280c4fcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ed997b-d175-41ad-9e18-0c9fb19a34db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80118b20-f074-4ba8-a117-6cce4710289d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb8418d3-78ee-4bbe-af3d-0aaa22819147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5163f997-9c34-41d7-b73b-eb361d0f87a9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c39a2e9-ab01-40ad-8047-d19625194f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73be77e3-4962-493b-b553-981fc3be408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a6357b-5518-4bc2-a8ed-2e0b2c8d3d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e3c89a-86c9-423e-84ad-18ef3bcc7fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c620bd0-a78a-49ba-97ae-f98830565c3b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e75940d-9671-4617-bfe1-2250bfc228bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc0f132-d38a-4035-b274-cb29b9d13f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f72e59-754a-44c8-87fb-3801fcd41fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95f71a3a-e73a-4508-9ebb-144f8f7b1fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43458341-280d-409b-b988-4ca0089393fb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301f86a5-9674-4106-97c3-b3483deeab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc434f15-ebd9-4af9-95b7-70a7650a5323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f528c2ba-08d4-4323-a3c3-d97854621eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faea257a-a572-45ea-abf8-bc5e9b55ab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db54cd74-b7ef-49d9-bd5c-970606b9fddf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31c8616-712d-442b-a70e-858d24267777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e4909b-1ca5-4afa-bc9d-b2aeb2986cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed59ef9b-c8a1-4311-b1a5-4e30589dbe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc2cb16a-4450-4f9c-aa91-da9995c462cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0114ee79-c5d8-416a-90b4-3435f70b5e88",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c17e5cc-8914-48f7-8305-81dd24d1777c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da535d0-9923-47b9-b9aa-2e27ab5fb519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d45b098-3256-4faa-a0ec-a36947593036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b872904-525c-4f14-bf1a-306b35e38f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea3829b-b472-403f-a127-189613372f26",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea44ed-f607-4bea-8db5-d1b7caef09ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9cf65d-7a42-4a3a-80a7-7e461317121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bea2087-5981-4064-8f1f-d8b81289aada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d901755-63bd-45a8-b9d5-4ca08a343ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb19abe-4886-48ce-a6ff-325da4f89293",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45938c57-8669-475e-8398-d84b1a49cf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6e9a7a-b008-4d43-b4f4-43f8c9ba7585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace663c5-a47b-45fb-babe-860f8b2ec769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebc0359-164a-4be2-b229-7e3b4e718c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4404ad0-64cc-4b6f-bf28-12fe1ef24c50",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952fb46e-e0f0-42a1-a60e-96d5f09ea7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4703a9d-a2c0-4fa8-9e8d-abff447a06e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b24f528-627b-461c-94ea-3c60789d824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c8f7c7-419d-4c22-ba99-9715fe4291db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea752fb4-cdc9-448c-a47e-f30ef77ef069",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c946a577-84f7-4cd4-b09d-c2a9ef38e7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386fb74d-24a0-4586-9940-ffbc0b58b24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c29d71-5e2e-4424-86ea-ccc55d1413e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47858939-db16-4c2d-82d7-df3da0c620f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4130133e-2443-467f-a154-33cd1da1371a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd15f22-5c3f-438c-93ad-0cf442698b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c34b08-9d12-483a-bb82-c9be238c8123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12bbc75-9bf9-4ba7-8d9e-7e9bd88b88d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe67dd-7a1d-4a60-b957-fd88a785325f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd40609-8291-4099-ab25-b7e2fd0a4fcf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eddf506-17ff-4490-a790-5eeebc242906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7abe12-031c-445e-a36a-5d064a57c2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cab524-b154-41ea-a503-b92d4468cbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c41745b-4b07-4839-bab9-db363a8c145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89282418-3d15-4cef-a832-005adafb7ebf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11346af5-4bbf-45b5-bbb7-59f8624b9c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6df4b8-b9af-40df-89e2-dcd0b7dd913a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6ed857-9907-4ee7-8c0d-ba568a0e3eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af583068-0ec2-4057-a1bc-3eb1802391b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dd0acf-ed47-401b-9f2a-50dda3d387fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db414e19-463b-4e69-bc0d-fdc29d14bfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5a2d45-f3ff-4883-8316-40ed8c5be0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bd4760-e66a-42af-8f20-00ea8fc71174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "865848f2-b867-4884-8ac9-a5a0c730633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a15244-8d55-44ae-ab17-54fda57a4a77",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc1b1e-1f9a-4a94-a718-7497fe298aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242ad986-2c2c-4214-8ee1-5238a4da2ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cb63e1-8699-459f-9c19-d818db45290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a680765a-9019-44ab-bc0f-b159e86c8b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9fe147-3a9f-43de-bc32-de6e4a76ade6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af83eea-091b-489c-bb23-85a469ae5228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b4304a-4838-40f9-917d-603b226d1250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a16390e-cd41-446e-aef3-33be8a76df03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ff6617-ffab-4a7f-99d1-1b5fe91f17d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c2d751-2715-45e9-aa0c-2924176a27f3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98fc5ef-9f3c-4833-9a20-300c35953fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841aae31-89a1-4c26-b435-e029dd618414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99bed10-d721-4898-91b7-fd77b6f5f8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4144ea2-8497-4f4c-90ae-c5d78496b782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ce1644-62cf-4e26-804c-4ea8f2f22e93",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7823a439-678b-4e5c-9bbb-f1970a43dbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69840e12-1a3f-4c5d-a4de-d5cf849b2217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c77754e-731a-47ad-ba9d-df032151941c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda4bd78-f378-4402-bdff-eee7491bfe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c89f66-58bc-43d2-9d81-6df8157f29c0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825bd796-b626-47ed-b752-efe2b2ee0682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e884e71-5833-4363-8491-8784c38302e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4b1840-9978-4c0c-aa9d-61ac5dab9166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2390de-67c7-473f-946e-f408db879e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41552842-0c50-4ab2-80b0-8c63d312e00d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7a61c0-965f-455d-a8f1-05866da5d803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df2f5cc-4403-4a36-8334-9ebddffc7f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3033ead8-484f-41d4-974e-66a86e57fc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7ef82c-7d43-4220-a60c-9b5d384dad2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aee9394-7010-407e-9227-e6176d15872b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ff6891-86b2-4aa5-90f4-12a07d18ade7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00f3f15-439f-4ae3-8b32-2cd5a4b00901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8a8743-beb0-40a9-b7d8-84186731838d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7720c3e9-ec46-4601-9a9a-1cd735c732a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c37551e-3386-4034-874b-8fe54d436f51",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce6d6b-c685-42a9-8787-365e13f16cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cc02e4-5087-435a-b3ab-45ef779176f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104f3657-b851-4e88-88cc-014ed96326cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e659921d-a3a8-4169-948a-25c2c746008f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e105209-d8aa-4bfa-bb6e-2f8ff835208a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ab8c38-6cec-463d-81d1-db3b312c6902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de49a019-bb86-4ab0-9b9a-44634e96a6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c37134-96d6-41d8-a4f0-3a90e363c757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ee05db1d-ad40-4d52-b6f0-a2d2bcd03e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e0d408-bd68-4d09-9eca-cd18fdd90810",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a1e8cd-9ecf-4fbd-86b2-03b79845be8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfcc094f-62cd-4719-8885-1caa56cfd558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c8272-9b60-4087-8856-7612e30f90e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b352b70e-82c5-48b4-aedf-2c6c6eb66ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be638ba-b51e-4d72-b810-556f15930e9f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad7fc61-c6e1-4093-9afd-c97fc114650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af758ff-3012-4056-b0b0-bbf30f5e16be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c14eb2-c4db-4d96-8158-cacb4f9d46f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06bfc6db-1746-4ee1-b602-0e67654c0440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d89348c-4f8b-46dc-80d0-b04284620991",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cf5fa8-36bd-4689-9b3e-b9cb83088513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08383efa-90f0-490f-8537-ced72a94273d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2369ed-3127-4b38-8616-9835325a09e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "066251d8-2339-411a-82d9-bf321d70bb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81160a73-8924-4090-a51a-8f2efc6a66b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3e4dad-bce5-439b-8bf4-a49972aba891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dca50a2-4ef2-4a75-8552-6048c5f0f968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaa50b8-c3c3-4603-841d-c1fc8068b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2745ea76-7497-4b8b-877a-91d37d7f2b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69be178f-0fb3-4a28-8d95-c3d345141642",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec3610-48b4-4cdb-96df-12071a3b7d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8491ed3d-0da9-4dae-966b-e9742afa8bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7ea096-c6d8-4108-b94d-87af626de64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cf8f11-2d3a-4bf5-9795-d4bdc0feca2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acb1e03-20cc-4347-b693-0dcf7cced7c4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818de6a2-535a-43a5-9d11-0f2162b5e79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a56532c-8f36-4a2d-bcc2-438eeeb6ab16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f86b105-86f9-4585-a760-6a1357f9bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02790973-e20c-436a-a468-d3c3d189259e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba40c61-41bc-4665-b9ea-3146ee651fd5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24934d1-0f72-416d-8f42-f505aed2b460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68cf550-8a8f-4e5f-895d-4fca95deda0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aa0822-4145-4df9-a512-9e4567a2f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb3333b-806f-4b11-99bc-d674ad75caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48b8bf4-d5eb-4b28-a396-6cece9e42813",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f1220e-0cf9-4e6b-850c-e26ba7e1e75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb3c54f-ddb5-4fed-9e51-f8b4c6feafb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17b495d-12f1-4003-a16a-a1723fc109f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fae817ad-b225-4adf-a28e-6c981c92475d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5132a62e-7b9f-4621-a977-b42071110745",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c78037d-9e8e-4ba9-ba3a-5dbe39ab6496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788896be-a2e3-4d72-ad0c-cf40162ea686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302bca34-7863-4008-bb9d-acd92f3d2b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2dcdd35-f720-4e7e-b277-dce404b7c1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9037dff6-117c-4479-9e0d-ecba226c6b26",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463ec8b7-650b-4e23-81b2-1e73f2d7d9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ffe209-5950-47cf-84ba-b94a1a1078ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c170f6b-8df1-4a15-9469-692c293608c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "220087fe-c919-4571-9ccf-b763495bb7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15fd117-6b50-495c-98d3-40b008eec540",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfdfddc-5569-47e6-97cd-ff71c7cf2496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b193dcd-c827-4954-84c4-2122c99765a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c69093-4f65-4985-b4a0-00e7e08554db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b076a9-28b6-4978-8231-9ebd2e1801e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bb1c8f-f9e1-428a-a161-18ef526d3376",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f05341-057b-442e-9b5b-2b2a2e721271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b208504-3af2-41d9-9ecc-a681791ce0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe95f69-b3bd-4553-9b2c-5a02d1352a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99e9d8d8-c73d-4d36-babc-9eb6a1c43cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0bfdb9-40a0-4704-b346-cec6aa15ed8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445537ab-c103-4967-9374-8f23014b7bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd6f4de-acbe-4e9a-b483-2b0a7ff81982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818f4b80-ae7e-48d9-9e92-6acc1b1ea8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99fae46a-e251-4e10-9beb-3b7b8b4b499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee587c9-e0e7-4258-9ace-2c51836c0900",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ddfcb6-cbeb-4022-8b2d-57eeded0390c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24590b3-6dab-4695-999f-327591e9ae64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0079a718-9f8b-4ef2-ab27-a88f4b4964be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34db1017-ec44-48e2-91bc-b71dd3fb01ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7297b052-fbf9-4d6f-9d36-4f7c5a8ffb23",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee287553-7511-47cb-9fec-3954e06c3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059f9e41-3e72-4de9-b100-eafec54c191f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6615945b-ad3e-48d5-b07e-4bbcee8d5377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30694766-7f75-45ae-a44b-beecd9f57f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d30b0c9-a14d-4754-88c1-0fe80b4c045c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcbc476-2316-47e7-8ca9-60c4fe99520d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43943f4c-af97-4e97-a103-ac275ec2c176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb45970-3827-488e-aca9-10cd846c5fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c9a46b-25dd-4471-8a6a-d15601951eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a7eb0b-2d6d-4f68-b8de-cb8d0791fd0d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805a4844-6199-4b5b-811c-1cb78c501e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc4986c-6a4b-48bc-89f8-55bda5ba40ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2841175-03cd-483b-892b-5f0b1a42b995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e9cb09-2890-434b-8601-1b0031360bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906749e5-1ab7-4c96-9a4a-23974b59c313",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e1b0b7-4bd5-4fa5-a199-01c9eae2403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed7a61c-48bf-48f2-ab17-84a52c86baed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01ec689-de97-4b77-88db-6c0474cf0a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f423c5e5-b089-4f4c-806e-add030304000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b9278f-352b-4f47-b070-0583bf9a96e5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e8d963-d200-4349-b069-316627c25627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd7ddc3-d95f-4310-a6ae-95b5e91a3e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31024f4-79d1-449c-a434-528f30d8ff57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28dd14e1-c370-40b2-9916-16c1b303518a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973b663d-63b8-405b-8371-4797ca6286ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c2efba-ebe9-4828-ae27-bf0fe83a8a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f98962-8d3f-40bf-b78e-4c3e3536a999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d0765-7b6a-4926-8afe-f420da0af1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca25b99-2543-4b92-8ccc-9eea2bfbe01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a30eea8-e7fa-4e61-af35-e635eae38cca",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d0e746-92ec-4efd-9e42-3cbadc2162de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a5e92d-d1e8-41a0-957b-528e4c1da71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a98e0e-47d6-4c2b-a693-e6dc7d0c7951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "78b68cad-9d43-4ffc-8019-bd8c5f6a77f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db17fd9-aaa9-4c81-b1cb-26b2f72dd0b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad97527-8467-49c1-b67c-d5ce70d74b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160c8680-2526-454c-9cb6-98db8f559e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5678f263-7f47-4291-b7c9-3b05b6299910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f2e789-1953-413c-80a2-8e332f958012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425bcfd6-6850-4fd3-9363-b23f399765e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5315c4-705c-4b43-99c3-3b19416a1e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df45a2c2-edc3-4032-ab3e-33467ca4b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae0da07-2ca3-404a-8885-5ff3f0dfe30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "103a0bd5-1086-4cee-bf1e-e2e27bf3f5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00b32b0-d33e-4d69-912a-cdefaf5b8d75",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff9da22-8955-4b88-b8df-a0c544e35104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d1025f-b7b9-41a8-83f5-87cca4b0ebf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc1285c-4b13-4057-8d4c-1f6e79611c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75883f24-b6e1-4599-b3e2-330d1dfd40e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607d38be-4ff8-4201-9faa-0bbc5f5314c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9b4e81-1b69-4fa7-a788-b143b95a832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb83841-d1a6-4c7b-8ead-68971b4b5a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1837b4-b0b8-4591-b98e-1af87eb1621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdbfbdb-f779-4f90-bb85-6514d4d507cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fc2e27-287a-417f-8ccc-67fa68702690",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73460e97-bdcb-4db5-9659-f0360f19df3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f84741-5ce8-4642-b5d8-6fa39f78f90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498f1915-2ea2-4c80-b422-5f5405278609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a17b1e-a397-4f0a-b67c-4755395cf22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746d46f-41ef-4658-ace8-3410b58ba58b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5314ea97-ee05-4a59-a698-110ab4eef8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fcf085-f85f-49eb-80a2-0375afda6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc35132-0f94-405c-b933-9836dd758d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "86617c59-8488-4722-bee1-0d088a9cd186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c010a4-f96f-4576-9236-0f9748d8326f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0614b9-50e8-4944-88fa-0afe5d192b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2b07ae-0251-46a1-8b72-073a304be239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ecf743-6683-4237-9058-2f24b528fc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "969f4727-fff2-4dcb-a0d0-4c2d2e003497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168ba612-92cc-4a5f-b62d-eb4807b85fe7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d0f82c-31cf-44b9-af52-2ce3212b2696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858d6afb-1e38-425c-b237-47dc62ee5c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d79554-96bf-4619-98a2-3b2c6e44fabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de8d26ea-7d2c-4cdd-8938-04150ad3d9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f159319-4062-4c03-a515-74f0ddcc0471",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0d5e16-7ca5-489a-856d-f685a98c4708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162416a0-db8b-45a4-a972-e0957e580f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4e7b6f-477a-4537-9a08-e8e8b28dce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05dfe98c-c182-4e31-9b8b-714789a6b3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36c92c5-13aa-4c38-b03b-d1d546354fe0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4fdf33-44b8-4ab4-b319-544bfc93eba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a978f9a0-6d1d-42d6-9dba-fd211faa2b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae8e64-04d3-43fb-9e6b-78e7ab87f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6c20af-9ba7-4bfc-8b73-d8baf0790995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5270194a-2a59-4eeb-a3a0-4c65cbcc6653",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be3aefd-adac-486a-b8f5-6fffe94c8fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c666583-0e83-47df-a15f-8ec731af232b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31717e6a-4027-47e4-9dc0-6ea3012f90b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "017a34e4-7651-4279-a801-8477fd72176a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e145dda-7448-4dc7-8ec9-8d722210815d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815e4500-5b58-4b29-a965-a2cc410251dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796bcff8-d850-4194-981e-cf2a7c450d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837e3a17-20a8-4108-acc2-4b3cb7b59fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1949d872-3ade-4a4d-b3c6-7ab3a24cd19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d94e5f-5503-4e99-ad0a-d970cdb352d9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d57e32-b09b-40f5-9359-fc23e5daebd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762a651f-92be-4044-9c0c-f9e2d4d7e107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e3bdb8-4fa6-4029-8853-c9a74b6b8bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36873965-83b7-4b3b-a85f-0b734707ebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfc94a7-4796-41f1-b0ef-c342ac3d0454",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d839c1-8974-470a-a62c-2f6b8bee0189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62da0918-e6c7-4681-9869-f89f0483a63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6da10b7-da07-4de2-be8b-f53fcd4a0911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e08b5b-a0ab-449b-95d4-9bba5dcc69a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203c6d7d-13cc-4eaf-941d-f3c86958a491",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2ae2e6-3c79-49d4-8ce8-b9e7c4236a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578951bb-164a-4b15-b0dc-5eaa60f27d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548663f9-90b2-4e69-a560-4c232d53d6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53902cfc-5c0c-4e49-b030-a5313d85cac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba0a798-bdb5-49e5-8751-de940e746525",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0e3245-7852-4c2e-89b4-4baaaaf17ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faa46ef-7335-4355-b344-2dc08206ce55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42c23ab-e004-4025-b66e-ddd1b4364d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a67212-0731-4b2d-98c4-83308d460132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f3a15c-8f19-4b28-a474-d1b05f641eda",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e464b8fa-a75f-4e23-baf2-40d19cc023e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1ecc36-3563-48e5-b6a7-7b8767b645b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8312673-f223-41a1-98a7-dbadaadd6fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c725ae56-a9b0-437a-8062-ce45c40c0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba4665-bec2-4ff2-9ae8-ab72c6977a71",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4f1fbc-4613-4581-b7f6-088acca19391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e894a8b2-6ce0-45a0-9022-83d9b1337092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071d2147-b412-486f-98df-5dac0d77b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b838b2-77cb-4b01-a7f1-daad250111e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d64a35b-59a4-466c-93b4-31dda2a1c770",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdfad08-4b44-462d-824a-7ac6e60d8e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77beb1fe-8998-46d8-b0a0-2d1db4b4d300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1c7901-f1e0-4596-a302-2066907512d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb1cea2-e1d8-4f20-882d-0deb0e5fa50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17afcf1-e560-409b-8e8d-b73000ceb130",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01db386-b068-49ab-b0a8-a3c311622c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa98298-283f-4f72-9bd5-6800c540fd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccad9214-62b0-4fe5-850a-8554ff7c0ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c581dc9-2ae1-4898-a36c-48ff52271d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513aad73-1dbd-49da-9f09-f315bffa6292",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1200c72-b77b-49ba-b03d-e41abca28efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b2a424-ee54-443a-b759-0df39647c06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deba3e1-b82b-4e87-a5ba-606723744a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "214d2550-7343-4334-aa9c-18f1619b7a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af90272-e867-4450-8187-e610f1346669",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fce0d27-8a66-4a33-953a-89e8f56797b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4214628a-0eb5-4ef0-ad41-7b82b6294a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f9bd57-1280-4a75-8836-5d8e886d62f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3220dff2-0fb6-4b7e-8e68-674d832b43e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34798cb4-aafa-490f-af20-a5226a5f5cbc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127ceb5c-1d24-4e38-a6b6-14e591e10362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350a9dfa-22ad-43f2-8875-81f70e12daab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06d16aa-c91e-4430-b656-ac2ae02528cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b33524f-072e-4f3d-b815-62997c164ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0772dea-2025-49fb-b70a-cf852241d445",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a1561-f29e-44e9-a132-05c51000eede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618bbf9e-f799-4998-9b8f-6987f4b6471c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6210fc25-996d-4c75-a4ef-295b5bf4f54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88704a4e-a3fd-480f-bd8c-db314d025a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb59f9a-206e-4c1c-98e3-bbe89394ca14",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241f541f-1352-4d66-85a1-e5955df5ae8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b532dc28-6477-4e11-ae70-11831e5dff1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f961e0f-bcfa-4316-9427-5f8405124d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7612303-2091-4d3f-bf71-132344467f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f00bc2-81c2-413c-ad57-3c001c65c330",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44b27d7-7018-4b08-b123-6eb5c5628af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da3dc66-7f57-4773-85e6-b587f0d3489e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875c3a26-d9a6-4be4-8a2b-1efc6d3182bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee29685-618c-43ee-a96c-45639b563a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ebc5ac-d9f9-4729-925f-a28479c15cdd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2547edba-55dd-4974-a046-2d378ec9ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60daf50-7fbc-40cf-97e6-565d15acfe41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b954d4-2b24-4895-b0c2-fa652a443337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff21f98-497f-4639-9182-6cacaef15ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715db6f1-3280-4d11-b309-1d505dd1ca8a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd358123-4a9a-4d39-a659-0cd2c5b65d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb9fdaa-04e8-4930-90f1-cf6c21dbf61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09351463-976c-4613-8741-b01ce8ae84e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c33b5b-8b70-473d-bba0-5e08c9f4b0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ed2829-fdbb-4490-b2fb-8899be2b9024",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0705d09-a689-4a62-8009-300eab1ac7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfe9720-461c-4501-9b82-b1b9bd3aaddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766abb11-2ab7-4edc-9c70-d1a0b7d20983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f404aa3b-0fa0-4bc1-ab95-31323f7e3e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8bc20c-e8df-44d9-9d51-03d0355f0315",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e6286f-72ef-400f-8155-d1bf6fc723fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0f745f-5ab9-4e3b-8db1-f6f65a9aa49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b717ef-9643-4758-9147-fd1bc1c10adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed7c0df-0cd9-44d5-9d35-ee468d1befd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c14ef8-0f79-4ad0-bcde-8cf81ad022bd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b567ac-68b6-4870-b041-452aa837e8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cdf6c6-f88e-4e4a-8c2f-c46bd7516a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9198a356-d4c1-4a3f-89b5-a6e9203bc9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a53cc262-f9f1-46cd-8331-5e73b56b3db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3312b48-ad09-4ffd-9624-2aaa03c5e71e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fd4d0e-c2cd-4025-8f04-74b64052dbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e9096e-dc53-4fc8-8dac-91d6d3941ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0bfb5-3acf-4dcb-8e3c-41ac6c35fd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fff6dd2-788a-4f6c-b301-20b4b40b0f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ac4d81-1418-4aac-b2f8-80f18ee2a9e2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca98bc6d-17b0-4f5f-b69f-e9145967528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfd42a9-dc09-4cd1-9734-807504dc03aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cdf507-ef5e-4af0-9106-89b0f64e8046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59b289c0-5c54-4d97-940e-56f3d54d3797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d7634b-32cf-4723-86ac-86b16ebbbbb1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139ffcb3-7412-4d0f-a309-c692eb8b848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258cc9ac-888e-4dbe-b947-5467ca59401a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21018a31-1adc-4923-8ccc-0212d7386e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a10ba3d8-1e11-49aa-a889-fa0715656c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946ae1f0-68d0-498f-9122-089a993b77a8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584c6625-b69e-4c55-ae9d-d8986bf5c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed35f98f-9fcb-4b79-aab0-a49556a14104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c1207-1a6a-4595-8f4f-71da11e5de64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57e651d0-4150-48c1-b4bc-df1ca1d3c142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f48aba-dd1e-4ad6-9c0c-3b3dfef8eefc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d13619-f79e-440f-9bcf-7a278c14de65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1c29b483-fd6b-40d6-b370-103594f72eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfb1854-00b3-46df-80e6-9c3d1edbe4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8830873-20c2-42c1-b491-ef9ed977a79b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4325a787-8421-433b-ae4d-df1b6a47bc32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41de5b1e-f153-426e-aadf-c4c8f1e824f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b4286b-6093-4981-b3c2-2d95e76ed695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a442c98-f671-4910-99b6-002e2e2faa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c2e324-5df6-46ca-a042-4d27eebcddbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936b52d6-c626-4bb2-a983-5c7b9579b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b251636b-8b1d-45eb-a375-df784c7ce9c6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6283f8ad-2411-4b7a-bfcb-b90f3b3ac844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1be62d3-7b18-4cfe-8e96-66a6360e5dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39972a-e610-42dd-aa5d-fe4319dc222e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a708f891-a76a-432c-aba6-8322bfd5a124"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2681a1b2-e250-4312-98b2-6c44f4ae848e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06c8038b-e0f5-41a2-88e4-4a729aa759a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93f7afbe-3ba5-42e8-bdc0-401fe838b9d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ef4bf94-081d-4ab7-a0c0-fb118c128bb3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e942ef2-de9c-4d95-9b43-1bba4eecfe7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e648d02a-b2ce-4f06-85fc-1915d7c0b77e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c565b9f9-3c0c-4b5d-af3a-4ed4c5c7d2e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e9f191e-1b82-4b00-8d4e-7be0875e5f0c"
                }
              }
            ]
          },
          {
            "id": "9126c63e-9316-48e3-94cc-e2618d39a39f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23e0d1f3-20c0-4433-9897-f58121ae12ba",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "890c3eb3-7544-4a96-8401-ed50df529b0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d610eb76-278a-490a-a439-24741be4b3bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39e809c1-a163-4252-b389-a3cd1769c204",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4080b99-6b39-401a-a9e7-be569d1473f1"
                    }
                  }
                ]
              },
              {
                "id": "ff26f4fe-f391-4a28-9fbf-d7fb6b32109e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "192ce7ee-f364-4327-8552-e26fe9c8b2c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53e212ff-f6bd-46a3-98ac-6b97bd2786e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66bda575-501f-45c4-bc76-5aae060d330b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f61551d-1364-41c2-b6ef-3b52fd1be301"
                    }
                  }
                ]
              },
              {
                "id": "d40d76a5-3240-4774-a255-513749f17195",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "518a45cf-f443-47de-b1ee-7f453cecf442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac44c74c-c6c0-4937-9dc1-457cc0aee8ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "341e5a27-2202-47ee-a41f-c589bd83535a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb2dc8ce-0300-42cb-a6f5-623459a71070"
                    }
                  }
                ]
              },
              {
                "id": "1a41cd91-a5b4-43d6-a532-1ff1fbd28e4c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45c03814-b7d6-4bd6-bee6-e5e1955b21e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "727e2781-eba7-4de5-b425-e20ac1ced37e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d50e5315-454f-4e7b-ab28-658bb29a0125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e588891e-2b16-47f0-98e5-3550827eab82"
                    }
                  }
                ]
              },
              {
                "id": "dfb675a0-4934-4682-833e-fccd15e4a45d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6163610-22d6-4038-8906-3590df89268a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f8279f9-cf5d-4ac3-92ff-790f0d5b644b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dddbdbd4-1805-4f54-866b-6082ef3e31ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5260b063-300b-4f50-aa0a-6eb46415d1cc"
                    }
                  }
                ]
              },
              {
                "id": "ca8dab89-ad66-4eba-b146-561ce1a91b38",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a19bb68f-cc2c-46a7-807e-b38e9d5fb3f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "766e2b73-757d-46c9-9f77-fbb5b211af2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35475f6e-3d0f-4c0d-84bb-6fea44a1f5a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "796c1ca9-be87-4637-9873-fdc3b78c9639"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7ddda2f-5548-42b9-8ad0-01c0430a2ef7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93301631-be7d-44ea-8deb-247670c3231d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "785ba183-9a5b-4309-beb0-fd42ad661ac2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f502cfda-ea71-4edb-b294-c4504855d826"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21499a2a-12f2-4509-88c0-65c04d8a748d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a6dda510-dcdc-40ba-8420-0543cc397f4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d3e2c46-dea1-4273-8eb5-3f4ddc517acd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1165ed3-9227-4201-9db0-7b24c3d81a03"
            }
          }
        ]
      },
      {
        "id": "183f320e-fbcd-4d05-8188-f2ac87da1f8c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c82fe731-b1ac-4790-8309-a2fbbf026b53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4dc7a1c-2d6d-49d4-8968-4ac1dc0f63d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09562b4e-30bb-4a40-981f-18289a11dd13",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed88818-24e2-4971-9d70-b32b62145112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d714ccf3-07e7-42cf-a612-dfc52cba1b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5aa2c3-8f05-4209-adf8-f6c9bb0c365c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eed9ec7-da92-47bf-ad3c-1af417694702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8087155-41db-436a-a53b-254b3409184f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd2c15f-8d27-4967-a36c-1f4ad5480103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fa67b5-c7a4-4af7-a7a0-08b489bf7953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a6df77-5abd-4b40-bbb0-862b46796e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d51564-b5dc-41b1-824d-6e7e776140f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8420c8-1340-4fb7-8757-88d0cdbc633e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc22ece3-37df-49ce-90b2-d7d6109de20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f560996-f835-45af-9c72-ae1597b086ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ae6330-4d71-4980-8103-b58dd1512f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea5cb0d-1c77-4991-a36d-40ffbb8f4be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbac5387-25be-447d-850d-a334467f5de5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5055f1ed-19f2-43d3-a5a9-97f1873f3699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0add26a6-67b2-4044-847a-e378211a1670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6da3eff-c87a-4878-8eec-b3f5d0208c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cec3f58-debe-409b-8eb4-8a3c7c59825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a569b8-b8aa-47cf-b9e3-224cc3429b9a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ce7344-11ce-4e7c-958b-187c3ddb680b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9b3245-d9cf-4a00-bb5e-8491e6b7cd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a29feee-9583-45d3-8744-8f10fbf87d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8554f971-211c-40f3-9e8f-635853c3b449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba803dbe-fcef-4bab-b0aa-459b55b24e97",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276f77b9-30c5-4d80-9491-d338449cf8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440276b9-8e57-4003-9628-4f2896327c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5300ac-879f-4aee-9848-e650b10b22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6f623e-4adf-4b49-8008-cb2fa6a022e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce0e1e0-f4de-4482-95d9-d800d06f5b45",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1206404b-e73d-40aa-a544-92452f97d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58e6ba7-abbe-4f68-a32d-746f9497a207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba017e4e-c413-458c-98c8-2373cc94d0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "510d1c2f-58f1-4efc-a298-315c4a2e149d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c253e8-f45c-40de-99e0-5cf1b8fe42cf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb153d4-2fa4-4e48-a056-22d55c33d467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caef547b-33b6-44d4-b9de-b5475085e9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c5f6f8-e837-4a42-94e4-811942cb5a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a0bbb6-3254-437a-8a28-48a2e749e66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37feebbb-4f49-4daa-b776-0903e03e2253",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2060e54-486f-4812-847a-d3cce8e90dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32cd451-ae38-4834-81dc-a0460bbe5cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d16043b-8b7f-4a81-acf1-541e6db61736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba374ac1-1214-403b-ba45-ccd0d1d3b4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb6d83c-c545-444b-bdab-18bdce3d0c7a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3fcf54-cbf0-4a87-aeff-3a34bc26a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d0d1c1-05a8-4e88-91cd-5423cc80da96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749a2309-c453-415e-b011-2c55376c84bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0262be46-8ec6-471c-8184-93b71ad1fafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554a4a74-9842-4a3e-a213-d7e9965ad7cf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a2927b-fd32-4b35-9dfb-7eb4de82e61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803061da-921f-4cfa-8587-c38b77ec8013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658b070e-a895-4723-afa5-644236bac85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81d4959f-f2c1-488b-9d6c-bab1120e35c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcecc0d7-9aa6-4920-81e6-e74dea8a0336",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eaeb65-a6ba-4b59-a1b8-e2508a0ef442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09004c23-ca0c-419d-b879-98364c87760d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392181bb-0750-4cff-88c3-7b5b50a203a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0d6b75-bd19-46e9-8bb3-a6585aef5a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31833ee7-49b6-47ad-a260-964812a7f633",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d20101a-7bf7-4380-84a1-afe3f5a8187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000dbbed-5c4e-49aa-a554-93c9febef020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e582b2-6f3d-4557-9621-2cb209e85fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b954b2ba-2b26-4cdc-8199-5a28aceff285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e68c28-089b-462e-9b58-c6d8a9460403",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49d0a05-4c02-4203-99f4-bf9b6a527256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8ea207-8928-4e43-85ae-8454279af2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2278aad-873d-4d3b-8343-49175bd8f180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d952fa2a-08ac-4a80-972a-b70c5340464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf67c0ec-4fe9-40a6-93f7-d2302b5e1ae4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3fabbc-39a8-4243-8c4a-4e03ada5d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448e939a-d36f-4f0f-bfe6-9630c9d414aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3bc98f-5f6c-4511-a256-290fb5c87c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66fad657-a5e5-435d-9796-2fec475fe2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f09ff4-79fe-4c96-83af-15ab315f92fd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96005274-feae-4e9b-90b7-893dfb39d720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cfb6cf-6705-4bc3-9578-636e2948f2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06dec46-5546-4547-bc39-b5d8f765f80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85784f86-dbfb-403b-a37b-0dc7b99a8e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7030159-903f-4711-8e81-dc030208160c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5aa206-be53-4ae4-9520-899b5d7a966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e8d4c6-9999-477c-be2e-34cb7c10ea9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6905ab-a266-4c15-8340-78d4b08dc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d59355-cc94-46f2-b528-5c8f6c881817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b7bf75-ff22-4a9b-8d64-ca827cd40946",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d104418d-aab4-41ac-b50b-f8fdd4714271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39d578a-aaa9-46e4-b37e-28497b5c245c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07081e34-e248-49c1-9b0d-224e3ff1ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3428b707-a29c-4526-97ec-d243effb1d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d857973-eef0-4f08-b7fc-f305e283c5cc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0e7c61-1d78-4d9a-acc6-c7f212048e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66325a1-8da0-49d8-a86a-967b2068f170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5088446f-4002-42cd-b162-79dbf399ac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be18f9c4-b2d4-413f-8f76-4ed7d3fa604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbdaef0-2b2a-469d-9d98-7a7a6adbfde2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9189c5e-8424-4592-93ba-86fc4793c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5deb7ef-a458-45b5-af26-12ba7bfb04a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3633a22-cee2-45d7-81d9-8e3f191460a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f1d23c-6bab-4159-b9da-9c7f769be77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eea6c32-7295-4607-a248-83d8a5909e54",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ceb2dc-0634-4b53-aaff-379c0f8a47dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bc8512-9f5f-44fd-9c41-58f6f28aa0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4109650f-5a63-4f4f-bbd8-2e4f27e41633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d58c6db-ce39-4cc9-8a0b-7500c7e27841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d5ec4f-0eb6-4a06-b554-920d1727a3ed",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e9245a-2357-4ab0-859f-a8e93a8a9769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5a5a5f-8156-4eb9-8153-7ec83b90c983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485b8698-f351-488a-9f73-a81cb187d566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b49ba8-ce5d-49e5-a0cf-9e1d8d9c2a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915e3ab4-fd63-44cb-b795-183ff268e27a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05c70b9-acc4-4787-ae47-a64dd9336c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa5b18c-d110-432d-a40a-4d84646a4d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d3e063-3771-463d-b3bc-f06ebdf50c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71da97b4-718f-4e9e-b743-44b37c544bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0a91a3-4137-4263-bcd8-3510c5ec1fa6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24089f1-a9a3-4ccb-884c-5e2aef5b9d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4123631a-2e2e-480c-8426-5190df28f801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57ac2b1-2c00-46ea-a0a1-65fc2ff63f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5539f30b-80be-4209-8e0b-c2edff514eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9b5065-f4c5-4515-9d5b-4bcd8a9925d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0e5e8-52f4-4272-b63d-f876d192c433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722da247-0dc1-4bea-835d-3be77364d31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762b84dc-f3bb-4e6a-a2e3-031b4a99e6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350861a5-1f90-4d8e-9bce-1fc7db7da8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c260a853-14d5-4f58-8dac-659949fc0708",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6143d4-5941-4e81-88cc-735bd133b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b557097-c72c-45fd-bb43-8661c5387910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c271a2a-d0bd-4fd1-a946-8062a0b4f577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4764dd1a-5bd0-406b-b58c-5952e5c58559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a01edd3-95e7-4d45-98b6-a78e238da4a4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d81e89a-18a1-46f4-98b7-0c84463c5a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6a7246-e8a8-43bc-9183-24f03d3f5412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fa4c19-25eb-4f38-87af-f3121d2878a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43074354-d5d8-4678-9e9a-725346a46eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa34b54-8c4d-4e1e-9887-043d286b5953",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150f3899-309a-44b9-9308-75e72c356bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8a42df-9166-4fda-bfaa-eca28ce973be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3967d4b-6ddd-43e3-8e00-36645709bee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5326c4-3c10-49f8-889a-387c35db6861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137f9b1f-7ba2-4b83-a862-1d7a83795fd6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b55b370-f48b-4c9c-928b-c4cb8702bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89bc8f68-0754-4db2-bb9e-83ee730a13bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992eab0e-10cd-4ff9-866d-d32c4eb3195c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "976753e5-3f51-4f63-b1cb-38c327727e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf1fc49-adfa-4957-a8f5-5fc91924acc6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8046e0f5-2308-4146-91a8-356d4da4ef1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f75def-ae0d-48ed-a6b8-22094efee789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fe36b4-1a2c-454e-a481-5ff3a9d44cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f28b23d-1d02-46ed-9ee7-5da2e22b2810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2db040d-fb15-4ee2-9ec2-6eada2657d0f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae94786-c014-429f-86fd-a125705cb989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ceef1c8-1ba2-44a2-aa93-6b0ecaab880f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d25897d-5ed6-4637-a904-6db2d81b6a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e533970-c354-4062-b9b0-b8b8510b82b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8393a65a-97fb-4851-b77c-97011fc42d15",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c544c3-4248-406f-a171-ca312a40054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f32820e-9126-4285-90e8-778c2d12d7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ba632d-70ba-4865-a360-69efc9b69990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e74365-d9a2-4506-8fa2-b26161efcdb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e597956f-671f-45a8-91fc-60284955b7ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c4feca0-1745-4084-b0dd-76c747748962",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc0be41-d2cf-4d70-9cab-d71d96ff5f1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2506239b-03d1-4e9c-9171-3e328eed6235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c05aed-5c04-45d8-a935-e60e4fb04014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35e020d9-d31e-4358-a150-a8f2b4b4e7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e5fa77-6165-457d-98aa-4d4f9fc47eec",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3894199-364f-4e71-93b2-f94da2e03fea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3651eea9-59a8-4f36-906b-62aa5e8cd6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a2646b-2c03-41d6-8d4b-4aef9b513b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5491bcd1-215a-4962-8c56-415f95c87a5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef82c4b-3f43-4141-bdf6-eba5a5829dff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b32fffd8-dfb4-4acf-875e-077b94b7c100"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7505b5e-c158-4cf7-9500-e64365479028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4618b52e-36da-41e9-bcfe-b3636674a658"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb5a6043-144c-4b93-bb20-c611d67c7023",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "deaaea05-09a8-44e3-84a7-9ff60146d200"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "280487f1-fba0-4efb-b37e-a8e8c8f510cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3a7be20-f196-4e6f-91d3-a98d7329cc44"
            }
          }
        ]
      },
      {
        "id": "0ac8f00d-edae-41ff-8fb5-3fabc9a5774f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7dd54e9f-30a7-413d-a9b2-ebf361829888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61d8bb1b-dcea-4aed-97e9-ae3e0dcfc1a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "158ba869-73cd-4396-b27b-d59aef87293b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669d7290-bf15-4355-8b3f-823c5da9c2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca0e522-a0c5-4381-9c95-113a92a9e948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda808bd-a61c-4824-a921-2e032545f0fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211ead6e-013e-4e88-a6b1-24c7e5eeae41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06338cdf-e449-40cb-8937-bcc29d0c8eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba377df6-e968-4c3a-ac40-49d75ae842b5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71193f60-7de2-4a0c-9573-e5205238af7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48c8620-fc48-4585-a0a4-39a664954bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940f9eaf-6389-4df9-91a2-006fc9585144",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b67d46e-c243-4027-9f30-338dba73b8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2443b4-b758-4d4e-821e-4825eb8f10cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bfc587-1e5e-4903-9eeb-21253e5a89ba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af715e7-93c5-409c-826e-6205e1d1945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d497252b-161c-43f9-81c6-a88f27f1f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e62d4a0-d724-4a0d-8b51-5167f0d550ad",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be36584f-fefd-45ae-bb5f-fc65f3e81296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed90534-c799-479e-97fc-7c75e1520aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3697f72c-b0e9-4dd6-8b79-7509573a29f1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ec1233-a7be-4cc7-94e7-ec2a702a4098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c4655f-b6f9-4fe7-9be7-989fd5a14868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5bd87e-f645-4a7f-aaa3-3e011f8eca0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57334ff3-1508-4021-9b63-b7d48ccbcdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d28fbb-fe3d-4388-9a31-8c24ae6c1fea",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a2d3a-2b36-4eb6-83b6-7077c8fa6fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0a2d6b-aa2c-4d68-9974-12a3d40a208e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a200b5-c3f6-4677-8ec4-9b6ef576c16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0238de7c-0330-49e4-b3d3-5e0b357c6c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3358a762-6e4a-4f8b-9c27-e44a6f18475f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad0d4dc-52fe-46dd-8735-13fbabc9c621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5e317b-df4c-4dde-b58c-42b352d17359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0af06f-9bdd-43f9-a729-e73c59280fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5939000-9ad0-4976-a473-4633a2cfe432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969f2ae7-72e2-4b2a-a034-3ce8d8e616cb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a613c6-2018-4f29-9097-6e888aa1e0d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9402f592-4964-4ff4-ba74-c95ca2a4aeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4bbd87-3095-4317-94f6-6b1831a07517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77be5cb-0eb6-418f-a649-0f6e3b5a6a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a42b46-5d89-41e8-ab8b-3e9e37b38aab",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007d9f43-9bf2-46c9-b5d6-ded82eb1afbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a7130d-e67a-4ac5-9b85-5eccead42a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e304c4-77a2-4b6f-8fac-084a5780da46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bfe76a-e143-4a1b-b785-dace7c11f215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb5f8e8-101b-48db-ae8b-2d81fca7a663",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02951253-6d08-47b7-9fc8-4bca3d55e0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71782b4-f39c-428e-8469-96f05613fd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f83a7-9798-4306-bbe1-b605dee9e163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29da8cac-64a6-4c34-8a43-02ed34165eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc664cca-ba2e-4c0c-b303-ff1338145d45",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe20cc9-82c9-4d5d-9d3a-52066b8db3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ef7f03-fb25-45db-a7ec-74461e868884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420c6752-0a95-4e30-874f-4836360c04ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9fbb69-db99-4804-a3f1-dbd0faa2b926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe58c70d-931b-41f6-8cf7-eedf74d803c8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654a7b51-4319-47e2-b9cb-b53fb5d84e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a6e199-954d-4245-8864-b3addc2352e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0f0562-bc48-4384-bbcb-87823cf9d079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c047c0d9-fdff-4153-9b8a-07a1562517db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5484f-e467-4a3b-bfd7-b42cb2d388cd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6193f4a-6c9e-4953-96a9-e01f6a0514ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3711104f-c0da-4986-856b-fb6a89eb7262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0998700-1a2d-42e6-ab12-e9bba75b9ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d578db-9e24-4881-8ee6-c6e1e63e10e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a7d86-1851-4974-a015-96a3d50549e4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dd4653-bae0-4798-8aa9-ce1463af2c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a758126c-eb46-40d7-9e52-f4ad0c495a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a98c37-c64c-4acd-b991-73abee38f82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9129131-8730-4419-aa87-fab20940e8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfdc70b-1f40-4d44-9496-94b8107a6db2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76355242-a8e9-452a-973f-14ccac9c03a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73767f65-0441-4bca-aa42-35dfb3fa59f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef3e5be-609e-45f7-8f74-fbf2ef461e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e20140-b330-4f82-aeaf-d56aa2269b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1921af-0c30-42d1-8163-1bbd2e8c1884",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7595bf97-faf0-497b-b0f2-b30bbff061a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f801eb2f-96b4-4e68-99dc-5086f68684e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f07216-51f3-4689-b3a1-4839ee575370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656c7934-02e9-4201-902e-5f4248da2431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39409af-75c4-4a13-9fb8-ac54fd8ab320",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c0df68-d6e0-4870-891e-c70fd784804d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385bcb14-9de3-4cda-846a-48a645e7b870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea8ef4f-d86f-4928-9628-b95df55d6496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25477b09-8977-4bde-ab8a-fe15f0979d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32742241-60fe-4f2e-8ba5-cacf8dd31006",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe00fcd5-371d-4eb8-ba2d-553949034a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fc7dda-4985-429e-b983-2e3dc0a248a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cab5296-39d6-4fa2-b0a8-f9d7aeaee9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99d4252-95f4-4c8e-be26-0b3f1ffdfdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da855701-833b-4abd-9df6-a39657e030ef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96da64ad-5e04-4af5-bef4-8e4cfbbc2905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a818b51-d63b-4d31-bc71-db6b380c5acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece2097e-532c-4afd-8905-07dab9d2cff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e98b7a8-e354-4191-9cf8-bb4dfcf982aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeba65f-e1b1-4d66-84be-a0a178e426ed",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7381cb-d595-4d6f-acbb-a7c1ae673b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518dd0be-c7ef-438e-87ea-29643fa66d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc49a18-50ce-42a8-adc6-7bcda8785967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd6b242-5e40-468d-b3d5-74cd46258918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa81901-2a18-49be-8ce9-f872d7de1aaf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f71f122-0558-4e1f-ad03-271dc22fa0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270fc74b-817b-48dd-8d84-8ec23175d3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddd9ad4-540f-4e35-84c3-ed2ec2659578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cac62c-d9e9-4f99-a67c-493b796495c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3773d2-a77c-4e4e-957f-269bee1d2e4c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63fb4d3-c190-482b-9626-746bf9fa7fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f88f4c1-4e73-47dc-a768-5ede0468efb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663c7da0-1a9f-4c2b-becd-646c726cad17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46800dd-fa8a-4fe8-a9fb-8fa918512e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60be8fd9-61ce-492e-a8b5-9bb24b5800a8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10063acd-bf8d-4404-93ae-01b07583fdca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee8e7ae-02bd-4192-a035-6fd9d1305af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2e9c3d-9d05-42b7-b9c6-c7166ed328c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b4d6f0-1137-4c02-9f46-0a46fab0b381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee47e88-1649-452d-bd83-26e939b709c6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6183229-7663-4dbb-92e1-e200ff7e5cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8d5d07-fa60-4ae4-87ad-40cf5a0042a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b9d12f-d174-40de-af6a-a6fea310f568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bee5c3e-6b39-4208-8f2f-30cd3f6d6ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469b69bf-087c-4bbd-a340-9c0345128a69",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c940b84c-4c26-436d-a165-de2546bd283a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318f52af-6c16-4b9d-93af-d75590e955cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a24320a-7772-45a8-8582-1ba14613ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e59373-8164-4a12-8069-b416e960efe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62d2775-ef94-4967-bb1a-bc8f4410de3e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e768fac-c7dd-4e27-baaa-6dcc7b1d747c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668229b3-c283-402f-96e5-38268e4afc4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c33526-2b48-442c-93c3-b5087e584a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4e9f13-ee4a-4deb-9607-6f9cba9808fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c36dca-c32d-4bc5-a262-3d4821489d3a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e890cc34-cc90-4c0d-92a5-727daa6c5e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05acd9f1-9d2f-4932-bbbf-2bba57d8622b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f14443e-29ca-4cdb-8add-c05e7098af20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aea5bfe-906d-4a15-bcbb-882c306e6bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bffd31d-4867-4c50-a192-2d2806680688",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ae612-f717-4b6b-817e-deec6c3df511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1f074c-72e3-49ad-836d-6e3e8503bd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581660ca-10a2-43de-a8fe-edd348fbb625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3baa1f86-cf70-4347-91d7-4f27083c684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c751bb8c-40ed-4046-8624-b4bf807b047f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d914045-ba4d-46d4-8d58-6bfdb04e96ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7dd2332-a157-4e84-8023-bfdaa318e54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1b0ff3-effb-4ba9-aa41-07f4af04cc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d278426-aa25-470e-959c-8fcabf3246ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2e0ef4-c373-4421-8876-8a098afdd32b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b94fb9-1550-47be-a9ec-76b749ffb99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a18360-c692-49db-ae87-40430276acd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7f44b2-f09a-4bc3-969e-a22bfeaf5a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7866c22-8cff-4456-851f-7dde06278b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ab4013-df30-4fea-b1eb-3f39ab0d30d1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1451f278-2ff5-494e-a07f-6e47abd11df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e28367d-a869-4d54-aaf7-73bb1e0268b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf946c2-d1fc-471f-b16f-3d3c7c5e41d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aec55f-6c29-47c2-8652-32c2f008638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7c0a4-c505-4a9b-8ced-8a71ec38147b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64098a76-e2f5-4840-8c6e-e612995fca1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1b1755-fc27-4ccc-bb2b-5331eba495d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8545e296-5773-4547-ac82-ddfe69081dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad535ade-b33e-48a1-ad56-74be9b967115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe87597-5cd4-4e06-a565-04795b16395f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a50b79-6ac6-487b-993e-891f7df2c723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bd4431-6e88-4f92-be4d-7672546115ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df00beb-f6b7-4c04-8e06-86be8838ddca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadc0bfd-258c-4a56-bbfd-8c2158279a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70e4c68-a701-4589-a7dd-3c34b29830f3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0472ebec-3bc6-41e0-8b37-c9c3975bc469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158c9b50-28e8-43fa-908b-1d4192f9d357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e43bee5-5526-4d95-b2db-a1d624f99cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba48f53-f8f7-427e-928c-ef239cb8a0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c1d432-8efc-45f3-94a9-76859ddf10f2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028d1d0f-8f5d-495f-84c0-7cd2768550b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f260c5a8-96d4-430d-ab2f-afcde8854610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6739c7-48ce-4f93-b32c-7e4d7bf181bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb97b49a-6a51-4c72-b01f-6a81ab48728e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bb669c-bd5c-4927-aed9-e97f4fd85a9c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a196ab8-46da-4966-ac6c-3860c7e40be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc6d5d8-2962-43c4-a4e8-8e4ebb906db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8008c60a-b8a1-4187-b5b3-4b89bd9f5407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff039247-2123-4bd7-879c-5960dd48d7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c506d583-0046-4430-aaac-086f2f5deee5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3698ff1c-0de8-4a87-a3d7-cd64994099be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cce27f-f730-427f-9ef9-4d680ae5d8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2042bf-a059-4f11-9fed-e13a5db37044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99742775-c551-4913-aa10-afb5084c068b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d8a0eb-5908-4134-8720-9e76cae0d8f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448b7235-264e-47b5-8c01-dcc457eeccd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd76a38f-8746-44c0-9a88-3f5d88071e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f628e7eb-3fb1-459b-b362-5c515bb2bd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4e9d4e-d226-4957-a30f-112e1a1c4e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba3b5cb-bce2-4e8e-ba43-dcdd15f70146",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1458c06b-cea7-44fe-9015-4ca5bf77c809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27ae5af-edfc-40c4-8011-c11776d247d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328fa243-2f0f-400d-997c-9bc4fc89c532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290fd341-7137-4ad5-a15c-c46a022c419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74aafdd-82c3-4016-82ac-fd5768058fe2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b961c4-f78f-485e-8d31-9d8f08fbba82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a468cb88-854c-4e6e-b649-5e6a12a48d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97949463-bd77-4e2b-b874-a6ac8e98bf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dc5225-fc35-4eae-b334-f423cc50771d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1912240f-0f3d-4542-b152-9cafe17af808",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94629815-1615-4210-82bd-0f1daa765e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60efa277-e53f-4c48-845a-7b9d7844b458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9ea68c-480f-47be-b581-90ff70b83015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4647b9d-1f4d-4f87-acd9-eb255140e7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3816614-a016-4cf1-93dc-c057b8031a30",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e6c883-7a83-4bcb-8fc8-538fdff63c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d274a686-5f5e-4db0-9835-6250186faa63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee7dc5-8c2c-407b-8f76-8c4f8b84fb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77421145-3ac7-4a08-aa9c-0caaf3d88e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0e42ef-efc9-4d90-ae64-a86acce80e93",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74360e42-3e8a-4993-b001-e4e509368905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae98ea76-bc59-4bdb-90bd-8bd64cfa8a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cede13ee-2429-4c93-a14e-8d55b9f56a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f9ae95-e6e8-4248-b4f3-9e36148b3a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200eee31-ab51-4132-9184-d002d7ba5f67",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2a33c9-25c6-4ca5-b982-a12f2653b4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6aafa2-f5fb-48f4-9fe4-24b2e74c6e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7e3163-30e8-46bb-942f-460de599b5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5e38e3-5388-4e4f-92ca-79e1acec952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cb0eae-8745-4a8e-826c-76ee5ad75a85",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611d9912-6cad-4d7f-b11e-06708ae27998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1684c2b-99db-4abd-8bd8-54542fb1513b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06687fc3-39db-49ef-b3c0-6240695797c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e77f0b-884d-4475-af2d-52b0462e3c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1496ce4f-e853-4907-8128-b4d3f079553b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f83c2d-0999-4e2e-9b4f-04e3df581c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a26010-1cf7-44da-8aaf-95078b05d843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a21097-e705-4849-a0b6-5f71b2123dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71563ae7-f6de-4af5-9904-3da9d17243ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3ee341-d1d5-4ebc-8280-238a9e1a88f9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeebf9a-0147-433b-935f-0c03d6ee1523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bc922b-b6b2-4b05-8a55-4039187733fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f6ff51-0c11-49b7-aaec-714ff46156c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e30ddc5-28c5-42eb-8844-d329f65ad57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e40d2c-eb0e-4d08-b136-8177f6e354f9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fc6628-ab88-4fef-9604-8b5b483d3d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4302ac82-20f0-435d-b007-31ca322be33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36e99a7-790c-4bd0-8206-81d52c8fbdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b785f24-b231-41a9-ac1e-6dc8b68a1047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b561c2-5975-4d16-a60f-585c9498af2a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db90d7ed-a1d9-4bd4-84bb-d517e94cb64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195dd22c-7920-436d-b13b-57bb8cfb2e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb88bd6b-a60f-4018-8254-48f8c6e9066e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34101531-e7d7-4e77-9c55-d80163069a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779db8be-7ee7-4419-87bb-a6e0372e5142",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac18fc0-dd3a-4a0b-978b-caf8fb5b02bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a162d2fb-ba37-457f-9b16-60a25fe461b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e104cc-59a1-4f1e-a447-627ae61f9e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3773ecb1-753a-486a-b5b6-3a3356b672f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af27405-d79d-4736-8420-da21e048f028",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0362e4d1-f9d6-4b2f-a1d2-028ea9defaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0042371-94a3-4c9a-aaf5-805ad1118921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f85bbe2-42d5-4406-ac9a-105b39a6377b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c805ff1-343b-4dc0-8536-9a13842d976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af95207b-79b9-420b-b672-79ca6c838e8e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a232dd1-5b63-48ab-9464-fb6c6c2e114f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b22ecb-5602-4266-9637-0058c2c79d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325e75ab-ed68-4124-bc7f-f90e0964ed2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d344f0e3-96f5-4b9c-aab4-9c8a53d55e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286dfc4b-5f71-491b-a7fb-440c912d165f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9d52e5-3155-4374-9db4-3a526a52b161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3c96d6-e7a0-405f-9216-b1b786cd4be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff9bf8-7f5a-4dc3-9cdf-59cdfbcbbda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c828210f-f732-4368-97a1-9b6d6988ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c78a389-22fe-451b-85dc-8feea4ee71e9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d37403f-bbf6-4521-93c1-9f107d5c664f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b351543-9d9f-46b5-b927-0b5952e562c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1936e0-1846-4b4b-adfb-c459fc146701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b420d7-2e4a-429a-8a9c-4be4e233aaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5effa91f-fc7b-4077-827d-847c1f9373c5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a845b0-9e45-49cd-ae56-c4932219a13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174d1a9b-76d9-4321-bcb7-b3cb4d2ba5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afe498b-5a0d-421b-8b39-8e4f579778bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d902d457-6001-45e9-8332-c60a2e27502b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7dc747-2ad4-4142-84b4-6a0d973837d9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c10e308-6d08-4a51-ac2f-28cbd23a26b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8701c0-a0fd-4e3c-9f57-49eac9729c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec5390a-386e-47c9-adab-432e2c53adec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b32ef1a-9ed5-4d81-b40f-3fd82de288ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c70387-92ba-483c-95d4-9490dcc21c8d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d8c942-0342-4edb-8ab1-f8266bc6a3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d783ed4-5ffe-44ef-93fb-edd0197ecd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05691ea-c50b-44cc-9f96-b44333b5f8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83639e1-67f8-4205-8cba-fa9c5aa457dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5dcf96-7c34-4f63-8051-06c62f49beb5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2021de8d-3aea-454e-8335-9dfbbdc2bc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688ffec0-521a-4ded-8342-c5599787d5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcd80e7-b5ea-4637-9436-3a3836b72fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf875ef6-491c-43b5-9ccd-36e58c1f4890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6416690-2737-4fe3-b691-999103e1a2ba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdb3769-8e6f-4081-8f91-9bb3b847a9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbef1533-9000-4f5a-92ef-a116f3621dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa18f93a-bf0d-455b-be4f-94f700dab9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e8b6f1-e85d-4a5f-8dac-8bf367a92b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6316a7e3-28ac-4eed-8259-5342d5b7a609",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b728c87-b91f-4efe-b066-329b18fdd3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5982f8a9-f42a-4e9a-8e88-968921fb9385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df343f29-ecef-4ceb-9842-b11f4b3ec6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828c51f9-c1cf-4bf4-9f12-f5a5290b0a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40449c9d-9691-4f54-a344-1a7867e729aa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb895dd5-02d1-4b60-954b-89a3909a6563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb0804b-7dd1-400c-b742-8bb2e973c213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eece07f8-e09a-405b-a651-7e29d781a76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf2f745-1dfb-4275-b3ee-cb406040f68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9741d32-2c0c-4583-98ac-c84bcaef013d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd895a8-a741-4e12-8239-4a239b0d3152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e11df47-99df-42fa-85f1-a2d2a655640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80268f89-f4f3-40b3-9785-5c99ce72800f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cb661d-8cbe-40db-aee1-1fedf3b8b851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47072f95-3b19-49f7-928a-37d2ad327580",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23b31de-8834-4882-9fd5-1776122145b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9384ab48-fcea-4572-8031-6b4aadb687ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a000696-0084-46da-81c0-c3b9dd119e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe2c832-2eeb-4729-a056-d53b60a076b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21dc838-e50e-424e-adcb-531a28fb2d84",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6148dd3d-202d-432f-806d-830deb99a665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f5d85d-f074-4a06-91ae-2d9f261c818f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8df1ea-f9b8-4cae-b812-b65c6e97c718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc267cbf-9e0e-447b-a3b7-2697a6544baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac551c69-4245-4ab9-a5dc-be828be8139b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8252ea-b209-4f7c-80e1-f97b712dfdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d237734-3ea1-4278-a3eb-c06c9417ad02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5361a3c6-b958-4b6f-bcc7-76eea494f3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d7b7b9-c69e-45d0-8073-904881419dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5659d111-acb8-40bc-a084-8e13730dcfd8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e63b923-48bb-438c-89d2-4bd9bdd14963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80350d16-119b-439a-b817-6c58dd1f9108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b147683-2619-4e37-a5f4-bc02c13675c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02013b79-389f-491a-a99e-80231d237774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8a7094-3cfa-4782-86af-809ef4341807",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1059ab-5412-46d8-9e9f-f2a8095efd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a87208-913c-4a90-afa0-a8a51862908a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e16da63-71e8-4f70-82e5-46d6887e4e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38dcdd15-ee48-4c94-bd6e-361fb3146ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656cb00e-50ba-46d0-82d6-ba6f155ce629",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d4ca9c-8b12-49ef-9c18-7abad2c16c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c73296-40a7-4255-ab35-4b6d21dcb060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e113cd8-fb84-4a5d-9124-b68f83dbd83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc164922-7d07-4369-98ca-96fd9a8b65ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246af8ab-eb07-445c-8235-1ca693b7ddfc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0974da9e-f6ff-41c2-b153-551330555e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b0519a-cea7-42d4-b540-be15f74f3d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aec674-34f4-4aed-be93-a360e2ceef64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdb9fe7-391b-49b2-abb7-c2cdaa5c373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b24d83-5522-4f3b-8aae-01c6778d6154",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d037a401-d43b-46ae-9dd7-18610bf01846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59488686-3cdf-4ae8-9238-d5c57e73108e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175553b6-d769-46ee-98e0-43c663065a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d08164f-dfa9-461e-a3a0-69b421d44512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857b7b74-5d79-44f2-b981-4e69a97bde7e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc8a4bd-114b-4c70-8f61-a50593361182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf748510-4a1b-4478-b248-f362622aba7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c710dfd6-728a-4b33-bfa0-be40afe454ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34dcb108-6337-4c3b-b1ad-c530320a3056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b087f151-d451-4158-90d2-12c3e9eaa8cb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1448d4ac-06e8-4d03-9363-82451901ffcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be76f3f4-f802-4059-8bc1-fc44ae3ef663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9342e26f-f85f-4e5c-b5d9-f82f6364a8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0b2f95-975f-47b7-abac-e3a00e48e87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07702ee-241a-4b62-bc19-b948d73cb789",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082cb5c9-68c2-475b-bee8-de70e89fcc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2856df7f-6ac7-4619-9383-35add9c12f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9bde93-edb6-4e8c-8cdd-11db8fb86992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59effdd3-16a8-416c-913c-ece274d0ede7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb33f9b0-4306-470d-aba1-86d575a67bd5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cbbcb0-5102-40c2-b4ab-c4d436a3e004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9215e8-579d-47d1-9412-ee4f6f16ff2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962a62fa-d5d4-4204-9809-6825c3fc2d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380edcf9-6ee5-41e1-a1ff-ae8ac2a4b19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75745a0-a26f-4f44-85fc-6a3b80cd732d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e147b25-9e4f-46b0-85a8-f338581015fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521d74b3-690d-419b-9b20-eceaa1dda766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156aa9be-abb4-4969-a8d3-015886e0da49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d74cd1-eab9-4cab-a528-8abb80eb84be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c430fb-13c4-41ec-9ec5-5f83c034b261",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055eafa0-ca87-4ac1-94cc-d40ca60c9ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1672e31a-4e7d-4133-8cdc-0e8f4e9fe134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280fa50a-d204-44a0-8579-6f7f083b5e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded072c7-1e66-474c-9e56-0dcb6c04d83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60933a26-4f38-4b53-a35c-44f5e135db4c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886e912d-165a-4e29-bc6e-dc05a329729a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc8b30c-461d-4403-9407-ca9844133e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be48446f-1152-4d69-b065-404d09286258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bacb60e1-a256-4939-ad9a-b958e53a23fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef43a00-86cd-4d16-9aeb-1eaff57e3da5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefdba13-e68a-44fc-a0d2-acf932ccd05c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a82f368-8fbc-4d4c-b9ce-d345e3c5e957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934fe6c6-0394-493b-8d9d-f9a18ed0394d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e547029-0452-4010-8edd-034f89383587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65116647-9e82-4dde-a26f-71b3214430a5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedba7a1-ee00-4170-be0f-395923badb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02791f4-b383-45a5-96da-230e16befc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544de434-bb5c-4591-bfa9-a06d99589d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d24eb9d-1aff-49c8-a03f-791a446ffe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2245e9f7-a9dd-4981-8385-43707b49cbeb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa12975-aa79-48bc-89fd-f0d1154f5ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3671929-cfba-4e84-b88b-5ba8560e4e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1a8cd3-a1bb-4077-9e72-88ad4d9aaca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddb9b23-f63d-4361-9f69-dac65753a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d906d0-d24e-4263-b20b-67f69f09cb10",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e03751-6c9a-41e0-9ad4-bcddca1f2607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9a4db4-c80b-409c-9f02-a49104a42b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a67a6f9-9b61-4681-919c-48c61b38af87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922aacbb-a2c1-40b9-981a-ac63bbbb261a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ba1c91-799a-4dc1-ad54-0661c0ae5406",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79be1cf3-96cc-4c81-b1a3-47a4b46e54a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433b6aeb-9f7b-4942-addf-644172c9f544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b97d007-b60c-4fe8-96a3-adb5bd75cd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d29d193-c183-458c-844f-dc3f71b1d88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00d2db3-9074-4ae0-9a6b-4ab6d9eb7e76",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057d9db4-c6fb-40df-9257-095d91aac82e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7230cce6-d4ee-4005-b814-01062765c27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f90223-a2e8-4ae4-a557-988351555dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a17b67-639b-4030-ba84-327b0a1e2134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c61f9be-073e-41f6-a75a-504fc6c2caa8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23f18b8-a9fc-4d4e-997b-8e34a4055cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49da271-de32-44f4-b49a-c1324680b329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aef235-c40b-482b-98dd-25f6d7df55ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebc58ee-0af4-4a96-9d3d-e0b57b733d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527f0682-6f72-43f9-9db5-9ffa5a682cf2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0665d7-1604-49f8-b37b-256c515fa688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8029e5f3-671e-42c0-aa52-964010dfecf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22225f0-4a25-4465-afd9-4b45f26c1fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab6e589-7504-4c1a-90c6-d9293caa42a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af23509a-de00-46e3-a35b-16cca79995b0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe24ace8-cfc4-4f69-9121-904e45f3cf5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30020ebc-be4d-49a8-8765-0b5e6963fbb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0dc34f-6e2d-4eb5-8b34-55dd0547fd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e29ff0-1578-4966-b142-9f20c568279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b206446c-18dd-4371-89eb-3f200f92121a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62853f9-9178-498b-8312-aeec22708162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f8902e-7a61-40d0-a479-288afdf278b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a84956-7720-407d-8cb0-5d8996a19ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0547e0-e0f6-4623-ae8a-60ddb34df8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6d024e-e305-4c0f-97aa-03c647945c45",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebfa571-a3a3-4372-b432-2f97cd1f4c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91221408-0467-49f5-97ea-7fba0f5e8adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbda09e-3eee-4f80-a794-4678b15f9e7b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dab619-1a38-4851-ba88-1c668ed24bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cb9b18-591d-4123-8ff5-198b7c50b7a6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cd02d3-53b4-48bc-aa83-34dafb51c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159ad26e-4e7c-4308-891a-3801509a1d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a574ed33-3abe-4d10-a2c3-5a75334f424e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f36416-d568-4a3c-8a60-c4093af2b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacd4a43-7b65-4a1c-88dc-78c007ef9d1e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0e89f8-9a7a-42e9-b720-862c8fb20470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7159f1-8e3b-449b-b329-4669b5b94bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68893750-1406-4ad7-a202-47144dd4dbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df4a745-9783-4342-af2c-7b124d59122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b68211c-ff7b-4e08-85ac-18ca19a4e444",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f4ca32-05ef-4599-89a6-5ed6ebef8734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b120fb-ffc5-4fd5-b0ee-de405802e13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eabafd3-cd62-4352-aa16-2ab20b117c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad17e2cf-3cae-4f6d-a27c-e6e31793b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2adbf4-9f1b-4184-9130-5e1fdce031e0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17f67b3-a61a-45c2-a884-6492c7035f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0feaee-da8b-4e1f-bdd3-28c21a34c730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0260f9f5-ca15-4a07-bb7e-aab3dfaf5627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9592c3ba-0a39-4b27-ba64-07e5905e2af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d66c431-5d0f-4c5b-a711-6eab3b8deeda",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c32f152-4902-4a74-9e82-5267dbe42a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50dd1ba4-8877-4f4b-afcc-cff79065d682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282a59b1-a1a9-4f5e-ba85-f11c345298e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012bd212-d3aa-40a3-b55c-881b93019916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad9761c-0c91-4312-ba31-1cc032d2605f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4246d804-ff5a-4c9c-b022-9d263ceae116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dcf5e07-92bd-42dd-8855-4ef396eaf9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b892e616-b323-4c68-ac83-a707fdb3a46c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1006f4da-44dc-4659-bd31-b5b1dd48b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc3285-c402-4f74-aeaa-2316aef2965d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e7d591-5437-49f0-992d-769ce9f4215b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2b4f4f-2e6d-4bf8-814b-0ea3825d4032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df3e1e-d368-451b-befb-e3185aa22157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0551cf8-2f1e-42c6-ae25-cbc796a0fb9d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "745e742c-e7d8-4bf7-8703-fa2a2f767b68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32aba50d-7899-44fc-8042-fdbab9612b7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6ebd85b-59cf-438d-ad5a-1330608a5d91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dadc663-6e08-4db8-815c-fcc1ae0510ba"
                    }
                  }
                ]
              },
              {
                "id": "a0e3908d-8313-4981-a8c0-f00785f24329",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a611920-4e17-4dea-94bf-2bb5d856ad65",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b331ec-db0a-4ca5-93a4-8c04500e0a15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7fd287fd-45e2-449e-b474-9be173d0e122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a50157-4328-496e-a0d0-dc4580f8b43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f743195a-b5fb-482d-86a2-b100513b47a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdf3d0b-e468-416f-bc17-1334223ca36d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacece05-8df6-46c7-bfba-04e5bb14be6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f16d9219-2adf-4008-8eec-853bea232868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b3cf3e-bd6e-4ec0-9c3d-c3cea42a1864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "491ebee9-6d3d-4045-8f82-c7f44838bfcc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb476c48-2293-4c7d-a52d-95131391823e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68a4638a-db01-4541-bf88-b8216b90ce4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a11244-ef6a-43e7-baec-4a8e4abfe36d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64885269-caa8-4979-819a-8b2610d1e1f1"
                    }
                  }
                ]
              },
              {
                "id": "88b344be-238c-4caa-9a6e-3f9c255877f3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "55da0d8a-b90e-45b3-8799-5ea79d31dedb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab48e29-1f09-4efa-9016-296c97243850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "13e25603-ecdc-4e8d-92da-923746b81d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8321e529-a405-4acf-a684-74a6732cddaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e04ca7-3918-4ab4-9870-b87efa7f03de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7803cd96-2870-411d-9666-41e08866abf0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "644940b0-9c24-4f99-aef2-be4cf0d439b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b64633-ec6b-42cf-8e8e-1094a4398efa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19ee9216-40f9-45a3-98fd-bdb4dfd6be8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b12c6115-c8cb-4a84-b96e-da37e5122eea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab061e7-669b-4f13-aa41-30cac7302d7f"
                    }
                  }
                ]
              },
              {
                "id": "5aade9e0-c010-44f2-a2d8-a13fc74bc7f8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5777a85-9298-4be2-90c5-bab332da40e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "41635c1a-3e82-4819-80c0-75ea88acadd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14f1642f-703f-4a6a-84e9-3b67c3c14268",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b8a3624-1195-4b6c-9ba3-ba7a5a38ec64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8409b06e-b192-448f-b270-ea9b61cffbef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e967f858-90a6-4daf-b92c-2afc27098831"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e043f2a-7104-4f86-bf39-05d36f3fb9b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b982bbba-d188-4c77-90a5-df241ff6a45e"
            }
          }
        ]
      },
      {
        "id": "16ac730f-7437-41a5-98eb-f9490604ef65",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09359a0c-a875-4f5c-bcef-33d2cc94860b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c961882-8652-4bbf-8622-cd86a6275b43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23089583-2b68-4418-922d-bc813f194273",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a44dea8e-cd06-4e7c-bbe3-0ed40c77346e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9190bb67-f55a-4d0d-bfeb-a8d59277f913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02d12ebd-b090-451c-9f10-817dbbf73878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a24d9d-2042-4a0f-8b36-71a63a7a4142",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c1fb33-467d-4a09-8467-031c8c807322",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8cc75fed-07cc-4eea-aec2-1813a28076ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c780080-e4f0-493c-b325-a803dbf04e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc126289-bee3-449c-aaef-dbdd75a51f94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f9d79e7-d3f0-4110-8fc1-4075f49711df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8c2c17f-65e5-4534-9636-77401858739a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91eeb75e-a703-4a79-b023-917c8352cfca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef5f691d-b4a2-4bb2-aa7a-056fd4bbc298"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f39f794f-09c5-4ece-9c75-3bc6b55f7eaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "511d21bf-dd80-4f61-86c0-2e72ce0f0469"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67b02c94-6155-4e32-b2cd-4592ba8c0b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c751bc12-b8f8-4a4b-8875-db043c3c9c31"
            }
          }
        ]
      },
      {
        "id": "c2d1cd12-6401-449e-b3c1-a1eaac64c18f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c98956aa-2e80-4780-b7dc-f5c6ecd0931f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e6e1e92-346d-4a4b-87ec-c750f5825803",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9404c06c-c90b-4050-b2b3-41d34711e7d8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307616a3-8236-46f9-ba62-12b8b31db599",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "052c0710-d8fa-4b13-9f81-8e9d6bb033c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f594f020-ab8a-495c-aa9a-18fcd5692081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fe50a9c-cdfa-41cf-a69a-82e2426f49c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8e82b5-51fb-4661-afa1-362a5130bd43",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2e087f-b8ce-4357-a01f-d43032944695",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "41367fd5-5f8b-480a-90e7-7d8ccfa2e030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27470ae2-c233-4d02-97cb-4e5cc62e8790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ece43388-baf1-4aa7-810d-27f00e62346f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaaad4d1-77eb-4b03-bfbd-b590206e8c77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cdcf179-2838-409c-9e88-01e95f061ade"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f69384a6-bedf-4477-a162-4cd63a5ef369",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80f1a3ec-1f53-4adf-9bbd-5c33199735c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b697d5ac-a5b3-4465-9d80-f1ba4a036ece",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "861f3591-5e29-4958-baf2-bca38b408338"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aeabb9b-bd09-4d4c-aef1-b4c3eae297c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c75d3812-24c5-4001-a985-057cd7d820f0"
            }
          }
        ]
      },
      {
        "id": "a03296eb-438b-48ab-83dc-b6aaa68d061d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7b8a494d-27a9-486e-8347-be31da60fa92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "075d2a4d-dbae-4b73-a34a-69ba1b7cc196",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e407f095-31c5-4678-8934-4928ff55183d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb2000-ddd4-4977-b99e-26bba16705ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15660725-7675-4417-98b7-cc00cf4f3eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36219f1a-0f36-408a-9d0d-0e17bba85eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0be650a0-cf98-4ac5-b700-bb0cf6ab3352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd53c61-8b19-4fda-814e-ca261ba33711",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5815d1-1edc-4ac2-877c-125b412902c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7fe320-ab4d-4399-8819-8afcc57d6f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0be6cc-ce4b-410d-bced-b9750ce3c43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d1ad31-678c-47e6-8b7e-2e00e2dbdcb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3495efe-c02d-4578-88db-6761a8887211",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b0090e-cc06-4e43-8742-0d0281dacd73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6181bc99-e7ac-41e1-a801-4a970e44f720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d18e6d6-14e2-4eaf-bfa1-68a50c2b9a7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b468a66b-ecf6-4411-8694-4ff4a0314716",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e1f401a-74a0-43b5-9c08-4f9edae524cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec01ab7b-d7f3-4d03-80be-895cafca2cf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ac2c6d3-5c27-4819-90fe-6214fdc815b5"
            }
          }
        ]
      },
      {
        "id": "29e61e4f-d637-43fa-ba29-00903aeb570e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94251f25-90d0-4dc8-8d71-748c4a3605c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7733d7d0-0b5b-453e-8ba0-70cc8d088bf6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9f29469e-96ae-43a4-a733-fc20a0e046b5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2745537-2ca5-4de5-9ac1-bc8cf48bef95",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e96779ae-890d-4193-8724-2a6bd9407928",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 809.8346153846152,
      "responseMin": 7,
      "responseMax": 9736,
      "responseSd": 919.7858067725531,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680136734116,
      "completed": 1680136958370
    },
    "executions": [
      {
        "id": "6c9a78f7-0592-46c6-95b4-7aa02aa61ff3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c0c765c5-f3d9-480f-852c-2eb07cd6ca22",
          "httpRequestId": "f52302a6-097e-4db6-8630-37917b9aafd4"
        },
        "item": {
          "id": "6c9a78f7-0592-46c6-95b4-7aa02aa61ff3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fdb92348-3ac4-4345-b9f0-5dd43d5f027f",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "224b8b6e-54df-454d-bafc-0c333b64e3db",
        "cursor": {
          "ref": "c97a5841-61fc-47e0-952d-70bc15f9fc30",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d1faa887-0e00-4313-b212-833da204e43d"
        },
        "item": {
          "id": "224b8b6e-54df-454d-bafc-0c333b64e3db",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7df91cbe-fa3d-467e-a46e-62c400ab0c79",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6f7df765-b366-45fa-9dcd-60bbf6ab01e2",
        "cursor": {
          "ref": "8d2ac3ee-2263-4f7c-90d1-b54229ebc703",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b8c8bd0-15de-4cf3-95b4-081889130bc2"
        },
        "item": {
          "id": "6f7df765-b366-45fa-9dcd-60bbf6ab01e2",
          "name": "did_json"
        },
        "response": {
          "id": "afc2b930-8b20-4a96-80af-675ee2854d63",
          "status": "OK",
          "code": 200,
          "responseTime": 995,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29afeabb-f187-481b-ab41-8f7d61cd3d2d",
        "cursor": {
          "ref": "81e60e45-d48a-4444-b83d-5b6aec5627e6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cdcb66c-922d-4f4d-977e-4757e07ff0bc"
        },
        "item": {
          "id": "29afeabb-f187-481b-ab41-8f7d61cd3d2d",
          "name": "did:invalid"
        },
        "response": {
          "id": "d45b7786-5809-4679-937a-466c7cc4d13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29afeabb-f187-481b-ab41-8f7d61cd3d2d",
        "cursor": {
          "ref": "81e60e45-d48a-4444-b83d-5b6aec5627e6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3cdcb66c-922d-4f4d-977e-4757e07ff0bc"
        },
        "item": {
          "id": "29afeabb-f187-481b-ab41-8f7d61cd3d2d",
          "name": "did:invalid"
        },
        "response": {
          "id": "d45b7786-5809-4679-937a-466c7cc4d13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83cb8c3-5c95-4e60-b16a-cd8f9a904ab2",
        "cursor": {
          "ref": "912619f7-345d-4cd1-955d-0ef2b6aa381c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "32d7bc9c-0c09-4571-90d1-2bbd42c5d911"
        },
        "item": {
          "id": "f83cb8c3-5c95-4e60-b16a-cd8f9a904ab2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bc3dcb4b-51e0-47bd-b632-5b2fc7c59444",
          "status": "Not Found",
          "code": 404,
          "responseTime": 781,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df88aa9-9de2-4c2f-aa6a-398d33774a00",
        "cursor": {
          "ref": "b66282ec-d7ec-496f-97f5-bd0ed2502f3c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "417a3ad0-5b22-4c61-8388-dbf658b59a69"
        },
        "item": {
          "id": "5df88aa9-9de2-4c2f-aa6a-398d33774a00",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8752e37a-e74c-4793-af7c-6173fc706a52",
          "status": "Not Found",
          "code": 404,
          "responseTime": 649,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971a5b4c-5a1c-47e4-97b3-45b758ab2ca4",
        "cursor": {
          "ref": "054e95f1-64ee-4849-a7fe-3afe141e1044",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b7d6e2b9-8867-4fbd-b2b7-c5285aedd151"
        },
        "item": {
          "id": "971a5b4c-5a1c-47e4-97b3-45b758ab2ca4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "52288609-59d7-4ec0-ba10-93d8643c8723",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae988c6-836d-4e1f-9e24-e23c9e3513f3",
        "cursor": {
          "ref": "9b337d8a-7619-48b3-836b-01b7feab57f1",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "af227cb6-cefa-413f-b8c3-12ec1e2e6bf6"
        },
        "item": {
          "id": "bae988c6-836d-4e1f-9e24-e23c9e3513f3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f3ea14da-a5bf-4ae9-8f2c-d57c051719d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae988c6-836d-4e1f-9e24-e23c9e3513f3",
        "cursor": {
          "ref": "9b337d8a-7619-48b3-836b-01b7feab57f1",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "af227cb6-cefa-413f-b8c3-12ec1e2e6bf6"
        },
        "item": {
          "id": "bae988c6-836d-4e1f-9e24-e23c9e3513f3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f3ea14da-a5bf-4ae9-8f2c-d57c051719d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5223af6-7f81-46f9-98e9-86733241207c",
        "cursor": {
          "ref": "9f2434ad-35d4-4acf-bdcd-9439cac903e3",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a096a837-387a-4f02-a68f-230e799f1600"
        },
        "item": {
          "id": "f5223af6-7f81-46f9-98e9-86733241207c",
          "name": "identifiers"
        },
        "response": {
          "id": "eb2e3af2-9d9a-4b29-8f52-6c7da67c4ebb",
          "status": "OK",
          "code": 200,
          "responseTime": 1267,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1c5e6-248e-4843-93ba-855a917269ee",
        "cursor": {
          "ref": "7c7aef71-a4f6-4a2f-9cb6-51923093c8b2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f624b02b-b34a-44ec-bd4c-145089272368"
        },
        "item": {
          "id": "afe1c5e6-248e-4843-93ba-855a917269ee",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "61688509-1eaf-4a62-ba53-59ecd5056b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1c5e6-248e-4843-93ba-855a917269ee",
        "cursor": {
          "ref": "7c7aef71-a4f6-4a2f-9cb6-51923093c8b2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f624b02b-b34a-44ec-bd4c-145089272368"
        },
        "item": {
          "id": "afe1c5e6-248e-4843-93ba-855a917269ee",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "61688509-1eaf-4a62-ba53-59ecd5056b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156a81ac-079b-4c03-8b75-0fedbba8464e",
        "cursor": {
          "ref": "aa71aeeb-9c58-4848-9742-a81b52a63ae6",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bf504cb8-0f03-4efb-ac23-b781617edcb7"
        },
        "item": {
          "id": "156a81ac-079b-4c03-8b75-0fedbba8464e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a21349b3-4ec3-4349-adda-14169ec7ea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f9c034-6d72-4539-a883-c8c8a2a1feba",
        "cursor": {
          "ref": "add31863-065c-4e40-af60-d3ff95351a1d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3f99eee8-88d2-405b-b2c0-8d0468f4c8ec"
        },
        "item": {
          "id": "29f9c034-6d72-4539-a883-c8c8a2a1feba",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2c12d667-88b9-4b39-b7d6-970e4bdf91e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1145,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ba1983-85cc-404b-a3a3-52a04ccc8ed2",
        "cursor": {
          "ref": "afce11e0-dda4-45cb-afb5-845c0e89cb69",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e2d15548-0125-4b4a-a405-cfd41dbff24a"
        },
        "item": {
          "id": "c7ba1983-85cc-404b-a3a3-52a04ccc8ed2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3d73fbe3-a997-4030-96b4-1182d1a814da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1306,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caedde2-9b68-4460-bd64-ef9d618cd5ba",
        "cursor": {
          "ref": "bec261b3-a149-4508-8179-a1faf13e549b",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9dfb0bfa-7069-4482-b159-42d782ee4367"
        },
        "item": {
          "id": "2caedde2-9b68-4460-bd64-ef9d618cd5ba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f3dc54c6-5255-4d87-b201-c1f06d7b01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1063,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7df73cc-f9b2-4506-9f09-7f6b9f0e2246",
        "cursor": {
          "ref": "674d90bc-2754-4953-ad1d-cc3464acd88b",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "44f075df-376d-4112-9932-2f1a3dc76b48"
        },
        "item": {
          "id": "c7df73cc-f9b2-4506-9f09-7f6b9f0e2246",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "600f5775-d22a-40ac-a2f1-1768681619fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1230,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4a804f-33c2-4070-90d6-604ee1162b51",
        "cursor": {
          "ref": "fbd636aa-8d7c-45a0-abdd-3f3479444b09",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c6a5969c-b3d6-4399-88b1-f3804b77ce05"
        },
        "item": {
          "id": "3f4a804f-33c2-4070-90d6-604ee1162b51",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "16fcb2c3-566c-4b6c-b7fb-1b3c1f13a796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbbb65b-4bbd-4ac6-b844-64fbbc227401",
        "cursor": {
          "ref": "965fcc74-be5f-45e1-8096-da9f6f1f0818",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e23efaf-8106-4e57-b48f-d20bd07234a5"
        },
        "item": {
          "id": "cfbbb65b-4bbd-4ac6-b844-64fbbc227401",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6986f0da-62d8-4f44-a855-72d86fc0d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9142986d-9f38-449d-bb1e-aed0dd350789",
        "cursor": {
          "ref": "7cc1efd9-ba6c-4af8-8360-d718611cbd0d",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f9fe3992-c567-4102-9df8-fb449092f853"
        },
        "item": {
          "id": "9142986d-9f38-449d-bb1e-aed0dd350789",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc69a681-3a20-4d2f-82d2-eeac1d1c26fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca08752c-8236-454c-973b-d41470f0e54e",
        "cursor": {
          "ref": "bbbc9e5a-6098-4bd5-aa45-79a347e24974",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a218a68e-48a1-4ecb-a6ff-d8dec907e277"
        },
        "item": {
          "id": "ca08752c-8236-454c-973b-d41470f0e54e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4664a6b4-eddd-4eea-9d3a-e9a4c991f156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d7977a-7141-45d3-9bfb-5f20afb2eb53",
        "cursor": {
          "ref": "2a19985d-7a78-49f5-a158-ade61a19c7ab",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a84182a8-4371-42e1-a5a8-929e6304f2cb"
        },
        "item": {
          "id": "f0d7977a-7141-45d3-9bfb-5f20afb2eb53",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "591f390f-2a1f-4211-8403-2c6f269d29ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1445cf9-5eb5-425e-a84c-edb0261e3aeb",
        "cursor": {
          "ref": "b7c6c973-0951-425a-801d-cfb0ccf84a07",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c8a09968-e789-4821-8569-2f9afbc4fa94"
        },
        "item": {
          "id": "c1445cf9-5eb5-425e-a84c-edb0261e3aeb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0fbc395a-f3e0-4b80-9afe-13e6c096f678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f64479-584f-4efd-b62c-6fedb09a7511",
        "cursor": {
          "ref": "f151448a-30ea-4c8a-8858-7e46b1ac21b8",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "12cd689c-d2f4-47eb-9813-ab8bbf3ea311"
        },
        "item": {
          "id": "63f64479-584f-4efd-b62c-6fedb09a7511",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1b8716ce-0595-4e7c-abf7-36144dbad4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5163f997-9c34-41d7-b73b-eb361d0f87a9",
        "cursor": {
          "ref": "35ac0d6a-31e4-4ea7-9c25-4588c792579b",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bc421edf-0a19-4491-8c49-67602c1f9b69"
        },
        "item": {
          "id": "5163f997-9c34-41d7-b73b-eb361d0f87a9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fd16b756-0c84-414f-b1f0-6db6261922fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c620bd0-a78a-49ba-97ae-f98830565c3b",
        "cursor": {
          "ref": "97254e51-c941-4611-ab83-9783af7e5d27",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "24ae8f48-bc56-4409-a051-5756e0186de0"
        },
        "item": {
          "id": "2c620bd0-a78a-49ba-97ae-f98830565c3b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dec91164-195e-4286-a004-9df0e438c401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43458341-280d-409b-b988-4ca0089393fb",
        "cursor": {
          "ref": "cb28fea7-7eb7-46a3-8c8f-251b1b128ab7",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "85cedc4b-d52b-4bd6-839d-a1db453f84c5"
        },
        "item": {
          "id": "43458341-280d-409b-b988-4ca0089393fb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a805722b-0322-4645-bc53-3c7cd9202363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db54cd74-b7ef-49d9-bd5c-970606b9fddf",
        "cursor": {
          "ref": "e6a7f7bc-2241-41b9-8121-b2d27afa749a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "75d683a3-45d9-48b1-972d-4cc3669ba7bd"
        },
        "item": {
          "id": "db54cd74-b7ef-49d9-bd5c-970606b9fddf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "03a5235e-36f8-4a11-b149-e112f5b46dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0114ee79-c5d8-416a-90b4-3435f70b5e88",
        "cursor": {
          "ref": "ecba3301-cfe3-4559-8f7f-43d5a50d0fd4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "610a4331-9c89-4cfa-b98f-be9d5a144fe4"
        },
        "item": {
          "id": "0114ee79-c5d8-416a-90b4-3435f70b5e88",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f198c1c2-6ca5-4dde-bef8-d37d827e6a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea3829b-b472-403f-a127-189613372f26",
        "cursor": {
          "ref": "7397d7e6-3faf-4083-ac87-7257fd8c0edc",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8cf1be81-658e-4f6b-b924-7385bcbf0d23"
        },
        "item": {
          "id": "7ea3829b-b472-403f-a127-189613372f26",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b57269d1-1e4f-4dbd-b1bb-d17ea24dbe30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb19abe-4886-48ce-a6ff-325da4f89293",
        "cursor": {
          "ref": "bfb92135-1834-4d3a-9ef4-457005616966",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "78664279-187d-4ad7-82b5-ac2a1d54de8c"
        },
        "item": {
          "id": "0eb19abe-4886-48ce-a6ff-325da4f89293",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7c5b94b2-3666-4298-a18c-d1aeb36192bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4404ad0-64cc-4b6f-bf28-12fe1ef24c50",
        "cursor": {
          "ref": "159e2272-95c7-40a6-9547-f16d4a1d20c3",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ba6c38b-1236-432f-9fde-4781b16a29e2"
        },
        "item": {
          "id": "d4404ad0-64cc-4b6f-bf28-12fe1ef24c50",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "79c2ff2f-c42a-46cf-97c5-7d3dab11b6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea752fb4-cdc9-448c-a47e-f30ef77ef069",
        "cursor": {
          "ref": "d6d077c8-ab9d-4091-b8b6-1b386f042102",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "677d869e-1b3f-4d06-be00-a260b765db39"
        },
        "item": {
          "id": "ea752fb4-cdc9-448c-a47e-f30ef77ef069",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a390620e-c38f-43bd-ad23-7069d7a2d722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4130133e-2443-467f-a154-33cd1da1371a",
        "cursor": {
          "ref": "d7137be9-5bda-498e-8634-76fc3f05eeaf",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bfd41f1e-7168-4611-9dac-59f45a34270b"
        },
        "item": {
          "id": "4130133e-2443-467f-a154-33cd1da1371a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7f97799c-f0dd-42ea-90db-172d9ab31162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd40609-8291-4099-ab25-b7e2fd0a4fcf",
        "cursor": {
          "ref": "45978814-56bb-4df7-bae9-a53dae7589a0",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bf782cc8-4ab8-438a-a99e-8ffa19f8875e"
        },
        "item": {
          "id": "9dd40609-8291-4099-ab25-b7e2fd0a4fcf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8c59118a-0ec7-4838-a554-c2defa7c5864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89282418-3d15-4cef-a832-005adafb7ebf",
        "cursor": {
          "ref": "d2d111db-0cd8-41c0-ba97-c3b74e0a0fe6",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3076023f-6abd-4f4f-8f8c-4c7190625e0e"
        },
        "item": {
          "id": "89282418-3d15-4cef-a832-005adafb7ebf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e006577d-8f88-4887-85ae-e2a996912d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dd0acf-ed47-401b-9f2a-50dda3d387fb",
        "cursor": {
          "ref": "fa1e8ee6-f8aa-4c7c-b051-3f2244af79c4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e9204e38-fd95-4898-80df-1dcc74748919"
        },
        "item": {
          "id": "61dd0acf-ed47-401b-9f2a-50dda3d387fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b384d5f4-2853-4876-8310-39d3336feaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a15244-8d55-44ae-ab17-54fda57a4a77",
        "cursor": {
          "ref": "687c6c54-ebf3-41e0-88a4-f405f3cda47f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "48121928-3958-4d20-9ef2-28359f21d7d6"
        },
        "item": {
          "id": "d2a15244-8d55-44ae-ab17-54fda57a4a77",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f66369c0-06b9-4445-82e6-5fab41402198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9fe147-3a9f-43de-bc32-de6e4a76ade6",
        "cursor": {
          "ref": "4a65423b-a25f-4a15-bdce-ea839b498b13",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b27b255b-fb00-43f7-91c9-107a1f5cd779"
        },
        "item": {
          "id": "0b9fe147-3a9f-43de-bc32-de6e4a76ade6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d4d2d9f5-34a3-466a-9013-73089e795e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c2d751-2715-45e9-aa0c-2924176a27f3",
        "cursor": {
          "ref": "21c81fa3-364c-4c47-a8c9-2c3e6dff81eb",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e8234997-7de5-4e6e-9179-00adaea6ceed"
        },
        "item": {
          "id": "18c2d751-2715-45e9-aa0c-2924176a27f3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9c8f80d-1bb2-4567-a2d2-d3d01801df5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce1644-62cf-4e26-804c-4ea8f2f22e93",
        "cursor": {
          "ref": "8330dd5e-ba58-429c-a361-6ea537eedada",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a04887fc-82c9-4d42-ad8a-4deab9ee79fb"
        },
        "item": {
          "id": "d9ce1644-62cf-4e26-804c-4ea8f2f22e93",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ab7c9aa4-b8e0-4955-81e9-68113dab1aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c89f66-58bc-43d2-9d81-6df8157f29c0",
        "cursor": {
          "ref": "01fb414d-67ae-4abf-b290-50b2538d07bb",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d36c477a-76af-426c-aa81-4fc4be361d81"
        },
        "item": {
          "id": "54c89f66-58bc-43d2-9d81-6df8157f29c0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4f9a845d-cf3d-41a6-af02-f0f14f976b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41552842-0c50-4ab2-80b0-8c63d312e00d",
        "cursor": {
          "ref": "b3f0d00d-8afd-4ff9-8f3a-e34cc933ed23",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de654cf5-0aa1-48e4-ab92-d00887373317"
        },
        "item": {
          "id": "41552842-0c50-4ab2-80b0-8c63d312e00d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "39c2c369-cac9-43f3-a128-6fb072012867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1196,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aee9394-7010-407e-9227-e6176d15872b",
        "cursor": {
          "ref": "4eb89db6-e9d4-416e-8ca6-6412aabbcbcc",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c8abd2a6-494b-497a-bbc8-385ee441beda"
        },
        "item": {
          "id": "6aee9394-7010-407e-9227-e6176d15872b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "63a6b675-d3cf-4957-a7a9-1d648317ffd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c37551e-3386-4034-874b-8fe54d436f51",
        "cursor": {
          "ref": "41af0eb1-bce9-4551-ba35-ab2ac33beba1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d461d41e-fe77-4e82-b48f-8eb95dea29c8"
        },
        "item": {
          "id": "7c37551e-3386-4034-874b-8fe54d436f51",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "31e2114a-0402-4dea-bc53-41cd5fb14093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e105209-d8aa-4bfa-bb6e-2f8ff835208a",
        "cursor": {
          "ref": "a7d2c7d7-ba0c-45e8-952a-4c97d8baefee",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0e41162d-79f7-49c1-b174-4d01e1d8899e"
        },
        "item": {
          "id": "5e105209-d8aa-4bfa-bb6e-2f8ff835208a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "70b087df-7ef4-4b3c-94eb-7cd02a54a3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e0d408-bd68-4d09-9eca-cd18fdd90810",
        "cursor": {
          "ref": "36bd272d-363b-4ab3-ae90-8d53688b8578",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7ee98a83-f3d2-4b2f-823f-f31ce4007ad1"
        },
        "item": {
          "id": "f9e0d408-bd68-4d09-9eca-cd18fdd90810",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cab36c80-2da1-4907-917b-3a956358a8b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 917,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be638ba-b51e-4d72-b810-556f15930e9f",
        "cursor": {
          "ref": "79998eba-3c4f-4d1e-a4b3-d8a2d29d48a1",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8d12fdae-f348-4e74-ae1b-b97a0a410084"
        },
        "item": {
          "id": "4be638ba-b51e-4d72-b810-556f15930e9f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d33cf188-c4be-44b0-bedd-3164ea3e3743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d89348c-4f8b-46dc-80d0-b04284620991",
        "cursor": {
          "ref": "b408a6a3-8179-4deb-b206-70569dddde87",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ff5c9071-70a4-4949-8e5b-ded8a22a716c"
        },
        "item": {
          "id": "1d89348c-4f8b-46dc-80d0-b04284620991",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "012d73a0-64ed-4761-afac-7eee50a5e69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81160a73-8924-4090-a51a-8f2efc6a66b9",
        "cursor": {
          "ref": "d74e170d-f7e5-45ee-a7ff-e7c64e7bc686",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d0af9eab-1e70-4b43-a7a3-5d71213c2bee"
        },
        "item": {
          "id": "81160a73-8924-4090-a51a-8f2efc6a66b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8d7d26ee-f8e7-41e2-8908-f1d555503e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69be178f-0fb3-4a28-8d95-c3d345141642",
        "cursor": {
          "ref": "c4b4da75-882d-4ca1-8c1f-5a26a8cf2f4c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1fc39ada-5677-4669-b2c2-331585599d4c"
        },
        "item": {
          "id": "69be178f-0fb3-4a28-8d95-c3d345141642",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ca63ee3e-d681-41a4-b34b-5a74c2ec91b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1209,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acb1e03-20cc-4347-b693-0dcf7cced7c4",
        "cursor": {
          "ref": "f6a5dd34-baf9-433f-a9dc-4e4ed79d938c",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dd673ce5-b8ba-42d6-952e-23ee4baad96e"
        },
        "item": {
          "id": "4acb1e03-20cc-4347-b693-0dcf7cced7c4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6092bdc2-4c17-4f77-a032-ac860ca466e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba40c61-41bc-4665-b9ea-3146ee651fd5",
        "cursor": {
          "ref": "cae57b25-5a98-487a-bdfb-8ea47185142f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f8291263-69e4-4157-87c4-3b4f49d1204d"
        },
        "item": {
          "id": "eba40c61-41bc-4665-b9ea-3146ee651fd5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a48fbe4e-4b08-48f4-ad48-38965c71bc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48b8bf4-d5eb-4b28-a396-6cece9e42813",
        "cursor": {
          "ref": "c0cc9e97-f446-42b1-acd5-35a0dde72730",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4ebb438f-08f6-46f4-a6e4-81c681773c73"
        },
        "item": {
          "id": "a48b8bf4-d5eb-4b28-a396-6cece9e42813",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8b8c7429-4344-4f50-ad74-16d30537374d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 745,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5132a62e-7b9f-4621-a977-b42071110745",
        "cursor": {
          "ref": "fd3437ea-7169-4e89-8d5b-0846f74986d1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7461fbcb-7007-43b4-8649-24b33ad8ae05"
        },
        "item": {
          "id": "5132a62e-7b9f-4621-a977-b42071110745",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "09cc335d-c267-41e7-bd86-6ee4dd753fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9037dff6-117c-4479-9e0d-ecba226c6b26",
        "cursor": {
          "ref": "3a8af023-3aa8-4ab3-971d-9ea8b50a7a7b",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ef403af0-a1ce-42fe-8af4-6965ca29d56d"
        },
        "item": {
          "id": "9037dff6-117c-4479-9e0d-ecba226c6b26",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "647bc735-f62b-4021-a5a9-1528b9ad42ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15fd117-6b50-495c-98d3-40b008eec540",
        "cursor": {
          "ref": "985d0f9e-c058-47c5-848e-28336bbacc37",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bc6df31e-f26f-4401-9029-7ffddeae6d2f"
        },
        "item": {
          "id": "a15fd117-6b50-495c-98d3-40b008eec540",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9c7f0f14-639a-4bd7-98db-11beff17b962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bb1c8f-f9e1-428a-a161-18ef526d3376",
        "cursor": {
          "ref": "81f29abb-0801-4764-bb3e-a4399c460bc1",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9893bdeb-67ac-4a63-ba95-854d199fabe8"
        },
        "item": {
          "id": "31bb1c8f-f9e1-428a-a161-18ef526d3376",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3efe6a36-f74c-477e-801c-c5bc736b3c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0bfdb9-40a0-4704-b346-cec6aa15ed8c",
        "cursor": {
          "ref": "30131fd6-f5cb-41eb-b3d0-a16967745505",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0acdcd88-b2d7-4a18-8bbf-f26ea0bf0ff5"
        },
        "item": {
          "id": "fa0bfdb9-40a0-4704-b346-cec6aa15ed8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0ce80293-415f-4a69-9da3-4dd5897050ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee587c9-e0e7-4258-9ace-2c51836c0900",
        "cursor": {
          "ref": "c60a7300-de14-4bbc-b0ce-ecba1c9a50de",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "83b7e3a0-a326-4b8d-b9fd-66ddc06e3108"
        },
        "item": {
          "id": "6ee587c9-e0e7-4258-9ace-2c51836c0900",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "87d23662-1d8b-47eb-8bf3-b1ea33d53507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7297b052-fbf9-4d6f-9d36-4f7c5a8ffb23",
        "cursor": {
          "ref": "df3d4d37-3c0c-4040-ae50-69771ef26422",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9d940c73-5ac3-4723-bdbb-bbe6bc3a4e8f"
        },
        "item": {
          "id": "7297b052-fbf9-4d6f-9d36-4f7c5a8ffb23",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f0bff66a-06e7-40e0-9393-e79716a25ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d30b0c9-a14d-4754-88c1-0fe80b4c045c",
        "cursor": {
          "ref": "8e1366ae-b6ee-4a9c-9c46-ba9d8b8a165f",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "31729b9f-896f-4acb-b191-21fe6445d8b4"
        },
        "item": {
          "id": "3d30b0c9-a14d-4754-88c1-0fe80b4c045c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "369397c3-8097-4a53-89ef-b4c0b678ec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a7eb0b-2d6d-4f68-b8de-cb8d0791fd0d",
        "cursor": {
          "ref": "6eb39a4a-197d-4ede-9510-7be804382f02",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "17f18b30-6176-468d-a137-834c14dd1c14"
        },
        "item": {
          "id": "09a7eb0b-2d6d-4f68-b8de-cb8d0791fd0d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "85176b04-d8c3-4b81-b29d-b8afbfb16cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906749e5-1ab7-4c96-9a4a-23974b59c313",
        "cursor": {
          "ref": "74bd7182-9492-4c9e-b743-5b62a7c73278",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d312daa3-b5cb-4c1a-9277-a68669493db2"
        },
        "item": {
          "id": "906749e5-1ab7-4c96-9a4a-23974b59c313",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cd2af3e2-9be4-4c0d-a85e-45d709615899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b9278f-352b-4f47-b070-0583bf9a96e5",
        "cursor": {
          "ref": "7012c3c2-2abe-4d0b-9290-a723c5aa43f6",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46ea461e-3d97-404c-8fa2-2ea23560fca7"
        },
        "item": {
          "id": "07b9278f-352b-4f47-b070-0583bf9a96e5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "562d42cd-319f-4035-9b6f-448d614dde4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973b663d-63b8-405b-8371-4797ca6286ab",
        "cursor": {
          "ref": "dc9f0145-c67f-4b3e-97ee-fa626986eef3",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "58e88d79-016f-4a7b-b3de-7cfe6450ae53"
        },
        "item": {
          "id": "973b663d-63b8-405b-8371-4797ca6286ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e584816e-a335-4de5-9465-5d49cabdb56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a30eea8-e7fa-4e61-af35-e635eae38cca",
        "cursor": {
          "ref": "d6bec889-6511-4aa2-a101-b8753b2e9317",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "70bd459a-9ec5-448a-8c10-28fe6cfc9660"
        },
        "item": {
          "id": "3a30eea8-e7fa-4e61-af35-e635eae38cca",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e90c1016-74ed-499d-a16a-13c1d8251b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db17fd9-aaa9-4c81-b1cb-26b2f72dd0b4",
        "cursor": {
          "ref": "aeb57041-ee12-41bd-b6f8-fe8f14044e39",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e52d5fce-004c-42d6-8dc0-d79fee0aa5e5"
        },
        "item": {
          "id": "7db17fd9-aaa9-4c81-b1cb-26b2f72dd0b4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c8b87d77-251f-4808-9067-56f4386fe04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425bcfd6-6850-4fd3-9363-b23f399765e0",
        "cursor": {
          "ref": "b64dbac5-2355-49bf-8545-1a0c934cce14",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2fca64e1-2fa6-4740-8b7f-3a4973db0572"
        },
        "item": {
          "id": "425bcfd6-6850-4fd3-9363-b23f399765e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e263a448-95cc-4624-a0cb-f86ce848471f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00b32b0-d33e-4d69-912a-cdefaf5b8d75",
        "cursor": {
          "ref": "45d260c2-f1cb-43a4-ba79-0afd8e6fce1f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d58a15fc-03d5-4ec9-a349-363a4aa588e0"
        },
        "item": {
          "id": "e00b32b0-d33e-4d69-912a-cdefaf5b8d75",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7a4b87c1-ec16-49c9-8917-c376fc9b5600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607d38be-4ff8-4201-9faa-0bbc5f5314c9",
        "cursor": {
          "ref": "d5416ade-e6d8-4a23-9a89-059fb4fa2f92",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "861e882a-1ba8-4c9e-82b1-c87dfc583d87"
        },
        "item": {
          "id": "607d38be-4ff8-4201-9faa-0bbc5f5314c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6fc03a2d-3fdd-4c33-8a35-9709f720d523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc2e27-287a-417f-8ccc-67fa68702690",
        "cursor": {
          "ref": "628327c9-9809-4d4e-afb0-6b04a45a3b7b",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "db469a28-041b-4a67-af85-a4f784c92ab5"
        },
        "item": {
          "id": "88fc2e27-287a-417f-8ccc-67fa68702690",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7d9bdeb-98e4-4c08-816e-98503e73929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746d46f-41ef-4658-ace8-3410b58ba58b",
        "cursor": {
          "ref": "9d6613d3-d9bc-44ee-8b5e-e383d0daf6f4",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7ade3a77-ea24-4e79-a681-755f279724db"
        },
        "item": {
          "id": "8746d46f-41ef-4658-ace8-3410b58ba58b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6e98ecca-5ca5-4b8f-bc3a-2b55735f12de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c010a4-f96f-4576-9236-0f9748d8326f",
        "cursor": {
          "ref": "f02475a0-726e-4159-af51-703568dae116",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f25f0468-53f4-42cf-abb7-80882af44c8d"
        },
        "item": {
          "id": "33c010a4-f96f-4576-9236-0f9748d8326f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c851c741-1ccd-4faf-a88a-daa183fb7072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168ba612-92cc-4a5f-b62d-eb4807b85fe7",
        "cursor": {
          "ref": "1c954d59-0474-4b18-bce6-5bc681775677",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8536906b-35c4-4d9d-add5-2c346bb01bc1"
        },
        "item": {
          "id": "168ba612-92cc-4a5f-b62d-eb4807b85fe7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7abad3fa-e82d-4384-99ee-8b65541d15b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f159319-4062-4c03-a515-74f0ddcc0471",
        "cursor": {
          "ref": "e1e7ccb9-bc79-4834-82d8-5018535687c1",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d650a854-75f8-4eb5-9cea-de09165e9800"
        },
        "item": {
          "id": "3f159319-4062-4c03-a515-74f0ddcc0471",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c58e5c08-fc9a-4b27-9940-cc6cd871a7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36c92c5-13aa-4c38-b03b-d1d546354fe0",
        "cursor": {
          "ref": "9bbfc704-ad1c-49d2-a420-f2afc5255584",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "77ce2abe-f0f2-4bea-9351-d0e621fea9c2"
        },
        "item": {
          "id": "b36c92c5-13aa-4c38-b03b-d1d546354fe0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1a947c6e-b64e-4798-bd62-c5cb1f4e6d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5270194a-2a59-4eeb-a3a0-4c65cbcc6653",
        "cursor": {
          "ref": "9bf6760b-7c83-4f5a-beac-c420bf92fed8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0f513048-2ca4-46df-95e7-505021995cec"
        },
        "item": {
          "id": "5270194a-2a59-4eeb-a3a0-4c65cbcc6653",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ab3c3147-429b-43bf-80c0-a8273bfcbe46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e145dda-7448-4dc7-8ec9-8d722210815d",
        "cursor": {
          "ref": "f5d7f8ba-6315-496d-800c-6c9a864c78e9",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8706b64b-8d1c-4791-84b4-c1aa4fd06221"
        },
        "item": {
          "id": "2e145dda-7448-4dc7-8ec9-8d722210815d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b740b181-b0ce-4073-9c6c-5e691b704d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d94e5f-5503-4e99-ad0a-d970cdb352d9",
        "cursor": {
          "ref": "93a0e31f-0367-4794-b4c2-4067480aeaa4",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e0a7f2b0-f2a2-4bb1-8fc2-6048754d98bf"
        },
        "item": {
          "id": "75d94e5f-5503-4e99-ad0a-d970cdb352d9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "be7b7c56-cae5-4101-935f-eab8d612a3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfc94a7-4796-41f1-b0ef-c342ac3d0454",
        "cursor": {
          "ref": "f7bc8941-e430-475f-9784-0631d12e642d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3762a33d-12ba-46fc-a1da-b3cbc9b99323"
        },
        "item": {
          "id": "5dfc94a7-4796-41f1-b0ef-c342ac3d0454",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f4bc8ead-6129-428f-93dd-e87dac1dfd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203c6d7d-13cc-4eaf-941d-f3c86958a491",
        "cursor": {
          "ref": "d2dc6020-ef0b-4a1a-863c-48051d36a2e2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "80409613-2416-43ed-8452-dd74206998f9"
        },
        "item": {
          "id": "203c6d7d-13cc-4eaf-941d-f3c86958a491",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "21fd3d2e-6cdc-4f38-a98d-c5254962d1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba0a798-bdb5-49e5-8751-de940e746525",
        "cursor": {
          "ref": "ff83f52f-9962-46c6-97d2-5ebd755ccffb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a8a058bf-77a3-4f3e-a43a-ec1407b38ca2"
        },
        "item": {
          "id": "1ba0a798-bdb5-49e5-8751-de940e746525",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "110ac5f2-60dd-445c-a12c-2bad9143958d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3a15c-8f19-4b28-a474-d1b05f641eda",
        "cursor": {
          "ref": "acfa2709-71ea-4cb4-9779-5958fd30f04f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5fbf2488-540d-46d7-9334-07ffb019add2"
        },
        "item": {
          "id": "91f3a15c-8f19-4b28-a474-d1b05f641eda",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7fbe2e45-647c-46ad-bd13-7d29095ee108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba4665-bec2-4ff2-9ae8-ab72c6977a71",
        "cursor": {
          "ref": "57a473ac-9429-4eca-a359-9c31bf095239",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "461bcbba-8555-494b-910d-4002333704dc"
        },
        "item": {
          "id": "19ba4665-bec2-4ff2-9ae8-ab72c6977a71",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bb9b310a-733b-4cb6-a1ed-87f398eceb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d64a35b-59a4-466c-93b4-31dda2a1c770",
        "cursor": {
          "ref": "486c61ea-e634-4d47-9c24-2e4aebe491c7",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "95793188-6961-4035-9984-58f3aabd071b"
        },
        "item": {
          "id": "1d64a35b-59a4-466c-93b4-31dda2a1c770",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "28f7b32d-4ea8-47a9-aab8-e74ce6550553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17afcf1-e560-409b-8e8d-b73000ceb130",
        "cursor": {
          "ref": "ff43ef68-da2a-4267-80da-488d11f62260",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e2d9fb7d-18e5-44a1-b0b5-93315bc50da0"
        },
        "item": {
          "id": "d17afcf1-e560-409b-8e8d-b73000ceb130",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2858a04f-2731-4aa0-b412-98149d766c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513aad73-1dbd-49da-9f09-f315bffa6292",
        "cursor": {
          "ref": "f02e11cf-778e-4f6b-abfb-bd1f901fb49c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d946d866-4e48-4e8b-86af-0115bf52bffa"
        },
        "item": {
          "id": "513aad73-1dbd-49da-9f09-f315bffa6292",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c945c3e3-ea73-4529-8396-d7d648aae97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af90272-e867-4450-8187-e610f1346669",
        "cursor": {
          "ref": "79fa42fb-0a06-4257-b853-cc1be1cb5a70",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "86afa2ab-d2ae-4ac6-86d4-2e87be02da4c"
        },
        "item": {
          "id": "6af90272-e867-4450-8187-e610f1346669",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f2372d17-5f4f-4d14-a457-cc3ca03aa62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34798cb4-aafa-490f-af20-a5226a5f5cbc",
        "cursor": {
          "ref": "21dd3cb8-d648-4fa2-9de0-89d52bff696e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "09263938-63c1-46b8-a87c-659bf5be1950"
        },
        "item": {
          "id": "34798cb4-aafa-490f-af20-a5226a5f5cbc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ca91713f-8869-4f3f-ab03-2a988b62af08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0772dea-2025-49fb-b70a-cf852241d445",
        "cursor": {
          "ref": "c4b48cdc-9160-4c6c-bf83-90d8392ef8b2",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c13f7d9c-cd12-4e21-96a3-ac02d347598f"
        },
        "item": {
          "id": "b0772dea-2025-49fb-b70a-cf852241d445",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ed617cf6-6c21-4908-a800-c0530311c19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1014,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb59f9a-206e-4c1c-98e3-bbe89394ca14",
        "cursor": {
          "ref": "7cdd6469-319a-47da-942d-fe5bfab9dfb7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "23235182-5668-4290-ae8e-e5f922674524"
        },
        "item": {
          "id": "ffb59f9a-206e-4c1c-98e3-bbe89394ca14",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf9e051c-878b-4027-8336-ef72bcf886a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f00bc2-81c2-413c-ad57-3c001c65c330",
        "cursor": {
          "ref": "8c113e84-e206-4fa3-a90c-5849519e51b0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3530c342-5bf0-47c3-a507-e62c49549e56"
        },
        "item": {
          "id": "21f00bc2-81c2-413c-ad57-3c001c65c330",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0f56f578-4511-40dd-88c8-0b195efc1c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ebc5ac-d9f9-4729-925f-a28479c15cdd",
        "cursor": {
          "ref": "f8b27244-8d63-4c32-97a9-9767639719c1",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "193bf28f-27d9-45d4-8799-805df26579e4"
        },
        "item": {
          "id": "09ebc5ac-d9f9-4729-925f-a28479c15cdd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8ab2c8bf-1b77-4584-beb0-1bb06a19584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715db6f1-3280-4d11-b309-1d505dd1ca8a",
        "cursor": {
          "ref": "42950207-4809-4f58-8582-0b51d30cf4cf",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b9702b21-16df-40ad-9731-8b4ef9925d16"
        },
        "item": {
          "id": "715db6f1-3280-4d11-b309-1d505dd1ca8a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "19b21aa2-3fcf-4eb7-8dd6-c201143c7a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ed2829-fdbb-4490-b2fb-8899be2b9024",
        "cursor": {
          "ref": "1df59a47-e4dc-4682-ab5d-cc3c41511703",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a3fccb89-df79-45bf-89e5-2bb1d19f2430"
        },
        "item": {
          "id": "51ed2829-fdbb-4490-b2fb-8899be2b9024",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a8a0d15b-6654-4d84-8b18-12d174cd3541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8bc20c-e8df-44d9-9d51-03d0355f0315",
        "cursor": {
          "ref": "2604406c-6e3c-4636-9c42-40a8986b1738",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e269e4b8-56cc-43c2-86b0-55d8206b9639"
        },
        "item": {
          "id": "df8bc20c-e8df-44d9-9d51-03d0355f0315",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aa9af80c-e251-420f-8db1-93161089e0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c14ef8-0f79-4ad0-bcde-8cf81ad022bd",
        "cursor": {
          "ref": "09345cda-dbae-46ec-b720-536edcf5bc0e",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "936d1f0a-bea0-4f28-9d55-fee6af7bf13a"
        },
        "item": {
          "id": "d4c14ef8-0f79-4ad0-bcde-8cf81ad022bd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "742a60ce-2579-4e10-8051-85876db6540d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3312b48-ad09-4ffd-9624-2aaa03c5e71e",
        "cursor": {
          "ref": "21e39752-b17c-4cde-96bf-bbd432ef3b1e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "09198d0d-5297-43e2-8ac2-f85a2c00350f"
        },
        "item": {
          "id": "f3312b48-ad09-4ffd-9624-2aaa03c5e71e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fa28d667-0c37-458d-9194-838d98bbcfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ac4d81-1418-4aac-b2f8-80f18ee2a9e2",
        "cursor": {
          "ref": "af0288de-971f-4c26-8a04-a8bbd088b169",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "069f9203-1632-424e-876d-e8bb8ee9d81a"
        },
        "item": {
          "id": "13ac4d81-1418-4aac-b2f8-80f18ee2a9e2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6bcf07dd-0c82-48c1-9911-696dfab31a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d7634b-32cf-4723-86ac-86b16ebbbbb1",
        "cursor": {
          "ref": "5f6f0f50-5f77-43fc-95ff-14689dcf758a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b02cef6d-6c07-4312-a413-abf9726c042a"
        },
        "item": {
          "id": "29d7634b-32cf-4723-86ac-86b16ebbbbb1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cb02d5b2-ae75-491b-bf72-0ed97301a069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946ae1f0-68d0-498f-9122-089a993b77a8",
        "cursor": {
          "ref": "34ee72c4-9a82-4599-9e48-610ec8ed7dd5",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "704b7ffd-1464-455c-bfa7-8374e77a025b"
        },
        "item": {
          "id": "946ae1f0-68d0-498f-9122-089a993b77a8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "06c63281-4fb7-40c2-9b80-2e502b086152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f48aba-dd1e-4ad6-9c0c-3b3dfef8eefc",
        "cursor": {
          "ref": "0c77e612-90ca-4432-9066-76866f2ba018",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e716c52b-84cf-446c-8cb7-cb7169eaeed4"
        },
        "item": {
          "id": "e5f48aba-dd1e-4ad6-9c0c-3b3dfef8eefc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3e16805e-31e6-4f5f-833f-f929c769fcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41de5b1e-f153-426e-aadf-c4c8f1e824f7",
        "cursor": {
          "ref": "c7e06e7c-caaa-4ed0-b900-b4434845003e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "572a7d6b-2431-44f4-a451-f7ea4ca0a1ff"
        },
        "item": {
          "id": "41de5b1e-f153-426e-aadf-c4c8f1e824f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "79a7f471-3c37-4e33-9947-898f297163c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b251636b-8b1d-45eb-a375-df784c7ce9c6",
        "cursor": {
          "ref": "5f581681-8515-4618-b4cb-5f3caa6e13f2",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "498d3fb2-54f5-4d58-90da-905681857177"
        },
        "item": {
          "id": "b251636b-8b1d-45eb-a375-df784c7ce9c6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e4f8f2ed-c68b-4374-975e-9d16dc09af92",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e0d1f3-20c0-4433-9897-f58121ae12ba",
        "cursor": {
          "ref": "e0c2ad4a-f8d2-421d-8132-58c4411c38f7",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c08aa1ec-125f-4536-b620-638d74ed0013"
        },
        "item": {
          "id": "23e0d1f3-20c0-4433-9897-f58121ae12ba",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eae9a36f-198f-48d4-8fcc-00a62cda5c21",
          "status": "Created",
          "code": 201,
          "responseTime": 5434,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff26f4fe-f391-4a28-9fbf-d7fb6b32109e",
        "cursor": {
          "ref": "30c93c3b-6ef5-4bbb-874a-253f47f9b418",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "430a44d8-27f3-4a3a-b969-a3d00b1d861b"
        },
        "item": {
          "id": "ff26f4fe-f391-4a28-9fbf-d7fb6b32109e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "aecbcdd3-7712-4f91-a3c6-abee10e3b671",
          "status": "Created",
          "code": 201,
          "responseTime": 5223,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40d76a5-3240-4774-a255-513749f17195",
        "cursor": {
          "ref": "4cac86d3-0f77-421b-82e9-0ec76ed7ffdd",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5405fe7-22ae-410d-b277-bb4cddd72d47"
        },
        "item": {
          "id": "d40d76a5-3240-4774-a255-513749f17195",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3011a54e-9418-4ea8-88fa-e132e74cfdea",
          "status": "Created",
          "code": 201,
          "responseTime": 4582,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a41cd91-a5b4-43d6-a532-1ff1fbd28e4c",
        "cursor": {
          "ref": "fade069e-0965-4b69-9a78-785cc3e464ed",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a2825c13-d4cd-48d4-a1cb-ee1820bf7703"
        },
        "item": {
          "id": "1a41cd91-a5b4-43d6-a532-1ff1fbd28e4c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "88da5d5a-c4da-4e93-9b72-60a6517e0518",
          "status": "Created",
          "code": 201,
          "responseTime": 4691,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb675a0-4934-4682-833e-fccd15e4a45d",
        "cursor": {
          "ref": "1b58d846-2a34-41df-b396-9bc95da852e8",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "195e4156-530a-4aeb-8de3-52c94235b9bd"
        },
        "item": {
          "id": "dfb675a0-4934-4682-833e-fccd15e4a45d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "115afd81-0d47-4953-b505-c92cdd3f6a80",
          "status": "Created",
          "code": 201,
          "responseTime": 7848,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8dab89-ad66-4eba-b146-561ce1a91b38",
        "cursor": {
          "ref": "14a028ae-e930-4c48-b96f-5d94806093db",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eb11cfd2-62cc-45d1-9e16-b35b1b5b589b"
        },
        "item": {
          "id": "ca8dab89-ad66-4eba-b146-561ce1a91b38",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4b88a1a6-061a-4944-9366-e83dfa2873a7",
          "status": "Created",
          "code": 201,
          "responseTime": 9736,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09562b4e-30bb-4a40-981f-18289a11dd13",
        "cursor": {
          "ref": "f84e8e8b-1e0b-46f7-afd6-1cac6f5fff11",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3adbcfcd-71d9-4e23-8d0a-ec524f3f8aa6"
        },
        "item": {
          "id": "09562b4e-30bb-4a40-981f-18289a11dd13",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eae4f6a6-73c7-4823-9fee-1e362450265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09562b4e-30bb-4a40-981f-18289a11dd13",
        "cursor": {
          "ref": "f84e8e8b-1e0b-46f7-afd6-1cac6f5fff11",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3adbcfcd-71d9-4e23-8d0a-ec524f3f8aa6"
        },
        "item": {
          "id": "09562b4e-30bb-4a40-981f-18289a11dd13",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eae4f6a6-73c7-4823-9fee-1e362450265a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8087155-41db-436a-a53b-254b3409184f",
        "cursor": {
          "ref": "2640d17e-48cd-4b1b-a7d4-722319329c71",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "28e7b41f-d0bb-4b53-a706-fc710fedcd98"
        },
        "item": {
          "id": "d8087155-41db-436a-a53b-254b3409184f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40866e47-48d1-4f03-b835-a6e014da80e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8420c8-1340-4fb7-8757-88d0cdbc633e",
        "cursor": {
          "ref": "3e9dc046-75df-448e-8e60-3490d3fd31fa",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4460bce3-e6b8-4774-8cd4-134eaf8d5019"
        },
        "item": {
          "id": "9d8420c8-1340-4fb7-8757-88d0cdbc633e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ae1526b-9237-4cf0-bb65-461d82ef4ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbac5387-25be-447d-850d-a334467f5de5",
        "cursor": {
          "ref": "bcd19ef6-6db7-43b0-acb9-8c8d841cebad",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "81af93d0-d964-41e6-90d3-047344bcd6d1"
        },
        "item": {
          "id": "bbac5387-25be-447d-850d-a334467f5de5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a012697b-d5e7-4d63-89cf-60f3ccde1b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a569b8-b8aa-47cf-b9e3-224cc3429b9a",
        "cursor": {
          "ref": "db55b92e-ca09-40e2-a952-02f0ce5b9db6",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c2690684-c8fa-4306-a3ae-c2a1d095f625"
        },
        "item": {
          "id": "83a569b8-b8aa-47cf-b9e3-224cc3429b9a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1f2c96df-10b9-4b2b-9800-b49f945b3523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba803dbe-fcef-4bab-b0aa-459b55b24e97",
        "cursor": {
          "ref": "8685f30e-fbee-44a6-b959-af76662be54f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c1c46e9-d3cd-45fb-84c7-b58c94de71b1"
        },
        "item": {
          "id": "ba803dbe-fcef-4bab-b0aa-459b55b24e97",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "31c02845-e99d-4ade-afe8-13779a2ffb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce0e1e0-f4de-4482-95d9-d800d06f5b45",
        "cursor": {
          "ref": "ae37c2b0-162f-4c53-8a4d-a5af0d80a83c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a54711ea-524f-4cfc-a6eb-a290d7dcfa52"
        },
        "item": {
          "id": "5ce0e1e0-f4de-4482-95d9-d800d06f5b45",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a5668165-358b-44fe-bdb3-bda337e4d5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c253e8-f45c-40de-99e0-5cf1b8fe42cf",
        "cursor": {
          "ref": "bac51e3d-4aaf-472f-a7cb-4eb66f077507",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2e612931-7d4c-4943-863c-59c2d611791b"
        },
        "item": {
          "id": "b1c253e8-f45c-40de-99e0-5cf1b8fe42cf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d6faa2bc-bb7a-4abe-8f4e-f07ceacea6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37feebbb-4f49-4daa-b776-0903e03e2253",
        "cursor": {
          "ref": "7d5b4568-aef6-43d4-aa04-7b528c6093c6",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "593a9397-450d-4bbe-8231-7724b6c91fe0"
        },
        "item": {
          "id": "37feebbb-4f49-4daa-b776-0903e03e2253",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5184e534-f2f8-482c-9fad-2ccabad8defc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb6d83c-c545-444b-bdab-18bdce3d0c7a",
        "cursor": {
          "ref": "0d8996d6-bc41-435b-9408-b085b5f71bac",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fd7dd27d-0717-4266-935b-6828bcdf7142"
        },
        "item": {
          "id": "7bb6d83c-c545-444b-bdab-18bdce3d0c7a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "87bc3c94-9ba1-4f81-b001-66f562fbb6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554a4a74-9842-4a3e-a213-d7e9965ad7cf",
        "cursor": {
          "ref": "641b49f8-2416-414f-8096-a66780747de7",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f384c00c-43c4-4450-8a4e-6c4fc52a190b"
        },
        "item": {
          "id": "554a4a74-9842-4a3e-a213-d7e9965ad7cf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2744e0b9-bd26-4e36-9e23-982fffe89f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1306,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcecc0d7-9aa6-4920-81e6-e74dea8a0336",
        "cursor": {
          "ref": "dde9a2f9-383f-4e64-a960-15d91d1f8d0a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dbfc0fbf-ce4c-4e83-b817-d355170c7da2"
        },
        "item": {
          "id": "bcecc0d7-9aa6-4920-81e6-e74dea8a0336",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6635016d-2582-48cb-bb98-e6cde320898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1813,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31833ee7-49b6-47ad-a260-964812a7f633",
        "cursor": {
          "ref": "a885c88a-535d-4212-aaf5-8698a1472033",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3fc12220-512a-4fa5-8a7e-5b0ebe1fecf9"
        },
        "item": {
          "id": "31833ee7-49b6-47ad-a260-964812a7f633",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4690680e-cac6-431f-8362-b79c11ab9cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1424,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e68c28-089b-462e-9b58-c6d8a9460403",
        "cursor": {
          "ref": "a4afaccf-4cae-4fc9-b9d2-8696950b8f65",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "66113b70-3c25-4e68-a880-fd4ca60bf76d"
        },
        "item": {
          "id": "01e68c28-089b-462e-9b58-c6d8a9460403",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39aa0b90-8875-4260-9a1e-05991ea09479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1169,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf67c0ec-4fe9-40a6-93f7-d2302b5e1ae4",
        "cursor": {
          "ref": "e1cb5892-ae47-44a8-9248-1350fe996c21",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1f4697d9-b355-48e6-a4a0-28ae01bd6aa8"
        },
        "item": {
          "id": "bf67c0ec-4fe9-40a6-93f7-d2302b5e1ae4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dedd61d9-b408-49ec-a2f0-f9c5224ad2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f09ff4-79fe-4c96-83af-15ab315f92fd",
        "cursor": {
          "ref": "220ed432-6226-4740-908e-78a2b3431431",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "21b310b1-5feb-4ace-a24c-58b83f59a798"
        },
        "item": {
          "id": "58f09ff4-79fe-4c96-83af-15ab315f92fd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "69e82b73-9905-4ce4-a4f9-158a131215a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7030159-903f-4711-8e81-dc030208160c",
        "cursor": {
          "ref": "8eeeac89-5872-4695-9555-7b7cf0dde920",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b58389fc-4537-44d3-811f-10b3688b5c78"
        },
        "item": {
          "id": "b7030159-903f-4711-8e81-dc030208160c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "05020db6-00df-4f62-bb7c-fe02403f91a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b7bf75-ff22-4a9b-8d64-ca827cd40946",
        "cursor": {
          "ref": "674d3d38-e0d6-4299-baab-1f6a12c7cdf6",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "db257b66-8532-4082-a56f-4819f73d6b89"
        },
        "item": {
          "id": "e4b7bf75-ff22-4a9b-8d64-ca827cd40946",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc95389c-7a50-4809-b7c7-ac474d127c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d857973-eef0-4f08-b7fc-f305e283c5cc",
        "cursor": {
          "ref": "6fe5c2c7-3c8f-437d-9097-e4bbe8383d7a",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "759e1e8a-cb9c-46f5-9f3d-3ced46e2ba78"
        },
        "item": {
          "id": "7d857973-eef0-4f08-b7fc-f305e283c5cc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7f9f667b-923e-45e5-b412-e859879d2d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbdaef0-2b2a-469d-9d98-7a7a6adbfde2",
        "cursor": {
          "ref": "2d19e22a-786d-4830-a06c-fdf7791a179f",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a9384ffd-60b3-4aad-8bcb-1aaba953db95"
        },
        "item": {
          "id": "1fbdaef0-2b2a-469d-9d98-7a7a6adbfde2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f332e71e-03f5-40f3-8f86-82f8bc9ec37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eea6c32-7295-4607-a248-83d8a5909e54",
        "cursor": {
          "ref": "8c589525-5ed9-4d33-ad98-ca1b477ca6e3",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6283c4eb-e261-425b-a6f9-9420a985f9cd"
        },
        "item": {
          "id": "8eea6c32-7295-4607-a248-83d8a5909e54",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27289db1-1bf4-4b84-ab0c-19527976201c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d5ec4f-0eb6-4a06-b554-920d1727a3ed",
        "cursor": {
          "ref": "64e4f672-02f4-4381-8055-566f55c1f6dd",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ae8e3769-fca2-4f56-bcbd-112f57daa40c"
        },
        "item": {
          "id": "16d5ec4f-0eb6-4a06-b554-920d1727a3ed",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "39e8b690-e344-441c-879f-4192d0ce2e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915e3ab4-fd63-44cb-b795-183ff268e27a",
        "cursor": {
          "ref": "6cdc235d-2839-433c-a6b2-6899417ae160",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "361fa27a-ace9-484e-b8f9-a6f6d8aa7202"
        },
        "item": {
          "id": "915e3ab4-fd63-44cb-b795-183ff268e27a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ddfc906-a831-459c-882e-5d64c5aa4ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0a91a3-4137-4263-bcd8-3510c5ec1fa6",
        "cursor": {
          "ref": "85e0d131-a91e-418c-9d62-c1793d740189",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "471e6f0d-296f-497f-8b9f-928362b487aa"
        },
        "item": {
          "id": "6c0a91a3-4137-4263-bcd8-3510c5ec1fa6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88532e0e-42ff-4c17-92a1-23d8d1e378d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9b5065-f4c5-4515-9d5b-4bcd8a9925d3",
        "cursor": {
          "ref": "2ca06d7f-62f1-4681-b21e-4abea003571f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1562097e-efe5-48ee-bc58-099254547577"
        },
        "item": {
          "id": "aa9b5065-f4c5-4515-9d5b-4bcd8a9925d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ab973538-e55e-4f29-8f47-d18a5b22817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c260a853-14d5-4f58-8dac-659949fc0708",
        "cursor": {
          "ref": "ed35e7e4-ee88-47e7-b782-39e5e56a468f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "70f1ddd6-22c9-4956-8acf-d2e33b5a5d30"
        },
        "item": {
          "id": "c260a853-14d5-4f58-8dac-659949fc0708",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "05821f73-b946-4ed5-905a-f4c1cbaf75cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a01edd3-95e7-4d45-98b6-a78e238da4a4",
        "cursor": {
          "ref": "f6da2b63-27e3-4fe1-9efe-2d23be788ae9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a23c38ef-50d9-4436-9f9d-d3e7ca50f42b"
        },
        "item": {
          "id": "8a01edd3-95e7-4d45-98b6-a78e238da4a4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f978397a-e875-4eea-a9cb-ddd06bee3b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa34b54-8c4d-4e1e-9887-043d286b5953",
        "cursor": {
          "ref": "2ebd0239-b606-4a0b-ae27-455d3c40d3d2",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7a20f645-0248-4782-9baf-1e49465a90b8"
        },
        "item": {
          "id": "cfa34b54-8c4d-4e1e-9887-043d286b5953",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3ae92bd8-f053-4315-9f67-8f03615362a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137f9b1f-7ba2-4b83-a862-1d7a83795fd6",
        "cursor": {
          "ref": "dec06ffd-0ca6-4126-ad37-92cd48d13bd4",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b327451e-4e3e-4ed8-9487-0aa97c23ace7"
        },
        "item": {
          "id": "137f9b1f-7ba2-4b83-a862-1d7a83795fd6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8833a98c-01b3-48b7-b83d-f8c3a8dd2490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1fc49-adfa-4957-a8f5-5fc91924acc6",
        "cursor": {
          "ref": "fa9eecc5-b01a-41f5-828d-cca9a58c80de",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c8d8e691-26b8-4478-a727-9c2b372a927d"
        },
        "item": {
          "id": "8cf1fc49-adfa-4957-a8f5-5fc91924acc6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a22ab7b3-81ae-4736-9105-f23f6985c7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2db040d-fb15-4ee2-9ec2-6eada2657d0f",
        "cursor": {
          "ref": "ebb5a468-60b3-4eeb-9375-d16ce6259097",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "891605f0-f001-412a-8eac-4c5098c1769c"
        },
        "item": {
          "id": "c2db040d-fb15-4ee2-9ec2-6eada2657d0f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "52ad75a7-f3f7-4c26-b6f2-2aed8b2520d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8393a65a-97fb-4851-b77c-97011fc42d15",
        "cursor": {
          "ref": "1cdc3238-e229-4530-84ad-161ee52fa5ad",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ddceb307-9288-4372-8570-fc86ff99f3d7"
        },
        "item": {
          "id": "8393a65a-97fb-4851-b77c-97011fc42d15",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5c20e5fc-cafd-41b4-b1e8-f49d06783af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4feca0-1745-4084-b0dd-76c747748962",
        "cursor": {
          "ref": "ee127bda-692c-4f37-9892-8bcf0b40bd4e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "94a7b599-1d1d-4702-8ce6-5e3558b7b087"
        },
        "item": {
          "id": "2c4feca0-1745-4084-b0dd-76c747748962",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f18780bd-b906-45af-850f-54de0b7a0bbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e5fa77-6165-457d-98aa-4d4f9fc47eec",
        "cursor": {
          "ref": "7650a33c-7a6f-4ca6-acad-3ca9c71dae2b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2f8eb446-38b8-4161-adb3-c66a3ba7aaf5"
        },
        "item": {
          "id": "69e5fa77-6165-457d-98aa-4d4f9fc47eec",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "17a4abd4-92a8-4ead-b3a3-15a4ac842e3a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 697,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158ba869-73cd-4396-b27b-d59aef87293b",
        "cursor": {
          "ref": "ada7cd4b-41f0-4527-ae22-9cf666e961ce",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f1a97425-09c8-462f-88c7-aece6e480d87"
        },
        "item": {
          "id": "158ba869-73cd-4396-b27b-d59aef87293b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1673881e-ce4c-476a-9550-86ff2b6df1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158ba869-73cd-4396-b27b-d59aef87293b",
        "cursor": {
          "ref": "ada7cd4b-41f0-4527-ae22-9cf666e961ce",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f1a97425-09c8-462f-88c7-aece6e480d87"
        },
        "item": {
          "id": "158ba869-73cd-4396-b27b-d59aef87293b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1673881e-ce4c-476a-9550-86ff2b6df1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda808bd-a61c-4824-a921-2e032545f0fc",
        "cursor": {
          "ref": "1d077f30-4086-4e71-ba49-85b3f6a474c1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "91cf369e-d5b1-4d01-af8c-2fc89197437f"
        },
        "item": {
          "id": "dda808bd-a61c-4824-a921-2e032545f0fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "28e8104e-f055-4a33-b1a7-2770d0eb4291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba377df6-e968-4c3a-ac40-49d75ae842b5",
        "cursor": {
          "ref": "65ce51eb-a260-41a8-95ac-d9e6ba70813e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b6cc9012-32be-45d1-8f6a-7b886d934b54"
        },
        "item": {
          "id": "ba377df6-e968-4c3a-ac40-49d75ae842b5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "10cabefe-e2d1-4888-bcf0-a8aebf1d6f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940f9eaf-6389-4df9-91a2-006fc9585144",
        "cursor": {
          "ref": "476754f6-27f5-4ae3-8971-1ee51d77dfce",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7ca65507-1074-415c-a44a-9419427127e3"
        },
        "item": {
          "id": "940f9eaf-6389-4df9-91a2-006fc9585144",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe39ed64-3063-4ebe-9c3f-a12c5af19851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bfc587-1e5e-4903-9eeb-21253e5a89ba",
        "cursor": {
          "ref": "f04d77e3-9a94-457f-85d4-fa29943c65f6",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d260dbd7-77a9-4bc2-af7c-ddcc57aa5ced"
        },
        "item": {
          "id": "30bfc587-1e5e-4903-9eeb-21253e5a89ba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8f2c7b8e-abd7-4694-b405-1daebcd1697e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e62d4a0-d724-4a0d-8b51-5167f0d550ad",
        "cursor": {
          "ref": "ac59fa0e-2c07-40aa-a18e-8846a2e1a138",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc74619d-a5fd-461b-807e-247b8f20731f"
        },
        "item": {
          "id": "7e62d4a0-d724-4a0d-8b51-5167f0d550ad",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "55526acf-e4f2-40ba-85c4-cd70f2d6013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3697f72c-b0e9-4dd6-8b79-7509573a29f1",
        "cursor": {
          "ref": "66f3d6c6-ccce-4d34-8ad8-929ea0bcc942",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0fa0793d-6cc4-48f9-ac20-5012056f5f04"
        },
        "item": {
          "id": "3697f72c-b0e9-4dd6-8b79-7509573a29f1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "de9348b8-3a43-4b43-b483-8df2f0f2fabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d28fbb-fe3d-4388-9a31-8c24ae6c1fea",
        "cursor": {
          "ref": "72226b5c-cff7-4116-9869-214eb5958cc7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d469ca82-a1eb-49d1-b507-35cde1e1afaf"
        },
        "item": {
          "id": "19d28fbb-fe3d-4388-9a31-8c24ae6c1fea",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a0c0a514-5db3-467b-855f-35d35ed41c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3358a762-6e4a-4f8b-9c27-e44a6f18475f",
        "cursor": {
          "ref": "67dca9a4-44aa-49ee-a271-680091e6d5c3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2921731e-9c6e-4718-8a25-444fe15a22f6"
        },
        "item": {
          "id": "3358a762-6e4a-4f8b-9c27-e44a6f18475f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "50d7f6cf-6e36-4b84-b6b1-5b6921455797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969f2ae7-72e2-4b2a-a034-3ce8d8e616cb",
        "cursor": {
          "ref": "9a630374-5b46-45e8-9680-7ef1279676d0",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f704d94e-c661-49db-8858-6c72d2b44a51"
        },
        "item": {
          "id": "969f2ae7-72e2-4b2a-a034-3ce8d8e616cb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a9c446b0-469e-45a4-8f91-173f2915b7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a42b46-5d89-41e8-ab8b-3e9e37b38aab",
        "cursor": {
          "ref": "5fd34cc0-8876-47f7-a190-215cb5c15bb6",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3839d95d-1e8a-465c-9004-6817d1d81292"
        },
        "item": {
          "id": "14a42b46-5d89-41e8-ab8b-3e9e37b38aab",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2f73a110-2f7b-4c6e-b17a-eab500a4cb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb5f8e8-101b-48db-ae8b-2d81fca7a663",
        "cursor": {
          "ref": "d1147389-02ff-4085-8a20-cfdaca0d6481",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7b50fdb1-a7ee-4ff7-b8f1-e6bb44862f91"
        },
        "item": {
          "id": "aeb5f8e8-101b-48db-ae8b-2d81fca7a663",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a4626b5b-89af-4541-aafb-0a381ca458f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc664cca-ba2e-4c0c-b303-ff1338145d45",
        "cursor": {
          "ref": "f60ff206-a7a3-44b9-a1a1-b218a73449c9",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d6fbfa7-663b-48c7-8e78-9098b33f1480"
        },
        "item": {
          "id": "cc664cca-ba2e-4c0c-b303-ff1338145d45",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f61938dc-45d3-4753-b642-e35d8922bb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe58c70d-931b-41f6-8cf7-eedf74d803c8",
        "cursor": {
          "ref": "545b4e20-e5f7-4b4e-a2a7-5c5ef5ae8575",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "02b79bf0-2061-4ee4-95c0-7ab62a34b976"
        },
        "item": {
          "id": "fe58c70d-931b-41f6-8cf7-eedf74d803c8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4dca3ab6-fd62-4244-a96a-30c80c11a1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed5484f-e467-4a3b-bfd7-b42cb2d388cd",
        "cursor": {
          "ref": "c0e5cd64-1aa8-4f9f-abcc-c54944a7cb8c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e9589bf3-a2c7-4e8d-a4d6-aca1e645e041"
        },
        "item": {
          "id": "8ed5484f-e467-4a3b-bfd7-b42cb2d388cd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c8d3d9b3-0e14-408d-8216-b81889ef2e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a7d86-1851-4974-a015-96a3d50549e4",
        "cursor": {
          "ref": "df24c28d-a917-437e-87b3-918c4aa21edc",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b638325a-1fb2-4ef0-8de8-3e9e8f4b3a9f"
        },
        "item": {
          "id": "298a7d86-1851-4974-a015-96a3d50549e4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ec7744a3-4377-43db-bd6e-c9f5fc1e87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfdc70b-1f40-4d44-9496-94b8107a6db2",
        "cursor": {
          "ref": "5523b0c9-be8c-47d6-bf49-49b6c327ea6d",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4de243f7-a333-499b-8b32-52ad18a6e930"
        },
        "item": {
          "id": "cdfdc70b-1f40-4d44-9496-94b8107a6db2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da6c4338-4927-4414-8ebd-444696ef1e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1921af-0c30-42d1-8163-1bbd2e8c1884",
        "cursor": {
          "ref": "2ebf150e-78be-46d0-927e-9edc40d4cc8e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a241c5b6-0038-4c0f-bc89-247e15187d77"
        },
        "item": {
          "id": "4b1921af-0c30-42d1-8163-1bbd2e8c1884",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c18b2a44-4f72-4f71-960b-0d4692223a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39409af-75c4-4a13-9fb8-ac54fd8ab320",
        "cursor": {
          "ref": "517dbfe0-596b-4340-b7c7-d3197e46caec",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2ab27fc0-daa0-47a1-a7d3-8580b9229ab7"
        },
        "item": {
          "id": "a39409af-75c4-4a13-9fb8-ac54fd8ab320",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "80c5a2b4-3fa5-4f0f-bd90-57aab4e4efac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32742241-60fe-4f2e-8ba5-cacf8dd31006",
        "cursor": {
          "ref": "09628591-cfdb-43cf-a1f2-6c1d6d97614c",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "82d37fd4-d97c-4374-952d-9ff974af8d40"
        },
        "item": {
          "id": "32742241-60fe-4f2e-8ba5-cacf8dd31006",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "075bcc40-ca75-4f3d-b4f9-fd14c72dd0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da855701-833b-4abd-9df6-a39657e030ef",
        "cursor": {
          "ref": "730ce67b-163e-4739-8bd5-4955fea8ab74",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6de8bdf9-aba3-4624-9112-6ab96dc4dbb7"
        },
        "item": {
          "id": "da855701-833b-4abd-9df6-a39657e030ef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9cc2c4ba-2814-4a83-ac70-c85a48f25790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeba65f-e1b1-4d66-84be-a0a178e426ed",
        "cursor": {
          "ref": "d68d5dee-574d-410c-b48e-4f32b70ffa6c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8f6772be-8af7-4e92-836a-ea6c69e24bd9"
        },
        "item": {
          "id": "caeba65f-e1b1-4d66-84be-a0a178e426ed",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "21bb6d09-dd6a-4bc4-b7c2-46f3cfd29392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa81901-2a18-49be-8ce9-f872d7de1aaf",
        "cursor": {
          "ref": "fb479dc4-8bf5-43c9-beed-9188629b99cb",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "30273e2b-21b3-4671-bdeb-762d43da44cf"
        },
        "item": {
          "id": "2fa81901-2a18-49be-8ce9-f872d7de1aaf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f480f34b-f4bd-42c2-a265-dd47e88309ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3773d2-a77c-4e4e-957f-269bee1d2e4c",
        "cursor": {
          "ref": "79a88ba1-e54d-4d05-8682-862cca1716d9",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2a63a337-14e8-44a8-8212-1072d4e17642"
        },
        "item": {
          "id": "9c3773d2-a77c-4e4e-957f-269bee1d2e4c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b2c96d46-c11c-494d-89b4-354f7c5dd085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60be8fd9-61ce-492e-a8b5-9bb24b5800a8",
        "cursor": {
          "ref": "16aaa499-fcda-46ea-8a94-5035ba7167fd",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "74e7e5f6-cc68-44ec-83e0-deab5f447611"
        },
        "item": {
          "id": "60be8fd9-61ce-492e-a8b5-9bb24b5800a8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1b16d80b-9ab8-48cc-aecd-389a3be477e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee47e88-1649-452d-bd83-26e939b709c6",
        "cursor": {
          "ref": "8ee3eb55-6299-48c1-b90a-b216cb4f1a88",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0a2d1ff6-9c5b-4bb5-80b8-fbd4aa55abb3"
        },
        "item": {
          "id": "5ee47e88-1649-452d-bd83-26e939b709c6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0fd151b8-a62e-4786-8e3e-8acf204093a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469b69bf-087c-4bbd-a340-9c0345128a69",
        "cursor": {
          "ref": "4348ef94-3124-4d31-ac22-1db67c1c83de",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "24e96db2-b0fa-4d5b-8964-4e9451113952"
        },
        "item": {
          "id": "469b69bf-087c-4bbd-a340-9c0345128a69",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ae895665-8572-4dea-b805-efa9bda6c840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62d2775-ef94-4967-bb1a-bc8f4410de3e",
        "cursor": {
          "ref": "d2b4401f-41a5-41c2-aa3d-fb2d2f0f698f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "df5627ff-9d0c-4bd4-bca1-2cd989d4871e"
        },
        "item": {
          "id": "b62d2775-ef94-4967-bb1a-bc8f4410de3e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "625165a4-10e6-4918-ac96-12dc78986513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c36dca-c32d-4bc5-a262-3d4821489d3a",
        "cursor": {
          "ref": "1d2dba83-40ca-4c44-89d8-5ffc96d299f3",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "71968b62-dbd9-4dd0-835a-aa1605bc7014"
        },
        "item": {
          "id": "59c36dca-c32d-4bc5-a262-3d4821489d3a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "159f9076-aaba-4514-a213-95c0fd7b1936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bffd31d-4867-4c50-a192-2d2806680688",
        "cursor": {
          "ref": "adf6ca1d-be56-462a-86e5-ecbeb95be1b9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6101f3f5-b31f-40db-afc4-647cbae3ebd2"
        },
        "item": {
          "id": "4bffd31d-4867-4c50-a192-2d2806680688",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2b38f022-751a-4d52-92a6-61412c9ae0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c751bb8c-40ed-4046-8624-b4bf807b047f",
        "cursor": {
          "ref": "bb2c7380-5853-4f8a-b06d-7dc71cff22a6",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "de4d640e-a22e-4f0c-b55e-a7321ca050bb"
        },
        "item": {
          "id": "c751bb8c-40ed-4046-8624-b4bf807b047f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2244c139-a62e-4c60-a36b-37bbfe5f1782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2e0ef4-c373-4421-8876-8a098afdd32b",
        "cursor": {
          "ref": "4d358908-db24-4857-a179-ba416a23e592",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0d8ab15d-a4dd-4462-abba-2d552fb72080"
        },
        "item": {
          "id": "0e2e0ef4-c373-4421-8876-8a098afdd32b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "154b5cd2-eeee-4cdf-ab66-44aa329f96ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ab4013-df30-4fea-b1eb-3f39ab0d30d1",
        "cursor": {
          "ref": "c69cc962-b6ac-4447-b11a-81ef0cb3b543",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b436dc0a-e0e9-4157-9927-6c6c4c7f07c3"
        },
        "item": {
          "id": "72ab4013-df30-4fea-b1eb-3f39ab0d30d1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ffe56c65-04c5-4b01-97af-08721dce10db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7c0a4-c505-4a9b-8ced-8a71ec38147b",
        "cursor": {
          "ref": "609d0a44-a2ee-4cca-9526-78a96dc2a573",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5086ecef-7d57-4760-bb1e-034d34c946cc"
        },
        "item": {
          "id": "97f7c0a4-c505-4a9b-8ced-8a71ec38147b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9a1c08dd-3c70-4d3f-a0e8-038f3ebe0acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe87597-5cd4-4e06-a565-04795b16395f",
        "cursor": {
          "ref": "30b56ffb-2b90-49c7-b796-cb1ec991c70b",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "92e239ae-e10e-40d3-9af6-6c90ecce6dda"
        },
        "item": {
          "id": "cfe87597-5cd4-4e06-a565-04795b16395f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e6e760de-fe0b-4721-979f-1a17cd41724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70e4c68-a701-4589-a7dd-3c34b29830f3",
        "cursor": {
          "ref": "bfeb12f1-bdad-46d7-80fc-7b1dfc2affbf",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16ec7392-9a7c-4ac8-b5b4-f21d1c2e2d0b"
        },
        "item": {
          "id": "b70e4c68-a701-4589-a7dd-3c34b29830f3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4ea64d81-9802-42e2-ac9d-2e3277ec7e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c1d432-8efc-45f3-94a9-76859ddf10f2",
        "cursor": {
          "ref": "a730cb53-d2d0-4624-a796-0787cb208b0a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3f856161-3ada-47c3-9ed1-e5059570cc7a"
        },
        "item": {
          "id": "39c1d432-8efc-45f3-94a9-76859ddf10f2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "56fa9fe2-fef5-4a23-bfa6-3ffe1b69647d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bb669c-bd5c-4927-aed9-e97f4fd85a9c",
        "cursor": {
          "ref": "6965a9dd-9f88-4587-8094-f172b7910251",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0b8ee257-b116-45c5-ba66-ed6c8ff2faf1"
        },
        "item": {
          "id": "36bb669c-bd5c-4927-aed9-e97f4fd85a9c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "984b3679-4841-4c7a-be94-72688de7d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c506d583-0046-4430-aaac-086f2f5deee5",
        "cursor": {
          "ref": "d2cdb767-a0aa-466b-8a9a-cb4b2b5f583e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4eaa5b81-e93d-47dc-acf0-b8989087c101"
        },
        "item": {
          "id": "c506d583-0046-4430-aaac-086f2f5deee5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "889e5669-5843-4319-968d-fedb8ad603dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d8a0eb-5908-4134-8720-9e76cae0d8f6",
        "cursor": {
          "ref": "a92d5d17-1dfb-49ab-8fc2-7d3b6768f8ea",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e1bc41b2-c3cf-45ef-ad62-3835d7ed5eee"
        },
        "item": {
          "id": "b1d8a0eb-5908-4134-8720-9e76cae0d8f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b0486b16-1530-45d2-9d95-207dbd90fb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba3b5cb-bce2-4e8e-ba43-dcdd15f70146",
        "cursor": {
          "ref": "0bc1bb44-51b7-48d9-80c4-ebf4c3dfc928",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3cfe032f-29fe-4150-9a52-2036dd09b77c"
        },
        "item": {
          "id": "9ba3b5cb-bce2-4e8e-ba43-dcdd15f70146",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a3378da6-de7f-4f57-b233-3be0a38bad59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74aafdd-82c3-4016-82ac-fd5768058fe2",
        "cursor": {
          "ref": "77d73961-9e41-4447-a823-36a7bab46552",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "424e313c-840c-4e6b-a057-dfb5b0c96b5b"
        },
        "item": {
          "id": "d74aafdd-82c3-4016-82ac-fd5768058fe2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e03e166b-e267-40a8-af86-03d45277fba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1912240f-0f3d-4542-b152-9cafe17af808",
        "cursor": {
          "ref": "fa326cfc-cfe8-4e03-9641-843cde11cb9c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4a27c175-c9e1-4003-86f9-a057dbb86c05"
        },
        "item": {
          "id": "1912240f-0f3d-4542-b152-9cafe17af808",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bfa9ffe4-17e7-4029-8f71-cda3357e57e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3816614-a016-4cf1-93dc-c057b8031a30",
        "cursor": {
          "ref": "74949506-e138-4741-8a15-96b6bd3bdd6d",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dcaaf578-d828-490b-aed8-6168807c7426"
        },
        "item": {
          "id": "b3816614-a016-4cf1-93dc-c057b8031a30",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "76e806f7-3a34-4a91-b456-16a23f917d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0e42ef-efc9-4d90-ae64-a86acce80e93",
        "cursor": {
          "ref": "2949850c-bda2-47f3-8e0c-6a76db4ae803",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d12726d9-4e00-4ba5-81dd-cb2ecd0c2746"
        },
        "item": {
          "id": "6d0e42ef-efc9-4d90-ae64-a86acce80e93",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a25a0cd0-15da-4f06-a37a-cfc61612472c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200eee31-ab51-4132-9184-d002d7ba5f67",
        "cursor": {
          "ref": "196cf718-a63d-492f-a55f-797e40ff8e6c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ee0841aa-137c-4263-8a07-c051ade46dbd"
        },
        "item": {
          "id": "200eee31-ab51-4132-9184-d002d7ba5f67",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "43da91d3-d14c-4cbb-a36b-caa72fec8847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb0eae-8745-4a8e-826c-76ee5ad75a85",
        "cursor": {
          "ref": "024e3e2b-72f8-4df0-8786-b542197b82be",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c0626b7c-c5a4-4b06-8a4e-7b868ae9dcf3"
        },
        "item": {
          "id": "b2cb0eae-8745-4a8e-826c-76ee5ad75a85",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "326d07e0-c91e-4f95-b9c5-0020123e81e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1496ce4f-e853-4907-8128-b4d3f079553b",
        "cursor": {
          "ref": "2dcd2d90-3954-48ff-99b1-4e41bab9b8cd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c2a67870-0968-4671-aca2-d46a667c6c22"
        },
        "item": {
          "id": "1496ce4f-e853-4907-8128-b4d3f079553b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7af63060-9658-4d96-b483-bd202f671471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3ee341-d1d5-4ebc-8280-238a9e1a88f9",
        "cursor": {
          "ref": "4333fce1-9fc6-491e-a01e-daab64f383a4",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "afb42b39-7ff0-4251-8896-364dc580ca59"
        },
        "item": {
          "id": "6a3ee341-d1d5-4ebc-8280-238a9e1a88f9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8af3fea7-1ebd-4eb2-9382-9774943990b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e40d2c-eb0e-4d08-b136-8177f6e354f9",
        "cursor": {
          "ref": "9f73ef81-f246-48b2-b1e0-b58698654296",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0b462e35-62fc-40ca-8d72-7b1a88d4bf75"
        },
        "item": {
          "id": "84e40d2c-eb0e-4d08-b136-8177f6e354f9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "665e1771-4cfa-429b-8a3c-27fa9b0dd60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b561c2-5975-4d16-a60f-585c9498af2a",
        "cursor": {
          "ref": "2f32205d-5777-449b-b103-d752e3ae43b9",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "25d14604-da8b-4f6c-8175-6ae27df03146"
        },
        "item": {
          "id": "a2b561c2-5975-4d16-a60f-585c9498af2a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a77e9131-d529-449c-a44b-aa0cea77db5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779db8be-7ee7-4419-87bb-a6e0372e5142",
        "cursor": {
          "ref": "67a1bdd0-d415-4b6d-a055-aa0270dcbcfe",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4b872842-91ad-484b-ad63-4a3689517b19"
        },
        "item": {
          "id": "779db8be-7ee7-4419-87bb-a6e0372e5142",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f5f10ec8-2886-4b5e-826b-6a377a5b2939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af27405-d79d-4736-8420-da21e048f028",
        "cursor": {
          "ref": "f8ca6dfb-515c-40c3-b573-a6e9a110d301",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5e8848a4-37d0-4413-9566-348173620c12"
        },
        "item": {
          "id": "1af27405-d79d-4736-8420-da21e048f028",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9bfe44da-a260-468b-8f85-21f134e69f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af95207b-79b9-420b-b672-79ca6c838e8e",
        "cursor": {
          "ref": "d079ed57-4cb6-4dc9-9926-4923f47df3f7",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d98bd88a-7a73-4747-90cb-9506142cdb37"
        },
        "item": {
          "id": "af95207b-79b9-420b-b672-79ca6c838e8e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "103eec49-c90b-4cef-acb6-8468b4cde1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286dfc4b-5f71-491b-a7fb-440c912d165f",
        "cursor": {
          "ref": "ad82327f-f10d-4443-935e-18d145d25d84",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7608dad1-223c-47ac-bedd-7b1f55a87cc2"
        },
        "item": {
          "id": "286dfc4b-5f71-491b-a7fb-440c912d165f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3f9e790b-c19d-40aa-ae7f-703483c13b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c78a389-22fe-451b-85dc-8feea4ee71e9",
        "cursor": {
          "ref": "d15d625b-a2b9-48ab-982a-f2b2581f76b6",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "54d0b339-ed4f-4646-b607-04c5faeba533"
        },
        "item": {
          "id": "3c78a389-22fe-451b-85dc-8feea4ee71e9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "49b8f0ad-c3f9-4c3f-901f-2117e3e7e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5effa91f-fc7b-4077-827d-847c1f9373c5",
        "cursor": {
          "ref": "4c847622-89b7-4460-b86c-7125c9992066",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a42a2868-ceb8-4cc5-8233-ea4d9a37b948"
        },
        "item": {
          "id": "5effa91f-fc7b-4077-827d-847c1f9373c5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "49be0c50-0ad1-414e-b5ba-4b7c7c486bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7dc747-2ad4-4142-84b4-6a0d973837d9",
        "cursor": {
          "ref": "47aecb72-fa23-4a8c-9181-a2055f6620cf",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e78d8f63-bc20-4338-af18-9ba01755bdb2"
        },
        "item": {
          "id": "5c7dc747-2ad4-4142-84b4-6a0d973837d9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6fc04ad5-d6ae-45e0-b5af-7a09cc29bcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c70387-92ba-483c-95d4-9490dcc21c8d",
        "cursor": {
          "ref": "27dfeba8-c226-4a1a-b714-099f8656cb6b",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "88e4564f-b2da-4291-996e-5df5dc173677"
        },
        "item": {
          "id": "99c70387-92ba-483c-95d4-9490dcc21c8d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1103bb1b-c8ea-43b5-a101-2206d872a626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5dcf96-7c34-4f63-8051-06c62f49beb5",
        "cursor": {
          "ref": "b9c1dafe-2c9a-408e-9c38-d98d394462f1",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6c3e5cda-be81-452a-bafb-eadaa718dd44"
        },
        "item": {
          "id": "9f5dcf96-7c34-4f63-8051-06c62f49beb5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a8eef89a-c985-4110-8a0d-5fcbc7034678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6416690-2737-4fe3-b691-999103e1a2ba",
        "cursor": {
          "ref": "a4d18782-267c-4914-a1e5-e415bc63950c",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bdae1b2c-45eb-4a42-87db-abdb4814c2af"
        },
        "item": {
          "id": "d6416690-2737-4fe3-b691-999103e1a2ba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3f4c384f-04d6-4dcd-9d82-fe4b1541a121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6316a7e3-28ac-4eed-8259-5342d5b7a609",
        "cursor": {
          "ref": "b6e0dbd3-d40e-4136-ad4b-9a0182054610",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f934c9a1-4dcb-4388-ac49-c246f14cf837"
        },
        "item": {
          "id": "6316a7e3-28ac-4eed-8259-5342d5b7a609",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0b9c2106-09ff-4bbe-b26f-763169e4c97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40449c9d-9691-4f54-a344-1a7867e729aa",
        "cursor": {
          "ref": "86f99122-9941-4103-a8ba-5deebadbcc75",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cf456952-4f8a-4e17-9ae1-aef9ec4445c6"
        },
        "item": {
          "id": "40449c9d-9691-4f54-a344-1a7867e729aa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "16ce6c45-f931-46fe-941a-42b19a3b3f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9741d32-2c0c-4583-98ac-c84bcaef013d",
        "cursor": {
          "ref": "09b0f6c6-66a3-47b5-b1fb-ac200a6ffc98",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eddcd242-0ce6-43f2-bc07-dc610c248198"
        },
        "item": {
          "id": "e9741d32-2c0c-4583-98ac-c84bcaef013d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d1bf0286-e008-4a26-a2b3-ffe6c1ca1c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47072f95-3b19-49f7-928a-37d2ad327580",
        "cursor": {
          "ref": "df9a192a-ffdf-4f57-bfaf-efbb8dbc87cd",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f874d158-4690-476a-84f7-aa75784ff40d"
        },
        "item": {
          "id": "47072f95-3b19-49f7-928a-37d2ad327580",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "61a217ef-72db-4266-af0b-8f620e84152a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21dc838-e50e-424e-adcb-531a28fb2d84",
        "cursor": {
          "ref": "aa850403-4a25-4868-ba3e-f667ec26e1ab",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "faede13b-6e88-458e-ab4f-2dc50b976bb6"
        },
        "item": {
          "id": "c21dc838-e50e-424e-adcb-531a28fb2d84",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "79231edb-bcd6-452b-8736-f8c779afa8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac551c69-4245-4ab9-a5dc-be828be8139b",
        "cursor": {
          "ref": "db63f94c-8093-47fe-aaa2-40181be97d12",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d741d494-82ca-44b8-888a-c678a9899cc9"
        },
        "item": {
          "id": "ac551c69-4245-4ab9-a5dc-be828be8139b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7ecb159b-2a79-4a6e-9562-bdf42cb78bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5659d111-acb8-40bc-a084-8e13730dcfd8",
        "cursor": {
          "ref": "a7e70eb9-1d31-45ac-bb73-33d0200f1ccc",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c0d316f1-6542-44b8-a356-0e307449064d"
        },
        "item": {
          "id": "5659d111-acb8-40bc-a084-8e13730dcfd8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "11f6b239-ed44-46e8-ac59-23e5dccfe249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8a7094-3cfa-4782-86af-809ef4341807",
        "cursor": {
          "ref": "645a1463-8872-4107-aaaa-9a5f2e9550cf",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "54b039a9-cf5f-4fcc-8d4c-c388a418a5e9"
        },
        "item": {
          "id": "7b8a7094-3cfa-4782-86af-809ef4341807",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "05fb6e1a-62e3-4bad-ab71-6311ccabd89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656cb00e-50ba-46d0-82d6-ba6f155ce629",
        "cursor": {
          "ref": "4fcbe155-33eb-44d9-b707-09a8ae804501",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca930a26-7c5c-4132-b3ab-3d09b7eae97b"
        },
        "item": {
          "id": "656cb00e-50ba-46d0-82d6-ba6f155ce629",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a925c5a5-f537-49b1-9e81-1b1f9cb8dd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246af8ab-eb07-445c-8235-1ca693b7ddfc",
        "cursor": {
          "ref": "38e44227-b283-4394-bdc5-50e40dc08420",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8716dd3c-318c-42b5-b6ed-a9479f931ce4"
        },
        "item": {
          "id": "246af8ab-eb07-445c-8235-1ca693b7ddfc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2f798440-62a9-4a42-99eb-00d8f66784c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b24d83-5522-4f3b-8aae-01c6778d6154",
        "cursor": {
          "ref": "d9be2e70-3f02-4b89-b4c2-a1063328204a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "754b8864-961d-4b75-82b9-4e9ed88cb65e"
        },
        "item": {
          "id": "d9b24d83-5522-4f3b-8aae-01c6778d6154",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f22c3923-61f9-4f8b-9953-4aec2f2ccfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857b7b74-5d79-44f2-b981-4e69a97bde7e",
        "cursor": {
          "ref": "e55eec0a-67fa-4491-9b1e-883222d4edfd",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2c54b9ca-07f6-4ade-ba3e-8e3756e0db18"
        },
        "item": {
          "id": "857b7b74-5d79-44f2-b981-4e69a97bde7e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51e39db5-4d15-4252-b391-347e6fe77b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b087f151-d451-4158-90d2-12c3e9eaa8cb",
        "cursor": {
          "ref": "3d6b2759-7e9e-40d1-b8ad-0e099ee3058b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b9b204a6-2b49-45f6-9bd1-adf996e0f580"
        },
        "item": {
          "id": "b087f151-d451-4158-90d2-12c3e9eaa8cb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "94801c08-8e92-4ef8-bc64-6fdf4a239747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07702ee-241a-4b62-bc19-b948d73cb789",
        "cursor": {
          "ref": "e1ec87b1-aaf1-4c5f-9f28-209c3707b1d0",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ede3b12b-a0ba-42a8-9115-5f1779ee54cf"
        },
        "item": {
          "id": "e07702ee-241a-4b62-bc19-b948d73cb789",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90e94c00-fa82-47db-92e1-84ae38b1a182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb33f9b0-4306-470d-aba1-86d575a67bd5",
        "cursor": {
          "ref": "fab33347-82a0-4fca-8eaf-ace8d418f79b",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a71e8bf1-b654-40fd-9085-89ede7222a71"
        },
        "item": {
          "id": "bb33f9b0-4306-470d-aba1-86d575a67bd5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "79970520-8c13-4150-8f6e-5fa2e4a11043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75745a0-a26f-4f44-85fc-6a3b80cd732d",
        "cursor": {
          "ref": "ad692ba9-b543-4bfa-9899-7c11fc6bd593",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e030c9bf-177f-4926-8e75-4a69f7a793af"
        },
        "item": {
          "id": "b75745a0-a26f-4f44-85fc-6a3b80cd732d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e4ebf23a-07d9-4657-bfbf-d780a912295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c430fb-13c4-41ec-9ec5-5f83c034b261",
        "cursor": {
          "ref": "80159159-f9a1-4240-b3dd-b0e4143f1e17",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0d30057e-5f84-45ea-8fe3-44bc0844be0c"
        },
        "item": {
          "id": "b9c430fb-13c4-41ec-9ec5-5f83c034b261",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "38370e38-7e5b-445a-be17-1168e589482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60933a26-4f38-4b53-a35c-44f5e135db4c",
        "cursor": {
          "ref": "08ca9970-fd8d-4d52-be8c-9e44caca55d3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "449bef1a-eac2-48fe-8dc6-bbfce5efe4fe"
        },
        "item": {
          "id": "60933a26-4f38-4b53-a35c-44f5e135db4c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "57c82785-7627-411d-a1bf-f942802d40e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef43a00-86cd-4d16-9aeb-1eaff57e3da5",
        "cursor": {
          "ref": "1ce51707-b59c-4baa-9618-9e332ddd4678",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "80da091a-c85e-4a21-be7f-38730c60bd22"
        },
        "item": {
          "id": "0ef43a00-86cd-4d16-9aeb-1eaff57e3da5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "446fee36-1e23-4c2d-bd47-390ad993dda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65116647-9e82-4dde-a26f-71b3214430a5",
        "cursor": {
          "ref": "6cb95aa0-f67d-406f-97ce-d394ee522d54",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3f3d9db3-0fad-44c2-bfac-0a9c8044fbb9"
        },
        "item": {
          "id": "65116647-9e82-4dde-a26f-71b3214430a5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c2c986d3-56a2-4897-b297-7f2b506318aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2245e9f7-a9dd-4981-8385-43707b49cbeb",
        "cursor": {
          "ref": "e470f7e4-42ab-4f5b-8cc2-8b0c1eb0c73b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b4597b24-e0e0-4e71-af8f-54c3b65bad1f"
        },
        "item": {
          "id": "2245e9f7-a9dd-4981-8385-43707b49cbeb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "305b1073-872b-4c61-afaf-4e68f092345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d906d0-d24e-4263-b20b-67f69f09cb10",
        "cursor": {
          "ref": "bdaeca87-39a9-4048-9a5f-0aea70576990",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ba8dbe11-ef7d-4152-8546-83b53f823132"
        },
        "item": {
          "id": "b9d906d0-d24e-4263-b20b-67f69f09cb10",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "202af520-4340-4877-9b11-fe54f1920bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ba1c91-799a-4dc1-ad54-0661c0ae5406",
        "cursor": {
          "ref": "0a65f6b4-f02e-4357-9d81-762155618324",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7f8ed86c-a58a-4803-aa72-461ab55ed22b"
        },
        "item": {
          "id": "d7ba1c91-799a-4dc1-ad54-0661c0ae5406",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7884b215-e676-44d9-86d2-d00cefe96605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00d2db3-9074-4ae0-9a6b-4ab6d9eb7e76",
        "cursor": {
          "ref": "21fdf5fa-fba5-45b7-badb-5c9329c297ed",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "605f2ab2-8ae0-40f9-a381-a82411f2117f"
        },
        "item": {
          "id": "d00d2db3-9074-4ae0-9a6b-4ab6d9eb7e76",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d0bf15c5-806b-40af-aac2-41186f6191ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c61f9be-073e-41f6-a75a-504fc6c2caa8",
        "cursor": {
          "ref": "eff3e9fe-a626-4927-958b-4a59ee1aaf5b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c54369d4-c31f-4980-970e-8c8eb285bbe3"
        },
        "item": {
          "id": "0c61f9be-073e-41f6-a75a-504fc6c2caa8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fa19dc66-199e-42bb-a444-be8b75b28829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527f0682-6f72-43f9-9db5-9ffa5a682cf2",
        "cursor": {
          "ref": "8ae5d95f-76fe-40c0-b0ef-fe7dd282e3f4",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8053cee1-29aa-4a8f-ab6a-02b68b24d3a8"
        },
        "item": {
          "id": "527f0682-6f72-43f9-9db5-9ffa5a682cf2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f715dc4d-2ef1-485d-a985-3ed052062897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af23509a-de00-46e3-a35b-16cca79995b0",
        "cursor": {
          "ref": "78de6101-000d-4ad2-a921-9c072da8abb2",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "efea922d-8a1a-40dc-bcef-43819863af48"
        },
        "item": {
          "id": "af23509a-de00-46e3-a35b-16cca79995b0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2c0ffd53-2c27-46ce-9218-373bb47c5a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b206446c-18dd-4371-89eb-3f200f92121a",
        "cursor": {
          "ref": "b08f5a63-e6d1-4729-be30-8d7381add6c4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2af2182c-ac58-442f-94cd-adfa40bb3987"
        },
        "item": {
          "id": "b206446c-18dd-4371-89eb-3f200f92121a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bb74195b-b657-4810-93ae-8476d8581dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6d024e-e305-4c0f-97aa-03c647945c45",
        "cursor": {
          "ref": "a828a96c-e01b-465c-a3cb-a60be05491f5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "66869e57-1465-47a1-82af-996fd79694f8"
        },
        "item": {
          "id": "3d6d024e-e305-4c0f-97aa-03c647945c45",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7c20c6e8-fe3b-42ff-a7e2-98cbf51199b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cb9b18-591d-4123-8ff5-198b7c50b7a6",
        "cursor": {
          "ref": "903b9cf5-1789-4f4d-807e-0d1c053dadda",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "70ad830d-aa1a-4a1f-b88a-6abe0a3048e9"
        },
        "item": {
          "id": "46cb9b18-591d-4123-8ff5-198b7c50b7a6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9919c7e1-00f3-4284-9537-51891d8c2b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacd4a43-7b65-4a1c-88dc-78c007ef9d1e",
        "cursor": {
          "ref": "b3c0aee9-4c3c-44f4-a50a-d057db55b0cf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "05f5bc2b-c3c9-46ea-b67b-a6c99372a560"
        },
        "item": {
          "id": "bacd4a43-7b65-4a1c-88dc-78c007ef9d1e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f9de9a0f-ac3b-47e0-823f-fc227cd33f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b68211c-ff7b-4e08-85ac-18ca19a4e444",
        "cursor": {
          "ref": "9556ee66-f731-49be-9f47-9dc8861ae035",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b0602697-3b55-43fc-83aa-c01645b4a43a"
        },
        "item": {
          "id": "0b68211c-ff7b-4e08-85ac-18ca19a4e444",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c170167f-a3a2-4c80-a5cc-6096fe3dc368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2adbf4-9f1b-4184-9130-5e1fdce031e0",
        "cursor": {
          "ref": "1da05c4d-f619-48fd-a145-35df7f9b1a14",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dfe5bfb5-b910-4598-867b-5cf5ea096a99"
        },
        "item": {
          "id": "0d2adbf4-9f1b-4184-9130-5e1fdce031e0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1bd2457f-59d4-4ccc-a5d7-c55b8b297e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d66c431-5d0f-4c5b-a711-6eab3b8deeda",
        "cursor": {
          "ref": "0e4432af-a19c-4d07-b4d0-49007c062629",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4c9638a3-eb1d-4955-8084-0edc73c19844"
        },
        "item": {
          "id": "9d66c431-5d0f-4c5b-a711-6eab3b8deeda",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "24b6a8c3-59cd-461c-9ec3-4f696239fed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad9761c-0c91-4312-ba31-1cc032d2605f",
        "cursor": {
          "ref": "58904c82-5d9a-47bb-921b-b1ec15d48d41",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7aca0dca-d12b-402b-9dc1-9f1806dc0a1e"
        },
        "item": {
          "id": "2ad9761c-0c91-4312-ba31-1cc032d2605f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c2b7fe41-4104-4549-9e0c-479191bfafd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc3285-c402-4f74-aeaa-2316aef2965d",
        "cursor": {
          "ref": "d16c8c61-8e5a-4bb4-8d65-b9f1d0aba4dd",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ebfc54f4-6195-4f0e-b59d-3a50d745d9fa"
        },
        "item": {
          "id": "3bfc3285-c402-4f74-aeaa-2316aef2965d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5fc02b7-3483-47fc-a8eb-f5f9a170a88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a611920-4e17-4dea-94bf-2bb5d856ad65",
        "cursor": {
          "ref": "331f8d87-8d68-4da3-b5e4-406170fa8a4b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0a95ad11-387b-4df0-8639-8d292b4fa62b"
        },
        "item": {
          "id": "3a611920-4e17-4dea-94bf-2bb5d856ad65",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fd3c9f63-a0f2-43b0-a3ed-54769f927b24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdf3d0b-e468-416f-bc17-1334223ca36d",
        "cursor": {
          "ref": "afd1f51c-7378-4c27-bc25-70008a0d5408",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e6f4eeab-2f30-4567-a5e1-67786de1f076"
        },
        "item": {
          "id": "6bdf3d0b-e468-416f-bc17-1334223ca36d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "65624332-c3bc-480b-b69d-606f26e4dab8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 465,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55da0d8a-b90e-45b3-8799-5ea79d31dedb",
        "cursor": {
          "ref": "83c5b1e9-081c-420f-aed5-fa1f18019d33",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d8feeed7-01aa-403f-a850-a8288394f29f"
        },
        "item": {
          "id": "55da0d8a-b90e-45b3-8799-5ea79d31dedb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0a2debb-2ba1-491c-83d5-33a60f28695e",
          "status": "OK",
          "code": 200,
          "responseTime": 533,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "644940b0-9c24-4f99-aef2-be4cf0d439b1",
        "cursor": {
          "ref": "c9001f75-2451-402b-9338-f8b5536dff58",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "be0295cf-5c43-4501-bf0a-e9d765503c16"
        },
        "item": {
          "id": "644940b0-9c24-4f99-aef2-be4cf0d439b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f1a334e8-c9d6-4f71-b1df-f3a14e0ab4b9",
          "status": "OK",
          "code": 200,
          "responseTime": 2211,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aade9e0-c010-44f2-a2d8-a13fc74bc7f8",
        "cursor": {
          "ref": "edbc22db-7529-4b6a-90f5-2a3ee09ad95d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e815a45a-7d84-478b-a1ca-39efa9b8f88a"
        },
        "item": {
          "id": "5aade9e0-c010-44f2-a2d8-a13fc74bc7f8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "09b12254-b7b0-43ea-a85a-b869f20849ac",
          "status": "OK",
          "code": 200,
          "responseTime": 1907,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
        "cursor": {
          "ref": "6a5ca624-49f6-4566-a92e-bb18162a402f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fa15074-56e5-4149-bcc9-6630e79ace16"
        },
        "item": {
          "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a291639-4465-425c-b5b4-c72680f4b21c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
        "cursor": {
          "ref": "6a5ca624-49f6-4566-a92e-bb18162a402f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fa15074-56e5-4149-bcc9-6630e79ace16"
        },
        "item": {
          "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a291639-4465-425c-b5b4-c72680f4b21c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
        "cursor": {
          "ref": "6a5ca624-49f6-4566-a92e-bb18162a402f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fa15074-56e5-4149-bcc9-6630e79ace16"
        },
        "item": {
          "id": "3c339201-2c13-4beb-9237-c2da6e22ff29",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0a291639-4465-425c-b5b4-c72680f4b21c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a24d9d-2042-4a0f-8b36-71a63a7a4142",
        "cursor": {
          "ref": "8c47155f-3454-4996-8dfd-822fe8c182b8",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e10e60f-0390-4876-bfc7-fdc733a0d19d"
        },
        "item": {
          "id": "63a24d9d-2042-4a0f-8b36-71a63a7a4142",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6213cf7f-c061-495e-95d6-20c2cf97fcff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9404c06c-c90b-4050-b2b3-41d34711e7d8",
        "cursor": {
          "ref": "c4d76b89-90a0-45d0-ac1a-7b4b40b84855",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "726bb1af-ba03-4c0d-bd75-809e375ea31e"
        },
        "item": {
          "id": "9404c06c-c90b-4050-b2b3-41d34711e7d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50f60847-97e2-4c2c-b740-32741ee34004",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9404c06c-c90b-4050-b2b3-41d34711e7d8",
        "cursor": {
          "ref": "c4d76b89-90a0-45d0-ac1a-7b4b40b84855",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "726bb1af-ba03-4c0d-bd75-809e375ea31e"
        },
        "item": {
          "id": "9404c06c-c90b-4050-b2b3-41d34711e7d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50f60847-97e2-4c2c-b740-32741ee34004",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8e82b5-51fb-4661-afa1-362a5130bd43",
        "cursor": {
          "ref": "9faf8c60-c2f1-47d0-b76e-9abeddfd3ce6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9c880455-9d40-4650-8f11-10565058f92b"
        },
        "item": {
          "id": "da8e82b5-51fb-4661-afa1-362a5130bd43",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "da510d93-59d1-4ff5-abe6-08dab7a1e9cf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 678,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e407f095-31c5-4678-8934-4928ff55183d",
        "cursor": {
          "ref": "39fc57e8-0515-47a6-af2f-45fcf78ad436",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "810cb327-9c70-4c46-a712-f9eb0fe19e23"
        },
        "item": {
          "id": "e407f095-31c5-4678-8934-4928ff55183d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b95f6964-55ec-4e6c-8bf7-6c13cfe7f205",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e407f095-31c5-4678-8934-4928ff55183d",
        "cursor": {
          "ref": "39fc57e8-0515-47a6-af2f-45fcf78ad436",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "810cb327-9c70-4c46-a712-f9eb0fe19e23"
        },
        "item": {
          "id": "e407f095-31c5-4678-8934-4928ff55183d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b95f6964-55ec-4e6c-8bf7-6c13cfe7f205",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd53c61-8b19-4fda-814e-ca261ba33711",
        "cursor": {
          "ref": "00335e64-acbc-42be-bdc2-b2b5935c3c5b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4b84aaf7-163d-4200-9349-49e1c93ca594"
        },
        "item": {
          "id": "6dd53c61-8b19-4fda-814e-ca261ba33711",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b90f3e6c-c237-4094-896f-37d3bad6c662",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 670,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}