{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b7a7a0b0-9f2d-4ae7-8160-38e6b043d724",
        "name": "Clear Cache",
        "item": [
          {
            "id": "261f26db-c0c7-412d-be2b-e1b4c5fbeb2a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1ebfb59-03e7-45de-bafc-cd375a97efd1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff4feb97-f7e0-4a22-bb14-fe5260b8dee6"
                }
              }
            ]
          },
          {
            "id": "3ca309b0-a47d-4486-a737-bbf40abea155",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c3fb82f-9800-4446-a322-e05366efdfa5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b6c31aa-f383-48a4-9f63-16d84b31169a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f48dcf65-20e4-4c90-b0f3-c5d5a1a65560",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5985d315-987d-4acd-b201-af0b0a2f24e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8a915d5-357a-4802-a2a7-0035a4114627",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26765c15-7e14-4da4-8dc6-358dc2a132b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdc9e120-c530-4c4b-b8c8-fc1ba150811c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8c31b37-f269-460b-adbe-01b8e1644ced",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bcda5ab-97ef-4563-9e09-4ff3c4c45f88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "274b2c60-e22e-44af-9f61-463528168d84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "002c73c5-a65a-43fb-9be6-7c8313d0ed4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8da601df-a423-43d7-911c-ab9ef8248df6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "353ac404-b2c2-4f33-be8a-f96493d696ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b5f84fa-7de9-468c-ac31-cfd5b58bc105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7736e3a0-9837-4120-947f-2cd124fac14a"
            }
          }
        ]
      },
      {
        "id": "d2c881a7-bf3e-48a9-8524-d81c0846f083",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0066469f-386c-411e-b551-c3906dbb5d7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f5c02d9-2ca6-4de2-8f02-07de02791ab7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "510af8ce-4fc2-470a-aa6e-e1113d61e849",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bce626-7589-4c32-903f-aead0b43ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "532dc40d-395f-4416-8334-a9b9bd3fa602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f11a84-494f-4291-847c-73435857e032",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55d5d53-b6d3-4447-ae92-01d7c03c4e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beb612b1-3634-40fb-8516-7ae099850115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa11ffa3-b63d-4fad-b814-45235768a227",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a33074-cd77-47df-b534-02ecb9e42b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "696a8b80-4a82-4823-a6aa-f6c6d7c4e28d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "706736a0-53e3-455f-a4cc-0301d2bf5a34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee288a77-bf36-4291-8eaa-127091b3e501",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eafa22-5bec-45c6-b9d6-f56557bddd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a65d011-e764-4b10-aab7-3cf7773fbe20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f3d938-eb2c-47ca-b562-97054daf25ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf4e3d5-1a6f-4158-8a68-16693ebf7b83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "afc66ecf-3a26-418f-a2b6-977a4d75ea27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20d17d44-c138-40ba-9407-64c7c7103926",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d1fdeab-394b-4f2f-8074-f69b0f47e88a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d7694ddb-bba9-478b-a7c0-d1ef67f5c94c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7021d6b1-663a-4450-98e9-8c89e28ef924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b0408987-5a8b-4e18-b547-e6eaadcd275c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b52319f-37e0-4ef3-9089-83f4e34a9163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27c268bc-a070-49e9-a37c-77cfd4be664b"
            }
          }
        ]
      },
      {
        "id": "4cec1ae8-c37e-4b77-a906-8210d51a0906",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "824c5e2b-3f0f-47c4-87c4-7565e18123b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3db114c-a9eb-43af-868d-ca9efd66aedc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "73de991d-98eb-4fb0-ac52-fc2f049cc4b5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f54b4-5bc9-439f-b1d5-e4369f367c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ab73e0-838f-4954-b805-fbbbf67deff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239e0ede-8e88-4238-abad-27c6959230e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0515757c-e56f-41d2-934d-a5fd5e395ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64f64eb-3116-43e8-934c-cfb164bd7fe4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474151c9-0e2a-4778-99fb-9df02479b520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681e433d-dd01-402b-a4c1-0507eaf9f765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217ac9d7-b281-4d01-9373-4e9140f456cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b456e1-f844-495b-bf5e-64a8cbcd04d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135a1c87-2e74-432f-911e-a07e65e91cca",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3abdc5-3b6e-460a-86f6-dd72f167c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab66f39c-854a-4db2-a40d-7af2fb554efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c29b7c-0704-4da6-a238-fe38533cc797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706b2fc4-1967-4930-be4b-0a48074af3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902bc51f-3cf6-452c-a5d8-b26dbd2aa914",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e684fb-640a-48e7-b1e6-81ae3ee77a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6389bef8-a51d-48ea-9396-053b00191a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641159e3-d8a0-44b3-9208-ceaf4be3e8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7373cbed-9a5b-4479-a826-346001f86977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c85f6-6424-40a4-9080-91f02cda9c14",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e10d72-7b50-41c3-abe4-c1852730837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3123a9f8-06c7-48cf-8ce1-1537f2f4fa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d69f989-7925-4095-9e8d-13385e2b4c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd440ed6-2e98-42cf-83a0-f21f8cddc5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae3fcab-8bf7-4649-b6e9-2ed82f6c39c0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc741062-ead4-423b-a67f-64b2f9044672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dd49a7-aebb-41ca-8a93-f8878730ab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea97fcd-6564-48db-9b36-6730fca3a23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c9e3598-25be-4c2b-b13c-cc0c26dd37d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6101c95b-6848-424f-b8ea-943b1614782d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d2f7b4-c1c2-43f1-824d-6b0840749bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424ab5e6-6cb3-485f-a71d-3494bba0bff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf19692-e480-49fe-a7ce-5aa671c5d4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cca54e8-68d7-48c8-b439-abe044bbd983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978f8cbf-69cd-41f2-b690-ab7738d82b7a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedf9fac-0383-4d3b-b7ef-8a53bcb2ee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a6f3b5-3250-4377-bf21-58b55c825d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e8faef-a1e5-4ac1-ad9a-c00c8a6d8081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afef6b61-3fcb-4dab-b824-f520675c5118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7d72b9-b618-4554-9687-11c306e7ad16",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437a947a-1818-4742-a067-f8c8947dbb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb3e9fb-b115-4f45-beb3-2957daa0e314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bcbe3a-360c-40fe-a3b9-c5c3a0f3b395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3469849-1358-4a98-a9c8-4db8ef6011e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97c81fd-1ffc-4e9b-ba5d-1adaec611c71",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452b63fd-a318-489d-87f6-a080c65de4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406740fb-7c17-4c45-a556-0a12c9fa27a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa4ef93-1783-47e7-ae35-a55c33e6e02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42bb71c3-9306-4ece-a325-f4707c250e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1906426-7112-49e0-ad97-19485b7a8243",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb177c4-e2a7-4df9-b6fd-01d638dad591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ae8848-b92a-4835-8443-fae14cc9d26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69accad1-c58a-456a-90d7-bb448a5832a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5362541-fb29-4f84-adb4-a041ae918f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62542d1a-7000-4d3a-be5f-82f8f2a75c8e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10a1394-0c33-4a17-8a72-75223bd2445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544ede56-f872-4779-a689-b44a2756d68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46da477c-bbff-4f26-b89e-a181b4bcb0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8016b04-e598-4bb2-ada8-f2f4138639c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b65a197-3809-4386-b0d4-efbb512011d7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b485aea6-aed9-4093-972f-86c7084e8ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41722077-42cd-4c0d-9390-c35d186940e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f7e397-d141-4f3a-a459-5ff9ba5ff9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01cd9e79-fae7-4956-b2e1-08e567aa4de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a48535-8f6e-4a61-9f91-58c0a45cd39a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bf6381-dc2a-444b-80d3-782ce8c8989d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3020817-e0e3-40d2-b563-e29bf90c678f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832b6eb9-b44b-451c-82f3-36b953e418e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97765ee2-8c8c-470c-a69f-a9a0939adf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e13b664-d481-42b3-9552-ba0243e86ccc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acad77e-b335-4415-861a-aa46fa16c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb71343-92a2-4c1f-9822-47bd22af7159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380d747a-098f-4ce0-a200-1c61c6f05e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b25d47d-84f6-4ac8-ae1e-5ad456c91c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942eac68-f1df-4966-9a8b-98ccb1dfb961",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff93a01-8cff-43be-9612-c83c663e514b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a792dd-be31-463a-b2f2-5f84f54aeaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efac66d-6e49-47a0-b21a-bc30f72b78c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dffb625f-6dd1-4ad6-af0e-3fe34016c0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24af2f18-124c-4f9f-af3e-1ae3d1e6f6b1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41bbbd7-1fb4-40db-9cf7-33dcc37849ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeec961e-be6b-40f2-a1d5-6203c4a59fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f312ea-a114-4554-b303-fe469e408e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c09492-3892-46e7-9a1b-906e874628f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdea4bff-05bd-4451-852a-f50ced84c6bf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5797a7a0-e258-42ec-ab53-e702380f1603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d034ac9-9319-4fe5-be95-21611b44b91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d94c12-0c85-4213-bc98-9fd00e269efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db389a6-c28c-4ee8-b151-ed1a3d1fc259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1011c989-81aa-44ee-b10b-559953bb18c6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d7711b-acdc-4d04-9392-fdbbe62891f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22064b8-c545-4a48-bdf6-209f5764d47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483ae65d-6ba9-4083-b52f-f3935035485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9f0264-5241-4ce5-b859-b6bb29fdd2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4117ab90-ec5e-469f-a5ea-5557d45e165a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb54b743-1d3c-4412-901d-a06bcb5487b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcb1bab-fd01-4ac9-a293-c4da18a7ca31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec75696-257b-48d7-bc53-6b818a54cfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03d25407-7794-484a-ae36-dfb044b92daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e0a95f-fa1f-4e68-8448-74ff58beb485",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c721d1f-c489-41b9-835c-0e91a284db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5ea7b0-1d64-4007-8eef-c406fb34d0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb08a65b-6f16-40c2-9e41-bcdf877cde3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f800178-4de3-4ee2-9da4-587ad820f762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ee7408-af3c-491a-b5b1-27e942211b92",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db156e90-4c32-453f-96fb-0c1356c959d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29170c1-7999-4fe2-99d9-be16db9a5acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c22346-c3b9-4766-b2d1-03b084b016eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e60aa61-8d64-4607-ad8e-a2e13e570ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00625aa-7696-4304-a1ec-c3185cce99d2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e383e4-9378-4517-87f3-9219421c3702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa879a12-b80d-43e5-b6d0-13086d7655c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec875d4-e1b1-46da-ad86-1e1c76a65f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d83c6609-5868-452b-aa8c-d39053d2a7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9784d7-6eea-4c09-9ea4-f705f0d028fa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcf1d54-ab98-4aed-9bb2-9f4986763744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08275b11-6d2a-4d00-bef8-c78bde8b4722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233bbc37-8538-48db-8ac1-18ba42c4aac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "667052fe-169c-4b9a-ba3c-512fda0cce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29592f2-60ca-4ada-91d7-24623047be4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98799e6e-228d-45f3-86f7-0dc158a87867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7473d6-931c-48b5-b76c-316601418bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f2a716-5e83-4306-9273-d3adbe9bfb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b33ba37-c4f6-4faf-a37c-776faeebea44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb1e4ac-3422-45eb-a067-4260599031df",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd30223-964d-4010-9cfb-f85a99446806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c1ef85-16a0-4c09-96df-cdcbba624553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9b7e91-ee45-4cd2-809e-68e9c245b361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff73f178-0b74-4580-8122-12989e81edaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741423e3-6e45-4253-8c1e-d90bc0bdf032",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945a91e2-ee8f-4bd4-a0a4-83ad7c52d5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59f1347-f3f8-4073-bc23-d9322a56c418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ee6386-bbb9-4e91-892a-f24d7b522c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0b26dc-2448-4faf-b277-94a96248b718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1746160b-88c5-4f96-b612-6fdb4a84b796",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f22d1-bdf4-486c-849d-c66e5b0ec01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b169609-bd48-437b-8347-acb023cd5e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a4130e-09c3-4dc4-ac63-eb50cb061019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a217bd-7482-4d58-87f7-c06d77db520a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d049452c-4217-4809-85cd-bb5ec8b575ba",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b656269f-34cc-4461-bb6e-511acd49676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8923a31c-a899-4b96-a0ca-7e663a394095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c1f9cd-7420-4418-933f-57cb1f318c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52ef55ec-5d69-492f-9f1b-0a72029ccd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e533e7-cdb9-49c2-b82a-c6bcc3d93f2a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8030c1a-aa2f-4834-addf-318d08a9ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732c208e-fcb2-4ad4-a863-925fc932d523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b3d066-b033-4f1c-a8d4-37ddb09c51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaab01a5-4ebb-4489-b608-84250d543d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec7fea4-6930-48a9-bad5-b1434eddbc9c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7ab655-7356-46d7-8379-0ea3cefddc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8b63a3-fe62-4170-8d41-3ededf17cdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10117c36-7b6a-43dc-beb5-ef1a9ba9ebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48f4a205-44c2-4e19-a844-010f242657e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabb01a1-c603-408c-9ee4-9244a251ce7d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547ce12b-f6fa-47b6-af69-e89ea7949720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c28a9e-4795-4e34-b5f6-b7cbddf6c143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d09b6d2-9054-46c8-8450-c9e48d0d4140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b6e850-56ff-4ccd-9820-610e76329665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fe8370-fe17-47c3-9086-2662e025059c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a67b66-9239-4aa0-89cd-a151e76f7cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9698279-5a05-4f0f-a216-a3279f24971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaacd9f-fb8c-4a26-91b2-7526afc66cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5677fb69-01bb-49dd-b719-fe27b404b914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a375db-fad3-4b46-904a-dfbc6b5805f8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144f4f2b-a615-40f0-a3ec-eee03422762b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b185b3-2727-4c13-ac6e-f1a532c74c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396d51e2-88cd-48f0-b2d3-4de21a98251c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee44b5f-4669-4829-bd1c-970e23de1695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86effd4-a366-45ed-a0ba-4f1699fe4cba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe58e9f5-5817-43c6-b2f0-01927cbbd242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec404f1-fd3c-46c2-9167-a02cbf28caca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babb2d7b-ef9a-4de5-97c8-026d0dbb0e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0dec7cf3-8708-485a-aea1-483614951170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a272a051-7826-4a9c-a73a-5620f61edb71",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe686da-cb71-4bcd-9075-9dc84b028a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfb7ed71-0f78-4e45-9b9e-9c1e2c439243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f6a05e-8e60-4650-ad49-e3fc683dd8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcd127e-da14-416b-846a-6d7a743d66b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cccbb0f-8bda-4e05-aa50-72e1c5f58651",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e133d6-689f-49eb-8483-6d8b20cf9879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be559a6-cfb2-4329-ac70-837ea4f73140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6eda8a-558a-4649-a2ca-29ff3ee245a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6277660-8d96-457e-b8b5-71bab7e90d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97232116-101b-4271-837c-0fb06b011703",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d584d1-30bc-46cc-a17f-db925c478ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42da648-1044-4a83-98ef-91911d820d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288a479a-fcc9-4655-a78d-6353c20f577b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "938e2233-662d-4cf0-90c3-62f85414a5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabdcaaa-a6c4-48a2-b692-a621f0364fde",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d74207b-e392-4452-be65-1834adedbd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0464112-fa76-43bf-974c-97324d9fd92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f568246-9474-4b7f-a9eb-7fbaae80ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dff6bf4-7cd9-4255-91f7-ec88876276ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b516f843-8a62-4f10-abaf-d245234fdd78",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124646c5-949a-40cf-8ab0-146437ca1bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d171bf-4651-43e6-9402-d59e4b22aa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab60777-76d8-4996-9048-2a963622f300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a278add8-8424-4f79-ae28-62f64956cbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2808f3-95f7-42f7-bd6b-f43b9848ab1a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e10b880-9cb5-4385-8f2c-d96381fcadff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c70520-928a-4f1f-b95c-a032e6fe9c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9de0c81-b6f4-47ac-bba8-f6aa0d247299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a84577c9-37f7-476f-a410-4bc470ff1f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead5f2e3-1ede-478b-b3c4-cb1227bffffb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d1759b-75ac-493b-83b8-0a97ffd40ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ebe9af-2f6b-41b3-b75d-87cfb8cd13b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef2985-35a9-4a86-8ace-63e9e0c981b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfcfa4f-0785-484e-9c80-c5bc9d51fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5570fe3-b4f3-479c-af90-d515930a9393",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a2d86-771f-4a8c-9c8b-6f4b7286d187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6ae627-591e-4449-abfe-3d102306eb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96765146-b951-48a6-8ba9-018dc8eb9542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "36f27ad2-8252-4a77-88af-4062af770aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1afc4e-7e32-4e32-b270-231722b21845",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b3085-57ab-42b8-9103-eb66bae46731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401e2e62-1b08-4a8a-a73e-57068ef78a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0355cf25-b617-4e65-a821-ea54b1e5e3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e0d242-4228-4a14-8380-36721c1e89eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932db864-c169-41c1-9090-cdfa0ab2c1ab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff32f483-7a80-4270-979e-c00681436ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbc683f-f13f-43f6-a989-81011a552d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22ab04c-3217-4331-a7b7-e38aaddbc815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc403cc3-6a4e-4ad0-b718-4d3dc2fdff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c73690-0415-4857-b6ae-34e0bdbf304e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd33e32-d460-45e7-9e7b-9109ac8be754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c2d092-defc-4b7e-a6eb-2c464abf7bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b545d5-b16e-440b-99b9-4d55cfe634e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9826dade-4050-407f-a794-af28ecc5041f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e582005e-43d1-47f6-bd5b-cb62ad02025d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8f44b1-3f5b-4f12-b079-058b96637217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff82f63-b813-4cee-80a0-73767c141678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529fed2b-907f-4943-8c21-198940bfd5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb28161-e83e-4406-a12c-5467aa55ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a286c50c-59dc-4e40-9105-587e07334bc6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a52d417-4000-481c-889c-ae82c11cec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c452133-5dfd-4d22-ba4f-bdc32c25f1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6281703b-8348-434f-b6ce-c20e334e6d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11ff492f-a410-4ea0-9838-96e03d5cde30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47add436-b06c-454e-83ba-b5e9b3d139c4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d87174-2f3f-4720-accf-e10987c95fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216b26b6-d936-4e9b-9346-97d9702ed7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29f3da2-7d4b-4edc-8f9d-8de19c7dd0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0319a2a-c9c9-4396-9713-1e5d145266ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbdecd8-dd8b-4f08-9f51-0bf784840c37",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f9da34-b92f-4585-8796-83f0bad47f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28966f45-adbe-495b-92d7-3d89fa348998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6887b04a-c161-4a9b-820d-cab84413df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9616b0f-cc9e-4b3c-a5c7-6fb47a76c4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074b8935-af3c-4467-b69f-00f4c7fe913c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e66eac1-c227-49ca-90fb-07e150d68c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef40b67-623e-4f52-8759-0a46aab1611b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f069ce-dbfc-4590-a8b2-fd7cc5389d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7005524-2acd-4fa2-a56e-2a597bbc638e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b4f972-61f4-4106-9700-67ad042998c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3895539-d0ed-44e5-9d5f-aa420273f93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b170e7-32c4-4e6d-9162-fed30f329cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35ce77d-c6cb-4c4d-afb0-7121011d2945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a6b04f-2654-43e7-8696-429259eee5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271dddfb-4d9a-42c9-8426-1c5812c15df7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4441b8ce-7239-4f24-89c8-497b81608da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba3df60-c911-4fe9-a506-f574241fbc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878b85ee-f08a-42f3-9f47-653a76186888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88859b2-5dc0-4e76-84e4-d508709787cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7b4e93-a620-49f2-aa85-4383cdafcc7e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5298c8bd-d85e-4eec-b3fa-1324e4fb7d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304aebf6-3762-4543-bf14-c1254b14bcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a843e6c-18ef-4021-811f-e89df99d2ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea53536d-2843-4852-b405-4a161f2117a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985e144c-4800-4aaa-a5d4-6db3b1b7155e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6f037c-1f4b-4276-9e62-57c26e624fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0d9444-578b-48cc-8962-0c6ce74a5b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa31fe6c-37d6-42e8-ad9e-0b52b01f7a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78af2286-5d02-4a06-8548-1ded118ae606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309eb2b2-6993-4dca-b4a1-50301ad2955c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52542765-c8dd-475f-949a-f6c08e25aa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bedb2d-a723-4248-8ed2-f97f93d9f0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87343241-a894-4a92-83f4-95c9a9ab407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cb4af0-dbf0-4eb1-a604-cb4ec5a083e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1459293c-93d5-4c99-8b3f-fd3badb17d50",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c448b9d5-af6f-4756-8081-4537a7d0bfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6950b1ab-8dbf-421d-aea0-e8ac6d781eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de31c1bf-b890-4e8b-85e0-74c6ef2520b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c403a7-15eb-4eee-b64b-e414326f5419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae35a9b-07d3-44d7-9534-c0ce86440a48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137bc9bc-026f-44a9-8ec5-c9e76a378f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733bb502-86f4-47f3-a7fb-3df083fc5815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8726cd9-57ef-4094-871b-f7a8ecd185fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eee6c852-d9ec-46bd-b457-0c67f5212544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125f2c7b-496f-4e0c-b709-1aff7f2cd327",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3ecaa0-1e71-4902-bc7b-dc781a180b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5ac38f-d7f3-4c19-919f-12d846414630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ef51ff-6d42-47ae-bd33-3457614b9785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d607bf5-db7b-4201-b5c7-1923b45641cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50625629-e43f-4ac2-98fd-ea66074fc73e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abc68a1-afd9-4dfe-a28d-5dd486ec70d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad2ae91-4d1c-4464-872f-244ebee59333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e87c101-6b40-4580-990f-e1fe95ac74d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c65846e2-1a3e-4f65-85b3-5ed296717054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4b69dd-fbf7-41c1-b6ed-d54baca61f36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f267fb15-caa3-4944-9cd2-4ad64e7e198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712f179f-d518-4747-93f0-09efa08cf494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bfa8de-4a30-4464-a2b9-08c7d17c6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f72b94-aac2-446a-8877-b2582056f223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80983c21-7f9b-4eba-97c4-414befe4a25d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316f1978-5dea-4f5d-9e29-e1cadf2d8e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237ac273-9c47-4798-ae20-1ff01cb8738e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc418dd-f367-448f-bb66-188bd9412ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d5a43a-1f68-4540-ac71-0f16f1237029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2708b5-6ec3-4581-8cab-da2840a19e71",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab9f77e-fdf1-4408-9bdf-ac873b98d22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fa55c2-b74f-4ba0-a368-479e63194031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ea91a3-8383-43f3-b3ef-f01b811b055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "560e3b94-a911-4a9a-8b25-1f30d2dd4c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a9d2ed-5fe3-4698-aed2-57932bbbcc87",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5401e28-919d-42f2-a7b1-17d0fb15704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3e44e4-d717-44cf-8225-8a30f98c60d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e426208-dea9-4739-84b3-a0725e143197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c4e19f-0eb1-44de-b4b8-2be5496981de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2df3e3-c878-4741-b0ce-0fccbbb25558",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625910aa-1bfe-4967-a074-126fe23a4d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e07f4ae-9a1d-4642-80e0-5c8b6e7825fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345135b8-6c6a-4f72-8915-2b076a9a9a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66f99b4e-b68b-4aa3-b755-f374447991c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d616fb-c054-48a8-bce5-8f3e96dea825",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad260b9-b0aa-4c77-985d-e03273aacb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a3fd20-01a8-4188-bd2f-6869b9559595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8267adc-6783-4689-9cd2-4f84e919fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81038eee-30e2-4f3f-9b81-6a7b1995421c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4554f16-a0b1-4374-ba5f-a56640eb388a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcffee5-bb18-4239-bc99-eff7232c7c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da56785-b271-45fa-8e83-7fc21dbf8f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549b6396-2a18-4647-8e5c-9f3d37a3846d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78fca32b-9633-4125-bb2b-5cf47d34543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb4a66d-a48e-4e18-ae77-1ca3c5feb311",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107aa39b-e93e-4fec-baf5-12f4953d8b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a17a4c4-6441-4b80-8403-bfca1c9835e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5205e698-05a6-437c-ae0e-75a4919e8088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13b0982-3174-4eeb-9510-fdf4855647c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f402aab3-68e6-4472-a474-4eec08962aca",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4435437c-0311-4bc5-899d-0c378c0b9259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a3f8a9-b98f-41e6-b2fb-95ff9dd73d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27011ab-3aa2-44a9-98b8-d83e4831cd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e64489-2cec-422b-a53d-fe9f58f00f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ffbb8b-a88d-4498-934b-ee14366a3519",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e7e722-d9a1-442c-9040-28ef175a7c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ec9ddd-5e4e-422a-b68c-8162ae6ffa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c8dc97-23fa-45e4-b391-9f69c3f796ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c210ccb-fb41-4853-8ed2-968a5a423c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0303d2-e076-45de-a91e-22d63d77ec1b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a2012-07c3-4628-a6f6-62c6ad1aebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe6c648-4961-42dd-b0fd-80f8a520d1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4190bb-487e-4ff0-974a-1fdd23015dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eccf0d98-a255-4573-98a9-74f5668089b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a42bdf-5599-4fc8-9a3a-304a9ac8a4c0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e7f9cb-e309-4bb0-a961-d8fd9e5c090b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1caa4c43-f091-42f5-a6af-b10bca47ccad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a577f46-a882-494e-b8ae-9a30c9fe4618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d65317-2115-4b11-9899-a75ac40488e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f52494e-78ea-4183-9569-5ace446accfa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824b426d-3b29-4f1f-8d96-68874cd2ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b80b3b2-e18a-4b72-837e-8eb458b0b867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04de0be7-9ee9-45d4-88b2-a5b8f617db8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c50a809-19c7-431c-9860-dc9526fc63dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dd6549-9b0f-48e9-8220-5bae280932a2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc97bd41-647e-40a8-a71a-4915bd3694aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febe9df3-fe2d-490e-9620-2ceb6d1ed36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351a262d-9e92-473d-a785-c54d40f9ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d16c5c1-c06c-4fe2-8201-932d316e6d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45d8f2c-54ba-47ab-9a85-21ab62c2a84b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3b5f1-e391-4da2-9bc5-d873f9d7d5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54c0e7d-acec-44b3-824d-d9916be44b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8429f591-9b94-49b3-9efa-8c90000ae805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffedc6e2-23c5-4bff-a6dc-36eecec74bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6835bc53-304e-4f6a-a5e3-6535b7ac3266",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f5f79f-399e-42f9-8fff-06ba841cc9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e484d84e-3c69-4fd9-a984-993d8fc84a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1090bf39-144f-441c-8846-23e40f066e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3428e7d0-f33b-41c5-b2c9-5ee02624af37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406fa518-c336-4c26-9a3f-ebb8b8a1ff2f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6930f062-edc8-4b84-baef-29e766b31b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c67930-81d3-46b3-b1aa-e21a7715ccd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec32109e-936f-4a0f-999e-7d67cd3e8996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9fe087-d98b-43a3-8d93-36ab570a559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f691dd6-0343-480d-a05c-247b6bd93720",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2abe165-6f59-422a-b6c4-89370bf9f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d35e07-471d-42e1-860e-c416818314eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c14afb-9392-45d5-bb25-c7b89d2f1918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca7c200-bf83-46db-8357-6e7638d89a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998c0566-f29f-4d5e-9f03-8b9c0345fb2a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a52de2-c071-47a2-8932-044ad3839004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2c8cec-87be-405f-bd51-63f56bafd9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814037d7-b066-436a-9329-6460a19a6247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "810603ef-62c7-4dfc-95cb-e903d3d3d8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a80f8f-ed86-4161-a686-3ee49e8f13de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ac2e4f-d379-482c-b091-88acb84477d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b73d55-d3f2-4925-b860-7ba849135d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f493f39b-7434-4e03-9a49-949c9ec64d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1582d33a-8725-4d91-9b04-abb1d09d0e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efc9ba3-92cb-4728-beaa-16dcfbe34af0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38bc3fb-350e-4cbb-83b7-af26203ecc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d164db6-9c12-42f9-b377-13020332a722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecce19e-6175-4724-ac69-850e900cea55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "17208117-0be7-4143-9504-61abe6fe6a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d9ccc2-de4f-495e-9a4b-55cc0f5ad3b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf25234-0d02-4b15-96ee-3c1653a0b897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f60750b-deb0-4406-8129-f72edb8e0548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5c7244-b2e5-4cbe-b18b-f44ce4ea8baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83532f13-22f8-40c9-826b-ffcaca6ec675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43106e8-420b-4a7c-b828-ed3e4057b604",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cb8b92-42f3-4fcf-af3b-a8a0d69ed192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2392b8c5-0419-48e1-98f3-11487b8f899c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb34898a-1a5f-4a90-8a20-cdfd9bd4d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "378c132d-8b20-4e3c-a5e6-5ffb24d30a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b295ad77-e887-4803-ad34-c8834ec88738",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae286fd-3554-439b-87bd-744d9e4c9546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f91f3d-6f51-4ab8-9bcb-a6e755907355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a324589-fe59-4db3-8153-1c387ecbd9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a5657d-dcbe-442e-8b43-71118b612bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f444b49-593e-4d7a-8d17-204a1d8b4b38",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e316301-6050-4a76-9bdb-9b8c18b8b7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393b8aa9-4d4e-449b-9205-d634739c5589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bbe45c-df29-4c09-9c50-80de98912fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "906a7fc6-52db-40ef-88ef-ab881a56153d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6366a762-8823-4f06-a19d-70fb945b641d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7eecc4-8b5a-4e22-857c-751778ac1ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285ec5b6-5c17-497a-bc12-0e79e0d850fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ea5c04-b6e0-4d2d-904e-f278531a09b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa577cdd-d3bf-496c-9f3c-42c085db2d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b7185a-58c7-46ac-ac24-be73d93918d0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954a483a-57c7-48ce-8e7d-b026c06c41f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb0f88b-408c-4bfa-8a2a-666118b3293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c810aa0-fd18-4f88-88b0-08ae872b2958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab1dfe0-52d2-49ea-a3e6-72290512c470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad1ee06-3acd-4cf8-bd75-2e62e2576a97",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff37ff3-ef82-4068-a84d-964c009ccf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688e290a-072b-46c8-9c8a-b2cd3c097d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b292725-a9eb-4db8-a0a7-14305c361e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dea2f2c-b7de-46a2-a9aa-1aea474b833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4431ef38-69dc-4d80-b478-46020596664d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ffd5a5-b6ec-49ef-9cd0-8b894c610e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3e1a39-390d-4de6-ba98-e2740463793f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73eb3ff-12a4-497f-9855-4f8cab750659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "884d1270-76ab-4fae-bd31-86ae611b63bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c2a0e3-6b5f-414c-b02c-658637a44b3b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c7ca8c-ab70-4d92-b0a6-c6828d096664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697c2d28-adea-4f9a-bc9c-be883e718278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222a0949-e59c-4699-b83a-a886269360a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a32a66c-3d0c-466b-9ae8-328a52c2a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4f55b4-7886-4358-95a2-448fe8527e98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e06b067-80d2-4739-9846-4f433da32ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5b5082-6caf-431a-b9b5-2c20a3171d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfac44af-3279-4bc9-8f62-f6fa749d452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcd6268-6fbb-4d20-8158-0d6a91fd78f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ac9efa-8934-4b97-aaee-dbcae427e667",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b93fd4f-4ab5-4968-91d3-9dc2ea7c2919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5030cdb4-5f81-416d-8c9e-2891c4c5bec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f06fb8c-b05d-42c9-ab59-de2d25c9dff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "705e7412-310e-45e9-be71-09c973def02a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a45355f-31c8-4631-b4f5-75a23314ec87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5a14ec2-8867-4151-b248-b410401dd381",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea8800d-becf-45e2-b582-5ab8141d7f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0bb0e29-7ac6-4ad3-981b-81198e259fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef21c9c6-82e8-4162-961c-16fd042b4ba0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0986b897-5039-44f9-8b92-5d829380124c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a56cc9-fdcd-442d-abea-83211f25783e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eb65440-a62c-409e-bda1-d72ef6e2ab0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e4a94ca-b4cc-4a9c-8eed-b6ecc04f3ab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd36e1ef-949f-42b0-843d-de7055cc7062"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef18f7aa-84e9-4e92-b699-b143c4c351b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "696fd124-f8a2-40e7-afae-55c27c0ab39b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffda362f-0b74-4891-8bd2-3f67b516ea01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "704ac6dd-cb45-4c50-8b17-d7eefe2656a8"
                }
              }
            ]
          },
          {
            "id": "4f0d62c9-531d-4569-af92-4887c04e015f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c70d15c8-b52d-4357-a836-e0ebdabf8b6e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "753ba6d6-3c22-4a7e-b70a-f83c79b7f1ac",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75287f7-e3a3-4c42-ab0c-40ee969c1693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aaf45404-9f66-4d33-bcf3-9f7f8be8bb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220d884a-07d7-4842-91b1-8de5c42b946f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3948b68c-638f-4a61-bdeb-2d95c249b720"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77cb1af7-0947-4a16-9457-210d6ed9af9b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc90496-8cc2-4755-8a85-4aabbf8c686a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bec7a5d4-b737-4e88-abc1-003765027d33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68d30c71-2519-4037-accd-2d42e3cda3d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "897966fe-2e01-4a4f-8781-41165e632ad4"
                    }
                  }
                ]
              },
              {
                "id": "2813662d-8622-4eb8-8b6b-535418200d30",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e43e890d-b601-4e0b-bd10-cc8f88a52372",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50750d0c-8973-4cbc-93a2-f9bf67ed75a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fecda8d8-fc09-4b3b-a356-61f6205e9688",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f698eb3c-6748-442a-82d5-c4c0d1507bce"
                    }
                  }
                ]
              },
              {
                "id": "265e70aa-efdc-473d-ac03-fbff76bd9a4f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc512ef2-34bf-40bc-bb48-35d5d2bcfa2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a19c255-cd63-49e5-bde4-2daf2e0b8772"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccdcd496-5c13-49d9-bae9-d30190e8ae62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4275f8e7-2bfe-4afa-a0d5-5b729ce41f02"
                    }
                  }
                ]
              },
              {
                "id": "2a789715-db56-4e02-99ba-493234650c7a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46513c7e-34e2-4d00-8eb6-37a5de57ac82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebde39c2-4c54-4903-8232-b730f0c327b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ee66d82-7036-4775-a460-55bbb3f87893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "30d9fe7e-b07b-4ff2-be65-bb8da2df8679"
                    }
                  }
                ]
              },
              {
                "id": "e9b7ae12-063d-4da0-9ca1-132b861b347e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89f23a49-a67e-4bca-98ec-5c80e1883f71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "792e7b70-eb5e-4150-b0f2-244d6eaf4a14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e76f1596-0c2e-45ed-8749-facf814c340f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1b71160e-b9cb-421f-bca7-38b298970583"
                    }
                  }
                ]
              },
              {
                "id": "63b84c21-99c8-4500-b1a9-c5a3800f3f7b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "259d66ad-0a7c-44d6-a821-759dc36361cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed3b088b-191b-46fc-be55-3df510913bb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d53c3e99-dfb2-4506-a76c-ee2605b772a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e89256af-74ff-4a34-bafa-4487facbc381"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e6ee2a0-9c4f-433e-a7a3-1df291f325ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94156e9b-282c-487e-adc5-a41cb69816a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "914b06fb-2a89-4757-9dfd-e9ac4f518ffc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5749cc4e-7fdd-4da6-b12f-7573b71ebbf9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14b4269c-f1f9-4998-b15a-658439736c42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7fe1477e-69d6-4320-a1dc-b7f2e4fccd99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b73ab1e-d6f6-4f47-9589-5c4216d72edf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2dc7371b-e0ba-4bd7-a027-10a0dca548d2"
            }
          }
        ]
      },
      {
        "id": "384da713-0f86-483e-8472-8ae42e08a076",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2262dc71-101c-4d46-8928-ed2808fa5379",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9f498b2-a054-46b5-8f64-58f1d4436107",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b39d69e-71b8-4515-af3c-d618bef14aaf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3dbf58-d2ff-4b00-90a8-7336cb4e06c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b988357a-e9e7-4856-ae9f-b5d9da28c09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9eb7c97-5e32-4a45-9543-4725cc9c36d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5964352-b722-4265-8dc3-d9fc0d0f0a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc2dfdf-648f-479f-8412-d69c2ff8388e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9196a90a-549d-4f8f-bdfe-dbac9154e941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3cad37-1b82-4f7f-9649-9759b231804a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dddadff-6815-4283-9082-542870b0b2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca685d81-a2d0-40cd-a4c0-a78a6e0c1311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f36292-3722-478e-9de6-9e5e14410e92",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47877c98-3e59-4946-9c53-b8d63ec5e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8563323c-bad0-47b1-b988-6da4d3068b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0532d100-f3bd-40e4-b7ff-67bdaf760a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf91008-eb9b-4900-b427-0d469ebb0050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604d9d29-5841-4401-ab79-d9b357712920",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071c3e83-aad9-4aec-a0d2-84033446fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8395e5ba-0e7f-4c23-bf53-b46317c89c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfc49e5-298a-4745-afaa-771d356d0ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dbd08d-5301-4473-b95d-5c7f314bde27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0e8f6f-e19a-42ee-8f6f-4e9d0865b7ff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e573e80-4866-4883-a8bd-f9d33d420e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c397de9a-0e7b-48ab-b201-467066c9605a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535d2a20-6d0a-4366-bae8-c6e205fef9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d72a74-1661-4daf-acd8-c95230e1c780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4c7602-8ea4-49e2-a9e5-2d2f296af06c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409ae178-a549-4170-805f-02338c4c3d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d198a2-1258-497a-9142-0dc84a94c88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc17cb01-e976-4817-a2d1-0a71c8d53e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f6b664-475c-40b5-ac3b-0d6060497ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74180b13-cbac-4430-8564-ca0b1b2b209c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d0b34-4886-48d5-b43b-ec16a92d69e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87ab958-2fda-4c1f-af8a-927b332ce961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826d787e-1ced-44b9-b213-e717f6c43015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc750b7-9232-4467-9123-66febba8ed7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee56ad1-8d33-49af-b8a0-a18b8c904074",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2f74fd-809b-4b9f-84a3-8552c174fae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b2d133-51e3-4498-afd4-a8f202705f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96b61bf-8bd6-4e3b-8443-bb8ed4bb647d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead77113-07d0-4d42-a4c2-e0647a3557fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2de2840-262b-42f6-8cc3-519e684eaefb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627d8c8-c793-4d63-a666-47455c832308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af40e0d-2800-486b-bdc2-306faab10258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0762052-955e-4828-8ab8-2d6e077967b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93e4c86-7999-4543-8663-721a5b12863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3df156-99c9-4667-9d01-98fd18b10b8b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54599a2b-93ca-4b3e-a0c7-88eca14b37cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75acd5c-395c-4ab6-9d29-ca152f1c40bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b321ee75-b98d-445c-9ee8-374a5b16d33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbca15fc-83bd-4862-9693-9066f2f797a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294e9525-3ce5-4cd3-b625-0495787c578a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8a1fec-aaee-4fa5-8337-46f59dad8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d54f69-c819-472c-962a-61cd39a364d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9060020c-e1b3-4fd4-8bb3-f708a4e3fe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "53f85aa7-16d8-4c39-8e37-84f558deb363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77228c28-b953-4be8-831b-3b54ab5728b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cc194c-e4c6-4057-baae-b9a7696daaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127198df-2476-421f-8b7b-509ba8ab11af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff77cbf6-af2f-423a-9157-d530b8d6ff33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c8e77f-653f-46ab-b838-b5edfe02db94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4386f8fd-ea61-4ada-a490-6d649306745b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33553e40-ab5b-474f-b9f4-bcd8f0f39524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41732eeb-2dd1-4e11-aadc-23ae9fc3bf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5854a522-16bc-4b12-a68e-f7a6af602111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a6902e-6be1-4b5f-96a0-e8fa296e466d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175eb8ca-1b6f-4198-bd75-7dc1e093baac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7da46b-3ffc-447a-a217-261097d5f432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fe4215-2da9-475a-b666-dad28b78b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b831fba6-404c-4768-98e6-616bf158e7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d3f897-b04f-4fe4-968b-e027bdc8f20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66841dc1-ecaf-4827-ae3c-3631d24bf12a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec85c58-a2e1-4f97-bf64-e04b6571e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5055fe0-41e8-4c32-8c37-e8c9669b4346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb33066-c760-41c4-841b-6563c2ea0db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b9343e-39bd-4954-b065-a1d517260e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69e22d0-ef3a-4ec0-b7b6-fbb451bc098b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4827e540-e4cf-40a0-b1ff-4238685cdfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70da465-21ce-4c84-8d64-5664664baa2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6dac52-7a9a-420c-9bd4-a7c7d31cd31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f084cc7-72b3-41fa-b274-214be50e732f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4caa5ab-9a92-4357-a668-0f927c9e61ed",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d44d1a-bde3-4374-83da-e9104fc9a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7148e28-ed84-4423-8e45-fada097b8edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dc992f-73a0-4dfa-87dc-cd52ac0d7e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc2fcf8-f2bd-4c16-835e-f6824f41f623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da53ac5c-eabf-4d68-a16f-a9136b110e3d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14da19eb-0e12-415c-9220-97248dd1a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f04d66-a216-4137-8f58-3150bde79e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96a7925-4c78-4bdf-97a0-e6fd12e9e686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "502eb302-2159-4938-93bf-4267e895214d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5298a740-454f-4e58-a314-c890bf808012",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e61d77f-b9d3-43bd-a753-992e1ba17bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca64d547-4b97-407f-822e-32823f005c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7827b6a-4f78-4e9d-8c0e-769b48870da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe30659-9b70-4000-818b-01d468ec59ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d14556-d4b3-4307-b08d-bcfc85e53f71",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80bb9a6-c377-4e3d-a00b-cd50775c8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cef31c-c0f3-41f4-a19d-fe5242377ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81d68e8-c82f-4dd6-8f9d-87fe45218aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d577289-0547-499f-9529-75e73a660170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984aff53-b5fd-4f01-811c-76e62cdfb66e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de7bf93-7611-45d1-bea9-b108297b8c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2d1d14-707c-4c87-a3ef-e605e16dc522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd01949-9af4-4ac3-b646-69f91d8e8667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91474b75-99c5-498d-9c4f-853e7c40ac0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6b0372-7e6f-472d-b4a1-eea98e93d6d7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981b3a65-d0db-4b6b-a9fb-bccd6f76cdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f045f38-b8b9-454e-9896-1f753eaa0018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4ab727-1d2e-4d34-b6bf-8aff7a4a2cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4fa813-9d16-4922-9d55-5c36f3c0e0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56343bc-3391-4471-b323-bf2cafe32b9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4df82b2-701e-4ff1-8a49-f6cb2da906a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8096f44b-35b2-432f-87c3-497923b5f5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d601646-a9ec-40f3-91ee-c57471e09dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d301f7-5b72-427d-95a8-d32aa3018bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d391542-515f-4e13-9e5f-979fefd5e622",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d92d90e-bf00-4475-9e99-7d337db2d993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9317669-8cab-4718-a7ff-daae96e905e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9988454a-0c23-4770-aa7d-c5e0d957913c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2c80ce-87a3-44ed-a040-2aaba853d9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a5a88b-e4b3-4e60-a931-b4e2775fc411",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154efe29-4f51-46d3-a581-d396165ef25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0895e5d8-8b64-4137-89d1-1b061b0e6500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2be1b1-5e2a-437d-92c5-ec571d782f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49db9283-eb50-456b-a959-5daa454614d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fa54bb-310f-46e0-aa28-eae0a8f74d1e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82342a65-03d0-4b0f-b144-b7c16b599573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83115fc-28ad-4946-92f9-6ff0859a682b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96360b99-8634-4ffc-a8b2-205c49028cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a11609c-8305-4b87-b828-dfb447e2be04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa6e8dd-a10f-4b3d-8569-1db6a79ecbaf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afbfcf8-ce0b-4a94-a2c5-94ade1fb1dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dde03ca-0962-4a98-9758-cff80a4b912f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb4aeda-a04a-457f-a186-e800a4ed590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b726da-035a-4192-8e05-052a0f5c72e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b31412-11f5-4149-b577-d4194540abfa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7823f4d-0cc9-4566-ac9c-9798520dd2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e25559e-db0d-4533-bce2-173b81d1e856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2a7837-af72-4d56-bb90-69fcf4ddaedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e233fa34-35b5-4939-899f-7659f9dde3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0da8b4-eef3-46e7-9e93-437cfea97e83",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e62eceb-a459-402f-9e2e-a4daaccfadd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54cad02-48bc-45a1-8a21-44e29c413282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce0769a-42b9-419e-b2cc-0b00d5558cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7c4801-d93e-4a8e-b518-fda8a02db355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521995c8-73a9-4db3-955d-b359ffe966d0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50966f50-6fd9-437f-8c02-51c65620f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b380c1ec-558b-431a-8015-603174b497be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f490e645-78c7-4a68-99b5-32b0b9d6e21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4385806-f95e-4e49-b178-7d339c878071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bfa42e-1f58-4de4-9454-cb69847804f6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a300c-365e-4ab2-bef4-186628bfc7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fee828-d3d7-4e12-a15e-719975cc0454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e419a7a6-ac3e-4cb7-96b6-a29bf01caeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "883df3e1-ced2-4258-8104-113dd6b4eb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756b67ec-182d-488e-ace6-7437607e3e48",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37731cd3-5a09-42b9-bde5-bec62c2d7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ab3980-acda-434b-9407-a29ebe2eed57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685155f4-6b2c-4560-9ee3-d799a2a7f9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "651f9573-d375-4e5d-ab89-0b692afb27e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e2d6ad3-7958-4ed8-a42f-7483a598bbc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08b330e9-f318-4d60-8c6c-4efdbdf60001",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2202f74-38c2-4cbc-9a1f-a591e86810f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbb416b-0a2f-4b8b-b31d-7828fe04754f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f392fcbd-f159-44ca-a9b9-0b606137581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bf78c00-ef2e-43fe-8127-1aaf55bcbce1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72683a5f-e8b6-4884-a178-a8e0309329a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75c43bd1-6a2c-437a-acf3-4573f1d20d07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef536390-f8b0-430b-91f8-63d1169fb277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e70c193d-d928-4d2f-8639-0cff4e2e03d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad543d1f-7edb-4d2c-87a8-603e59d0839e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa63b824-d4c3-4a58-b367-0dfb6ef7d685"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b99933ce-28d1-4a23-b00e-c4bedd8c47fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "002bd591-025c-4dfb-97a3-1e43ed4fa05f"
            }
          }
        ]
      },
      {
        "id": "7dc9d749-6c3e-4427-b3e2-b6e2bf0cf6be",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8dd40879-2af3-4717-9968-f58f36aa4bcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e95679a-24c3-43f8-9719-d03cbdf2e424",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69c1322f-8783-4afc-9cb0-690d7d8d2531",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a28d79-3927-4ce5-a0c8-e81279be3ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1a3284-5f9c-4986-883d-8f42773820a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f580936c-3e74-4a1f-bd92-937992fb3c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "810aacdf-ba6e-4b70-9478-140013d6cbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641195bb-a28e-47b3-b737-151dcaa407e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f348d9e-f0a5-4618-a527-279f935aeba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2686b58a-9967-4898-9d0e-64fd77206c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4287c52d-ac76-4930-ad1e-120d47a01742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aefafdd-31cd-4b63-a069-08871c1487c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a564eb4-951f-4c73-9aa7-a3f386618787",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcdcd32-37ed-4055-b92c-4ffe013720ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4d08f9-2b99-47f0-b181-771ac2f314e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64699d28-d259-436a-8c8f-2a995052f8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f1f161-396c-4a84-a013-96984b29a2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cc2042-2928-4429-849b-9e5a687b6aac",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f15323e-8e35-4921-8c38-dd7773917057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba5d123-f337-4def-988c-3403bc08a759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf04815-f489-41b7-a7c9-17721e45558f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec46e70a-74b7-4b52-8cbb-0f9f35667b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af228c5-3c9d-4f59-bfd9-e3253efb922c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c811f9-3fa4-4442-8c3e-82b3a5a442a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ac33c6-736c-4998-aa5c-9c981e2ca5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68aadec-c623-4c46-aa2a-d8ccb473ffaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41fea453-1cee-4d39-9091-4a6f04efef39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebbc66a-889a-4b3c-9caa-c8dda33b4a72",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e16134-e54e-43d4-9c08-1af04cb7cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c5b3d2-5860-4888-8d50-d14dc58365f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b252d776-081b-45e9-be81-d14dcd781e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64971445-d171-4b1e-b8d9-61dfbc6ba901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aedcff1-6955-412e-9f17-5e4c7590524b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae6ac20-2961-4409-8aa1-ebdc03f5cccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450f7622-6d70-4f53-8f5e-2be81528f333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aa7dc2-4d99-44a5-9619-00d3e3275afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2338968f-1b86-4cfd-b11d-085839342a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c17fc0a-f5ac-4d35-9603-42b79126356f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b85e20-ea77-4b4b-8980-0c07f107159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c10511-33ac-4125-8151-faff1bd51836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a80a2e-6e10-4098-b482-8ee71f226550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07093b5d-ca80-49ce-8dec-e1cf79e1aa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa984ac-a390-4161-8f9e-b5fb16ad7e01",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b376a0-b30d-4744-b267-94113c125cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af08009-8060-4c58-b7b3-72f017e525f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b94cd3-a038-40d8-a267-5d4a5cd9af12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b4e263-602b-48c5-9a34-ea8ece5c8802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e71a1f-f8d6-45ba-a215-e5441c455d5f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159cd770-621c-4807-b2b3-4a96dcc9ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f986c561-4eac-40d4-b59b-2b2a9d23710f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b52503c-7f79-48ba-ad67-5aeb7ad3f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1692866-a7d6-4fd2-82be-9155d30a3cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1d622c-ce68-4a6c-a4f8-b8f533b8d4d5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f7498-51b5-4c13-a001-58460c19a6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc07eb4-8de9-4d99-9b5d-d4e25ac8bf8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9974096-9b87-4942-a8e3-22a541326daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "85f2707a-47ab-4179-bed1-aba3d18ec472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b7d61d-fc55-405e-b2b0-7551ccf4beab",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181081bb-c359-406b-be3c-fb7db5e47ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffd2ecd-c33a-44e3-bc52-fa623cf8b7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86400bae-e8ef-466b-821c-2858c9c186f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "276fb95c-5c33-41d0-9767-1fbc68f8edb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9c1f77-cb11-4449-8e2b-b980aaa7d4f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6376240-4c17-440c-9ef6-c8494ba98fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33014992-fd04-4592-a37c-e75641d388b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f225a1-b46b-480b-a1ce-63235a3fa475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "027e739a-2b4d-4ff3-9de1-d67c4c30c96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fad7570-70d4-4e21-bfd4-cfb0485680b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d58d8f5-8203-42c9-8c62-0f798863ed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05c5d72-1b6d-49bb-bfc4-c0386199853f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0b89db-4c88-4e46-b4fc-034354718f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39af51a-1d3e-4b4a-9e04-8f217ce5669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e9d802-45a8-4c9c-b976-bd5a4593389b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcedef39-344d-40a4-8428-cb7f3049bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a96262-af04-4c89-bf5e-978cb6db565a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5c8fe-c7a1-4b5d-a1a9-290fc3f96f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb90d921-f52d-40d9-ae6b-5b7ea3d30375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fca401-1fed-4441-91bf-75f0ce217811",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f620b3b-f164-4531-9bc6-938e721daa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbd442c-c375-40b2-827c-3ee31eb4c6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b543c-8f35-48da-9e3d-620257635827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "646e6e22-c366-4d37-9ba3-26d6c9bd2598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621dee4-da7f-406b-9344-454395942a5b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61da739c-ae99-4b4e-8cd3-61c95e04d41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5141aa18-80cb-4bd8-8fe1-8268eabec298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3e9b24-f5e9-4cbc-9838-4fb09b85b873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e14f86a-f9b4-4398-9602-aa022d6f0853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc1f5ac-3517-441a-a873-297bcb57765f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7384d5e-402c-44dc-8437-c43f494891c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14290b3c-4254-41bc-97c8-9be0b0e9dbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56311fa-4fed-425e-8f5d-6d02a5013749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85052788-04f4-4354-8098-22dc48540acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989c6750-3fe8-4f3f-9d06-9ea6013d8871",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e9ef18-4217-4905-9072-6cf7ef0d6171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5228445-743e-4cd0-a3d4-8b6be3070125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1c0c88-984b-46e3-ac71-fc920aa7694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1f1a18-6a9b-41c4-90f2-25724faa740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7d80b2-c3c9-4f26-8435-07c1cc227278",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9164365c-4932-4567-bb9f-ed166b6bc503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2bda9c-9935-458d-8897-ef461848ccfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fcf16f-d30b-4af5-8cd4-f9d6590845fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9d02d3-cd55-4040-a7fb-d7bf1057275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481df97e-2d91-4ba8-85c5-9c3758b0e29b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df67013-d5fa-45d5-adfe-29c7ad40333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1724ef-887e-44ff-862e-6b12b07fecc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fe4c44-5137-4735-96ee-baeb0d4d1a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcf8202-67da-4414-af45-e4b03b55585f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bb5eb4-bda8-4f4e-a6ad-cb1b03f20b5f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ace70b-1cca-40cc-96da-8a782b3ba387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2ad94d-d428-4d2d-a609-2dedcf885a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b180a1-62d4-4626-9048-644dbf907859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6cebd3-8d6b-4280-a49d-cbc2576f872c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2538c6e0-49e2-401c-b481-454ba28ebb7a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10107a7a-9f61-448f-8c79-fed1a28e9a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6e3462-7cd8-4bbc-9e5b-abe6e28516fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96c0981-2cad-4483-9906-d50fb0e99df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee865a70-ba93-46f2-9a65-9ab0b14f2a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05596558-6267-4fe0-9bca-74adfa5d9213",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e97031-b651-42df-8e5f-c752042b9e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9fa886-d173-4169-9da8-7caa801f581a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3898a5c-a261-4041-bf68-adb0a0292e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59a4e1e-6cfe-47cf-8084-77bfe006b12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ab8a8f-80e8-41a2-89ff-71d55342b388",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3596f94b-d71d-482d-988b-b33acf094b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d2a9c8-0d05-4933-a54d-f34fd793c841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9f8b4e-ed1c-44d1-91cf-bbfafea9ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88612718-4492-4ac4-9d00-8b8932c6f285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dfacbd-ef05-4b5d-8c95-dffd2eaf0729",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304e0192-3bb8-4f41-a9b9-15c798491513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91458d68-48ac-4cc1-95a9-836cae23a2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660d31ac-c70d-4b74-bfea-9329775baf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a579ec96-1fc9-4eb4-84e1-5dc51df5f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9897607e-d351-4868-8a03-d0411dc02385",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9331ccb-f501-4447-8c5f-5be276608193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b8abe0-b3b4-4399-95d0-2cef38007644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17edc6c3-026e-4669-8247-3dd3ed37a53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad25738d-58a1-45a2-941b-e6d2949256e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea79f074-5151-4285-8889-96cc62cbe807",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d703a697-d553-4b57-803f-7fa55215b144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cba2c7-caf0-4c16-be11-d9dd7cb63ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f253c429-ae32-4343-b3b3-fbe6294f41d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a55fbbd-40ee-4856-b050-ddadd8a1f03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26110c68-e95c-4088-b794-712606326e7d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdb3339-c6b4-48db-ac30-dad6712e12d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb40e68-26a8-44c0-8a8d-3f8b162e112c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d631e22e-dc63-4cf8-aa2b-dc7dd7e1c8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b430880-af02-4ae7-8f74-682638c70ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d985be3-f40e-48e6-9509-9bcbae1e5692",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebae0ef-7b10-4fe1-bdd2-d64e648663f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53426754-2b5a-41b3-b977-8d2bfb0ef105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9cc559-ba74-44db-8820-0ed2ff662d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab81b63-cb28-4041-8118-019fa89f3dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38120c65-5d75-4296-921d-603078e13b4a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8db400e-fc25-4285-b161-81bd29710f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07e85e7-fe00-420c-a9eb-646ff5e040c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130e9dce-d64c-49c5-be01-8d681eb6dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe00d5c-fd60-4647-a611-5735152eed9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321e6fc5-6a64-4fff-a386-296126aaf71f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9392eb13-c7b5-48f0-96a8-42a5719d1c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6de61c8-da19-4aba-be1b-ca73850737b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cdb84f-0d47-485a-9b80-b3d400e1110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24957269-c3ed-415c-9a19-fab2dca4a1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0315741d-1243-46cb-aa1f-9c1b72e32827",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76174429-be85-42c1-8f67-fdaba242f30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93668be-0bb2-4936-a768-a5334cefa0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533cda97-8a3c-482f-ab1e-fd80911240b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5088ec-1ff2-42db-93fb-7913496bca50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191f8365-3c2e-4306-a040-5c9948f3949f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ea252b-5363-46a8-aaf6-17babde9e752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b1a5b1-7bac-4813-9047-1d27730cb0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b50ed1-a0ac-44d6-9ae0-e725f5745ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a50d9e-cb9d-4bb0-89e1-20977bd62972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b3f3ac-6c2a-417c-9163-5168828def3a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f64d4-4d11-4552-b2c4-371ae256c1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe35bf70-52f6-4c3e-9b7c-33cabe5e1df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd18f446-36d6-4ae4-a781-3e076a17c0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637ea6da-f8ba-43f6-b8ef-27a3952987bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713856c8-df0c-4e99-8d8d-34077330d3c0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50245833-ca8f-4171-92ff-1d16fb62cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92465f72-5ee7-40ec-966a-d467e0f776c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a816c-5e20-494e-b216-366531226a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f0f455-6a0e-4042-a1da-fd702c1962b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a2f370-593c-4af2-96aa-2aa5338d57b5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8fdd0a-ccde-440c-8bc0-8436be7c8870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa57b65e-2db4-41e3-a940-f202488c97c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31998d64-8f52-4bc6-9b84-01fd154787e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dd84dc-9f5e-4f8c-9dcf-d550ced88e8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "caecfc12-88b4-4cba-aeb2-044f1f1e715c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9c4a84b-2239-4ac1-ae11-8c5c3d9111a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9387b10-2150-490e-9b34-749551c0780a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6af29fd-7773-425e-9813-7b8d3bfa408d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d16b51d-8380-4514-b71b-32074bde96a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "372d39cd-de9d-47b7-94e9-862b17c13556"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e991ae0f-4b6f-469b-bdfe-b7bbce89e22a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f46e225-c6fb-4a87-aec2-25661d1770dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "413726a3-adb5-4ba6-9a0e-13c80e1d7847",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e8c39ea-0faf-4511-8c1f-ac9933911154"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33b81528-32fc-4dd6-a3f1-022f0699a81e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7dced551-f611-4bc5-99f7-b2ab7c52897d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bb6347b-5428-4c16-8c68-5efea2e8d05e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e06849b4-82d5-4f4f-acad-17365d1731c2"
            }
          }
        ]
      },
      {
        "id": "f4c2557b-7dcf-4ffc-9d05-e83d21829326",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d07c16b0-cc71-40cd-8b04-c091e8319dab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4931d936-34b1-445b-a81c-2787a83d8f62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f4366a3-db65-4266-89d0-177cd686e451",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4545f3-7506-44fe-8edc-ec3cf1ca1232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a383c74b-0418-4cf4-9a04-c390b1ab23df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e83186-93fb-4f92-a266-d5a3d048a9f1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec71c7e6-1099-4c3b-957f-903970265a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6025c67d-18f5-4133-84b2-d70e8e58b5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20ec491-e112-4748-a799-cfefb80c6e1e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4867530c-8552-4fb0-b9f3-7c6d5074fb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c45c455-cf3c-45c2-a413-1b977c60218e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c50f26-af2f-492c-a945-db7aa97df114",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fe494c-5493-4618-89d2-783a2159c4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5548ec-21bf-4e35-8f22-fb55f582c59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f6a4fc-5c7e-4dbe-aa63-bbe6b916a0c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a42e4-a2e4-4e08-bb94-6068111dc061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1884a8f-cdf7-4ae7-be1b-bdacd28bf635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fcb9ee-fd6c-45cb-8cfd-f20aababa172",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69846464-da23-4a3a-abe0-61f760178209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7d880c-0e21-455b-8790-9af4a58abf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74402797-5e5b-485d-aed2-731a400062be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc26411e-ba50-4780-8fa6-29d7e5315817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289a5d1e-e1a9-4847-91aa-36b0d4e5886e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717b41ff-817d-4f50-bd73-de752d74b1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5b6dfc-c903-4338-9626-37430912c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1583394e-a86d-48e0-92ef-3542a3b4c3b6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205062c9-f2b0-44af-bb35-e40c9585ec72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e1dd56-b67f-419e-b6ba-5f1692c1e56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baef119-9abd-4132-8955-57faefea6ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b844e61-791d-496a-a44a-f9825c60d89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be7d1f2-a56f-4a07-92dc-566b9e7f1341",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe177b37-4dbe-4e39-b030-ce89fcc7dd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbb507d-76d7-4559-a47c-a8b36c5caec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a4ebd4-fd64-454a-bc56-d3aaf82ae438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debff1a5-b810-4a45-9f26-a0266ea71886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4436af6e-8cfc-40ba-af12-c7359b537b8d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f64be1-4f05-404f-ad16-f171002ddbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544391ef-4a18-45b4-a6c0-9f3ce3bc178d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1b12bc-b878-4700-9550-3ee85fc3c46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238c5db4-413e-45bc-981e-f0e83d1988ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b207e7-9380-470e-8474-ff60904ca485",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9df56b-881d-46ca-8601-8a04faa53687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4ac6de-bd0a-4b85-aacb-7f19a0446595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be7b857-8676-4bf4-a46d-c290313afe47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3484d4f5-d301-4738-a83b-b092a0705331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7abafa-5dda-4049-b55d-57b965808e4b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc0361-a4bc-4399-99e8-8644b6a7902a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c116e4-0ee7-4239-bbb3-c8e3b50e49c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc41f2da-7234-425c-bcbb-30a1f0832c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4a883d-110e-4551-ac54-b2b65ef2eb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04913a2-ad19-44bb-8965-7e1c599ca69e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df463bf7-d6f0-4b76-a8a8-9a2f2c429218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6d4833-6b53-4af4-bc03-476690681417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9768e732-034d-4581-81e8-a7c4d7086c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f1eb9a-2459-49e9-b930-f4cc6f04506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b2bc3e-88d3-449b-bc60-4a1b56fe728e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa92619-6501-466e-94bd-a99730120b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9ac966-9c56-4ac7-93e0-4f11575437bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe8264b-4d3c-40b1-9e6d-a5aaf2a2e612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c51facd-807e-4aaf-a49b-4696c6c26f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fa6d88-0690-4990-b126-58c9f3eac4c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3236a9-355b-4914-b085-a139856f5e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba7a79e-e605-4905-83e9-7ddf2c4f5090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588c358-a03c-4856-8cc5-3f9979b6608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47a40ed-80cc-4b4f-ad57-b38cbe8f630d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6ecbc3-cc22-454f-9572-8805a4456e26",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73a0264-7c9a-4274-84f0-c1e1f11e189a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d8fe61-3a62-459b-aa71-af09436089c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a918f3-9d1c-4b7a-8ee2-b1dcd5052379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6041ff3-fcb7-4b9e-b7ad-8ffab885093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f016f564-5c53-4891-8172-e2733b58ef40",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57216c8-156c-4da3-a9eb-bdf9adfc8791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e194c9d5-199f-4da1-a277-28076695a453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3056f5-4629-4591-815e-baec7b16c688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec5877f-69a7-430e-814b-a45304575395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2306570-fb2c-466c-99cc-4bdbef61241a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ab2b36-6566-4200-9674-aa644fbbfbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5871e0c-a4b0-4f26-b852-9d2aad506061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd756d3-0876-479a-b7b6-7b70f14ff43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd3f50b-0a0f-4877-9d04-88145b853480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecb5acd-2125-48c7-a33a-773a6cb15bbd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53972e31-63e5-4ad6-8ce6-74fc59a2bffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae95cc9-7157-47b1-b71c-2c239d6d47a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beb656f-45a7-4f0c-8bba-8e2468e3312e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb64080-5bb1-416c-b9ac-adb787722d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede5d311-49ca-45fb-ac14-a2f95e73b137",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f6ae68-b2a0-4af7-b71e-818d24d35496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2461fd6-259b-4970-8bbd-9fe99f0b95c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f7eba9-60ac-41c0-8d48-65b9d7708948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692ca6af-dd06-4276-90df-74ade13e37cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151f6d75-8c96-459f-94e6-f8d993041025",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0e47b1-c870-4146-81c5-76001ed685fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d33c7ed-ec90-4b7b-8a3a-b0b9b9383dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3523fd96-2450-4e80-81e4-82bda9ad9b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad21b30a-540c-49f5-b553-7d36306a1093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ccd03a-af10-4884-9100-014e973a12e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91738ed8-5573-4bbb-8f52-dba65833b3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefffea0-4a8c-402d-9997-23b35a208752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb7370d-dadf-47f8-988f-ed7d0d12d1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05ea652-52a2-49e7-985b-c46bcbb5c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4071e538-ccc1-4a5d-b46c-dddb3a0527e6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90dd102-2215-4b2c-8be0-a2e5880706ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff635554-631a-4e24-ac50-d67ea5ef717a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60ca611-ecb5-4b70-b534-f05d76d29c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfdb9d0-f97a-487b-bd8b-06dc1a10f9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c777bfef-fc28-442e-af3c-9b116be86061",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2cc427-71b9-45ba-90e6-3f82d7e3fdeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318e8b5c-0e52-4c5f-a644-def93f76d6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b81bd32-9b43-4c62-a65b-d6d338f204d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11250a8d-c628-4ec0-aa04-73da5a0a9255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd77666d-bbb3-4461-80a6-68af647d5423",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15d924-f08e-4e3b-9e86-3204ff0574fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2acc400e-4951-475e-81ed-0c8857277f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbc73f7-e58a-4763-9992-27d1561b7dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af887194-eb82-4e75-919d-31d72695bb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a100158-f1f7-4419-95e2-09aa9a942e68",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4064bbf0-aa81-4796-8e9a-60c1db3bae9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b0d095-5246-4616-8b42-d5b0fb8a5955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b968b9eb-5b2b-4b5e-99f1-30ae8201c627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1f70c1-411b-43e3-b272-465d4bfec57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a941e6-49ea-4f94-aefc-f1267e7d284e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255a4c95-a51e-47bd-a868-eac7dde3b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9fc408e-d117-4e1f-9116-03b104ea4b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b295cfdf-a555-4a35-a201-041751e9ee4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bf9c0f-138e-496a-8148-94bd169ccea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faede31-edac-4b4d-acbc-58085a1fd7f6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9df4f6-ddef-4124-9c2d-e90520b97b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8852fd-e450-49e1-99cb-005e15ddca2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ab4b9a-3bc2-42b6-b7b2-ef2bf9d52b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b391a2a8-fb29-4fca-af84-50cc9b3be591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80d5962-6947-4e5c-81e1-e76025bd552f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2ee639-8cd5-451a-991c-f2a19364e9bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892ffc3c-61ed-4c94-a1ef-8c013234a655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0785cf-1d49-46e1-947c-d65abfbc2d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51869ba0-dd4d-4a68-ad9a-a5a10c0e33fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7895dd4-8cbe-4846-9a2f-de6b571374b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dcee24-f503-4f7c-b8ad-d1412399410c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4edff7e3-8dc8-4458-8607-dd8b3ed29940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b94198-0d61-4ba5-98f2-3b90990ea67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aec4df8-a2e1-4752-ace2-bc1a13b8ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e29aed7-1fba-4d19-a43b-a3a4214f2fc9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50855ce1-41f0-4256-9f41-39f1b2f38a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ca14ce-ce46-42f6-bc22-0fbc24667d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db0fd3-2f13-4f82-9f97-c3b556877247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc89ab9-0261-4c5e-b076-5bfbe9625abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa30ab32-40fe-4710-87d7-41553bc915fe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000235d5-8e81-4adf-9821-7da2353d55e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2baed710-6e59-4f7e-9988-55984f8976e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4af1483-9f38-4e9c-8cc2-a70d3700a451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a66eff-16a0-4499-be66-a95c99cb5cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6968e27-23bf-47a1-abbc-e0c730e5ecad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1fefc1-b1ae-419b-abcf-a27b948611b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a97d8b0-5b7e-4d55-ae7e-edf2fcd7ec5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117eff8f-02c6-49d1-958b-0967607c6c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703e09d0-b289-4613-8e0b-8a4500197f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a35c799-d5e1-4cb8-b29c-2cca0671c2c3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09effb5-641f-4eed-846a-d5578e7eb42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ab2bf9-a7af-49a5-930a-412e16156072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd40583-7986-4a6a-a9f4-02730252e9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd8237f-1d7e-45a2-8392-82c49922c0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d14700-98b0-46cb-9155-f178896a4abf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33123e2-d08d-47f5-acff-290ac6de6cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbcb658-ebc4-4c3f-a32e-a269e99568a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39016c99-cf78-497f-9ae9-295120a66e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bdd2cb-5186-4d21-b385-bd9b6387f3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db77ebd5-64c4-4176-91d4-e848951b602a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5a557d-18b1-4100-9db1-9811c208731f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950cd9d7-9953-410d-92f0-c64ec8cd34ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b7b8f6-ccb0-44ba-80a1-bfe837745bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c085897a-99db-4d1b-b711-62be657d64b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e8c198-91bd-4f01-bdd7-d1f662d434c2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82124c2a-fc3c-48c7-acb1-3ec7998135ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429b8566-9012-494c-a954-1e6ba4a5203f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b5337b-1c98-47bb-9a6b-f66bdbf88619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b99a0a2-3e6d-4017-a59e-86a5c3b1cabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5469f06-f4bc-4e32-9942-dc520b54ed76",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d58bfc-3559-4970-b06e-771492fb1fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbd60f7-fade-433b-a537-bd86981174ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887318e0-3ce2-4418-9625-9666d1e94f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40567ba7-8438-4eac-980b-1c4a86be1948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447d5549-c377-44cc-aedd-2b78d2eba05a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fd3279-f424-4058-baff-439cc2e7c1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969b5440-bee3-4d83-9772-bf2137055efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c123fe-fe4a-4e1d-9a87-b4bd19a5c31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ea031b-8d88-4324-99f4-0e784e13a91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6e5325-92c2-4725-9f1d-45159962f332",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40629353-1a72-4392-9836-30dfc0eb78f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e648df-d1a9-438f-9d25-3830a61cb835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0f623f-3865-4bc8-91c4-102fcc365fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722c9100-6711-4e6c-a3db-ec9e9e93ac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b8ebe0-c49c-4692-9d03-441e48e0f61f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4098ad-7b34-4d27-8f9c-7b2a77e8d0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08758a12-968c-440f-99bf-6a4784186e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4a0128-728b-4042-9224-dcf9c96d503c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d9a1ef-0eb9-4ddb-987e-81d440b33d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1a1efb-8614-44b9-aaf1-1e42178cce3e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5a8da0-b955-4387-8aac-a327de90dcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda7f711-f82b-4345-bb68-ac0d5b36f1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3653a8-27a1-46e5-9237-b1f59f15a467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0628071-17b0-48c4-ae5b-55b3e4356c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3db0cef-c5d8-45de-9a0e-a1600dd42560",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b535e3-3397-464e-a8d1-35fffaf78ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8655307-6375-479a-9c11-b8baa31b2eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ca0991-bfb0-49b5-ad5f-528fb0f31a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e312947b-2b69-41ac-8fe7-6d4ff9d73759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be30e67d-4987-420b-a017-e294389f265a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b21e4c-90b8-451c-89ab-6db13c737df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29811b56-c780-40eb-b3b6-03d58d6a5019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c659e1bb-1ed7-43ba-bb4a-77eb6ca7a756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7bc0b9-e37d-47dd-b0c3-5d311ed284d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa105a-94b2-4ed2-91ba-0a8a63eae2e1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e090901a-d0e7-4680-8d35-69eca0b73392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ca9c68-ffbd-4fca-baf5-94016746421d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a41853-d6dd-4246-a41f-bea24bd00cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dad4593-abd6-44ad-bec1-ed1b030d38a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0e9bfa-f988-4351-b830-9420923eed8f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397ad381-d411-400e-a3f1-daa9f47ff857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7106873f-cc4e-4c55-9cbd-2c23fbd6a054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51fab8a-1926-47e8-bc62-db0b858a5f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb4295d-7ae8-4c2f-9875-69bb5ddc6fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be161ead-f933-404f-8781-07f0f0888431",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae07bdf-a063-4dae-8883-3de52f9e5a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed34e11-ce0e-46b5-8232-813cf7419921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1ca6e2-20c1-4022-8098-0062841c73e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432bb263-fe50-46ab-bb61-5a50f541516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f133f38-bb70-491a-a737-45e981db25e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18cd91f-6fa7-43ab-8c29-3df3ea560705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4901b2-35f9-4b3f-a8f7-1177f173233e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933d4217-e8a5-428f-92f9-ce08d1c45ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edce6ba8-285b-4d63-a94a-9632d72e8a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d5d8bf-aaf5-41aa-98c6-81ed632d2348",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6994d7fe-d103-491e-a0b4-6b6aececd8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d44d622-1eb1-4c6c-95b4-08d734078d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0fa160-4ac3-4c0b-9eb3-d3873d6ce614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbb081b-d163-428b-a4a3-bc4f7f2f7f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb3fbf9-b1ce-4169-a251-2da530306cf8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3508f16-e59a-4879-9085-fb33f6099ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b084d30-d9e6-4682-ba9f-07ab259a5168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8f88ea-32fe-4e9c-862d-3f21fea6eada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c421bb8-63eb-424e-975f-9cf9018dd6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0301c574-5159-4bc5-950e-17b443d65c77",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c0f7e4-5c6c-4b21-a311-580debc368ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c08120d-1c50-426f-a4ca-96510d8fcdf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d1b803-4dec-4906-bd62-a777c0a57e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f4791e-03f1-4abb-83c7-85b611939980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ab6f20-3c67-4218-959f-1e0a674c3ea1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26289dce-6923-40b8-8906-e38ca3b2bcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef3e2a6-487a-4c12-84ea-8e7168ea2cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dffd20d-1142-4656-8a6e-e5ff1a7cb1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bef0a0-07b7-4126-82ed-19ff8220a989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c5c2e-10bc-4b25-9317-ede1655f7e49",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f9819a-4037-4223-827c-ffe8ec20304b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afb5bc3-a67b-46e1-8409-e3740148e7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9014bf9c-a3ed-4cfe-8230-a6f27a2d3e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e0e59b-882f-4d44-9c56-385b5d1f0506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a603f49a-c216-4bf4-b875-67816b1298d3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13c4554-0c7c-4bcc-b8e6-768f37583f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3867f1c8-959f-4a2b-b708-64abab03d991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a35a96-1cea-4ef0-8f4e-75de1d832064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2469c8b-d076-4553-8d58-658ac9df3eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3598453-65d8-4de1-99e4-d8d4ef6d243f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6ad92e-3620-499f-b5f9-9deed283eabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952a4672-111f-419d-b51c-a974deb7d569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3242b12-4410-4ac1-8097-a7de13ad6cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fa6ab5-1815-4073-8d5c-352c5063deb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a131e4f6-5d7e-4b67-a186-c833333726fc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecee9fb4-d324-4f68-8698-e42f0033b856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8dfda6-189c-49cb-9ad3-0ff2f26c2eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a249d-4e24-48d5-8d4b-0e6ae81c46d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d24378-314e-490c-8a31-46ba3078847f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec5038b-42b8-492b-bf95-47530450dfe9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaa3473-2970-4038-9d40-2b4cf64d7623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe78ee6-29c5-4fcd-a0ab-9c72e2568a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297d641e-7704-485c-83c0-4e94212754cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd76ae81-356d-410d-b007-f715b319a47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f567ab-3050-4063-9ffa-5778ea1a54ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4094a35d-926e-4a32-8056-0a5dd0fe284c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929f261e-f1ac-44d2-98c2-489ca74e4e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b8d9a0-a726-46aa-adaa-1612e6731b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73874255-20d7-4ff4-a077-93b8cba72384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef694b6b-b7af-43b5-b78b-f4c3c0634a6f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaccfc3-b871-4c7f-91d6-80d08ce491ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e3336c-3ee6-41f0-8fef-7c3a6ebc4e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b8a5ba-2dad-4a5a-b59b-ae162f5030b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef962929-a4ab-48d5-b129-cddea8d56a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a2ca27-698a-430b-b283-53d274386225",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2c9384-0fad-47a7-8011-a595cc5773f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c016222-3bf6-408d-ae93-95f752450a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee3b5d2-454f-4256-b9b1-847857a37f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4689f041-fc90-484f-994e-30204631d83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7204f501-8db1-41df-96e3-2a3f9ae916b4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a9439-a882-46de-9d5d-b8eb86c682e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d272d0b5-503c-46e1-a134-aee00d348b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d26ad1d-9870-4523-ba9d-74043a5752b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dbe9b4-6bc2-4a82-9116-70e2f25c1beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6f9492-7918-4536-a9c2-1dea4af46fc7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd35d17-d7bd-4483-9531-fe02c1903d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5fe146-b3b6-4bf2-b0da-a83178ed925f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10535e63-bf33-4d1f-a211-6c7648954f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db86062-43e3-4378-9b90-567b19ed2fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70835b42-2638-4e30-8842-08604df0b055",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6c2d92-267e-4d88-b4ab-8f82854e54ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e8846f-cb29-468b-a43a-90a0a9a34a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058b16bb-c8d6-41aa-bd99-a4b2292fa283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e54c55-a4d7-4599-8223-ac8e99a389d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce302b0f-f742-4403-bac5-2e6cdb8ece33",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b833a2a-77a9-4935-80be-fdd0a6fff108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9095d2-05ac-48a6-af70-4517d91ff156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0249c48-4ed1-4566-b468-3ef7f59c52ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86259fd1-892e-46ac-bfd9-ac643f6a3b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aedd30-d3ea-4640-9038-98c762e780b1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0d1fc8-9163-41f4-a38b-67ab92b62612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad061644-9c74-4c2b-bce8-a3587b937991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282af99c-1ba2-442f-9063-db8cdc8e7556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7be70d-6349-433f-aa24-d7c78519719c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4a81b3-f71e-45f4-8b22-34ecbce1d389",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0898f321-ce61-4b22-8096-4c4b32b91e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53fcb5fe-bbe8-40e3-b0e5-5509b5596129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad796c9-051c-4a61-80b5-c3eeba5d5368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cfaf6e-3d16-4c27-9c41-e0b265579cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7259e6-3417-4f2b-8502-e5ab72eeadf2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d80bda9-ec2a-481b-b843-d3876406e5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6361ab6-317d-452a-b041-ebc99cf72c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f017f311-0b45-4485-8070-948446669d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9e3048-4166-4282-8d05-06a8557365c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77075f6c-7fb3-4dd2-99ed-123936fbc537",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd095d83-a757-4675-bbdd-b4e66bd7ac48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d6ba10-d242-44a6-ab6b-49bd118c9d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d765dbb-6352-4501-8e5e-a179bc479e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7be2b77-6485-44f9-bcde-fba34e4446ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074f7b44-a4a1-40df-95f0-1eabb9013e0c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08b223d-9cbe-42c8-b11c-a639138fce73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05442aa-18e7-45b3-b8a9-a9d92832b1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9906479a-f38c-4424-9708-d0cdc81a1031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973d4060-d420-411f-ae7c-2fa379bb2b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bbc029-13ca-425a-9fd4-8101ca80871d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0547ef5e-19c2-491a-bbba-6727e4a5109a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0347e63c-7eff-421e-bb50-8dedcc09d939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaedb97-d76b-48b7-a7a6-f67c74e69d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9097f90c-9ae5-495e-ba4d-076fa0b4a513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b73eb-6a4c-4e3a-bf4b-31a7726f2fed",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2f9770-404f-49d1-b69b-2e528b67e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df18e3b-5036-4959-b1b6-5550f2e7e83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7674c45c-12a8-4d64-b8a7-7c8516a58a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838dfba3-41f8-4e62-b4af-05b88eb6beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdba34f-d3ab-4637-aa89-6b13ad831ecf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5813cea0-d848-4317-9375-a04a8cbe66bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d612e2-653a-4431-a915-51bfb4a50249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fac9bf-2310-4316-9328-716af0dba8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100753b0-17f1-40e3-9eae-d883639467ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c177f0-dc15-4a81-8a00-8bb49c9eb890",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999c6176-9551-4348-9ab6-9cb94ebf0f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8733b05-50e3-45eb-8414-c967062875be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179e8e3-0e6d-42d5-b36b-6474d4ca8534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7feb50-81b8-419a-8ba0-b288cdbe69ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a526b-3199-4bcd-a21c-9247e80865ee",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1574937-523e-413d-a4c0-46871d51b6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5272edd-f82f-4517-9374-0b6ba61acd1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a4197c-9156-4c74-acd3-fc8668102831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efbf5e3-b091-4773-8989-c862f498fa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7e5973-21de-4234-b5f2-72dc1fb66219",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6735c3a3-ebf7-46b8-976b-5ec4f2f2ba86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1255ae62-8ff3-4ed4-8296-f02a95c76ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e9c11a-196e-40bc-8e89-148a2a924696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0a1a31-2fd1-4f98-8279-cab4ca8b47d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bbf544-9eb8-4135-a0f1-f0683d2cd891",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ba120-704a-4842-ab77-d2c8b6c5fc21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88820df9-9c21-48e2-a811-ba31e054c5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4d1f17-ed03-4c2e-a15f-067a6aeaffea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc48719-ea34-468c-a41f-68751296c5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652fa4ba-c0a9-4fe3-8cec-5e05843f0e77",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5f4995-2164-411e-8aa9-fc6d64555f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361d2af5-8dca-4e7a-bffb-e5c2c75ebcd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350f8cab-6c7b-498c-80e5-7f52649f7df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef75194c-41f7-4317-b1de-c8c282c13c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646c3519-611b-40f0-a0b6-d96c2599aad6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a50787-9c5a-4654-9d79-a3aac1ab178c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a48631-6d73-438a-a1d7-8be1cb41bf11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8664be-0802-48f7-97af-b15d2b125e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9df0f5-8462-4e6a-b6e3-da9cfbb1e818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbf4a7d-de43-4ad2-9da9-c54ef7376093",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87cb9d-6dd1-409e-b421-f75a9744d094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2043e4c-47d2-4e57-8364-82fa6a128fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f33e8c-3749-46d9-b562-c32eaa8e1dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8ace0c-e009-4b29-a702-55b1e1cf76ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c0947-66c5-49fe-8362-e885907260c3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197dc694-dcaf-4354-8e2d-13d6ca67056f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ead3e1-49a5-486d-a41d-b3a85c90a6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ebd1a7-ab81-4666-9b9b-3fb2d435097e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caff857-2e35-4c34-9858-ed9c825f3ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8391d697-413c-4f53-a0f1-413083e31322",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea764f5-51df-402d-a566-97d89396bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527d7ebc-8e9d-4e2e-9ed8-fcc564018c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ce7ea7-8aad-4379-beb7-3173b246a719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1421f149-2a70-4051-afbe-7e6e82f0f4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf84262-eb0d-4b56-a85a-fad46ee1ed96",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49200cb8-1fd1-49d9-b183-a9098b9311ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b029fe-6e8d-416f-83a4-28e03116ddd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e432b-d0a0-4da7-88b8-af8c036c6d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d630769-88c6-4a99-ad87-8a849b513a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898658f8-b166-471f-95be-feb6ccd3c089",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c61f38-aa7d-4b54-9fc9-15e4fd648822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a8aa88-b70a-4312-b676-47774121e77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e095da2c-3f3d-4725-ab3a-0af372c226da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f52cc69-0914-403e-9e4e-d45e04995450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606e71fe-5049-4794-9e2f-75942aa0db7c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a5b1bf-0c2b-466d-a996-e36619ebde3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d8eecf-0763-456b-87f4-7ee62bff5576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c519fc-a1ff-4db4-8ad3-481448b852fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1758da21-9f28-4001-b854-0fd416b0fd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7c057a-5353-4a8c-a780-2f2b47d04dbd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c695d7c-5dc6-46a2-96d6-40015d22d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d9095f-a57e-4b50-a1c1-a0f5af26b3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33daa2df-ab60-4f25-b2c9-5e618ff60b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d2bf6f-6b12-47ce-8364-22fe5b8e8278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3388a722-0280-4a37-9dd3-4cf8a8a53fe5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce0f8ff-445c-4e4a-ac6f-537c5a5f5c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2452ada2-3bb1-4373-803d-ab7d6f3480b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf57e99-5554-4958-8984-a51d97a775c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4a758f-1e5c-47e1-9883-c3a23e60a97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd173f9c-a820-4a25-a6de-ed343ccd0ab3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fafecac-31c4-4154-90b7-3d4abca1a72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9399ddd-1bc2-415c-9279-a814cef0292f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92c27d2-dc81-4613-9946-7810973bef6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234750bd-8497-46bf-87e4-1271c8324b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f2f656-1714-49a8-bd6e-0c68ba10c821",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2620f9fc-f736-4651-95cb-6ecb6b727e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afd969d-812b-494c-ac0c-a29f2504933b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b4e6ba-56c8-4f9e-9097-c28a87e373ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5686f4-f83e-4640-ba70-9c8b65194e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5750ad0-c325-4e0c-93cd-c4483a3f48ef",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4674b0d-dcd1-4284-a9c1-19330a930f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b55cc3d-2f02-44ca-97a4-4eda7bae33e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ed74a1-23e5-456f-aea5-e3bc8c32838a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d77887-2774-4a4b-bc84-b9b65f43199f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2464e430-5194-4863-84eb-604c0afe2f2b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c8f89d-0503-4b83-a3cc-638f75b42be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7d8d11-5a07-44e0-8d66-e9cc36052b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d37874b-c142-4216-8285-fde6e49e81c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67f768d-5346-4774-9e14-ba15cd704ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690cf5d2-19a8-4601-9f1e-d525652add02",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ceaab1-e520-4839-9ae3-193012bc47b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c1cf71-8a6a-4269-8c66-d6f6f8963a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ccca42-1331-484e-bbbe-9bb76c931344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600cccaa-9c2f-4af0-963f-2bcea6946295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e134ffcd-b6df-413c-ac22-4d5c8b0d6d93",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0432871-ba13-4737-9bc3-a140d1d28ad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8243a28e-3bec-4cf9-ba00-9a4230d8da4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247ab98-b5e7-4347-abae-126cebb3d152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb0257d-d11a-4dd2-8ff8-a9099d8d62f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cb4e58-6921-42c8-b99f-831ac89a54bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929f885a-3b9f-4108-b755-af89b8dce2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aae9cdc-b748-4bca-8d45-11ad32b88a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e482c-27f8-4e97-864b-9d6267a8743a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cd77d4-abd2-40b0-917a-b04e1b0903b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65997b52-d424-4e3e-81ea-9b86b6cbf66b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa3fcc6-fef5-4451-b56f-fe5efde9aa57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea33c2e-d197-4d3d-ad6a-59810f5f9a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3050f5-eb2b-45b0-af60-814a2cbf4331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6a6bbc-b8de-4823-ac70-05ac2c9afd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2070d4-80b3-4d2c-aead-3728996faa3c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caa5556-dc87-4cb9-9aec-115aa2a471ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d05601-d2c1-4989-a294-b319ecfbd9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb4b876-18b3-486c-9381-d61b67d89a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e621f6b7-f860-4b64-8947-c32f7c778d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ca8e5f-ae5d-4b4e-922e-17a04589ea1b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29049216-ca4d-4fd7-8ed4-f04f4e8ee681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ac7e3b-5196-4a3c-a5c0-3a4b5894af3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d2a4ae-2c28-4a7b-b722-4f54d89361b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02e6f0a-d346-4252-abb1-02485dfdd20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46ec5f9-35ec-4d72-a721-9d43cfac7b5b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1ad2d7-bf21-48d3-8df8-f6aafc3c974b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761e8db4-97d7-4d51-9173-1ad57448d387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330f13bc-2865-4448-9fbd-d19a6db97bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52acba29-03ae-4001-9db1-3748cd32b7d8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71cb5a79-dee1-4693-8a28-4460a7ae8124",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb5b71f-7698-4cce-bc9c-daf2f3391f63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96973d5a-b5b7-411e-ac85-93d283b36c4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e737ee6-791e-4670-ae50-9a9886634415"
                    }
                  }
                ]
              },
              {
                "id": "13c13e7a-c2cd-450c-8576-87753c47dbe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e238ec7f-2395-4f4c-aac0-d7179a3272d4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d4f3e-a8df-4e42-8b0a-051e155e2cd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5b641eb5-b338-427d-9adc-594a0ffbfac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7204d766-4cc5-434f-905d-5eb6b8028839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fcde449-0e0f-40b7-b47a-92106b30759b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21653a74-8bee-403b-8477-b2207cce6d7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da2c596b-ec50-4711-8b04-b8c435cf7004"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3833cbab-d90c-4bf1-aeb0-270daa52389a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b45416a-6527-4dd2-b28a-c50a1c433bb4"
                    }
                  }
                ]
              },
              {
                "id": "2e6bfc1e-544c-4906-ab0f-641c96fce2c5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "72cbf74d-69ff-4fc3-b8f0-2e387526b9c1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f19d882-aade-479c-84b6-0ad7c539093a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "429f3af5-2667-41c1-8d10-4f9435db6545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ca32a4-6eac-432e-b1b4-08f02a50ea9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50183c8c-4469-4ac5-a488-d3db9165e552"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9ad8fb4c-ed1c-4741-b8b6-23673e39ffdd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9877c48-49b5-4b7d-b888-39b7bfd64e78",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "280207ab-aa6e-4f53-8a60-d2a0739a6ec5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bd98c220-2884-44e9-b2f3-d04072031db4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f74396e-e6b9-480d-a40b-ffbbea4ae585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8b1b0f2-d997-4e65-a668-69820a6236aa"
                    }
                  }
                ]
              },
              {
                "id": "cbfc8283-aca6-4897-9b7c-e2a3f2f666c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "671473a0-4237-4bfa-9567-555e44765cd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "71356080-406f-4db3-ae1c-9c1f20a1c3d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e494dc5-1a1f-4fba-8348-61f393286908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05ced8da-b50a-4d13-83bc-6dbccd6aa6ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a13a3c67-cb1f-4701-9319-a4d3f6791c19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c2f231dd-dd7d-4605-b2f1-f301f13aff01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c2e425b-f591-4981-ae47-1e596d969da9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80829ded-3cea-4520-968c-bc4532e29ff2"
            }
          }
        ]
      },
      {
        "id": "9c3b735f-f2ee-413b-bede-f5ac28b3faa7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a98773ba-1c0e-4694-a805-7c062e3474d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2576825-bb57-4af6-bb62-4e5c4f171fc8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f12ad053-20b0-4e4c-a61a-78bb6cf12919",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2985a5f-67d6-4817-821c-79d367957ed9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6260a510-438c-45e1-acf3-f4c047dce960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02022a9-5be3-4079-b4c4-2e41062c01c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09058236-c275-4390-af9a-ce9160bc5451"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69af15da-2cd2-4464-92a1-01a6a1b4522d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7375b0b9-2da6-4807-98f5-e19db69e6c12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "180c595b-87ef-4bf9-9f28-77dc399862c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77838a25-abd5-441a-8ce5-2bde2c0d5b4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d22a0bd-366d-45d9-a95f-d465056db13d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b3ad76ff-55a4-47bb-bd22-72911f851b21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39e94c69-743c-43cf-863a-a88e81f55899",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc1e114d-dea0-4d52-9b8e-ee8642c32f02"
            }
          }
        ]
      },
      {
        "id": "b7cae0df-05b4-47d5-89b5-2afeee68fbdd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9af94f5f-3475-49fb-91ee-ef98563ad000",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc407775-7683-4b17-82ed-2baec89a9ca4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f8c57c2-a8ba-4499-a808-7ba8256a8c0f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523be9d5-21e6-4267-be80-283338370933",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a3007d3-3506-4785-90d7-410dee3b509a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216e96cc-8cd6-4f17-8457-00c9b238a005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bc3a2e7-766d-461f-b8eb-e1c3ae5ce534"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6b4f1d6-ea81-4c1e-9403-cb6d2024023b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3516f06d-9024-47e8-a0d6-7870eb38de0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d64d2b82-07bd-409c-86af-c30327e27acc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff5ca172-6328-44e3-a118-82ed0a0d9644"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d35e67f-b322-4f92-b5a2-9e657f3df6ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "839a5162-2d60-4e97-85a6-e7ba1f1b0c55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8466c37d-9509-4b0a-9358-4a58e1c76a81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86d97f65-5967-4b6a-9540-fc59061fb540"
            }
          }
        ]
      },
      {
        "id": "ab625b63-0bbf-4fcc-b1b7-e7ba5b7bb1db",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ba195390-b521-4657-a41d-9b8eecaba223",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81490c04-c997-46ef-ab65-59ac7f9c5bc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dd42175-4eb9-4e86-93ca-e3135bf48359",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dc20f7-fb74-4048-b3f0-e073f21c6818",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b425287f-3668-46a0-8399-b75f6906fffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf64e26-dc4c-4f7a-b365-0e2c49faf3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaae5ee2-b799-4abd-af81-b193da00d467"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09e9c3d9-e988-474c-91d6-a86ca5afbb7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f924d619-4871-499f-99f1-f705e1cd02be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d9bc891-02f1-4978-909e-dbc05fd871b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66679463-69c9-4f70-9592-08a161a07417"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45736a80-5f4d-4350-8644-bb1319ce87c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "981408df-b5c1-43d4-ad2c-baf7dd039cb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0ecdd90-8d00-4e35-882f-0eb3b59cc284",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "316081dc-f937-4843-b1f2-b353ddcb319b"
            }
          }
        ]
      },
      {
        "id": "f356ee8a-6cec-4b7f-8ee2-8d72340cd2cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5f4fcca-c855-4b50-8fd6-8af51fe0ed58",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ffe81c1-500a-4fc4-81cf-a2c811c04979",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "745a5d58-325a-427f-9a41-ef54e110313c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d99d7d67-b462-4717-bed2-99e845dd6e45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4abd95a-ce66-4cb3-89b5-5a14417aedd3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.596491228070173,
      "responseMin": 5,
      "responseMax": 263,
      "responseSd": 25.434235560867823,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706920448182,
      "completed": 1706920460684
    },
    "executions": [
      {
        "id": "261f26db-c0c7-412d-be2b-e1b4c5fbeb2a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bcdd3e7f-dfda-475a-9f85-c5891efc0bca",
          "httpRequestId": "43952060-bd97-4733-a8b9-61004f2e8897"
        },
        "item": {
          "id": "261f26db-c0c7-412d-be2b-e1b4c5fbeb2a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "38b4303d-1807-4ab6-9534-ad74a1ada535",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "3ca309b0-a47d-4486-a737-bbf40abea155",
        "cursor": {
          "ref": "6c997c14-8a48-4951-a9dc-6fd48093243b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a85d9d94-461e-4d26-bbc7-8b4d518a4a02"
        },
        "item": {
          "id": "3ca309b0-a47d-4486-a737-bbf40abea155",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "356403ec-1e22-4611-999b-67703f2f40fa",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "c8a915d5-357a-4802-a2a7-0035a4114627",
        "cursor": {
          "ref": "cbdcd25f-3d8e-423c-9045-46555e551142",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3c5f6bbd-c64e-4a3b-992e-fc19b772ec2e"
        },
        "item": {
          "id": "c8a915d5-357a-4802-a2a7-0035a4114627",
          "name": "did_json"
        },
        "response": {
          "id": "33ee443d-293e-4f78-aa65-424304cb32c5",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510af8ce-4fc2-470a-aa6e-e1113d61e849",
        "cursor": {
          "ref": "bf72ba6e-e373-49cc-8f19-12c0bd02e9f3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9506a7c7-54dd-4d89-a891-10fe92034d7c"
        },
        "item": {
          "id": "510af8ce-4fc2-470a-aa6e-e1113d61e849",
          "name": "did:invalid"
        },
        "response": {
          "id": "89f5feab-fefa-40e7-b43d-f242b4a2a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510af8ce-4fc2-470a-aa6e-e1113d61e849",
        "cursor": {
          "ref": "bf72ba6e-e373-49cc-8f19-12c0bd02e9f3",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9506a7c7-54dd-4d89-a891-10fe92034d7c"
        },
        "item": {
          "id": "510af8ce-4fc2-470a-aa6e-e1113d61e849",
          "name": "did:invalid"
        },
        "response": {
          "id": "89f5feab-fefa-40e7-b43d-f242b4a2a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f11a84-494f-4291-847c-73435857e032",
        "cursor": {
          "ref": "838b0337-4041-420c-8991-5ce5ace8f7ce",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c8b24e8-a444-4537-9f7d-c6da244e2b20"
        },
        "item": {
          "id": "c5f11a84-494f-4291-847c-73435857e032",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "028d7dc5-0961-4979-9e9f-d30f89bb7037",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa11ffa3-b63d-4fad-b814-45235768a227",
        "cursor": {
          "ref": "13819960-c9d3-4eef-bddd-bcd9546a9edb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b013923-1e3b-4682-b4a8-06e26b9144d8"
        },
        "item": {
          "id": "fa11ffa3-b63d-4fad-b814-45235768a227",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1aef5a81-119b-439c-9abe-7b1ef37dbf7c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee288a77-bf36-4291-8eaa-127091b3e501",
        "cursor": {
          "ref": "ce4aec14-38a0-4e73-82e6-1254bc160f63",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a84ce87-b606-4ade-aa03-7eda6a6fbe36"
        },
        "item": {
          "id": "ee288a77-bf36-4291-8eaa-127091b3e501",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "da021fc5-c5c2-406c-a21c-2e2a7b26f718",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d17d44-c138-40ba-9407-64c7c7103926",
        "cursor": {
          "ref": "9cd3b5eb-659a-45b3-a52f-39aab560fcb6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9418ce34-726d-4dea-aa95-cf9c69016c59"
        },
        "item": {
          "id": "20d17d44-c138-40ba-9407-64c7c7103926",
          "name": "identifiers"
        },
        "response": {
          "id": "6b49c07c-ed22-4653-842f-381e5060c501",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73de991d-98eb-4fb0-ac52-fc2f049cc4b5",
        "cursor": {
          "ref": "5ef87ad6-a25a-4ef3-a696-d0e4e0684aa4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f3d0e091-deb8-4d39-9deb-7d4229f44318"
        },
        "item": {
          "id": "73de991d-98eb-4fb0-ac52-fc2f049cc4b5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7dc581a6-1b3d-4312-9a1f-cde8686de528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64f64eb-3116-43e8-934c-cfb164bd7fe4",
        "cursor": {
          "ref": "6146dad1-841e-47c8-b6f6-93e1c88b07c7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ffbd4291-c6ff-4d3c-bdc1-d98757c79d96"
        },
        "item": {
          "id": "d64f64eb-3116-43e8-934c-cfb164bd7fe4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c485afe6-4a74-4194-b7cd-17c9b3421e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135a1c87-2e74-432f-911e-a07e65e91cca",
        "cursor": {
          "ref": "d1c80044-6ef5-4c24-959a-3d034f3c3328",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "53c8c750-1f41-4718-ba1a-c9b3fbb29660"
        },
        "item": {
          "id": "135a1c87-2e74-432f-911e-a07e65e91cca",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ceb685c8-6ba2-4ed7-8ff8-370648a76639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902bc51f-3cf6-452c-a5d8-b26dbd2aa914",
        "cursor": {
          "ref": "eeded622-f72b-41ce-afc6-d4f1546eb044",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c606a4ee-cf13-4368-a4fd-b0abdc721ecf"
        },
        "item": {
          "id": "902bc51f-3cf6-452c-a5d8-b26dbd2aa914",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a35af97c-4aea-49df-9d83-fa76f701d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c85f6-6424-40a4-9080-91f02cda9c14",
        "cursor": {
          "ref": "d936eb65-a602-48f1-b9c7-522fb57e8278",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2ce6e697-6cba-4f39-8bd9-7b3fdf96e3e6"
        },
        "item": {
          "id": "602c85f6-6424-40a4-9080-91f02cda9c14",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "53b22a93-0a86-442a-ba13-c594b050c035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae3fcab-8bf7-4649-b6e9-2ed82f6c39c0",
        "cursor": {
          "ref": "6d6328fa-c9ff-4713-95e3-43463bb749a1",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ba268988-beef-4dc7-96f6-1c75fc45a097"
        },
        "item": {
          "id": "7ae3fcab-8bf7-4649-b6e9-2ed82f6c39c0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dac9dfba-088d-47e7-9694-059c1daf0c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6101c95b-6848-424f-b8ea-943b1614782d",
        "cursor": {
          "ref": "e98b93d6-5fb7-465d-9ffc-e8974063b117",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "15b09bcb-6092-4e0d-876f-37d9b53b2ce1"
        },
        "item": {
          "id": "6101c95b-6848-424f-b8ea-943b1614782d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a474ed88-89df-421b-970a-78566cb642f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f8cbf-69cd-41f2-b690-ab7738d82b7a",
        "cursor": {
          "ref": "2e770248-ba3a-48ce-970d-6d22bf21a9ce",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4796c86e-845c-41b5-bf24-f1eb145c7b23"
        },
        "item": {
          "id": "978f8cbf-69cd-41f2-b690-ab7738d82b7a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1f511660-f45a-40f1-92f2-f0927269ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7d72b9-b618-4554-9687-11c306e7ad16",
        "cursor": {
          "ref": "2ca4bb9b-0830-42a4-aa31-b8a6e22f2f71",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a2f2a138-2300-4490-9b67-c29739f02008"
        },
        "item": {
          "id": "8e7d72b9-b618-4554-9687-11c306e7ad16",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ddccb65a-bb7b-47e9-bb12-7a76813997fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97c81fd-1ffc-4e9b-ba5d-1adaec611c71",
        "cursor": {
          "ref": "d8521d04-7359-4e68-9ac2-e0430ee6243a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed7b812e-d20f-475a-a56a-1f1c08e81c47"
        },
        "item": {
          "id": "f97c81fd-1ffc-4e9b-ba5d-1adaec611c71",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a00e8d85-3c6d-43cb-85b7-707b0e8a5de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1906426-7112-49e0-ad97-19485b7a8243",
        "cursor": {
          "ref": "e6aa92d3-1c53-46c4-8be2-68933f48cf7e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dfe4b28a-e307-405b-81d6-e593fb98175d"
        },
        "item": {
          "id": "e1906426-7112-49e0-ad97-19485b7a8243",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "eee0e364-da47-4966-901f-628388210e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62542d1a-7000-4d3a-be5f-82f8f2a75c8e",
        "cursor": {
          "ref": "25eaed17-42d8-46fe-b51a-92026d59cb25",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bcf77dd3-e970-4cdf-a811-fead3802427a"
        },
        "item": {
          "id": "62542d1a-7000-4d3a-be5f-82f8f2a75c8e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b210d7fb-0253-436d-83fe-fddaf8489cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b65a197-3809-4386-b0d4-efbb512011d7",
        "cursor": {
          "ref": "1a2a4740-be16-427a-9c4b-c71dd9f2f50d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c60d33c0-7d62-46ed-b0aa-eb50352c74cd"
        },
        "item": {
          "id": "5b65a197-3809-4386-b0d4-efbb512011d7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2c568702-3825-428c-a1f9-bc1c82636476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a48535-8f6e-4a61-9f91-58c0a45cd39a",
        "cursor": {
          "ref": "53bc4126-8324-4b38-91cd-56d200ec072b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "25441e20-f408-4df2-9088-b0cd7405a0df"
        },
        "item": {
          "id": "e4a48535-8f6e-4a61-9f91-58c0a45cd39a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "66a66ba9-d8f5-4671-8729-7579256884ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e13b664-d481-42b3-9552-ba0243e86ccc",
        "cursor": {
          "ref": "677066db-054e-4a2c-9172-26a2a1b953e1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "570d1f01-4d58-48ed-9151-73cf5650bb53"
        },
        "item": {
          "id": "6e13b664-d481-42b3-9552-ba0243e86ccc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0351bbcd-d13c-4d95-a18a-206c4e6cc582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942eac68-f1df-4966-9a8b-98ccb1dfb961",
        "cursor": {
          "ref": "5be6d2f8-00e9-430b-b2be-eb0e256793dc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0cf5dd03-2fb8-4da6-b43d-31e157cf707f"
        },
        "item": {
          "id": "942eac68-f1df-4966-9a8b-98ccb1dfb961",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "801b0db4-bf75-4601-9c29-ec2933dbf1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24af2f18-124c-4f9f-af3e-1ae3d1e6f6b1",
        "cursor": {
          "ref": "2d4a2ae3-3249-4b8e-a9f1-87e040c814ff",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "81a4e6da-65b9-4ec6-a6c5-abe60ce342f0"
        },
        "item": {
          "id": "24af2f18-124c-4f9f-af3e-1ae3d1e6f6b1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "69d88758-ea2c-4e1d-b4d1-b58cd87f21b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdea4bff-05bd-4451-852a-f50ced84c6bf",
        "cursor": {
          "ref": "29badf5a-25b2-489f-ae95-38008da6e648",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9faf43a9-2417-467c-813b-b98608c3797a"
        },
        "item": {
          "id": "cdea4bff-05bd-4451-852a-f50ced84c6bf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "322c5602-f012-4b8e-af1c-1e39f452999e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1011c989-81aa-44ee-b10b-559953bb18c6",
        "cursor": {
          "ref": "2d0da50e-1d77-4a0b-bed7-b604b6fd7650",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d4d5c622-f84b-47b6-bc8e-18bc97c2facc"
        },
        "item": {
          "id": "1011c989-81aa-44ee-b10b-559953bb18c6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2592c6a3-a5f9-4a03-8e7e-7533451b98a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4117ab90-ec5e-469f-a5ea-5557d45e165a",
        "cursor": {
          "ref": "4b993038-8159-4fdb-8f4d-ca82c7c6fcf8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "33766fd6-68a3-44f6-9ac4-57e5f5adb366"
        },
        "item": {
          "id": "4117ab90-ec5e-469f-a5ea-5557d45e165a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "47ae2134-af6b-472f-99cf-a2d86d12c5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e0a95f-fa1f-4e68-8448-74ff58beb485",
        "cursor": {
          "ref": "c56a219e-884a-4fd3-9f5e-dd87dd4e978e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e882f4f7-6446-4e08-a5db-579f590f900b"
        },
        "item": {
          "id": "d4e0a95f-fa1f-4e68-8448-74ff58beb485",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "adb1bcb4-bee1-4b5b-819a-8d1761413cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ee7408-af3c-491a-b5b1-27e942211b92",
        "cursor": {
          "ref": "de864cf1-5447-4115-bfec-38d75e125bb2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "79c84818-a437-406b-979b-176070c6f2db"
        },
        "item": {
          "id": "11ee7408-af3c-491a-b5b1-27e942211b92",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dda1307f-d59f-4140-9247-14313f3879f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00625aa-7696-4304-a1ec-c3185cce99d2",
        "cursor": {
          "ref": "eb63eff7-6be3-41aa-8036-a8bd5bf5942d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f7d053b9-00b7-49d1-8882-5d0d85524ddb"
        },
        "item": {
          "id": "b00625aa-7696-4304-a1ec-c3185cce99d2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5bc8b3a3-e454-4cd0-9819-38c418471ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9784d7-6eea-4c09-9ea4-f705f0d028fa",
        "cursor": {
          "ref": "26a1af7a-e279-449f-b4ca-a93dca00c1ad",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2e9f1418-f846-405b-a42f-7de3c7e852e0"
        },
        "item": {
          "id": "2a9784d7-6eea-4c09-9ea4-f705f0d028fa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "56b447b6-4f39-403c-b131-ddf3101dd08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29592f2-60ca-4ada-91d7-24623047be4b",
        "cursor": {
          "ref": "2f433be1-bf26-4a5a-8279-b560604e7a2c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81bb585f-0c35-48a6-968a-b7bcacd464c1"
        },
        "item": {
          "id": "a29592f2-60ca-4ada-91d7-24623047be4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dfea7805-f2a8-463b-9287-86fe0bd52da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb1e4ac-3422-45eb-a067-4260599031df",
        "cursor": {
          "ref": "f35add1a-4fe0-41d7-8c12-0103dcb6880b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "244c403d-3b7b-468f-a5e4-9aeb010a347d"
        },
        "item": {
          "id": "ccb1e4ac-3422-45eb-a067-4260599031df",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5c06a7d8-8913-4382-8a5c-9e3dc5f556bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741423e3-6e45-4253-8c1e-d90bc0bdf032",
        "cursor": {
          "ref": "ead600c9-ff9a-4cd6-95a8-edf6b416c135",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cd86a402-730f-445e-ba24-a7d7e2910f5e"
        },
        "item": {
          "id": "741423e3-6e45-4253-8c1e-d90bc0bdf032",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "81212409-c97f-40bd-b5b3-655e0950c572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1746160b-88c5-4f96-b612-6fdb4a84b796",
        "cursor": {
          "ref": "24b4cf98-19ab-42b4-8531-776bd7f90c1c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d5079905-8658-4d1d-8329-84a6272ef3b8"
        },
        "item": {
          "id": "1746160b-88c5-4f96-b612-6fdb4a84b796",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0c63876b-019e-4ad1-b5a7-89e3ea57248d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d049452c-4217-4809-85cd-bb5ec8b575ba",
        "cursor": {
          "ref": "60cc0568-7a71-4b84-8acc-18c6198f70c3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "feca732c-3d79-4080-bfc1-ea4dd33ee866"
        },
        "item": {
          "id": "d049452c-4217-4809-85cd-bb5ec8b575ba",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "06ae2418-25fa-4f2e-b6e9-3b1b8be0e77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e533e7-cdb9-49c2-b82a-c6bcc3d93f2a",
        "cursor": {
          "ref": "3bdd6400-2d0d-4e4d-81de-74d0573a47f3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6f0b9171-311f-48a0-9cbf-e6ded0d23673"
        },
        "item": {
          "id": "f6e533e7-cdb9-49c2-b82a-c6bcc3d93f2a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6fe76e36-19d4-47d7-8aed-42c22ed31eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec7fea4-6930-48a9-bad5-b1434eddbc9c",
        "cursor": {
          "ref": "5dcb839a-cce0-4a7a-b8f4-c467307f8795",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "839a61dd-fffc-43b6-9373-2236f2cffb09"
        },
        "item": {
          "id": "6ec7fea4-6930-48a9-bad5-b1434eddbc9c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96a567fb-8768-435b-a930-f9cd3185a269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabb01a1-c603-408c-9ee4-9244a251ce7d",
        "cursor": {
          "ref": "c4c0240d-452b-4dff-b4cc-81b852925058",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "524c7370-351e-4c7a-a9f0-ff6d14983a1f"
        },
        "item": {
          "id": "aabb01a1-c603-408c-9ee4-9244a251ce7d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "586c0e5e-5c4f-4a38-b82a-993edb7563f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fe8370-fe17-47c3-9086-2662e025059c",
        "cursor": {
          "ref": "22f6afb4-34bd-4a5b-a96b-d97a55fe9283",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "91b7aeb9-186a-4df8-80be-0c8ed2eb705d"
        },
        "item": {
          "id": "d2fe8370-fe17-47c3-9086-2662e025059c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d67f9a1-595b-4576-aa3b-523b9e1b4475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a375db-fad3-4b46-904a-dfbc6b5805f8",
        "cursor": {
          "ref": "c52978b9-0d77-4787-8827-b0defe1fb596",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "17c3464a-0adb-4918-be01-93ead47d6c56"
        },
        "item": {
          "id": "16a375db-fad3-4b46-904a-dfbc6b5805f8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e8c0649f-8509-44f7-a415-c140c8a377cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86effd4-a366-45ed-a0ba-4f1699fe4cba",
        "cursor": {
          "ref": "74fd4bce-ab90-4721-b6b3-0719bc888426",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9b7a0a64-254c-4f4d-9b44-e5dcbf5258a9"
        },
        "item": {
          "id": "a86effd4-a366-45ed-a0ba-4f1699fe4cba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b8857aa-30bf-4de1-b2b9-e51bf289fcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a272a051-7826-4a9c-a73a-5620f61edb71",
        "cursor": {
          "ref": "25d9f1cb-7ef7-4887-a547-9bf9dc7530ac",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e22f24e5-f42b-412c-aa76-3f1006e5e51f"
        },
        "item": {
          "id": "a272a051-7826-4a9c-a73a-5620f61edb71",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ffb2e7ac-9d8a-4cdc-87ce-eef40f5a56d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cccbb0f-8bda-4e05-aa50-72e1c5f58651",
        "cursor": {
          "ref": "3fa309fa-5feb-4595-8815-51256809dc16",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "276901b1-3ca6-40b9-83d8-23950ffb18f3"
        },
        "item": {
          "id": "3cccbb0f-8bda-4e05-aa50-72e1c5f58651",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3d550ac9-22e7-4777-9b44-d4c07113532c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97232116-101b-4271-837c-0fb06b011703",
        "cursor": {
          "ref": "8d12fdac-4307-4e33-a0ea-325266602703",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8aad68f5-d948-4bd8-8c50-b3cc83980473"
        },
        "item": {
          "id": "97232116-101b-4271-837c-0fb06b011703",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f87e3af7-ded6-4a17-9105-876fe2b9eefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabdcaaa-a6c4-48a2-b692-a621f0364fde",
        "cursor": {
          "ref": "37f13a49-b0c6-49eb-9c37-75ec15a1e943",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3bb6131e-88cc-41cc-a72b-42a7d9160962"
        },
        "item": {
          "id": "cabdcaaa-a6c4-48a2-b692-a621f0364fde",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a5a1b429-3f94-4612-8976-e814d839f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b516f843-8a62-4f10-abaf-d245234fdd78",
        "cursor": {
          "ref": "c49a4e28-3611-4c74-9d17-74fdde46399d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "132a330c-ccbb-47bc-859a-45ba1222a7d6"
        },
        "item": {
          "id": "b516f843-8a62-4f10-abaf-d245234fdd78",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bec4af34-6644-4e70-81c7-85aff65cc866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2808f3-95f7-42f7-bd6b-f43b9848ab1a",
        "cursor": {
          "ref": "b24dd97c-afc0-4da9-9f52-4e5eaf320632",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2a76d0e4-c6ca-40b6-85e8-d7ff15fce898"
        },
        "item": {
          "id": "4f2808f3-95f7-42f7-bd6b-f43b9848ab1a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0e6dd9ef-802f-44e6-aff8-62a2bd94e9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead5f2e3-1ede-478b-b3c4-cb1227bffffb",
        "cursor": {
          "ref": "87fe16be-d886-4948-9555-088c99452a8c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fae1bd4c-19c0-4510-a141-abc0b1f8dca4"
        },
        "item": {
          "id": "ead5f2e3-1ede-478b-b3c4-cb1227bffffb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "673eedfc-3fb3-4efc-a006-efbc95884b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5570fe3-b4f3-479c-af90-d515930a9393",
        "cursor": {
          "ref": "7ec55503-d0b4-47a4-9f39-ee5774dfad2b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "46e3e50f-845e-40bf-b51e-92c1642987d5"
        },
        "item": {
          "id": "b5570fe3-b4f3-479c-af90-d515930a9393",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0bea762b-a58b-40e9-a983-d81bff02fc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1afc4e-7e32-4e32-b270-231722b21845",
        "cursor": {
          "ref": "2a02bc43-22aa-4117-abb6-77ba42c96125",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8f8b6e7e-974e-4e80-bf99-7c393dabfa0a"
        },
        "item": {
          "id": "3b1afc4e-7e32-4e32-b270-231722b21845",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "efc826de-ed21-40b5-b78a-fa860f8923ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932db864-c169-41c1-9090-cdfa0ab2c1ab",
        "cursor": {
          "ref": "002819f2-5cc0-468a-ae26-edaf0f969ee8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aa881d9a-9ba5-4923-bcf5-588b32f2633a"
        },
        "item": {
          "id": "932db864-c169-41c1-9090-cdfa0ab2c1ab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c3cb213e-6001-42c3-9ecf-2f855af3f6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c73690-0415-4857-b6ae-34e0bdbf304e",
        "cursor": {
          "ref": "4a9586ed-cb44-4bd7-b3d0-8523694af707",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8a958d24-db8c-4770-895f-bb576cd7b8dc"
        },
        "item": {
          "id": "48c73690-0415-4857-b6ae-34e0bdbf304e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "94f9a45f-110a-411f-ba98-1ff6a0061629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e582005e-43d1-47f6-bd5b-cb62ad02025d",
        "cursor": {
          "ref": "335f78ae-c158-45be-9175-78cc3e882646",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f865afa2-7bd7-4836-a147-b54c1c567367"
        },
        "item": {
          "id": "e582005e-43d1-47f6-bd5b-cb62ad02025d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "12020f69-232b-478b-b379-070960cdac72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a286c50c-59dc-4e40-9105-587e07334bc6",
        "cursor": {
          "ref": "d8062dc8-c155-48e3-b914-f4886c0207a3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c4e31783-3125-4bd6-b076-932364fa6b71"
        },
        "item": {
          "id": "a286c50c-59dc-4e40-9105-587e07334bc6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a51529c9-71dc-4ec8-8cf3-c2a6613e73d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47add436-b06c-454e-83ba-b5e9b3d139c4",
        "cursor": {
          "ref": "bd78b61d-d691-434e-a59d-6add0f68bf8c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "85ec74f0-fe56-40ab-9a05-0ce38931056c"
        },
        "item": {
          "id": "47add436-b06c-454e-83ba-b5e9b3d139c4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1d215085-0b91-43d8-bb05-b8094edd1fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbdecd8-dd8b-4f08-9f51-0bf784840c37",
        "cursor": {
          "ref": "65a74989-d024-477b-9102-3e4b6443f736",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cef4daec-be34-4929-b17e-6550df3fc7d6"
        },
        "item": {
          "id": "5fbdecd8-dd8b-4f08-9f51-0bf784840c37",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2e5fb38e-26cf-4bd6-b416-dea4f13fc8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074b8935-af3c-4467-b69f-00f4c7fe913c",
        "cursor": {
          "ref": "57204946-7dad-4593-aa5e-c5d86e858af3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d0e3e2f2-a499-4849-b7b2-9f893957ff50"
        },
        "item": {
          "id": "074b8935-af3c-4467-b69f-00f4c7fe913c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "51a47521-e8ef-4411-af28-4a051c6ff0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b4f972-61f4-4106-9700-67ad042998c2",
        "cursor": {
          "ref": "9b12a238-fa1a-4c4f-8566-a2a2abad5f6e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b65ea0f6-c096-4464-aedf-903e7f436a67"
        },
        "item": {
          "id": "a8b4f972-61f4-4106-9700-67ad042998c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9096db90-fed4-4295-9a6d-bc48265a2024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271dddfb-4d9a-42c9-8426-1c5812c15df7",
        "cursor": {
          "ref": "970efaee-d379-4ee7-bcce-8407872c8e5d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4c616bb-223a-46b9-b796-891d9f26fe24"
        },
        "item": {
          "id": "271dddfb-4d9a-42c9-8426-1c5812c15df7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6f883f64-d10f-4d89-8696-b0286c9deb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7b4e93-a620-49f2-aa85-4383cdafcc7e",
        "cursor": {
          "ref": "04b972f0-2493-4272-9a41-b96edbfd9f81",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7a79f2de-f479-443e-b8b7-f9f29ab84412"
        },
        "item": {
          "id": "5c7b4e93-a620-49f2-aa85-4383cdafcc7e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "16e47c1d-272e-4c81-b311-5710060ba5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985e144c-4800-4aaa-a5d4-6db3b1b7155e",
        "cursor": {
          "ref": "e3f67967-c301-4770-b61c-03f29bb01884",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "32493e77-8c45-4827-a21e-179d2bd6afcb"
        },
        "item": {
          "id": "985e144c-4800-4aaa-a5d4-6db3b1b7155e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a132f5a0-6516-4fb7-adba-e9df69b5769c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309eb2b2-6993-4dca-b4a1-50301ad2955c",
        "cursor": {
          "ref": "5d9d9b51-c0f5-4f9e-8b82-761e2b33b41f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0ed1848d-66f0-43e1-b700-72afece3063c"
        },
        "item": {
          "id": "309eb2b2-6993-4dca-b4a1-50301ad2955c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7fc2f9bf-ddd4-4fea-9988-1286084eadb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1459293c-93d5-4c99-8b3f-fd3badb17d50",
        "cursor": {
          "ref": "972f1d48-7718-4954-9cee-351ad4eac75e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "720609e7-6bac-45be-b5d1-26224dd65ae2"
        },
        "item": {
          "id": "1459293c-93d5-4c99-8b3f-fd3badb17d50",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cc563d05-77c2-41dc-b118-678375650817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae35a9b-07d3-44d7-9534-c0ce86440a48",
        "cursor": {
          "ref": "5d24e959-78ad-4c42-ac00-35aa93c1cb7b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "505f29f1-43bf-4be9-a53d-dda0802c911a"
        },
        "item": {
          "id": "6ae35a9b-07d3-44d7-9534-c0ce86440a48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "71083330-5821-45bb-81a5-168fa0dc461d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125f2c7b-496f-4e0c-b709-1aff7f2cd327",
        "cursor": {
          "ref": "23beb51a-e522-4534-b861-940fbc5a957c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37aef802-f8bf-465c-a13c-8e2f47941cb0"
        },
        "item": {
          "id": "125f2c7b-496f-4e0c-b709-1aff7f2cd327",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e11d37fc-551a-4fc1-81c4-2e9fcc742f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50625629-e43f-4ac2-98fd-ea66074fc73e",
        "cursor": {
          "ref": "6467ef7d-663f-44a8-b72c-19290eed27ef",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "decfc284-4801-4b8b-a341-29e92d6052b3"
        },
        "item": {
          "id": "50625629-e43f-4ac2-98fd-ea66074fc73e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "78a2859f-f2aa-4844-a7b3-d84310261adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4b69dd-fbf7-41c1-b6ed-d54baca61f36",
        "cursor": {
          "ref": "5e304fa4-bbd9-41c9-953a-e26d68a84306",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "98165275-ffaf-4deb-9045-167f8c6807b2"
        },
        "item": {
          "id": "0a4b69dd-fbf7-41c1-b6ed-d54baca61f36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6c6d00ae-aece-445b-b684-81bb8db0b2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80983c21-7f9b-4eba-97c4-414befe4a25d",
        "cursor": {
          "ref": "7a3dd04b-e89b-4efd-a9b6-65e52de13c33",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e930613c-559c-495a-9b4c-297b1f5de6b9"
        },
        "item": {
          "id": "80983c21-7f9b-4eba-97c4-414befe4a25d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5b93abcb-93fb-40c5-8a6b-91ad32de7ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2708b5-6ec3-4581-8cab-da2840a19e71",
        "cursor": {
          "ref": "f4d7b72c-8416-4b35-9e56-7b5edc9f420b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e06d5246-c47b-457b-9010-3f46e21b77e2"
        },
        "item": {
          "id": "ac2708b5-6ec3-4581-8cab-da2840a19e71",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6e3b80e0-5d1c-4d4a-adfd-152d3d281ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a9d2ed-5fe3-4698-aed2-57932bbbcc87",
        "cursor": {
          "ref": "55778061-808e-44a5-9926-2ef41a7b52b2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4cfd42e5-2409-4256-a249-7423222ee816"
        },
        "item": {
          "id": "74a9d2ed-5fe3-4698-aed2-57932bbbcc87",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "895b575e-eb45-4269-bb8c-26357834ac6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2df3e3-c878-4741-b0ce-0fccbbb25558",
        "cursor": {
          "ref": "8a076af0-7250-4f8d-a707-09eb229db192",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b85e3302-d3ea-4052-b2e1-5d685e21c781"
        },
        "item": {
          "id": "cb2df3e3-c878-4741-b0ce-0fccbbb25558",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "597fd721-c590-4b69-b7fe-af0f008385f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d616fb-c054-48a8-bce5-8f3e96dea825",
        "cursor": {
          "ref": "c4706d97-928b-4f29-81cb-32628b7681d7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cbd5fdc9-40f1-4e3c-9bb5-09c2be832d3e"
        },
        "item": {
          "id": "a6d616fb-c054-48a8-bce5-8f3e96dea825",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c73f77e-bc81-46d0-9582-e1ef07a0f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4554f16-a0b1-4374-ba5f-a56640eb388a",
        "cursor": {
          "ref": "6b12b562-f3d3-4acd-beb3-95dcf51578b4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "94c1f0ac-e9cb-4ecb-8817-b7f3f24168d3"
        },
        "item": {
          "id": "b4554f16-a0b1-4374-ba5f-a56640eb388a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bed9feba-6ac9-469d-b414-883b9ed8f6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb4a66d-a48e-4e18-ae77-1ca3c5feb311",
        "cursor": {
          "ref": "3f49717d-28ad-420b-9454-0838e92317cf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e34cf71d-0260-4720-b50e-458a97dba1f4"
        },
        "item": {
          "id": "deb4a66d-a48e-4e18-ae77-1ca3c5feb311",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24865ac2-0077-434d-9e13-635d805e0575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f402aab3-68e6-4472-a474-4eec08962aca",
        "cursor": {
          "ref": "4975f8c4-e864-4035-a346-844a91aa2517",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f6da96a0-e278-4510-a195-11e68e311ac4"
        },
        "item": {
          "id": "f402aab3-68e6-4472-a474-4eec08962aca",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0561274d-d1a8-4a33-8c0a-31a7c01b0a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ffbb8b-a88d-4498-934b-ee14366a3519",
        "cursor": {
          "ref": "d4615e24-90ad-47de-8748-56759e3cb699",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0a47d4d5-9124-48ad-bdec-a73527dae24f"
        },
        "item": {
          "id": "44ffbb8b-a88d-4498-934b-ee14366a3519",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e35f9498-18f7-48ac-a107-3eefa4092aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0303d2-e076-45de-a91e-22d63d77ec1b",
        "cursor": {
          "ref": "d5d85b50-f4e4-46ef-b214-4ef09bc74994",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4e86c02f-6016-4b7f-80a7-638b65fa2788"
        },
        "item": {
          "id": "2f0303d2-e076-45de-a91e-22d63d77ec1b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f1778efc-07f6-4699-a8f0-6c152ceb6d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a42bdf-5599-4fc8-9a3a-304a9ac8a4c0",
        "cursor": {
          "ref": "c02265ed-b2fc-44d8-9024-921947f71f65",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7d999877-4f7c-4554-8de6-d46b022ca293"
        },
        "item": {
          "id": "d0a42bdf-5599-4fc8-9a3a-304a9ac8a4c0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aee429b0-1007-4c52-b5b9-ada36d6ba8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f52494e-78ea-4183-9569-5ace446accfa",
        "cursor": {
          "ref": "208dc718-74f0-478e-874e-25ad03c07626",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "17419b37-f371-4396-b8e3-8cd2a68c4565"
        },
        "item": {
          "id": "6f52494e-78ea-4183-9569-5ace446accfa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "97225931-6977-4ff2-a1b8-16a7e6455652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dd6549-9b0f-48e9-8220-5bae280932a2",
        "cursor": {
          "ref": "1939a713-27c3-40d0-81d0-80046a1f2de7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e449fdfd-c872-4048-9676-7ab188b54ae4"
        },
        "item": {
          "id": "c3dd6549-9b0f-48e9-8220-5bae280932a2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "78d021aa-f887-4da5-be4f-ef30ba5eff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45d8f2c-54ba-47ab-9a85-21ab62c2a84b",
        "cursor": {
          "ref": "59edfca4-7f41-4734-ac4f-289a04923df8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6d84da01-836b-44e1-acf0-b26b3547f4cf"
        },
        "item": {
          "id": "f45d8f2c-54ba-47ab-9a85-21ab62c2a84b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "01ea2dd5-f3d8-4ab5-b4c7-853a5955bfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6835bc53-304e-4f6a-a5e3-6535b7ac3266",
        "cursor": {
          "ref": "5267d327-eef0-4328-8f98-052983edc433",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ae72b8d2-107e-4f02-b96d-935fcc8c6ffd"
        },
        "item": {
          "id": "6835bc53-304e-4f6a-a5e3-6535b7ac3266",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "60a9fea2-99d8-403a-9ade-7247bfa7d2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406fa518-c336-4c26-9a3f-ebb8b8a1ff2f",
        "cursor": {
          "ref": "2d5a4348-4c7b-4fc6-a653-ba6b4cf9c360",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "25c94904-1cf9-4996-9852-18b34c1ea852"
        },
        "item": {
          "id": "406fa518-c336-4c26-9a3f-ebb8b8a1ff2f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "72c46afb-8839-46b6-aa44-b6f18aee2711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f691dd6-0343-480d-a05c-247b6bd93720",
        "cursor": {
          "ref": "9bfe70aa-8ea8-4b35-a7a3-441f991ca669",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b30625ac-466a-4edb-aa02-8585fa6f01e1"
        },
        "item": {
          "id": "4f691dd6-0343-480d-a05c-247b6bd93720",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6f12936f-0ed6-4ddc-8eb8-21bbf7a1cede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998c0566-f29f-4d5e-9f03-8b9c0345fb2a",
        "cursor": {
          "ref": "83ea96a1-0246-49c6-89eb-d66538d4b0ec",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8684ac04-c3f0-465d-98f6-d7cf15f3845a"
        },
        "item": {
          "id": "998c0566-f29f-4d5e-9f03-8b9c0345fb2a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "329100c4-555b-41ee-8f7e-b211428517d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a80f8f-ed86-4161-a686-3ee49e8f13de",
        "cursor": {
          "ref": "e6627f5b-8395-4ee8-80fb-3ea3f4eb77fe",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "794c0479-db75-4bb6-a1bd-040bdc1a9b15"
        },
        "item": {
          "id": "46a80f8f-ed86-4161-a686-3ee49e8f13de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "424d18ee-87b5-40ee-b23a-6c7f53edefe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efc9ba3-92cb-4728-beaa-16dcfbe34af0",
        "cursor": {
          "ref": "2ba1909b-4a05-4520-abdf-7d266f8b07ca",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f718c882-f9c5-4e9f-a720-101e22e5066b"
        },
        "item": {
          "id": "3efc9ba3-92cb-4728-beaa-16dcfbe34af0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "888505e7-9307-4128-b092-6074132209bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d9ccc2-de4f-495e-9a4b-55cc0f5ad3b7",
        "cursor": {
          "ref": "eb8ec626-2fca-4e95-9f32-b4488e218bd7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f3a20287-aaa6-4746-a961-5f33149ad128"
        },
        "item": {
          "id": "e7d9ccc2-de4f-495e-9a4b-55cc0f5ad3b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3f024222-7199-4b52-9b40-a6a96fc7bf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43106e8-420b-4a7c-b828-ed3e4057b604",
        "cursor": {
          "ref": "14f80c08-a44d-4a9e-a5e2-d773241575e4",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bef9df2f-ad5c-4ad8-a1f4-df568565060f"
        },
        "item": {
          "id": "f43106e8-420b-4a7c-b828-ed3e4057b604",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7ae628f2-5863-4377-83f5-d0819b87c595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b295ad77-e887-4803-ad34-c8834ec88738",
        "cursor": {
          "ref": "ba88b2ad-4f1b-4d69-8c95-53b838fd27c5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "276a7cb4-4c2b-4c02-86e8-9fd637c94d2c"
        },
        "item": {
          "id": "b295ad77-e887-4803-ad34-c8834ec88738",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ae8eb2d0-fdac-40a8-99df-405e8748ebe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f444b49-593e-4d7a-8d17-204a1d8b4b38",
        "cursor": {
          "ref": "d970b8de-2c4b-480d-9ae7-8fecf5f2fb72",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc30f900-58b8-4254-9e79-f153e508ca81"
        },
        "item": {
          "id": "3f444b49-593e-4d7a-8d17-204a1d8b4b38",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "992735f7-af92-4c1c-8c59-33c191863fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6366a762-8823-4f06-a19d-70fb945b641d",
        "cursor": {
          "ref": "c073de68-017f-4668-abe9-020abc6e010e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f45dc52b-9de2-45d6-aca4-e2e3bb8149d1"
        },
        "item": {
          "id": "6366a762-8823-4f06-a19d-70fb945b641d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d3396a3e-4f2f-4659-8620-3d7a67cf738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b7185a-58c7-46ac-ac24-be73d93918d0",
        "cursor": {
          "ref": "3e1521fe-a943-42bb-87e3-61a5951450a4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7dc52e7b-7138-45ad-aa46-27ecab557632"
        },
        "item": {
          "id": "51b7185a-58c7-46ac-ac24-be73d93918d0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "00612d1a-4042-4e89-aa95-6eb48ce59814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad1ee06-3acd-4cf8-bd75-2e62e2576a97",
        "cursor": {
          "ref": "6802aaba-330e-4ef6-8fe4-3b7eb6ca86c4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "20729bd9-827f-4f47-bb70-20c3c50844f0"
        },
        "item": {
          "id": "dad1ee06-3acd-4cf8-bd75-2e62e2576a97",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "422cef59-df88-4ff7-a950-2b008d9a31fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4431ef38-69dc-4d80-b478-46020596664d",
        "cursor": {
          "ref": "f6aa3c57-e50e-46e2-9207-ea479ff2dff2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "24f5e3b8-9c47-49bb-9259-41a406a8921d"
        },
        "item": {
          "id": "4431ef38-69dc-4d80-b478-46020596664d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f26c1b4a-fd5d-466c-863c-b00c98c7e8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c2a0e3-6b5f-414c-b02c-658637a44b3b",
        "cursor": {
          "ref": "aab9717c-95ff-4026-a762-3c4bf8b707df",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8777f05e-e3e9-4bbb-904e-9a39d98cbc96"
        },
        "item": {
          "id": "77c2a0e3-6b5f-414c-b02c-658637a44b3b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fbff5ee4-ef55-4d39-a9a6-2e4fdaec179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4f55b4-7886-4358-95a2-448fe8527e98",
        "cursor": {
          "ref": "263b1ba4-a557-413b-9a88-6d7dd411b46e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ef5a9b7b-796a-4065-84ef-acb26e3e0ec2"
        },
        "item": {
          "id": "5c4f55b4-7886-4358-95a2-448fe8527e98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9ce375e2-b151-4edf-ae17-c992f0c53fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ac9efa-8934-4b97-aaee-dbcae427e667",
        "cursor": {
          "ref": "276d8959-dc41-4e2e-94c9-c1da7dd1e44c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "90d2cb76-def3-4f96-b626-9f3398226725"
        },
        "item": {
          "id": "79ac9efa-8934-4b97-aaee-dbcae427e667",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b5e8e78f-0084-483a-89d4-90ae6518b719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a14ec2-8867-4151-b248-b410401dd381",
        "cursor": {
          "ref": "e54d0c75-be06-441b-8153-49ef2c852161",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e91cbfba-50ed-4f44-9b42-9db1328732eb"
        },
        "item": {
          "id": "f5a14ec2-8867-4151-b248-b410401dd381",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ac23568-0a4c-4d35-8f66-4b0dfbe8b9fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753ba6d6-3c22-4a7e-b70a-f83c79b7f1ac",
        "cursor": {
          "ref": "3780cbcb-e9c1-4a97-ba82-6c21c51aa0fc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3eb1641-17f6-4134-ad6d-5403f0c477c8"
        },
        "item": {
          "id": "753ba6d6-3c22-4a7e-b70a-f83c79b7f1ac",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d5f467f4-5bb1-4c13-9fc4-46dde42c7c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77cb1af7-0947-4a16-9457-210d6ed9af9b",
        "cursor": {
          "ref": "b3783a96-86e9-4aeb-92f7-d14dfcc2b8fc",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7afac649-545b-4e40-b0aa-ed405791ed58"
        },
        "item": {
          "id": "77cb1af7-0947-4a16-9457-210d6ed9af9b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5325850c-a343-4075-8d7a-f52f731b556e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2813662d-8622-4eb8-8b6b-535418200d30",
        "cursor": {
          "ref": "6c0be39a-6873-498f-a79b-e092c6e99cc7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "174b463a-c633-46f8-9331-4cf1835b3426"
        },
        "item": {
          "id": "2813662d-8622-4eb8-8b6b-535418200d30",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0fe2cc4e-a4f3-4957-a878-afd8eadf023f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "265e70aa-efdc-473d-ac03-fbff76bd9a4f",
        "cursor": {
          "ref": "3cb16594-ed13-42ce-bd63-c3c5d4bd965d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "28d18b2d-f1d6-4e26-9279-9489efd593cf"
        },
        "item": {
          "id": "265e70aa-efdc-473d-ac03-fbff76bd9a4f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "351a8f34-3d2b-486d-bfe3-33133e2dfb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2a789715-db56-4e02-99ba-493234650c7a",
        "cursor": {
          "ref": "29c5a64a-c794-48df-a51e-517ef95240f0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "962fc60f-f5e2-4a89-912f-327fbf59d8d8"
        },
        "item": {
          "id": "2a789715-db56-4e02-99ba-493234650c7a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5bf34d68-de55-4532-91d4-97a3ead9d35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e9b7ae12-063d-4da0-9ca1-132b861b347e",
        "cursor": {
          "ref": "94850092-dceb-464c-acd3-2512b6cf325f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1da6acb8-184e-4994-857c-5ee5b36f7651"
        },
        "item": {
          "id": "e9b7ae12-063d-4da0-9ca1-132b861b347e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a8902150-d913-466e-a603-f64325fae01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "63b84c21-99c8-4500-b1a9-c5a3800f3f7b",
        "cursor": {
          "ref": "c3d6c0aa-1b18-4331-9fc5-3b9219bcc543",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3704220a-b4ca-41c3-8ab5-4a5759633e42"
        },
        "item": {
          "id": "63b84c21-99c8-4500-b1a9-c5a3800f3f7b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "720a5bda-699f-4295-8010-70b3dafed9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5b39d69e-71b8-4515-af3c-d618bef14aaf",
        "cursor": {
          "ref": "fd3a71b3-aed2-4402-9f91-105fcd8a1488",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "877be384-7c86-45b6-a5e5-880a382c1772"
        },
        "item": {
          "id": "5b39d69e-71b8-4515-af3c-d618bef14aaf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cb072092-2573-4776-b5e8-76093f76f2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc2dfdf-648f-479f-8412-d69c2ff8388e",
        "cursor": {
          "ref": "b3ed6afe-bdb4-40f9-971a-cb1fc1560cb7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fe92f051-8a44-4985-a48e-f25940ec5606"
        },
        "item": {
          "id": "1fc2dfdf-648f-479f-8412-d69c2ff8388e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8259e78c-7aab-4ba8-884d-84f819534ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f36292-3722-478e-9de6-9e5e14410e92",
        "cursor": {
          "ref": "a005efd8-d73b-479a-ad2f-5f8000e7bcad",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7fb8f2e7-cd3e-4cad-8452-92601558c8d4"
        },
        "item": {
          "id": "c2f36292-3722-478e-9de6-9e5e14410e92",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "62be0245-bcba-42b6-9df2-558043e16909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604d9d29-5841-4401-ab79-d9b357712920",
        "cursor": {
          "ref": "7b797440-82de-4555-b01f-c9aea1e9b048",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "562c25b3-d870-4f36-9db4-4062ce85ac10"
        },
        "item": {
          "id": "604d9d29-5841-4401-ab79-d9b357712920",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3664a8d8-cb39-4e26-aadf-b4461ca797e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0e8f6f-e19a-42ee-8f6f-4e9d0865b7ff",
        "cursor": {
          "ref": "9adff271-2365-490f-9f61-37a620a9b149",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "105d3cab-62e3-403a-aabd-bd1ef171b876"
        },
        "item": {
          "id": "2f0e8f6f-e19a-42ee-8f6f-4e9d0865b7ff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "80369fc1-3b46-4e54-9908-ef742babfa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4c7602-8ea4-49e2-a9e5-2d2f296af06c",
        "cursor": {
          "ref": "6bf61d55-caac-4853-9c86-cf94f5106399",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0bb1b7d3-1482-4a78-aeda-b52ef5d05b4b"
        },
        "item": {
          "id": "7b4c7602-8ea4-49e2-a9e5-2d2f296af06c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "609fa8d0-5af0-4f16-8038-d2f00890d5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74180b13-cbac-4430-8564-ca0b1b2b209c",
        "cursor": {
          "ref": "13161622-83e9-4f41-a940-081ad40e400f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a6d1bcdf-4d75-4bff-8896-94eb9b9fa7f9"
        },
        "item": {
          "id": "74180b13-cbac-4430-8564-ca0b1b2b209c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "66e52db9-24b8-4ee8-8c78-4cdc9fdc9bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee56ad1-8d33-49af-b8a0-a18b8c904074",
        "cursor": {
          "ref": "add34f60-8c41-41be-a613-3af67acf8871",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a418d247-050e-48e8-8558-d9bea32443e5"
        },
        "item": {
          "id": "dee56ad1-8d33-49af-b8a0-a18b8c904074",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d65d8e82-112b-4193-858d-921a2edb38ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2de2840-262b-42f6-8cc3-519e684eaefb",
        "cursor": {
          "ref": "88bd1be2-33f2-453f-b7ca-9fb4e02b1286",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "96d12e69-52c1-4c37-9b70-f6302e679dc8"
        },
        "item": {
          "id": "d2de2840-262b-42f6-8cc3-519e684eaefb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59aab7b8-7539-4431-9f70-08b0f8f2ae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3df156-99c9-4667-9d01-98fd18b10b8b",
        "cursor": {
          "ref": "29aebb2c-205f-4c0b-8ba1-1d35ea6c1140",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5ae4dbbf-a5b2-4aa1-a98b-42aa621d84e2"
        },
        "item": {
          "id": "7e3df156-99c9-4667-9d01-98fd18b10b8b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "668618ad-43cb-4937-9a5f-4332c9b7f89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294e9525-3ce5-4cd3-b625-0495787c578a",
        "cursor": {
          "ref": "db7c36b2-a5e0-4f32-8393-1d40b0d2724b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f06b3d82-cbd9-4b69-9e99-7b9b9c0eac21"
        },
        "item": {
          "id": "294e9525-3ce5-4cd3-b625-0495787c578a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cd8da679-8a0c-41e3-95e5-33f5725d144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77228c28-b953-4be8-831b-3b54ab5728b6",
        "cursor": {
          "ref": "89bd4a80-f0d3-41fb-a577-e2cefc8f5a21",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "efddc387-ec43-4425-afa4-39ea7f1b44c0"
        },
        "item": {
          "id": "77228c28-b953-4be8-831b-3b54ab5728b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33989d90-a235-41a9-8b7a-19ba92b29b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4386f8fd-ea61-4ada-a490-6d649306745b",
        "cursor": {
          "ref": "c469fceb-207a-47f5-950c-0a87b229b9f0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "01f5a8b8-22db-41a5-b642-86abd00e8d91"
        },
        "item": {
          "id": "4386f8fd-ea61-4ada-a490-6d649306745b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "66fee2c5-ab8d-4a2f-9a79-3706e8f44f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175eb8ca-1b6f-4198-bd75-7dc1e093baac",
        "cursor": {
          "ref": "6af39fd8-918c-4598-8b18-514a8ed9e783",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5fc94bdc-b938-4fde-b201-c6a9d3a8ffa2"
        },
        "item": {
          "id": "175eb8ca-1b6f-4198-bd75-7dc1e093baac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "351bb2e6-1949-42e9-baaa-78c4edfb35a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66841dc1-ecaf-4827-ae3c-3631d24bf12a",
        "cursor": {
          "ref": "634547e1-35b2-48aa-a6f2-cd631d3f99b0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b8fad75f-dcd5-447e-8b88-a22df19aee97"
        },
        "item": {
          "id": "66841dc1-ecaf-4827-ae3c-3631d24bf12a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fe419161-c2c1-40b8-b16e-0585ae9e5ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69e22d0-ef3a-4ec0-b7b6-fbb451bc098b",
        "cursor": {
          "ref": "0842327e-f335-45d5-9bce-1cdf0f9b0060",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bc74a620-27de-4e08-9468-61d706d80483"
        },
        "item": {
          "id": "c69e22d0-ef3a-4ec0-b7b6-fbb451bc098b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fe0a9a02-15b4-449d-81ed-2be74ada2b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4caa5ab-9a92-4357-a668-0f927c9e61ed",
        "cursor": {
          "ref": "b186497c-e367-41fa-b77e-611704dc37b4",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f7da28d1-389c-4981-85af-408215b9693a"
        },
        "item": {
          "id": "f4caa5ab-9a92-4357-a668-0f927c9e61ed",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5db94891-0e0c-4e2d-932a-c1c66f1400f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da53ac5c-eabf-4d68-a16f-a9136b110e3d",
        "cursor": {
          "ref": "2520cc65-f358-4520-a3a9-c91d8db52b2c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "07f130e7-98a5-4299-af26-551d1800f7e4"
        },
        "item": {
          "id": "da53ac5c-eabf-4d68-a16f-a9136b110e3d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2912499e-0bad-4d5b-afd0-ae2eba516e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5298a740-454f-4e58-a314-c890bf808012",
        "cursor": {
          "ref": "c929e13d-df5e-4b7f-b19a-adb429a259fb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "913f9dd2-ba1c-48b9-ab98-b0a034ddbe11"
        },
        "item": {
          "id": "5298a740-454f-4e58-a314-c890bf808012",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "202ad9bb-6e09-4ecf-83da-29b32a23fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d14556-d4b3-4307-b08d-bcfc85e53f71",
        "cursor": {
          "ref": "76fbd1ca-a4a5-46bc-9023-6bd5e36d3fff",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "201b710c-97f8-476b-a4af-b46f00e18607"
        },
        "item": {
          "id": "d7d14556-d4b3-4307-b08d-bcfc85e53f71",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c3b72802-28ef-46f6-b396-30daf4d394c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984aff53-b5fd-4f01-811c-76e62cdfb66e",
        "cursor": {
          "ref": "d035609d-6e5a-4d5f-805c-b957aca1ae57",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aa22218e-2944-4869-8434-9cc304a063c3"
        },
        "item": {
          "id": "984aff53-b5fd-4f01-811c-76e62cdfb66e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e219f365-8ffb-459d-945e-53d750008882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6b0372-7e6f-472d-b4a1-eea98e93d6d7",
        "cursor": {
          "ref": "dfd54177-2092-4db4-9c75-79975b059216",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fb1f2c82-9f13-449f-808e-334ddb07df72"
        },
        "item": {
          "id": "0d6b0372-7e6f-472d-b4a1-eea98e93d6d7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81329cbc-7c1c-4d92-9f28-da6480dedfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56343bc-3391-4471-b323-bf2cafe32b9d",
        "cursor": {
          "ref": "c4773153-268b-4495-a92f-6b23e19b4305",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5046d244-d97b-4e1c-ba54-ff3a57312b8e"
        },
        "item": {
          "id": "e56343bc-3391-4471-b323-bf2cafe32b9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8c43f02-27ac-46c6-b0ae-64434999fbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d391542-515f-4e13-9e5f-979fefd5e622",
        "cursor": {
          "ref": "03780f0c-1d1e-40b3-ae13-7b938ea41294",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5450301d-9171-4161-b262-62d554d8f5bf"
        },
        "item": {
          "id": "9d391542-515f-4e13-9e5f-979fefd5e622",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8bf07341-c687-4466-9185-66f6b5652a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a5a88b-e4b3-4e60-a931-b4e2775fc411",
        "cursor": {
          "ref": "22586691-a675-461c-9140-2dd1fc85748f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fff66ab3-d536-42b0-b6bd-c66436eca80a"
        },
        "item": {
          "id": "71a5a88b-e4b3-4e60-a931-b4e2775fc411",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0fdb3a34-9a79-4358-8fae-9eb075add33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fa54bb-310f-46e0-aa28-eae0a8f74d1e",
        "cursor": {
          "ref": "1d996a64-ce56-42ab-b1d0-996fa87f5f30",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c20dbe2f-e4ec-4559-9b7e-def86bd89e93"
        },
        "item": {
          "id": "25fa54bb-310f-46e0-aa28-eae0a8f74d1e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71dfcd54-8257-4e87-a3e6-08275e6d6e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa6e8dd-a10f-4b3d-8569-1db6a79ecbaf",
        "cursor": {
          "ref": "7f3e8d00-5b40-44a6-ba3a-fc5797c454ab",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "56889fcf-d5fe-453c-a8aa-3954172c82e0"
        },
        "item": {
          "id": "1fa6e8dd-a10f-4b3d-8569-1db6a79ecbaf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cf26be72-41a6-45ab-ae27-117b27b3d2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b31412-11f5-4149-b577-d4194540abfa",
        "cursor": {
          "ref": "6e116a3c-13e7-436b-a54e-12468bf37234",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "63af117e-1db9-4d7f-a86b-032b25c3d13e"
        },
        "item": {
          "id": "47b31412-11f5-4149-b577-d4194540abfa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f10cb422-bce0-47d8-89d8-b870c247f7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0da8b4-eef3-46e7-9e93-437cfea97e83",
        "cursor": {
          "ref": "0d9e1025-f977-4949-828f-df7d741403e6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04df639e-8d68-47f7-83f0-f7fc7d4746bb"
        },
        "item": {
          "id": "7b0da8b4-eef3-46e7-9e93-437cfea97e83",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "25512637-4882-4cc2-8348-00ca1b76ecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521995c8-73a9-4db3-955d-b359ffe966d0",
        "cursor": {
          "ref": "6158b0d3-448a-4059-a69d-5b4b1d418aab",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0b966829-2608-4773-b5b4-6256ecde47ed"
        },
        "item": {
          "id": "521995c8-73a9-4db3-955d-b359ffe966d0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7028787a-7b04-4f09-8041-b16cab590264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bfa42e-1f58-4de4-9454-cb69847804f6",
        "cursor": {
          "ref": "3d224f54-617e-42e9-a74c-b6e739dadc95",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "613ec86d-3d84-4a33-a3f0-f89bd175c72b"
        },
        "item": {
          "id": "29bfa42e-1f58-4de4-9454-cb69847804f6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9869f74d-1fee-44e9-b0ad-47385436d16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756b67ec-182d-488e-ace6-7437607e3e48",
        "cursor": {
          "ref": "fcfc3eda-5e6c-444b-8666-35183657c1ef",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "18479a19-bf52-40c2-9d2d-988c661b4150"
        },
        "item": {
          "id": "756b67ec-182d-488e-ace6-7437607e3e48",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a5b62d46-5e9d-4cc2-ac1a-f7688f79d5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b330e9-f318-4d60-8c6c-4efdbdf60001",
        "cursor": {
          "ref": "8ff6cd2f-094b-4635-9f50-d7ebdbce3b8b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e91ebfcf-0e95-445f-bedc-bd77ee25f05c"
        },
        "item": {
          "id": "08b330e9-f318-4d60-8c6c-4efdbdf60001",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "248cb321-7d31-4f20-a8a2-d62a91e91809",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c1322f-8783-4afc-9cb0-690d7d8d2531",
        "cursor": {
          "ref": "d46e0a97-5af0-4e8d-8709-acb222b886c9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d5d1b159-71e9-407f-888e-2584da9690f2"
        },
        "item": {
          "id": "69c1322f-8783-4afc-9cb0-690d7d8d2531",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0365129f-a1ac-4167-aedb-5aa604af803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641195bb-a28e-47b3-b737-151dcaa407e3",
        "cursor": {
          "ref": "08ddb6da-59ca-4a25-8037-71c0d11abab9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b5ba3133-e7f7-4600-b814-6bf95904bae2"
        },
        "item": {
          "id": "641195bb-a28e-47b3-b737-151dcaa407e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ab4f0165-05f5-4042-80b4-4591c235d92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a564eb4-951f-4c73-9aa7-a3f386618787",
        "cursor": {
          "ref": "816047fb-0088-45f2-8c6d-6f9775008d6f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4256825-b023-414b-bc11-2936785b9541"
        },
        "item": {
          "id": "9a564eb4-951f-4c73-9aa7-a3f386618787",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ba98e397-e44b-4ec5-b831-96224e2d37b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cc2042-2928-4429-849b-9e5a687b6aac",
        "cursor": {
          "ref": "3b0e8cf0-75d0-4798-b678-dff7fe3b76ac",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "611bb8e8-dbd8-48ea-b3a6-4ebae72b6c9c"
        },
        "item": {
          "id": "b9cc2042-2928-4429-849b-9e5a687b6aac",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b4851ea3-51bb-4d54-93e5-67a24cbf5f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af228c5-3c9d-4f59-bfd9-e3253efb922c",
        "cursor": {
          "ref": "3b004f8f-60be-4286-8270-7f687c530db4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a1969f0e-5119-4ef1-a6a9-e9731e50c8b1"
        },
        "item": {
          "id": "6af228c5-3c9d-4f59-bfd9-e3253efb922c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22ef4b5e-7e83-46e3-aa5c-81799a70ba80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebbc66a-889a-4b3c-9caa-c8dda33b4a72",
        "cursor": {
          "ref": "10dca3da-212b-4598-aded-b9518eea26ae",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "332bf3de-0bc7-4f11-b488-59a24c228969"
        },
        "item": {
          "id": "cebbc66a-889a-4b3c-9caa-c8dda33b4a72",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "767e647a-dcb0-41cf-af9d-63212c690a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aedcff1-6955-412e-9f17-5e4c7590524b",
        "cursor": {
          "ref": "919796b5-8148-4222-85d3-1b4c7cc24447",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3a9df69e-60b3-4050-9d86-0937d840f1ce"
        },
        "item": {
          "id": "3aedcff1-6955-412e-9f17-5e4c7590524b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "50e06bc4-702c-4363-8780-55ae8f075b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c17fc0a-f5ac-4d35-9603-42b79126356f",
        "cursor": {
          "ref": "46b0b90a-7903-4ed3-9529-f37d8b2312f3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f04dcdf8-e6e1-4158-99a0-06126fd01d6b"
        },
        "item": {
          "id": "0c17fc0a-f5ac-4d35-9603-42b79126356f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ee367e9f-ccad-4a88-aa34-5881bdff09e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa984ac-a390-4161-8f9e-b5fb16ad7e01",
        "cursor": {
          "ref": "dc4dbaab-2256-4cb8-a52f-b4e7c9fec409",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c2c31054-444d-41c0-95a1-7a61369f33dd"
        },
        "item": {
          "id": "8fa984ac-a390-4161-8f9e-b5fb16ad7e01",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f054666-3661-447e-b1e8-ae16da6bf7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e71a1f-f8d6-45ba-a215-e5441c455d5f",
        "cursor": {
          "ref": "1f96a67f-09f6-4020-862f-074a5c085ff0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8f893a61-fe2d-492f-b670-3db9d3ab665f"
        },
        "item": {
          "id": "b1e71a1f-f8d6-45ba-a215-e5441c455d5f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "015234ae-4bf7-4d08-956b-95c46b9ef365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1d622c-ce68-4a6c-a4f8-b8f533b8d4d5",
        "cursor": {
          "ref": "dba87015-7e44-4901-8c4f-0dc13928cea2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3588bbaa-faff-427f-ae72-e21c9e0c67bf"
        },
        "item": {
          "id": "bd1d622c-ce68-4a6c-a4f8-b8f533b8d4d5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b0c851d-557b-43c1-8055-64e6dff4c54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b7d61d-fc55-405e-b2b0-7551ccf4beab",
        "cursor": {
          "ref": "699a1020-8313-40e8-82be-3ce5e702a611",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "19eb8c9a-1f7d-4a2c-a596-6440afcad4b3"
        },
        "item": {
          "id": "d1b7d61d-fc55-405e-b2b0-7551ccf4beab",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4757827-d0f8-4b51-83a4-231e53e5cb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9c1f77-cb11-4449-8e2b-b980aaa7d4f7",
        "cursor": {
          "ref": "625753fc-4706-43bd-9593-89adcce9b4d2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1b2a3420-3c6c-40fc-ad9b-3463644fcaf1"
        },
        "item": {
          "id": "5e9c1f77-cb11-4449-8e2b-b980aaa7d4f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b44b2eeb-903f-4418-b107-daf5a55c833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fad7570-70d4-4e21-bfd4-cfb0485680b4",
        "cursor": {
          "ref": "80751299-f496-46c3-ac44-35a777a27b74",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3561cd5b-fe23-42f2-9783-678a3928d7c6"
        },
        "item": {
          "id": "5fad7570-70d4-4e21-bfd4-cfb0485680b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a8d78309-a5df-45da-b01d-b40f5a17d8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e9d802-45a8-4c9c-b976-bd5a4593389b",
        "cursor": {
          "ref": "6411eac6-5fc0-4636-9860-a033fd5835b6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bbac7699-172a-4de7-b951-34833c441e70"
        },
        "item": {
          "id": "e3e9d802-45a8-4c9c-b976-bd5a4593389b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc4912f4-8add-4c93-b50e-233c4785299d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fca401-1fed-4441-91bf-75f0ce217811",
        "cursor": {
          "ref": "f039c19f-26f7-49ac-b33a-3c83f34fa4fc",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9afff5b8-0307-4b7e-8c5e-ad81ff970f5c"
        },
        "item": {
          "id": "24fca401-1fed-4441-91bf-75f0ce217811",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7eca60a-8c8a-48f7-88f3-4bdbb4b9afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621dee4-da7f-406b-9344-454395942a5b",
        "cursor": {
          "ref": "816feccd-bc75-4cea-be40-6b900b73863d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "412b3b4a-b1b8-42a1-9d60-5de2c485ff6b"
        },
        "item": {
          "id": "f621dee4-da7f-406b-9344-454395942a5b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fdacea56-09f0-4916-8eff-08f8ac312b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc1f5ac-3517-441a-a873-297bcb57765f",
        "cursor": {
          "ref": "d6b99ead-1d52-4f5c-a12a-22ded1777112",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c535471c-fcd3-460f-b56b-a62511e1c0af"
        },
        "item": {
          "id": "7cc1f5ac-3517-441a-a873-297bcb57765f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c78918b7-0167-462c-ad2c-054d9e6dd85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989c6750-3fe8-4f3f-9d06-9ea6013d8871",
        "cursor": {
          "ref": "a475f017-bac9-4af3-9e2d-db48f42f2dca",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7207b153-058f-4d34-99ea-ee9c2d08e45b"
        },
        "item": {
          "id": "989c6750-3fe8-4f3f-9d06-9ea6013d8871",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a490d925-2ee4-4a6a-a8c6-8d06a27293ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d80b2-c3c9-4f26-8435-07c1cc227278",
        "cursor": {
          "ref": "f42691bd-a1e0-4c9d-9736-b0502054c141",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "af91c67c-2cd2-4a87-9b41-6482023fddc3"
        },
        "item": {
          "id": "ee7d80b2-c3c9-4f26-8435-07c1cc227278",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a6c7bea-ecf7-4df0-89bb-db04a016352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481df97e-2d91-4ba8-85c5-9c3758b0e29b",
        "cursor": {
          "ref": "1f835f10-fffa-4c06-973a-58aeb7f4736e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "69b99d0c-5cd0-4174-932c-c298e266d18b"
        },
        "item": {
          "id": "481df97e-2d91-4ba8-85c5-9c3758b0e29b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e0cd4cbb-9f30-4daf-b85b-d527e3c349b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bb5eb4-bda8-4f4e-a6ad-cb1b03f20b5f",
        "cursor": {
          "ref": "602e94e4-2df7-4e89-aabd-cb5a1f9cbbdc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "59a426e7-af2d-4db1-9f70-2ef92f13a9ab"
        },
        "item": {
          "id": "c7bb5eb4-bda8-4f4e-a6ad-cb1b03f20b5f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "20460f5d-0b44-4c2a-a245-5004a944e2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2538c6e0-49e2-401c-b481-454ba28ebb7a",
        "cursor": {
          "ref": "dff63753-0188-48db-9752-624a10c275a5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0d453b54-3383-4eb2-8e73-1ef05bef223a"
        },
        "item": {
          "id": "2538c6e0-49e2-401c-b481-454ba28ebb7a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a858534-aa5a-4af5-aafd-7dc62a2546a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05596558-6267-4fe0-9bca-74adfa5d9213",
        "cursor": {
          "ref": "944f8f9f-3d17-467e-bf71-94192057eee6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ea75c340-faab-4ccc-a137-26bd00b6cc48"
        },
        "item": {
          "id": "05596558-6267-4fe0-9bca-74adfa5d9213",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e2bf0af4-9606-4d18-8fd1-35d1aa6f51e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ab8a8f-80e8-41a2-89ff-71d55342b388",
        "cursor": {
          "ref": "bc3d0e7f-ab99-4763-b50d-9fd9a870b3c2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7746018a-76b5-4304-84e4-4d55495049ac"
        },
        "item": {
          "id": "f7ab8a8f-80e8-41a2-89ff-71d55342b388",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8cfd1d44-ac5f-4444-b88a-66e0fe40be31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dfacbd-ef05-4b5d-8c95-dffd2eaf0729",
        "cursor": {
          "ref": "981431e6-2849-4537-9e24-3f23d72657d1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "17beb013-c21c-470e-8a06-b78d8d1e0878"
        },
        "item": {
          "id": "46dfacbd-ef05-4b5d-8c95-dffd2eaf0729",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b47b8c0f-a8b5-412e-a4c2-c05ece046290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9897607e-d351-4868-8a03-d0411dc02385",
        "cursor": {
          "ref": "f8faaf25-2c62-4b84-bfb9-4ab6d6d92b5d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f6878d13-9b90-4fe2-9b2c-e5fd8275ab58"
        },
        "item": {
          "id": "9897607e-d351-4868-8a03-d0411dc02385",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0c2deaa3-110c-4530-8a32-22a8093097a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea79f074-5151-4285-8889-96cc62cbe807",
        "cursor": {
          "ref": "3286bd64-0260-4884-917a-3218aae7b11b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a610e7b1-3958-4e6e-b487-e8c5d8e607dc"
        },
        "item": {
          "id": "ea79f074-5151-4285-8889-96cc62cbe807",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a1cdbfe4-eef6-41a7-a88e-cf7c7441cf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26110c68-e95c-4088-b794-712606326e7d",
        "cursor": {
          "ref": "8bf1e6fc-077e-40ce-8d16-ad04ac2615ac",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d36897fa-3b1d-4b80-913e-184e29650f7c"
        },
        "item": {
          "id": "26110c68-e95c-4088-b794-712606326e7d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2884a763-6999-44f8-88a1-bbf244ab673f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d985be3-f40e-48e6-9509-9bcbae1e5692",
        "cursor": {
          "ref": "48006969-423f-4175-a61b-da359bf6e23e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e3abbcd8-de20-4f98-8462-1336472e52b1"
        },
        "item": {
          "id": "8d985be3-f40e-48e6-9509-9bcbae1e5692",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ea5d1034-b1a3-47d4-881e-fc742c77132d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38120c65-5d75-4296-921d-603078e13b4a",
        "cursor": {
          "ref": "c5ee3a5c-6109-4d5a-9086-21e472a9866c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "174c03bb-e890-4398-9f49-e517d9c755b9"
        },
        "item": {
          "id": "38120c65-5d75-4296-921d-603078e13b4a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "09c7365d-767e-465f-a2ad-b7de8e31d6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321e6fc5-6a64-4fff-a386-296126aaf71f",
        "cursor": {
          "ref": "ab361f0f-acdd-4be7-ac31-add5b5e7de21",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7c2bde9b-f23b-4806-b2c0-7806c1ddcee3"
        },
        "item": {
          "id": "321e6fc5-6a64-4fff-a386-296126aaf71f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2cc182cb-27c3-4007-80c5-4a97542ff5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0315741d-1243-46cb-aa1f-9c1b72e32827",
        "cursor": {
          "ref": "e3fef26c-eee9-41f9-b79d-d115728587b8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d998122f-a8c9-4bfa-875d-d0df73bc39a1"
        },
        "item": {
          "id": "0315741d-1243-46cb-aa1f-9c1b72e32827",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b4681f4b-3d64-4fec-803b-224554c10e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191f8365-3c2e-4306-a040-5c9948f3949f",
        "cursor": {
          "ref": "b9931b56-7fcc-4206-b0ad-473c39dbadd1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1d8b263b-e003-4216-b182-f4c0e4af5206"
        },
        "item": {
          "id": "191f8365-3c2e-4306-a040-5c9948f3949f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e6a5c5e8-7139-4f53-ba00-c2f9315e546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b3f3ac-6c2a-417c-9163-5168828def3a",
        "cursor": {
          "ref": "98187776-b08c-4154-956a-6889a997933e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "be2c2814-3ade-4e49-800b-751e0b5fdc06"
        },
        "item": {
          "id": "86b3f3ac-6c2a-417c-9163-5168828def3a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b3529cb-69eb-4700-ab47-a735902ae8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713856c8-df0c-4e99-8d8d-34077330d3c0",
        "cursor": {
          "ref": "0c0eff16-ad81-4360-9122-08c0fd0e6171",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0f824965-0f1a-47c5-82ab-f37ccb3c3c87"
        },
        "item": {
          "id": "713856c8-df0c-4e99-8d8d-34077330d3c0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c119e06c-b06e-483f-b50f-dc25f6a5adfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a2f370-593c-4af2-96aa-2aa5338d57b5",
        "cursor": {
          "ref": "dd9885c1-09d8-464e-8cb9-d62700be4e50",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b318c75a-06d8-41ae-af55-522e6565c3c1"
        },
        "item": {
          "id": "95a2f370-593c-4af2-96aa-2aa5338d57b5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "985ff9d0-814d-46b5-a63e-559725565c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c4a84b-2239-4ac1-ae11-8c5c3d9111a3",
        "cursor": {
          "ref": "db509dfa-010e-462f-a6a1-a6832d0dc7ea",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1d63395d-7084-434e-bcf1-7a18713a3795"
        },
        "item": {
          "id": "b9c4a84b-2239-4ac1-ae11-8c5c3d9111a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "833164af-682c-4f51-b6e1-0572781b9669",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4366a3-db65-4266-89d0-177cd686e451",
        "cursor": {
          "ref": "390977e5-8198-41de-b8d6-f6bf4e541bd8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d9b0131-f09b-4f4a-87c4-6a95a6000933"
        },
        "item": {
          "id": "7f4366a3-db65-4266-89d0-177cd686e451",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdd13c77-74df-4ffd-b802-76d718332e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e83186-93fb-4f92-a266-d5a3d048a9f1",
        "cursor": {
          "ref": "0b6edb99-1601-4732-bf99-18e6f52b8862",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e4bde68b-e5d1-4ace-9d4b-79b9b6cb6f7f"
        },
        "item": {
          "id": "11e83186-93fb-4f92-a266-d5a3d048a9f1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "06978cc7-87cf-46ba-b060-644ba47578fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20ec491-e112-4748-a799-cfefb80c6e1e",
        "cursor": {
          "ref": "00f29334-c556-4f59-ad46-6a5cefea7342",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ee4222ef-bea2-4a66-b1a0-c7472c74d60f"
        },
        "item": {
          "id": "f20ec491-e112-4748-a799-cfefb80c6e1e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b0adf823-6b54-4762-80ae-51be8fb4aa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c50f26-af2f-492c-a945-db7aa97df114",
        "cursor": {
          "ref": "fba50484-c0b5-4888-9d03-a3eb4a726bbc",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8072c149-5a87-4ca1-a65f-be34ca61d2a5"
        },
        "item": {
          "id": "f2c50f26-af2f-492c-a945-db7aa97df114",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e82576da-5abd-4a8d-b3ec-7f9d8ee42c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f6a4fc-5c7e-4dbe-aa63-bbe6b916a0c7",
        "cursor": {
          "ref": "fc897ab4-8529-44ac-916d-f90900345d5c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "06fd9d39-7d3a-4a56-812d-ef0a3e2bf416"
        },
        "item": {
          "id": "d9f6a4fc-5c7e-4dbe-aa63-bbe6b916a0c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "337e8bd2-e7ce-42a9-ba99-8dab66d5711d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fcb9ee-fd6c-45cb-8cfd-f20aababa172",
        "cursor": {
          "ref": "490de707-2c00-4a93-b761-f5060cac518e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "28a7f3f8-a193-4721-bdd5-13a115f15fea"
        },
        "item": {
          "id": "a6fcb9ee-fd6c-45cb-8cfd-f20aababa172",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5a757626-8b5a-4626-bcd2-9477fdf8ad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74402797-5e5b-485d-aed2-731a400062be",
        "cursor": {
          "ref": "7ca96993-033e-430e-9302-b44226b8a88a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3f2ef2c2-9c27-459e-959c-73b6f98d2fc2"
        },
        "item": {
          "id": "74402797-5e5b-485d-aed2-731a400062be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "40410226-7ebe-4409-80a9-466784b40d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1583394e-a86d-48e0-92ef-3542a3b4c3b6",
        "cursor": {
          "ref": "9f35900b-7a18-43a3-956e-9619ddeb7ce6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "500fc0e5-46bc-498f-9d7d-818796643f64"
        },
        "item": {
          "id": "1583394e-a86d-48e0-92ef-3542a3b4c3b6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "47a50cd4-0c82-4ba8-899e-25052c0552e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be7d1f2-a56f-4a07-92dc-566b9e7f1341",
        "cursor": {
          "ref": "097a1666-c206-4811-8750-27f294ac710d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3de310f6-246d-4ef6-a585-21017f02370f"
        },
        "item": {
          "id": "7be7d1f2-a56f-4a07-92dc-566b9e7f1341",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e739c7e6-ee91-4540-a2c0-331cde72512d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4436af6e-8cfc-40ba-af12-c7359b537b8d",
        "cursor": {
          "ref": "3cf94ce6-e86b-41c6-b6ee-d3fce1b48d4a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6f249ceb-d9c4-45b9-8263-8c0109acc6d6"
        },
        "item": {
          "id": "4436af6e-8cfc-40ba-af12-c7359b537b8d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "93e45a46-c610-42a9-bf88-85a27ca22316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b207e7-9380-470e-8474-ff60904ca485",
        "cursor": {
          "ref": "433ee94d-967e-4afc-b7dd-90efa68527b7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce58c15f-9ddc-4fc4-a085-324bd42cfa82"
        },
        "item": {
          "id": "54b207e7-9380-470e-8474-ff60904ca485",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e7f39eb8-c49d-466b-9a64-9bccf300be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7abafa-5dda-4049-b55d-57b965808e4b",
        "cursor": {
          "ref": "ef2225dc-0191-452b-adb7-c7fa8ee94503",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "238a5124-ff7a-420d-938d-5930d3e78cc8"
        },
        "item": {
          "id": "de7abafa-5dda-4049-b55d-57b965808e4b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4ad15e2-32a9-4db3-ad75-604611cb03a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04913a2-ad19-44bb-8965-7e1c599ca69e",
        "cursor": {
          "ref": "42e501c4-3757-4028-8913-68ce7e2c094f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "40e2a3d9-e2b4-40ae-89b4-5e3f06625d4e"
        },
        "item": {
          "id": "a04913a2-ad19-44bb-8965-7e1c599ca69e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d8788ce8-a27f-471e-aa75-fe2edb9610c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b2bc3e-88d3-449b-bc60-4a1b56fe728e",
        "cursor": {
          "ref": "4b4f4ae2-a27e-40cb-91d5-5f385b940b72",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f3406f6b-83d2-48cb-abbf-d7681543e8f7"
        },
        "item": {
          "id": "f7b2bc3e-88d3-449b-bc60-4a1b56fe728e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f3f386b9-26f7-4b04-8e8c-b36779464832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fa6d88-0690-4990-b126-58c9f3eac4c1",
        "cursor": {
          "ref": "a7a43fdf-4216-42d6-acb4-0a7c3d5b0f42",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c95327ae-2a1d-44ac-9d51-1c8d56fddea2"
        },
        "item": {
          "id": "24fa6d88-0690-4990-b126-58c9f3eac4c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8cb10e1e-29e7-4c86-b2ed-6c9ad9fb83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6ecbc3-cc22-454f-9572-8805a4456e26",
        "cursor": {
          "ref": "2f25bffb-6168-4e9e-9cca-118a1584177a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "88afd324-b9aa-41fd-a56c-242c5a401bed"
        },
        "item": {
          "id": "5c6ecbc3-cc22-454f-9572-8805a4456e26",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "47bf7806-6403-4270-b406-f4b552c11ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f016f564-5c53-4891-8172-e2733b58ef40",
        "cursor": {
          "ref": "eb6c5383-7733-4d96-a13b-ad43dc673d8e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "146e4613-430c-435b-9527-6b7adca12f16"
        },
        "item": {
          "id": "f016f564-5c53-4891-8172-e2733b58ef40",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7c92e4de-4296-445c-b997-8b6a49e1588d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2306570-fb2c-466c-99cc-4bdbef61241a",
        "cursor": {
          "ref": "13520d76-9beb-4384-910e-b74fbdb500b1",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "228b8d44-ac65-4da3-808b-a78a496bf9bc"
        },
        "item": {
          "id": "a2306570-fb2c-466c-99cc-4bdbef61241a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "924d9bb5-2baf-4552-a3ac-f4e543fefcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecb5acd-2125-48c7-a33a-773a6cb15bbd",
        "cursor": {
          "ref": "a25becb6-73e7-4be6-a9d5-5eab6b6933b9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "56a83632-0809-478f-80e6-4e804eed4ee5"
        },
        "item": {
          "id": "eecb5acd-2125-48c7-a33a-773a6cb15bbd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3c337032-9210-4622-8b54-b92e9a8f14cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede5d311-49ca-45fb-ac14-a2f95e73b137",
        "cursor": {
          "ref": "105d40b9-012a-4f6a-b822-913121385929",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3e04c821-0b8e-4aa8-b1a5-9fd414bf9c62"
        },
        "item": {
          "id": "ede5d311-49ca-45fb-ac14-a2f95e73b137",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "84e37f79-cf99-4700-9e77-f5ab9244950e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151f6d75-8c96-459f-94e6-f8d993041025",
        "cursor": {
          "ref": "cf58d715-948e-4b0e-b0d1-65a9d76097ad",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "24c9bd8e-b297-44e7-8705-31e83cdab84e"
        },
        "item": {
          "id": "151f6d75-8c96-459f-94e6-f8d993041025",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4884f535-6cc8-4458-9d36-2433471c35cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ccd03a-af10-4884-9100-014e973a12e1",
        "cursor": {
          "ref": "04445940-39f9-480d-8866-87e62d82e40a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3822ac08-7e81-46ae-871f-d2ce3b7c70c1"
        },
        "item": {
          "id": "f6ccd03a-af10-4884-9100-014e973a12e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "05149e25-080e-44cb-a89f-ea3ad0f7fbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4071e538-ccc1-4a5d-b46c-dddb3a0527e6",
        "cursor": {
          "ref": "8f78905a-8c2c-4bec-a138-670ddfb25bdb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "29276f36-ebf5-4b30-aeec-6c9c32215179"
        },
        "item": {
          "id": "4071e538-ccc1-4a5d-b46c-dddb3a0527e6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cdf44f1c-b8e5-4eec-ad02-44e40ca57acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c777bfef-fc28-442e-af3c-9b116be86061",
        "cursor": {
          "ref": "c7b7795a-615a-4185-a16f-2be47d845d66",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1084eac6-edfa-44a7-a67c-643753473db0"
        },
        "item": {
          "id": "c777bfef-fc28-442e-af3c-9b116be86061",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0b85ba99-b2d9-40e0-86c1-287b67aa2b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd77666d-bbb3-4461-80a6-68af647d5423",
        "cursor": {
          "ref": "32d13cd7-9ba8-4890-bd6a-df96209c3a82",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bc9cc1a7-d227-4f77-b43f-28fdf96f7b00"
        },
        "item": {
          "id": "cd77666d-bbb3-4461-80a6-68af647d5423",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b91b8752-0901-4d64-8ec5-5ceef036220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a100158-f1f7-4419-95e2-09aa9a942e68",
        "cursor": {
          "ref": "afb7c516-170c-4183-9899-bf66c7c3e85e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb7f1867-1d73-419a-9eff-6db414923eff"
        },
        "item": {
          "id": "5a100158-f1f7-4419-95e2-09aa9a942e68",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "26a13f94-c4a1-4046-a0f7-fdb08f4edd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a941e6-49ea-4f94-aefc-f1267e7d284e",
        "cursor": {
          "ref": "44276bb0-d85e-4e5b-b49a-ca6dfe32bffd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "06f9c919-4fd2-40e6-8e92-a84b1f60c77f"
        },
        "item": {
          "id": "25a941e6-49ea-4f94-aefc-f1267e7d284e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b89d1d3-9510-452c-a439-8f78e71167d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faede31-edac-4b4d-acbc-58085a1fd7f6",
        "cursor": {
          "ref": "3037f9fb-c33c-4bef-9fff-55b2d51f8ab9",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "84aec828-576b-4ad0-bae4-4f643177cff8"
        },
        "item": {
          "id": "2faede31-edac-4b4d-acbc-58085a1fd7f6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ec121187-48bf-482a-ab98-55eea86d1533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80d5962-6947-4e5c-81e1-e76025bd552f",
        "cursor": {
          "ref": "94bb8151-cfad-41f5-a6d8-f82f2349e776",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ab49bf32-fad1-4d69-8fc5-c69ca532e001"
        },
        "item": {
          "id": "a80d5962-6947-4e5c-81e1-e76025bd552f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9539b14d-29c1-49aa-8ef1-ff2062f3ae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7895dd4-8cbe-4846-9a2f-de6b571374b3",
        "cursor": {
          "ref": "f6a6f499-c274-4f4b-8d7a-d37bb2cbc5d3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6450d848-3718-4d01-a51f-b180363dbe2c"
        },
        "item": {
          "id": "a7895dd4-8cbe-4846-9a2f-de6b571374b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1dbafef0-44b7-4163-8171-8b417d6d8f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e29aed7-1fba-4d19-a43b-a3a4214f2fc9",
        "cursor": {
          "ref": "58546f23-cb6e-4b70-a102-5ec40dd44a56",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f69272b9-700c-4c31-829d-97c657e2fbdd"
        },
        "item": {
          "id": "5e29aed7-1fba-4d19-a43b-a3a4214f2fc9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "466c651e-4919-44e6-b417-d56f674dc904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa30ab32-40fe-4710-87d7-41553bc915fe",
        "cursor": {
          "ref": "8a9d254c-a26a-4a00-bd4a-f9e8caae3da0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "756d500c-4b72-4b60-a5a2-d1614d9c74e3"
        },
        "item": {
          "id": "aa30ab32-40fe-4710-87d7-41553bc915fe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5a4de418-058b-4eb1-b461-0c9b1ab5e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6968e27-23bf-47a1-abbc-e0c730e5ecad",
        "cursor": {
          "ref": "ba53b095-7db5-4257-bd53-a2e23ea67bd8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb228116-2680-43de-b647-76b02fab83b2"
        },
        "item": {
          "id": "a6968e27-23bf-47a1-abbc-e0c730e5ecad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31416bc3-c79f-4235-8fe7-c92eb4619b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a35c799-d5e1-4cb8-b29c-2cca0671c2c3",
        "cursor": {
          "ref": "537882ca-c505-4abb-a093-f7d7ef8b5e07",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "11e837a7-c8db-493c-8abe-0a387090a2b6"
        },
        "item": {
          "id": "1a35c799-d5e1-4cb8-b29c-2cca0671c2c3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f4331b82-96c7-4d41-a3fc-d4c6fa4f4168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d14700-98b0-46cb-9155-f178896a4abf",
        "cursor": {
          "ref": "a3736455-a597-4e1a-bc0c-b6fe37204cf4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a6d75e23-0dd8-4d21-9d59-d278f9ab3d03"
        },
        "item": {
          "id": "c2d14700-98b0-46cb-9155-f178896a4abf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "699b48b2-91aa-42a3-94e8-999611c5d4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db77ebd5-64c4-4176-91d4-e848951b602a",
        "cursor": {
          "ref": "3b10baa8-48e3-4b40-84da-c1147b6783d2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6593f093-56fb-4fd4-aa59-a8d399427218"
        },
        "item": {
          "id": "db77ebd5-64c4-4176-91d4-e848951b602a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a604cfa6-abe3-45c9-b33f-81d2c3eef4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e8c198-91bd-4f01-bdd7-d1f662d434c2",
        "cursor": {
          "ref": "e271c364-2234-4f53-99bf-b003a16e0f35",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ef78073-f4f8-43ab-98d8-700190b2b5e3"
        },
        "item": {
          "id": "47e8c198-91bd-4f01-bdd7-d1f662d434c2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64268c27-bb95-440c-b8fa-29173b9b03d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5469f06-f4bc-4e32-9942-dc520b54ed76",
        "cursor": {
          "ref": "82567956-5119-4d69-b69e-4c64366b7ce5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f30c848-64ee-48f3-9801-71f46a91e917"
        },
        "item": {
          "id": "a5469f06-f4bc-4e32-9942-dc520b54ed76",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "abb99888-8952-4aa0-b3ec-0636b9307dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447d5549-c377-44cc-aedd-2b78d2eba05a",
        "cursor": {
          "ref": "0d8cfa47-fd5d-4759-9c44-981136934ca0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5684cbb5-4665-4ae2-8fc4-093e38c65fd4"
        },
        "item": {
          "id": "447d5549-c377-44cc-aedd-2b78d2eba05a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "05a82826-ad43-4e77-b667-d157ceb98f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6e5325-92c2-4725-9f1d-45159962f332",
        "cursor": {
          "ref": "7e36511e-438e-43a8-a5fd-14d1d361d101",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "405cef19-84d3-4469-b4c1-c9724fee5342"
        },
        "item": {
          "id": "fe6e5325-92c2-4725-9f1d-45159962f332",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "08f52ec6-54da-42ee-80c2-722f8298a8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b8ebe0-c49c-4692-9d03-441e48e0f61f",
        "cursor": {
          "ref": "ad3a526c-e822-47f3-a5fe-802852985f92",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ee5bb70d-3709-4121-b6a4-1f52d2f23720"
        },
        "item": {
          "id": "06b8ebe0-c49c-4692-9d03-441e48e0f61f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "21b5183e-4d52-457f-aee3-fd38f5515f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1a1efb-8614-44b9-aaf1-1e42178cce3e",
        "cursor": {
          "ref": "7a3dde15-e2f7-4ec8-a7e9-cad6e74ca69c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c65d05ef-b699-4c24-8ea1-f89cfc36c2dc"
        },
        "item": {
          "id": "bf1a1efb-8614-44b9-aaf1-1e42178cce3e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a04944d-d35e-4d2e-998d-d8702ddda634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3db0cef-c5d8-45de-9a0e-a1600dd42560",
        "cursor": {
          "ref": "0d698f6f-66c4-4d5a-b607-8cbd1697a8fa",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5855062-4186-4d2c-ae31-c366b548004f"
        },
        "item": {
          "id": "c3db0cef-c5d8-45de-9a0e-a1600dd42560",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a89c8779-25e4-4eec-8379-699a396f8b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be30e67d-4987-420b-a017-e294389f265a",
        "cursor": {
          "ref": "8e2f70cf-eafb-4f4b-9c29-f2481421cfe0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "07c2b3ab-5fe5-4366-9ceb-9a0fd273429d"
        },
        "item": {
          "id": "be30e67d-4987-420b-a017-e294389f265a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "38dfaa32-6c75-42c2-82fe-dbda6e4b5f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa105a-94b2-4ed2-91ba-0a8a63eae2e1",
        "cursor": {
          "ref": "e41864d7-85bb-44cf-914f-d1b82674bda4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6d9ec48-9d5f-4922-9c98-4b3f3bebe43c"
        },
        "item": {
          "id": "d7fa105a-94b2-4ed2-91ba-0a8a63eae2e1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b75a0aee-b18e-4db2-a6f2-2bcb7fdee704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0e9bfa-f988-4351-b830-9420923eed8f",
        "cursor": {
          "ref": "0596ff5a-4246-4dfa-b04b-9616457c9924",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "18946263-d329-4f41-bddc-778cc29433f8"
        },
        "item": {
          "id": "5b0e9bfa-f988-4351-b830-9420923eed8f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9f730973-6516-4728-bf5a-6ca152fa0a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be161ead-f933-404f-8781-07f0f0888431",
        "cursor": {
          "ref": "d489340d-b2d8-4647-909e-3f1b13553777",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bba94748-70d6-4dc9-963f-4cc1bbdabf74"
        },
        "item": {
          "id": "be161ead-f933-404f-8781-07f0f0888431",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "16d929a2-60f9-48c2-909a-6ba23816fed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f133f38-bb70-491a-a737-45e981db25e8",
        "cursor": {
          "ref": "870ec044-42f9-4fe8-8f21-7374b59e355c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "215a3acc-000e-4b4b-8622-ba1efb41ac7f"
        },
        "item": {
          "id": "5f133f38-bb70-491a-a737-45e981db25e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "50274629-8c8d-4434-8524-288139cafacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d5d8bf-aaf5-41aa-98c6-81ed632d2348",
        "cursor": {
          "ref": "0d96f1bb-c115-4347-b78b-fba367758379",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dcb917e4-9412-4f32-9f51-516057907bd1"
        },
        "item": {
          "id": "31d5d8bf-aaf5-41aa-98c6-81ed632d2348",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1a13f502-a28d-4ce7-8dca-bc7e089f6c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb3fbf9-b1ce-4169-a251-2da530306cf8",
        "cursor": {
          "ref": "09ec924d-c89d-4c74-9dbe-da451f5ece98",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d9e36298-ba70-40b0-8136-71f2a0af3a1c"
        },
        "item": {
          "id": "9eb3fbf9-b1ce-4169-a251-2da530306cf8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2a6d39d3-02aa-4baf-886c-e5535826ae50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0301c574-5159-4bc5-950e-17b443d65c77",
        "cursor": {
          "ref": "1e94536e-ac50-456b-8a23-3bc5a63bbaef",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c25753aa-b0b5-44c7-9c40-f92a81711b42"
        },
        "item": {
          "id": "0301c574-5159-4bc5-950e-17b443d65c77",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e8360687-124c-4fe1-8026-561764dfe4bf",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "83ab6f20-3c67-4218-959f-1e0a674c3ea1",
        "cursor": {
          "ref": "d311fd0e-a0a7-4497-8b04-88b1baf09158",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f9c7a70e-c42a-4c18-a8f0-895f4df9414f"
        },
        "item": {
          "id": "83ab6f20-3c67-4218-959f-1e0a674c3ea1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a67ba7df-d95d-4ca1-aa6a-1e90b0a5f853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c5c2e-10bc-4b25-9317-ede1655f7e49",
        "cursor": {
          "ref": "a9246112-2f3e-49b4-8d1a-9c4ddb23d2d6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "19fbe9a4-424a-4167-a8c2-1357993abdf5"
        },
        "item": {
          "id": "e48c5c2e-10bc-4b25-9317-ede1655f7e49",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b42099b0-3b7c-44f3-b604-55c4918c3560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a603f49a-c216-4bf4-b875-67816b1298d3",
        "cursor": {
          "ref": "364f0daf-34c9-44fc-bebf-78439af1c4f5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1ec3ef1a-2b3a-4bb6-869f-8379af0ae39c"
        },
        "item": {
          "id": "a603f49a-c216-4bf4-b875-67816b1298d3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "113f94ed-9940-455c-810a-f55bbe0aa69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3598453-65d8-4de1-99e4-d8d4ef6d243f",
        "cursor": {
          "ref": "d9af34d6-c3f4-484f-946c-15c644df21d8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "44f4ee8d-04ff-4cc9-92d4-9e922d62166c"
        },
        "item": {
          "id": "c3598453-65d8-4de1-99e4-d8d4ef6d243f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "832f9d66-beda-4e0b-a226-96b6b2590d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a131e4f6-5d7e-4b67-a186-c833333726fc",
        "cursor": {
          "ref": "2c9f9b25-d238-44f6-bcb9-bd1be27ab2f8",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "75bcd846-2850-4999-a7bc-e45848c2e7da"
        },
        "item": {
          "id": "a131e4f6-5d7e-4b67-a186-c833333726fc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5228280c-5623-4201-9545-7d2f07217152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec5038b-42b8-492b-bf95-47530450dfe9",
        "cursor": {
          "ref": "3b7d1d4b-d27d-4f6e-ab7a-0c6b97b1272d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "43aab6f9-2dd0-4a6e-a456-54c6ab2e2cf9"
        },
        "item": {
          "id": "5ec5038b-42b8-492b-bf95-47530450dfe9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "85e828d3-bb47-47fe-b05c-e6e572cf3e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f567ab-3050-4063-9ffa-5778ea1a54ec",
        "cursor": {
          "ref": "29bc9b88-3877-414a-83e1-767c01af4569",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c9e00e4f-3c3d-4d4b-b46e-8cc68f6c15e9"
        },
        "item": {
          "id": "c3f567ab-3050-4063-9ffa-5778ea1a54ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "171fb960-86b1-4466-978c-8a78dfe5cb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef694b6b-b7af-43b5-b78b-f4c3c0634a6f",
        "cursor": {
          "ref": "4c0dc31a-6c1a-48a7-bb33-1d5f7a5bbf62",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "741b78b8-952b-4e68-8985-5d5055a2910d"
        },
        "item": {
          "id": "ef694b6b-b7af-43b5-b78b-f4c3c0634a6f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "90b6325f-cb8a-4617-b719-7ae85af4d4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a2ca27-698a-430b-b283-53d274386225",
        "cursor": {
          "ref": "9c7c7ce7-9324-4cdc-b33a-799d0f840482",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0d97bdc7-1549-4dd5-88fb-980b336562b4"
        },
        "item": {
          "id": "75a2ca27-698a-430b-b283-53d274386225",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5c77b2e2-1ef1-4cc5-b624-b87509db0035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7204f501-8db1-41df-96e3-2a3f9ae916b4",
        "cursor": {
          "ref": "c6b988ce-32b4-4a4f-a3be-2e36fac0984c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8e0181a2-5034-4680-bed8-eaa4c1f2b3c9"
        },
        "item": {
          "id": "7204f501-8db1-41df-96e3-2a3f9ae916b4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7cda3ab2-b64f-4826-b85c-22d34c1c4081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6f9492-7918-4536-a9c2-1dea4af46fc7",
        "cursor": {
          "ref": "759fe2e2-25a2-40e4-9246-5e399dd9e278",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "050f66c5-9899-4afe-9b1b-c047ed6031b6"
        },
        "item": {
          "id": "cb6f9492-7918-4536-a9c2-1dea4af46fc7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "60913503-cdf7-442d-aa01-6e079614c263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70835b42-2638-4e30-8842-08604df0b055",
        "cursor": {
          "ref": "fef1626e-ff1a-4798-9249-832f0aa7520b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "44a6f83b-e857-493d-9f5e-6dd1c0470482"
        },
        "item": {
          "id": "70835b42-2638-4e30-8842-08604df0b055",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "143b1521-dc14-4cd9-96db-aa28559fc17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce302b0f-f742-4403-bac5-2e6cdb8ece33",
        "cursor": {
          "ref": "4e161c96-5ecc-44ce-b22d-a41c20f2c5d0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4c7e4a9b-a89b-44f2-a27b-07482effc6ab"
        },
        "item": {
          "id": "ce302b0f-f742-4403-bac5-2e6cdb8ece33",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c12b4db8-2832-4359-bfad-bcad1af1ef31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aedd30-d3ea-4640-9038-98c762e780b1",
        "cursor": {
          "ref": "418fd27f-92c4-4ade-b5e7-a6f01404e144",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b649adb2-b099-4e60-80f1-f993890ecdc2"
        },
        "item": {
          "id": "00aedd30-d3ea-4640-9038-98c762e780b1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b2434107-3fdc-49fd-a96e-21ad038fd23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4a81b3-f71e-45f4-8b22-34ecbce1d389",
        "cursor": {
          "ref": "3c16c63f-25e4-46ea-af04-70e1f710a7d5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "432dc0c4-5424-43bb-8566-d9a96b9cd3bb"
        },
        "item": {
          "id": "3d4a81b3-f71e-45f4-8b22-34ecbce1d389",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "47536179-2dfc-4b7b-9493-630a0bede8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7259e6-3417-4f2b-8502-e5ab72eeadf2",
        "cursor": {
          "ref": "306909e1-73f5-4114-8b81-ce8f1a7c7348",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "da21c8fb-33a5-4489-bd6b-6a178d1b609c"
        },
        "item": {
          "id": "7b7259e6-3417-4f2b-8502-e5ab72eeadf2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e304252d-c90a-409c-9b86-1b82f5d4d352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77075f6c-7fb3-4dd2-99ed-123936fbc537",
        "cursor": {
          "ref": "c484abb7-b1ad-40b0-9672-681a882e3c59",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba7e8b8a-7363-4949-ad8e-82a06b27942f"
        },
        "item": {
          "id": "77075f6c-7fb3-4dd2-99ed-123936fbc537",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c623576-be96-4606-a06d-3e163c9f4c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f7b44-a4a1-40df-95f0-1eabb9013e0c",
        "cursor": {
          "ref": "d16e220a-cf39-4181-9fed-793d4b3bd5f1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "afc0d1e9-40b9-4059-a337-bf9cd5ed48d7"
        },
        "item": {
          "id": "074f7b44-a4a1-40df-95f0-1eabb9013e0c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2ea89626-c82c-4354-9141-df4fbe026f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bbc029-13ca-425a-9fd4-8101ca80871d",
        "cursor": {
          "ref": "e916b160-9b51-436d-966c-ec660eac7771",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "64f1521c-9c80-4d90-b89a-16dea6d2f902"
        },
        "item": {
          "id": "b6bbc029-13ca-425a-9fd4-8101ca80871d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4f1874b7-a45e-46d8-92e1-29ebedd4790c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b73eb-6a4c-4e3a-bf4b-31a7726f2fed",
        "cursor": {
          "ref": "1b872c1b-e929-4feb-8dd9-7cb2d5c5d4ae",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "82cfb85a-07e8-4d51-9c9d-ae44bd9bd193"
        },
        "item": {
          "id": "052b73eb-6a4c-4e3a-bf4b-31a7726f2fed",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8f1dfe88-0edb-468a-9a00-528a3a90e9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdba34f-d3ab-4637-aa89-6b13ad831ecf",
        "cursor": {
          "ref": "0b88ef59-4831-4ba6-83da-916deb71e227",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ca1160b0-3680-4958-ad3e-8c854ba27a10"
        },
        "item": {
          "id": "3cdba34f-d3ab-4637-aa89-6b13ad831ecf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d78d3521-8a5f-49e8-a76c-ef34d31b980c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c177f0-dc15-4a81-8a00-8bb49c9eb890",
        "cursor": {
          "ref": "d5c8c3b1-077f-4ed7-997c-fda0e9c0ce48",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "93d5fc65-9289-4251-a73f-d5f1d31d84f5"
        },
        "item": {
          "id": "63c177f0-dc15-4a81-8a00-8bb49c9eb890",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f5556a2c-5ba0-4fb8-bde9-a8768a7aac9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a526b-3199-4bcd-a21c-9247e80865ee",
        "cursor": {
          "ref": "33f1909d-c433-48ea-8098-1b8dcde3a832",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c9e1677d-57e7-43f7-adbd-dba145268fab"
        },
        "item": {
          "id": "807a526b-3199-4bcd-a21c-9247e80865ee",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1e750e04-73af-4355-bd70-bee96a6f35ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7e5973-21de-4234-b5f2-72dc1fb66219",
        "cursor": {
          "ref": "44ddb3a9-6164-43ed-94f9-dbf2a86e3e0d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "27fcaca7-63b9-47c1-8108-947012d3a9a3"
        },
        "item": {
          "id": "ec7e5973-21de-4234-b5f2-72dc1fb66219",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2947d896-656b-4158-a9a8-e0ab281e6c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bbf544-9eb8-4135-a0f1-f0683d2cd891",
        "cursor": {
          "ref": "6a05af2f-4d17-4da4-9bc0-1bf96f47307f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2ce78bcd-338f-49d4-acd2-3e2ab0951e78"
        },
        "item": {
          "id": "a6bbf544-9eb8-4135-a0f1-f0683d2cd891",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "927297a6-de58-4502-bf97-3fe95db7728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652fa4ba-c0a9-4fe3-8cec-5e05843f0e77",
        "cursor": {
          "ref": "2f34efd7-150a-44bd-a5d8-a93b4d382055",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d3430f01-a183-4719-aa9c-90849e7514cc"
        },
        "item": {
          "id": "652fa4ba-c0a9-4fe3-8cec-5e05843f0e77",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b16c0ac4-a9c7-4941-984a-80f021b57365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646c3519-611b-40f0-a0b6-d96c2599aad6",
        "cursor": {
          "ref": "cd176f1d-4bc2-4042-a22d-207afebbe5ce",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "16869681-cfe3-4041-8f1d-84ea2acf0772"
        },
        "item": {
          "id": "646c3519-611b-40f0-a0b6-d96c2599aad6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0bbae5cd-c350-435e-82ff-315bd6b5e234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbf4a7d-de43-4ad2-9da9-c54ef7376093",
        "cursor": {
          "ref": "ac825710-fd56-4ca2-824e-10f8a5e31429",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0e9e8716-afe2-491e-bc0c-b4311293048d"
        },
        "item": {
          "id": "efbf4a7d-de43-4ad2-9da9-c54ef7376093",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fb29951f-36ed-4c3a-a8a3-46079dc9ac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c0947-66c5-49fe-8362-e885907260c3",
        "cursor": {
          "ref": "94baa130-9363-47eb-803e-6a530acb7fe1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "63364b07-f7cc-464b-819d-16b072f87352"
        },
        "item": {
          "id": "6a5c0947-66c5-49fe-8362-e885907260c3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "17478627-f7d7-43ab-9ca8-fcf368208380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8391d697-413c-4f53-a0f1-413083e31322",
        "cursor": {
          "ref": "b6792b12-d9cc-411a-bb25-01b812fe1902",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3a80aca7-ebe4-4013-9c13-41fd948fa3ae"
        },
        "item": {
          "id": "8391d697-413c-4f53-a0f1-413083e31322",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a6d472c5-d251-4e21-a517-2919264159d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf84262-eb0d-4b56-a85a-fad46ee1ed96",
        "cursor": {
          "ref": "345d9473-a4d9-4b41-bf5a-3300fd539eed",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "67b50881-452c-42fd-8233-9f9ec70a172e"
        },
        "item": {
          "id": "baf84262-eb0d-4b56-a85a-fad46ee1ed96",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8ee9de43-17b4-4675-9817-0ef0682cd114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898658f8-b166-471f-95be-feb6ccd3c089",
        "cursor": {
          "ref": "f1b3d9ca-181e-483e-aabb-97c2f96857b8",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bd7c10d4-3356-4143-a9fa-6f3206e9a50b"
        },
        "item": {
          "id": "898658f8-b166-471f-95be-feb6ccd3c089",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "99e9402d-b317-4353-874c-adc846176302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606e71fe-5049-4794-9e2f-75942aa0db7c",
        "cursor": {
          "ref": "2372e949-f9a5-4b9e-a566-038c207886fd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "71182f7c-fbaa-4350-bd05-7b90c318003b"
        },
        "item": {
          "id": "606e71fe-5049-4794-9e2f-75942aa0db7c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e2effa79-7d7b-4c05-bbb4-a9e435aca1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7c057a-5353-4a8c-a780-2f2b47d04dbd",
        "cursor": {
          "ref": "e3653cba-2341-44e1-8e9f-b26a06a96fa5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1c2f77d8-dbc3-4793-9d24-c8196d7e31b7"
        },
        "item": {
          "id": "5b7c057a-5353-4a8c-a780-2f2b47d04dbd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7bd2b0b7-4939-4d84-a272-ac3b29fc855e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3388a722-0280-4a37-9dd3-4cf8a8a53fe5",
        "cursor": {
          "ref": "fc90888c-a3cb-45bf-a2bc-11c898caea66",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ed3f52ec-c62b-4bc3-bcda-b970bfdfb232"
        },
        "item": {
          "id": "3388a722-0280-4a37-9dd3-4cf8a8a53fe5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b0049f8-5c75-4e62-aea4-6d088cfc4401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd173f9c-a820-4a25-a6de-ed343ccd0ab3",
        "cursor": {
          "ref": "49fc1751-029b-47f9-9a53-fe66b4a1d848",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "63f9d7d2-6cd6-412a-8ec3-f7154b7ccdc3"
        },
        "item": {
          "id": "fd173f9c-a820-4a25-a6de-ed343ccd0ab3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d33c7128-e9b9-4e87-9f91-e0ec59e1ce1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f2f656-1714-49a8-bd6e-0c68ba10c821",
        "cursor": {
          "ref": "bdd06b7a-8379-4efe-950b-fe231fa4aa43",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d1cefe8d-d85d-4331-a252-733fb2b60a3f"
        },
        "item": {
          "id": "49f2f656-1714-49a8-bd6e-0c68ba10c821",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f596e5e0-10a2-429b-ada8-cea1a90dc0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5750ad0-c325-4e0c-93cd-c4483a3f48ef",
        "cursor": {
          "ref": "2347045e-2309-4442-b9d7-3240e0590860",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f893a885-7f8c-41d0-8cc5-c185d44c5277"
        },
        "item": {
          "id": "f5750ad0-c325-4e0c-93cd-c4483a3f48ef",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5e1052ef-b3f7-4fa9-a2f1-131c396e5dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2464e430-5194-4863-84eb-604c0afe2f2b",
        "cursor": {
          "ref": "46551914-bb73-4570-b457-d3aeba062e57",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "76882ca9-6ce2-439a-a9ad-725843735559"
        },
        "item": {
          "id": "2464e430-5194-4863-84eb-604c0afe2f2b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b61b5d7f-7594-4271-93b0-c4fde6111a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690cf5d2-19a8-4601-9f1e-d525652add02",
        "cursor": {
          "ref": "850a3fa4-c71a-4023-b126-03bc68caf1e6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "77a65342-3875-4eed-b3a7-e91cf362d1b9"
        },
        "item": {
          "id": "690cf5d2-19a8-4601-9f1e-d525652add02",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af394a04-97f8-43e2-b234-cd35ef6d773a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e134ffcd-b6df-413c-ac22-4d5c8b0d6d93",
        "cursor": {
          "ref": "a2fbb9dd-ecf7-424a-b459-743e8a236228",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "44dc8750-ecd5-4a46-843a-2bf247176af4"
        },
        "item": {
          "id": "e134ffcd-b6df-413c-ac22-4d5c8b0d6d93",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "00e13ca8-ede1-48e7-96e9-1ecb88bef1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cb4e58-6921-42c8-b99f-831ac89a54bf",
        "cursor": {
          "ref": "59b5aa5f-7345-4daa-852c-952542eae4bc",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6965fa3f-d659-4a6f-822f-a96b3aa79cb8"
        },
        "item": {
          "id": "f3cb4e58-6921-42c8-b99f-831ac89a54bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1f2abb49-583c-45bf-ad45-19a22523f5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65997b52-d424-4e3e-81ea-9b86b6cbf66b",
        "cursor": {
          "ref": "b80b384e-61f6-46a5-a43e-1404ccc0fd8a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "391de8d0-8228-4e6c-a21d-ae9dce5fbd9e"
        },
        "item": {
          "id": "65997b52-d424-4e3e-81ea-9b86b6cbf66b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "14778c85-7089-4d8e-b575-1e4c1083a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2070d4-80b3-4d2c-aead-3728996faa3c",
        "cursor": {
          "ref": "4d004e22-a3a8-40f3-be2a-79044f8eecbc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "69ea4f12-5529-42b5-b220-eb9af1782fcd"
        },
        "item": {
          "id": "4f2070d4-80b3-4d2c-aead-3728996faa3c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e5b6ec66-1b65-4428-b495-a12a8c9301da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ca8e5f-ae5d-4b4e-922e-17a04589ea1b",
        "cursor": {
          "ref": "f6d365c0-a49b-4eb5-a05f-0f003d6fd30c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "883a2d3f-4bd1-4f64-883d-eb8ed0c0d730"
        },
        "item": {
          "id": "d2ca8e5f-ae5d-4b4e-922e-17a04589ea1b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5f9c76ff-232e-4790-a333-59c01b76dbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46ec5f9-35ec-4d72-a721-9d43cfac7b5b",
        "cursor": {
          "ref": "d81eeb65-a69f-4cdd-8247-90236af91a58",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "170c6c7b-0dd3-4878-8395-e76facfa598e"
        },
        "item": {
          "id": "a46ec5f9-35ec-4d72-a721-9d43cfac7b5b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f9b562a-402d-459a-a17f-12cb7697cd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e238ec7f-2395-4f4c-aac0-d7179a3272d4",
        "cursor": {
          "ref": "2266db0c-5c02-4b4a-b58e-b32f794a28cf",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "420fb949-2a94-42ea-b08c-0361b54aad6f"
        },
        "item": {
          "id": "e238ec7f-2395-4f4c-aac0-d7179a3272d4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "58405557-de7d-42a8-a2d9-be948b49cd2e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cbf74d-69ff-4fc3-b8f0-2e387526b9c1",
        "cursor": {
          "ref": "c882cd3c-8238-40eb-a465-6c2be189493c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0c2ca264-9b86-479f-aa24-57ba9ef217dc"
        },
        "item": {
          "id": "72cbf74d-69ff-4fc3-b8f0-2e387526b9c1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6e49c317-ac87-48b5-989a-df7cdd4eb15f",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9877c48-49b5-4b7d-b888-39b7bfd64e78",
        "cursor": {
          "ref": "8798bf80-84b2-4141-b759-ee8322e58d45",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ba9f3603-df0a-4f8e-9663-59a7aadeac65"
        },
        "item": {
          "id": "b9877c48-49b5-4b7d-b888-39b7bfd64e78",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6764f29c-36ed-4568-a838-b106e30b3548",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfc8283-aca6-4897-9b7c-e2a3f2f666c6",
        "cursor": {
          "ref": "a628ffba-75e8-45de-9706-182c93738323",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "be856d2a-6333-496f-b764-6301123a8d79"
        },
        "item": {
          "id": "cbfc8283-aca6-4897-9b7c-e2a3f2f666c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e15b2923-f11b-4e03-80e7-4d2aa8ca3c67",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12ad053-20b0-4e4c-a61a-78bb6cf12919",
        "cursor": {
          "ref": "bdb3ca36-a31c-4be1-a5ad-a6f8438fb1fe",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e71f3687-7515-4517-82a3-a8090bd511b7"
        },
        "item": {
          "id": "f12ad053-20b0-4e4c-a61a-78bb6cf12919",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f90e570-0e10-4448-97ca-86a5dee4af93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12ad053-20b0-4e4c-a61a-78bb6cf12919",
        "cursor": {
          "ref": "bdb3ca36-a31c-4be1-a5ad-a6f8438fb1fe",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e71f3687-7515-4517-82a3-a8090bd511b7"
        },
        "item": {
          "id": "f12ad053-20b0-4e4c-a61a-78bb6cf12919",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f90e570-0e10-4448-97ca-86a5dee4af93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c57c2-a8ba-4499-a808-7ba8256a8c0f",
        "cursor": {
          "ref": "2187b8de-84d4-4932-869f-93ed2ac51391",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1284d8ca-5c37-45e6-b325-a512fb435d00"
        },
        "item": {
          "id": "7f8c57c2-a8ba-4499-a808-7ba8256a8c0f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5b1cc190-72ef-4d42-b2d4-cb2652a510fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd42175-4eb9-4e86-93ca-e3135bf48359",
        "cursor": {
          "ref": "37b3443d-286a-4baf-a6c3-61424c8f3ee6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e66f7601-2772-4852-b9ed-2eecb103501f"
        },
        "item": {
          "id": "8dd42175-4eb9-4e86-93ca-e3135bf48359",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "98b6e422-1218-43d1-b0a1-cc89d8de44e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}